---
# Arquivo de configuração da Ação GitHub MegaLinter
# Mais informações em https://oxsecurity.github.io/megalinter
name: MegaLinter

on:
  # Dispara o mega-linter a cada push. A ação também será visível a partir de pull requests para o main
  push: # Comente esta linha para acionar a ação apenas em pull requests (não recomendado se você não pagar pelo GH Actions)
    branches: [main]
  pull_request:
    branches: [main]

env: # Comente o bloco env se você não quiser aplicar correções
  # Aplicar configuração de correções do linter
  APPLY_FIXES: none # Quando ativo, APPLY_FIXES também deve ser definido como variável de ambiente (em github/workflows/mega-linter.yml ou outra ferramenta CI)
  APPLY_FIXES_EVENT: push # Decida qual evento aciona a aplicação de correções em um commit ou PR (pull_request, push, all)
  APPLY_FIXES_MODE: commit # Se APPLY_FIXES for usado, define se as correções são aplicadas diretamente (commit) ou postadas em um PR (pull_request)

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: MegaLinter
    runs-on: ubuntu-latest
    steps:
      # Checkout Git
      - name: Verificar código
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # MegaLinter
      - name: MegaLinter
        id: ml
        # Você pode substituir a versão do MegaLinter usada para obter melhor desempenho
        # Mais informações em https://oxsecurity.github.io/megalinter/flavors/
        uses: oxsecurity/megalinter@v7.1.0
        env:
          # Todas as variáveis disponíveis são descritas na documentação
          # https://oxsecurity.github.io/megalinter/configuration/
          VALIDATE_ALL_CODEBASE: true # Defina ${{ github.event_name == &#39;push&#39; &amp;&amp; github.ref == &#39;refs/heads/main&#39; }} para validar apenas a diferença com a branch principal
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # ADICIONE SUAS VARIÁVEIS DE AMBIENTE PERSONALIZADAS AQUI PARA SUBSTITUIR VALORES DE .mega-linter.yml NA RAIZ DO SEU REPOSITÓRIO

      # Carregar artefatos do MegaLinter
      - name: Arquivar artefatos de produção
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Relatórios do MegaLinter
          path: |
            megalinter-reports
            mega-linter.log

      # Criar pull request, se aplicável (por enquanto funciona apenas em PR do mesmo repositório, não de forks)
      - name: Criar Pull Request com correções automáticas aplicadas
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Aplicar correções automáticas dos linters"
          title: "[MegaLinter] Aplicar correções automáticas dos linters"
          labels: bot
      - name: Criar saída de PR
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
        run: |
          echo "Número do Pull Request - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "URL do Pull Request - ${{ steps.cpr.outputs.pull-request-url }}"

      # Enviar novo commit, se aplicável (por enquanto funciona apenas em PR do mesmo repositório, não de forks)
      - name: Preparar commit
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
        run: sudo chown -Rc $UID .git/
      - name: Cometer e enviar correções automáticas dos linters
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_message: "[MegaLinter] Aplicar correções dos linters"
