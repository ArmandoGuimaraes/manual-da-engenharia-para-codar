{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Manual da Engenharia para Codar Um engenheiro ou cientista de dados trabalhando em um projeto da Engenharia ... Tem responsabilidades para com sua equipe \u2013 mentorar, treinar e liderar. Conhece seu manual . Segue seu manual. Corrige seu manual se ele estiver quebrado. Se encontrar um manual melhor, copia-o. Se algu\u00e9m puder usar seu manual, d\u00ea o seu. Lidera pelo exemplo. Modela os comportamentos que desejamos tanto interpessoalmente quanto tecnicamente. Esfor\u00e7a-se para entender como seu trabalho se encaixa em um contexto mais amplo e garante o resultado. Este \u00e9 o nosso manual. Todas as contribui\u00e7\u00f5es s\u00e3o bem-vindas! Sinta-se \u00e0 vontade para enviar um pull request para se envolver. Nota: Se voc\u00ea est\u00e1 lendo isso no GitHub - v\u00e1 para https://microsoft.github.io/code-with-engineering-playbook/ para uma melhor experi\u00eancia de leitura Por que ter um Manual Para aumentar a efici\u00eancia geral dos membros da equipe e da equipe como um todo. Reduzir o n\u00famero de erros e evitar armadilhas comuns. Esfor\u00e7ar-se para ser um engenheiro melhor e aprender com a experi\u00eancia compartilhada de outras pessoas. \"A\" Lista de Verifica\u00e7\u00e3o Se voc\u00ea n\u00e3o fizer mais nada, siga a Lista de Verifica\u00e7\u00e3o dos Fundamentos de Engenharia ! Ela est\u00e1 aqui para ajudar a seguir os Fundamentos de Engenharia. Estrutura de um Sprint Uma divis\u00e3o de se\u00e7\u00f5es de acordo com a estrutura de um sprint \u00e1gil. Orienta\u00e7\u00e3o Geral Mantenha o padr\u00e3o de qualidade do c\u00f3digo elevado. Valorize a qualidade e a precis\u00e3o em detrimento de 'fazer as coisas'. Trabalhe diligentemente na coisa mais importante. Como uma equipe distribu\u00edda, reserve um tempo para compartilhar o contexto via wiki, equipes e itens de backlog. Fa\u00e7a a coisa simples funcionar agora. Construa menos recursos hoje, mas garanta que eles funcionem incrivelmente bem. Depois adicione mais recursos amanh\u00e3. Evite adicionar escopo a um item de backlog, em vez disso, adicione um novo item de backlog. Nosso objetivo \u00e9 enviar valor incremental ao cliente. Mantenha os detalhes do item de backlog atualizados para comunicar o estado das coisas com o resto de sua equipe. Relate problemas de produto encontrados e forne\u00e7a feedback de engenharia claro e repet\u00edvel! Todos n\u00f3s somos propriet\u00e1rios de nosso c\u00f3digo e cada um de n\u00f3s tem a obriga\u00e7\u00e3o de tornar todas as partes da solu\u00e7\u00e3o excelentes. Links R\u00e1pidos Lista de Verifica\u00e7\u00e3o dos Fundamentos de Engenharia Estrutura de um Sprint Fundamentos de Engenharia Acessibilidade Desenvolvimento \u00c1gil Testes Automatizados Revis\u00f5es de C\u00f3digo Entrega Cont\u00ednua (CD) Integra\u00e7\u00e3o Cont\u00ednua (CI) Design Experi\u00eancia do Desenvolvedor Documenta\u00e7\u00e3o Feedback de Engenharia Observabilidade Seguran\u00e7a Privacidade Controle de Fonte Confiabilidade Fundamentos para \u00c1reas Tecnol\u00f3gicas Espec\u00edficas Fundamentos de Aprendizado de M\u00e1quina Engenharia de Interface do Usu\u00e1rio Contribuindo Veja CONTRIBUTING.md para diretrizes de contribui\u00e7\u00e3o.","title":"Manual da Engenharia para Codar"},{"location":"#manual-da-engenharia-para-codar","text":"Um engenheiro ou cientista de dados trabalhando em um projeto da Engenharia ... Tem responsabilidades para com sua equipe \u2013 mentorar, treinar e liderar. Conhece seu manual . Segue seu manual. Corrige seu manual se ele estiver quebrado. Se encontrar um manual melhor, copia-o. Se algu\u00e9m puder usar seu manual, d\u00ea o seu. Lidera pelo exemplo. Modela os comportamentos que desejamos tanto interpessoalmente quanto tecnicamente. Esfor\u00e7a-se para entender como seu trabalho se encaixa em um contexto mais amplo e garante o resultado. Este \u00e9 o nosso manual. Todas as contribui\u00e7\u00f5es s\u00e3o bem-vindas! Sinta-se \u00e0 vontade para enviar um pull request para se envolver. Nota: Se voc\u00ea est\u00e1 lendo isso no GitHub - v\u00e1 para https://microsoft.github.io/code-with-engineering-playbook/ para uma melhor experi\u00eancia de leitura","title":"Manual da Engenharia para Codar"},{"location":"#por-que-ter-um-manual","text":"Para aumentar a efici\u00eancia geral dos membros da equipe e da equipe como um todo. Reduzir o n\u00famero de erros e evitar armadilhas comuns. Esfor\u00e7ar-se para ser um engenheiro melhor e aprender com a experi\u00eancia compartilhada de outras pessoas.","title":"Por que ter um Manual"},{"location":"#a-lista-de-verificacao","text":"Se voc\u00ea n\u00e3o fizer mais nada, siga a Lista de Verifica\u00e7\u00e3o dos Fundamentos de Engenharia ! Ela est\u00e1 aqui para ajudar a seguir os Fundamentos de Engenharia.","title":"\"A\" Lista de Verifica\u00e7\u00e3o"},{"location":"#estrutura-de-um-sprint","text":"Uma divis\u00e3o de se\u00e7\u00f5es de acordo com a estrutura de um sprint \u00e1gil.","title":"Estrutura de um Sprint"},{"location":"#orientacao-geral","text":"Mantenha o padr\u00e3o de qualidade do c\u00f3digo elevado. Valorize a qualidade e a precis\u00e3o em detrimento de 'fazer as coisas'. Trabalhe diligentemente na coisa mais importante. Como uma equipe distribu\u00edda, reserve um tempo para compartilhar o contexto via wiki, equipes e itens de backlog. Fa\u00e7a a coisa simples funcionar agora. Construa menos recursos hoje, mas garanta que eles funcionem incrivelmente bem. Depois adicione mais recursos amanh\u00e3. Evite adicionar escopo a um item de backlog, em vez disso, adicione um novo item de backlog. Nosso objetivo \u00e9 enviar valor incremental ao cliente. Mantenha os detalhes do item de backlog atualizados para comunicar o estado das coisas com o resto de sua equipe. Relate problemas de produto encontrados e forne\u00e7a feedback de engenharia claro e repet\u00edvel! Todos n\u00f3s somos propriet\u00e1rios de nosso c\u00f3digo e cada um de n\u00f3s tem a obriga\u00e7\u00e3o de tornar todas as partes da solu\u00e7\u00e3o excelentes.","title":"Orienta\u00e7\u00e3o Geral"},{"location":"#links-rapidos","text":"Lista de Verifica\u00e7\u00e3o dos Fundamentos de Engenharia Estrutura de um Sprint","title":"Links R\u00e1pidos"},{"location":"#fundamentos-de-engenharia","text":"Acessibilidade Desenvolvimento \u00c1gil Testes Automatizados Revis\u00f5es de C\u00f3digo Entrega Cont\u00ednua (CD) Integra\u00e7\u00e3o Cont\u00ednua (CI) Design Experi\u00eancia do Desenvolvedor Documenta\u00e7\u00e3o Feedback de Engenharia Observabilidade Seguran\u00e7a Privacidade Controle de Fonte Confiabilidade","title":"Fundamentos de Engenharia"},{"location":"#fundamentos-para-areas-tecnologicas-especificas","text":"Fundamentos de Aprendizado de M\u00e1quina Engenharia de Interface do Usu\u00e1rio","title":"Fundamentos para \u00c1reas Tecnol\u00f3gicas Espec\u00edficas"},{"location":"#contribuindo","text":"Veja CONTRIBUTING.md para diretrizes de contribui\u00e7\u00e3o.","title":"Contribuindo"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/","text":"Lista de Verifica\u00e7\u00e3o de Fundamentos de Engenharia Esta lista de verifica\u00e7\u00e3o ajuda a garantir que nossos projetos atendam aos nossos Fundamentos de Engenharia. Controle de Fonte A branch alvo padr\u00e3o est\u00e1 bloqueada. As mesclagens s\u00e3o feitas atrav\u00e9s de PRs. PRs referenciam itens de trabalho relacionados. O hist\u00f3rico de commits \u00e9 consistente e as mensagens de commit s\u00e3o informativas (o qu\u00ea, por qu\u00ea). Conven\u00e7\u00f5es de nomenclatura de branch consistentes. Documenta\u00e7\u00e3o clara da estrutura do reposit\u00f3rio. Segredos n\u00e3o fazem parte do hist\u00f3rico de commits ou s\u00e3o tornados p\u00fablicos. (veja Verifica\u00e7\u00e3o de Credenciais ) Reposit\u00f3rios p\u00fablicos seguem as diretrizes de OSS , veja Arquivos obrigat\u00f3rios na branch padr\u00e3o para reposit\u00f3rios p\u00fablicos . Mais detalhes sobre controle de fonte Rastreamento de Item de Trabalho Todos os itens s\u00e3o rastreados no AzDevOps (ou similar). O quadro est\u00e1 organizado (faixas de nado, tags de recursos, tags de tecnologia). Mais detalhes sobre gerenciamento de backlog Testes Testes unit\u00e1rios cobrem a maioria de todos os componentes (>90% se poss\u00edvel). Testes de integra\u00e7\u00e3o s\u00e3o executados para testar a solu\u00e7\u00e3o de ponta a ponta. Mais detalhes sobre testes automatizados CI/CD O projeto executa CI com build e teste automatizados em cada PR. O projeto usa CD para gerenciar implanta\u00e7\u00f5es em um ambiente r\u00e9plica antes que os PRs sejam mesclados. A branch principal est\u00e1 sempre pronta para ser enviada. Mais detalhes sobre integra\u00e7\u00e3o cont\u00ednua e entrega cont\u00ednua Seguran\u00e7a O acesso \u00e9 concedido apenas conforme a necessidade. Segredos s\u00e3o armazenados em locais seguros e n\u00e3o s\u00e3o inclu\u00eddos no c\u00f3digo. Os dados s\u00e3o criptografados em tr\u00e2nsito (e, se necess\u00e1rio, em repouso) e as senhas s\u00e3o hashadas. O sistema est\u00e1 dividido em segmentos l\u00f3gicos com separa\u00e7\u00e3o de preocupa\u00e7\u00f5es? Isso ajuda a limitar vulnerabilidades de seguran\u00e7a. Mais detalhes sobre seguran\u00e7a Observabilidade Eventos significativos de neg\u00f3cios e funcionais s\u00e3o rastreados e m\u00e9tricas relacionadas coletadas. Falhas e erros da aplica\u00e7\u00e3o s\u00e3o registrados. A sa\u00fade do sistema \u00e9 monitorada. Os dados de observabilidade do lado do cliente e do servidor podem ser diferenciados. A configura\u00e7\u00e3o de registro pode ser modificada sem altera\u00e7\u00f5es de c\u00f3digo (por exemplo: modo verboso). Contexto de rastreamento de entrada \u00e9 propagado para permitir fins de depura\u00e7\u00e3o de problemas de produ\u00e7\u00e3o. A conformidade com o GDPR \u00e9 assegurada em rela\u00e7\u00e3o ao PII (Informa\u00e7\u00f5es Pessoalmente Identific\u00e1veis). Mais detalhes sobre observabilidade \u00c1gil/Scrum O L\u00edder de Processo (fixo/rotativo) conduz o standup di\u00e1rio. O processo \u00e1gil est\u00e1 claramente definido dentro da equipe. O L\u00edder de Desenvolvimento (+ PO/Outros) s\u00e3o respons\u00e1veis pelo gerenciamento e refinamento do backlog. Um acordo de trabalho \u00e9 estabelecido entre os membros da equipe e o cliente. Mais detalhes sobre desenvolvimento \u00e1gil Revis\u00f5es de Design O processo para realizar revis\u00f5es de design est\u00e1 inclu\u00eddo no Acordo de Trabalho . Revis\u00f5es de design para cada componente principal da solu\u00e7\u00e3o s\u00e3o realizadas e documentadas, incluindo alternativas. Hist\u00f3rias e/ou PRs est\u00e3o vinculados ao documento de design. Cada hist\u00f3ria de usu\u00e1rio inclui uma tarefa para revis\u00e3o de design por padr\u00e3o, que \u00e9 atribu\u00edda ou removida durante o planejamento do sprint. Consultores de projeto s\u00e3o convidados para revis\u00f5es de design ou solicitados a dar feedback \u00e0s decis\u00f5es de design capturadas na documenta\u00e7\u00e3o. Descubra todas as revis\u00f5es que os processos do cliente exigem e planeje para elas. Requisitos n\u00e3o funcionais claros capturados (veja Orienta\u00e7\u00e3o para Requisitos N\u00e3o Funcionais ) Mais detalhes sobre revis\u00f5es de design Revis\u00f5es de C\u00f3digo H\u00e1 um acordo claro na equipe quanto \u00e0 fun\u00e7\u00e3o das revis\u00f5es de c\u00f3digo. A equipe possui uma lista de verifica\u00e7\u00e3o de revis\u00e3o de c\u00f3digo ou processo estabelecido. Um n\u00famero m\u00ednimo de revisores (geralmente 2) para uma mesclagem de PR \u00e9 imposto por pol\u00edtica. Linters/Analisadores de C\u00f3digo, testes unit\u00e1rios e builds bem-sucedidos para mesclagens de PR est\u00e3o configurados. H\u00e1 um processo para impor uma r\u00e1pida revis\u00e3o. Mais detalhes sobre revis\u00f5es de c\u00f3digo Retrospectivas Retrospectivas s\u00e3o realizadas a cada semana/ao final de cada sprint. A equipe identifica 1-3 experimentos propostos para tentar a cada semana/sprint para melhorar o processo. Experimentos t\u00eam propriet\u00e1rios e s\u00e3o adicionados ao backlog do projeto. A equipe realiza retrospectivas mais longas para Marcos e conclus\u00e3o do projeto. Mais detalhes sobre retrospectivas Feedback de Engenharia A equipe envia feedback sobre bloqueadores de neg\u00f3cios e t\u00e9cnicos que impedem o sucesso do projeto. Sugest\u00f5es para melhorias s\u00e3o incorporadas na solu\u00e7\u00e3o. O feedback \u00e9 detalhado e repet\u00edvel. Mais detalhes sobre feedback de engenharia Experi\u00eancia do Desenvolvedor (DevEx) Desenvolvedores na equipe podem: Construir/Compilar a fonte para verificar se est\u00e1 livre de erros de sintaxe e compila. Executar todos os testes automatizados (unit\u00e1rios, e2e, etc). Iniciar/Lan\u00e7ar de ponta a ponta para simular a execu\u00e7\u00e3o em um ambiente implantado. Anexar um depurador \u00e0 solu\u00e7\u00e3o iniciada ou aos testes automatizados em execu\u00e7\u00e3o, definir pontos de interrup\u00e7\u00e3o, percorrer o c\u00f3digo e inspecionar vari\u00e1veis. Instalar automaticamente depend\u00eancias pressionando F5 (ou equivalente) em seu IDE. Usar valores de configura\u00e7\u00e3o de desenvolvimento local (ou seja, .env, appsettings.development.json). Mais detalhes sobre experi\u00eancia do desenvolvedor","title":"Lista de Verifica\u00e7\u00e3o de Fundamentos de Engenharia"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#lista-de-verificacao-de-fundamentos-de-engenharia","text":"Esta lista de verifica\u00e7\u00e3o ajuda a garantir que nossos projetos atendam aos nossos Fundamentos de Engenharia.","title":"Lista de Verifica\u00e7\u00e3o de Fundamentos de Engenharia"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#controle-de-fonte","text":"A branch alvo padr\u00e3o est\u00e1 bloqueada. As mesclagens s\u00e3o feitas atrav\u00e9s de PRs. PRs referenciam itens de trabalho relacionados. O hist\u00f3rico de commits \u00e9 consistente e as mensagens de commit s\u00e3o informativas (o qu\u00ea, por qu\u00ea). Conven\u00e7\u00f5es de nomenclatura de branch consistentes. Documenta\u00e7\u00e3o clara da estrutura do reposit\u00f3rio. Segredos n\u00e3o fazem parte do hist\u00f3rico de commits ou s\u00e3o tornados p\u00fablicos. (veja Verifica\u00e7\u00e3o de Credenciais ) Reposit\u00f3rios p\u00fablicos seguem as diretrizes de OSS , veja Arquivos obrigat\u00f3rios na branch padr\u00e3o para reposit\u00f3rios p\u00fablicos . Mais detalhes sobre controle de fonte","title":"Controle de Fonte"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#rastreamento-de-item-de-trabalho","text":"Todos os itens s\u00e3o rastreados no AzDevOps (ou similar). O quadro est\u00e1 organizado (faixas de nado, tags de recursos, tags de tecnologia). Mais detalhes sobre gerenciamento de backlog","title":"Rastreamento de Item de Trabalho"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#testes","text":"Testes unit\u00e1rios cobrem a maioria de todos os componentes (>90% se poss\u00edvel). Testes de integra\u00e7\u00e3o s\u00e3o executados para testar a solu\u00e7\u00e3o de ponta a ponta. Mais detalhes sobre testes automatizados","title":"Testes"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#cicd","text":"O projeto executa CI com build e teste automatizados em cada PR. O projeto usa CD para gerenciar implanta\u00e7\u00f5es em um ambiente r\u00e9plica antes que os PRs sejam mesclados. A branch principal est\u00e1 sempre pronta para ser enviada. Mais detalhes sobre integra\u00e7\u00e3o cont\u00ednua e entrega cont\u00ednua","title":"CI/CD"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#seguranca","text":"O acesso \u00e9 concedido apenas conforme a necessidade. Segredos s\u00e3o armazenados em locais seguros e n\u00e3o s\u00e3o inclu\u00eddos no c\u00f3digo. Os dados s\u00e3o criptografados em tr\u00e2nsito (e, se necess\u00e1rio, em repouso) e as senhas s\u00e3o hashadas. O sistema est\u00e1 dividido em segmentos l\u00f3gicos com separa\u00e7\u00e3o de preocupa\u00e7\u00f5es? Isso ajuda a limitar vulnerabilidades de seguran\u00e7a. Mais detalhes sobre seguran\u00e7a","title":"Seguran\u00e7a"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#observabilidade","text":"Eventos significativos de neg\u00f3cios e funcionais s\u00e3o rastreados e m\u00e9tricas relacionadas coletadas. Falhas e erros da aplica\u00e7\u00e3o s\u00e3o registrados. A sa\u00fade do sistema \u00e9 monitorada. Os dados de observabilidade do lado do cliente e do servidor podem ser diferenciados. A configura\u00e7\u00e3o de registro pode ser modificada sem altera\u00e7\u00f5es de c\u00f3digo (por exemplo: modo verboso). Contexto de rastreamento de entrada \u00e9 propagado para permitir fins de depura\u00e7\u00e3o de problemas de produ\u00e7\u00e3o. A conformidade com o GDPR \u00e9 assegurada em rela\u00e7\u00e3o ao PII (Informa\u00e7\u00f5es Pessoalmente Identific\u00e1veis). Mais detalhes sobre observabilidade","title":"Observabilidade"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#agilscrum","text":"O L\u00edder de Processo (fixo/rotativo) conduz o standup di\u00e1rio. O processo \u00e1gil est\u00e1 claramente definido dentro da equipe. O L\u00edder de Desenvolvimento (+ PO/Outros) s\u00e3o respons\u00e1veis pelo gerenciamento e refinamento do backlog. Um acordo de trabalho \u00e9 estabelecido entre os membros da equipe e o cliente. Mais detalhes sobre desenvolvimento \u00e1gil","title":"\u00c1gil/Scrum"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#revisoes-de-design","text":"O processo para realizar revis\u00f5es de design est\u00e1 inclu\u00eddo no Acordo de Trabalho . Revis\u00f5es de design para cada componente principal da solu\u00e7\u00e3o s\u00e3o realizadas e documentadas, incluindo alternativas. Hist\u00f3rias e/ou PRs est\u00e3o vinculados ao documento de design. Cada hist\u00f3ria de usu\u00e1rio inclui uma tarefa para revis\u00e3o de design por padr\u00e3o, que \u00e9 atribu\u00edda ou removida durante o planejamento do sprint. Consultores de projeto s\u00e3o convidados para revis\u00f5es de design ou solicitados a dar feedback \u00e0s decis\u00f5es de design capturadas na documenta\u00e7\u00e3o. Descubra todas as revis\u00f5es que os processos do cliente exigem e planeje para elas. Requisitos n\u00e3o funcionais claros capturados (veja Orienta\u00e7\u00e3o para Requisitos N\u00e3o Funcionais ) Mais detalhes sobre revis\u00f5es de design","title":"Revis\u00f5es de Design"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#revisoes-de-codigo","text":"H\u00e1 um acordo claro na equipe quanto \u00e0 fun\u00e7\u00e3o das revis\u00f5es de c\u00f3digo. A equipe possui uma lista de verifica\u00e7\u00e3o de revis\u00e3o de c\u00f3digo ou processo estabelecido. Um n\u00famero m\u00ednimo de revisores (geralmente 2) para uma mesclagem de PR \u00e9 imposto por pol\u00edtica. Linters/Analisadores de C\u00f3digo, testes unit\u00e1rios e builds bem-sucedidos para mesclagens de PR est\u00e3o configurados. H\u00e1 um processo para impor uma r\u00e1pida revis\u00e3o. Mais detalhes sobre revis\u00f5es de c\u00f3digo","title":"Revis\u00f5es de C\u00f3digo"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#retrospectivas","text":"Retrospectivas s\u00e3o realizadas a cada semana/ao final de cada sprint. A equipe identifica 1-3 experimentos propostos para tentar a cada semana/sprint para melhorar o processo. Experimentos t\u00eam propriet\u00e1rios e s\u00e3o adicionados ao backlog do projeto. A equipe realiza retrospectivas mais longas para Marcos e conclus\u00e3o do projeto. Mais detalhes sobre retrospectivas","title":"Retrospectivas"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#feedback-de-engenharia","text":"A equipe envia feedback sobre bloqueadores de neg\u00f3cios e t\u00e9cnicos que impedem o sucesso do projeto. Sugest\u00f5es para melhorias s\u00e3o incorporadas na solu\u00e7\u00e3o. O feedback \u00e9 detalhado e repet\u00edvel. Mais detalhes sobre feedback de engenharia","title":"Feedback de Engenharia"},{"location":"ENG-FUNDAMENTALS-CHECKLIST/#experiencia-do-desenvolvedor-devex","text":"Desenvolvedores na equipe podem: Construir/Compilar a fonte para verificar se est\u00e1 livre de erros de sintaxe e compila. Executar todos os testes automatizados (unit\u00e1rios, e2e, etc). Iniciar/Lan\u00e7ar de ponta a ponta para simular a execu\u00e7\u00e3o em um ambiente implantado. Anexar um depurador \u00e0 solu\u00e7\u00e3o iniciada ou aos testes automatizados em execu\u00e7\u00e3o, definir pontos de interrup\u00e7\u00e3o, percorrer o c\u00f3digo e inspecionar vari\u00e1veis. Instalar automaticamente depend\u00eancias pressionando F5 (ou equivalente) em seu IDE. Usar valores de configura\u00e7\u00e3o de desenvolvimento local (ou seja, .env, appsettings.development.json). Mais detalhes sobre experi\u00eancia do desenvolvedor","title":"Experi\u00eancia do Desenvolvedor (DevEx)"},{"location":"ISE/","text":"Quem Somos Nossa equipe, ISE (Engenharia de Solu\u00e7\u00f5es Industriais), trabalha lado a lado com os clientes para ajud\u00e1-los a enfrentar seus problemas t\u00e9cnicos mais dif\u00edceis, tanto na nuvem quanto na borda (edge). Encontramos os clientes onde eles est\u00e3o, trabalhamos nos idiomas que eles usam, com os frameworks de c\u00f3digo aberto que eles usam, nos sistemas operacionais que eles usam. Trabalhamos com empresas e startups em v\u00e1rias ind\u00fastrias, desde servi\u00e7os financeiros at\u00e9 manufatura. Nosso trabalho abrange um amplo espectro de dom\u00ednios, incluindo IoT, aprendizado de m\u00e1quina e computa\u00e7\u00e3o em alta escala. Nosso \"superpoder\" \u00e9 que trabalhamos de perto tanto com as equipes de engenharia de nossos clientes quanto com as equipes de engenharia de produtos da Microsoft, desenvolvendo expertise pr\u00e1tica que podemos usar para ajudar nossos clientes a expandir seus neg\u00f3cios e ajudar a Microsoft a melhorar nossos produtos e servi\u00e7os. Somos muito focados na comunidade em nosso trabalho, com um p\u00e9 na Microsoft e outro p\u00e9 nas comunidades de c\u00f3digo aberto que ajudamos. Fazemos pull requests em projetos de c\u00f3digo aberto para adicionar suporte para plataformas Microsoft e/ou melhorar implementa\u00e7\u00f5es existentes. Constru\u00edmos frameworks e outras ferramentas para facilitar o uso de plataformas Microsoft pelos desenvolvedores. Obtemos todas as ideias para este trabalho mantendo conex\u00f5es muito profundas com essas comunidades e os clientes e parceiros que as utilizam. Se voc\u00ea gosta de variedade, de programar em v\u00e1rios idiomas, de usar qualquer tecnologia dispon\u00edvel em nossa ind\u00fastria, de mergulhar com nossos clientes, de hack fests, de viagens ocasionais e de contar a hist\u00f3ria do que voc\u00ea fez em postagens de blog e em confer\u00eancias, ent\u00e3o venha conversar conosco. Voc\u00ea pode conferir alguns de nossos trabalhos em nosso Blog para Desenvolvedores","title":"Quem Somos"},{"location":"ISE/#quem-somos","text":"Nossa equipe, ISE (Engenharia de Solu\u00e7\u00f5es Industriais), trabalha lado a lado com os clientes para ajud\u00e1-los a enfrentar seus problemas t\u00e9cnicos mais dif\u00edceis, tanto na nuvem quanto na borda (edge). Encontramos os clientes onde eles est\u00e3o, trabalhamos nos idiomas que eles usam, com os frameworks de c\u00f3digo aberto que eles usam, nos sistemas operacionais que eles usam. Trabalhamos com empresas e startups em v\u00e1rias ind\u00fastrias, desde servi\u00e7os financeiros at\u00e9 manufatura. Nosso trabalho abrange um amplo espectro de dom\u00ednios, incluindo IoT, aprendizado de m\u00e1quina e computa\u00e7\u00e3o em alta escala. Nosso \"superpoder\" \u00e9 que trabalhamos de perto tanto com as equipes de engenharia de nossos clientes quanto com as equipes de engenharia de produtos da Microsoft, desenvolvendo expertise pr\u00e1tica que podemos usar para ajudar nossos clientes a expandir seus neg\u00f3cios e ajudar a Microsoft a melhorar nossos produtos e servi\u00e7os. Somos muito focados na comunidade em nosso trabalho, com um p\u00e9 na Microsoft e outro p\u00e9 nas comunidades de c\u00f3digo aberto que ajudamos. Fazemos pull requests em projetos de c\u00f3digo aberto para adicionar suporte para plataformas Microsoft e/ou melhorar implementa\u00e7\u00f5es existentes. Constru\u00edmos frameworks e outras ferramentas para facilitar o uso de plataformas Microsoft pelos desenvolvedores. Obtemos todas as ideias para este trabalho mantendo conex\u00f5es muito profundas com essas comunidades e os clientes e parceiros que as utilizam. Se voc\u00ea gosta de variedade, de programar em v\u00e1rios idiomas, de usar qualquer tecnologia dispon\u00edvel em nossa ind\u00fastria, de mergulhar com nossos clientes, de hack fests, de viagens ocasionais e de contar a hist\u00f3ria do que voc\u00ea fez em postagens de blog e em confer\u00eancias, ent\u00e3o venha conversar conosco. Voc\u00ea pode conferir alguns de nossos trabalhos em nosso Blog para Desenvolvedores","title":"Quem Somos"},{"location":"SPRINT-STRUCTURE/","text":"Estrutura de um Sprint O objetivo deste documento \u00e9: Organizar o conte\u00fado no playbook para r\u00e1pida refer\u00eancia e descobrimento Fornecer conte\u00fado em uma estrutura l\u00f3gica que reflita o processo de engenharia Hierarquia extens\u00edvel para permitir que as equipes compartilhem conhecimento profundo em assuntos espec\u00edficos A primeira semana de um Projeto ISE Antes de iniciar o projeto Discutir e come\u00e7ar a escrever os Acordos da Equipe . Atualize esses documentos com quaisquer decis\u00f5es de processo feitas ao longo do projeto Acordo de Trabalho Defini\u00e7\u00e3o de Pronto Defini\u00e7\u00e3o de Conclu\u00eddo Estimativa Configurar o(s) reposit\u00f3rio(s) Decidir sobre a estrutura(s) do reposit\u00f3rio Adicionar README.md , LICENSE , CONTRIBUTING.md , .gitignore, etc Construir um Backlog de Produto Configurar um projeto na sua ferramenta de gerenciamento de projeto escolhida (ex. Azure DevOps) INVEST em boas Hist\u00f3rias de Usu\u00e1rio e Crit\u00e9rios de Aceita\u00e7\u00e3o Orienta\u00e7\u00e3o para Requisitos N\u00e3o Funcionais Dia 1 Planejar o primeiro sprint Concordar com um objetivo de sprint e como medir o progresso do sprint Determinar a capacidade da equipe Atribuir hist\u00f3rias de usu\u00e1rio ao sprint e dividir hist\u00f3rias de usu\u00e1rio em tarefas Configurar limites de Trabalho em Andamento (WIP) Decidir sobre frameworks de teste e discutir estrat\u00e9gias de teste Discutir o prop\u00f3sito e os objetivos dos testes e como medir a cobertura de teste Concordar em como separar testes unit\u00e1rios de testes de integra\u00e7\u00e3o, carga e fuma\u00e7a Projetar os primeiros casos de teste Decidir sobre a nomenclatura das branches Discutir necessidades de seguran\u00e7a e verificar que segredos s\u00e3o mantidos fora do controle de vers\u00e3o Dia 2 Configurar Controle de Fonte Concordar com melhores pr\u00e1ticas para commits Configurar Integra\u00e7\u00e3o Cont\u00ednua b\u00e1sica com linters e testes automatizados Configurar reuni\u00f5es para Stand-ups Di\u00e1rios e decidir sobre um L\u00edder de Processo Discutir prop\u00f3sito, objetivos, participantes e orienta\u00e7\u00f5es para facilita\u00e7\u00e3o Discutir o momento e como executar um stand-up eficiente Se o projeto tiver subequipes, configurar um Scrum de Scrums Dia 3 Concordar com o estilo de c\u00f3digo e sobre como atribuir Pull Requests Configurar Valida\u00e7\u00e3o de Build para Pull Requests (2 revisores, linters, testes automatizados) e concordar com Defini\u00e7\u00e3o de Conclu\u00eddo Concordar com uma estrat\u00e9gia de Mesclagem de C\u00f3digo e atualizar o CONTRIBUTING.md Concordar com frameworks e estrat\u00e9gias de registro e observabilidade Dia 4 Configurar Implanta\u00e7\u00e3o Cont\u00ednua Determinar quais ambientes s\u00e3o apropriados para esta solu\u00e7\u00e3o Para cada ambiente, discutir o prop\u00f3sito, quando a implanta\u00e7\u00e3o deve ser acionada, aprovadores pr\u00e9-implanta\u00e7\u00e3o, aprova\u00e7\u00e3o para promo\u00e7\u00e3o. Decidir sobre uma estrat\u00e9gia de versionamento Concordar em como Projetar um recurso e conduzir uma Revis\u00e3o de Design Dia 5 Realizar uma Demonstra\u00e7\u00e3o de Sprint Conduzir uma Retrospectiva Determinar participantes necess\u00e1rios, como capturar entrada (ferramentas) e resultado Definir um cronograma e discutir facilita\u00e7\u00e3o, estrutura da reuni\u00e3o, etc. Refinar o Backlog Determinar participantes necess\u00e1rios Atualizar a Defini\u00e7\u00e3o de Pronto Atualizar estimativas e o documento Estimativa Enviar Feedback de Engenharia para problemas encontrados","title":"Estrutura de um Sprint"},{"location":"SPRINT-STRUCTURE/#estrutura-de-um-sprint","text":"O objetivo deste documento \u00e9: Organizar o conte\u00fado no playbook para r\u00e1pida refer\u00eancia e descobrimento Fornecer conte\u00fado em uma estrutura l\u00f3gica que reflita o processo de engenharia Hierarquia extens\u00edvel para permitir que as equipes compartilhem conhecimento profundo em assuntos espec\u00edficos","title":"Estrutura de um Sprint"},{"location":"SPRINT-STRUCTURE/#a-primeira-semana-de-um-projeto-ise","text":"","title":"A primeira semana de um Projeto ISE"},{"location":"SPRINT-STRUCTURE/#antes-de-iniciar-o-projeto","text":"Discutir e come\u00e7ar a escrever os Acordos da Equipe . Atualize esses documentos com quaisquer decis\u00f5es de processo feitas ao longo do projeto Acordo de Trabalho Defini\u00e7\u00e3o de Pronto Defini\u00e7\u00e3o de Conclu\u00eddo Estimativa Configurar o(s) reposit\u00f3rio(s) Decidir sobre a estrutura(s) do reposit\u00f3rio Adicionar README.md , LICENSE , CONTRIBUTING.md , .gitignore, etc Construir um Backlog de Produto Configurar um projeto na sua ferramenta de gerenciamento de projeto escolhida (ex. Azure DevOps) INVEST em boas Hist\u00f3rias de Usu\u00e1rio e Crit\u00e9rios de Aceita\u00e7\u00e3o Orienta\u00e7\u00e3o para Requisitos N\u00e3o Funcionais","title":"Antes de iniciar o projeto"},{"location":"SPRINT-STRUCTURE/#dia-1","text":"Planejar o primeiro sprint Concordar com um objetivo de sprint e como medir o progresso do sprint Determinar a capacidade da equipe Atribuir hist\u00f3rias de usu\u00e1rio ao sprint e dividir hist\u00f3rias de usu\u00e1rio em tarefas Configurar limites de Trabalho em Andamento (WIP) Decidir sobre frameworks de teste e discutir estrat\u00e9gias de teste Discutir o prop\u00f3sito e os objetivos dos testes e como medir a cobertura de teste Concordar em como separar testes unit\u00e1rios de testes de integra\u00e7\u00e3o, carga e fuma\u00e7a Projetar os primeiros casos de teste Decidir sobre a nomenclatura das branches Discutir necessidades de seguran\u00e7a e verificar que segredos s\u00e3o mantidos fora do controle de vers\u00e3o","title":"Dia 1"},{"location":"SPRINT-STRUCTURE/#dia-2","text":"Configurar Controle de Fonte Concordar com melhores pr\u00e1ticas para commits Configurar Integra\u00e7\u00e3o Cont\u00ednua b\u00e1sica com linters e testes automatizados Configurar reuni\u00f5es para Stand-ups Di\u00e1rios e decidir sobre um L\u00edder de Processo Discutir prop\u00f3sito, objetivos, participantes e orienta\u00e7\u00f5es para facilita\u00e7\u00e3o Discutir o momento e como executar um stand-up eficiente Se o projeto tiver subequipes, configurar um Scrum de Scrums","title":"Dia 2"},{"location":"SPRINT-STRUCTURE/#dia-3","text":"Concordar com o estilo de c\u00f3digo e sobre como atribuir Pull Requests Configurar Valida\u00e7\u00e3o de Build para Pull Requests (2 revisores, linters, testes automatizados) e concordar com Defini\u00e7\u00e3o de Conclu\u00eddo Concordar com uma estrat\u00e9gia de Mesclagem de C\u00f3digo e atualizar o CONTRIBUTING.md Concordar com frameworks e estrat\u00e9gias de registro e observabilidade","title":"Dia 3"},{"location":"SPRINT-STRUCTURE/#dia-4","text":"Configurar Implanta\u00e7\u00e3o Cont\u00ednua Determinar quais ambientes s\u00e3o apropriados para esta solu\u00e7\u00e3o Para cada ambiente, discutir o prop\u00f3sito, quando a implanta\u00e7\u00e3o deve ser acionada, aprovadores pr\u00e9-implanta\u00e7\u00e3o, aprova\u00e7\u00e3o para promo\u00e7\u00e3o. Decidir sobre uma estrat\u00e9gia de versionamento Concordar em como Projetar um recurso e conduzir uma Revis\u00e3o de Design","title":"Dia 4"},{"location":"SPRINT-STRUCTURE/#dia-5","text":"Realizar uma Demonstra\u00e7\u00e3o de Sprint Conduzir uma Retrospectiva Determinar participantes necess\u00e1rios, como capturar entrada (ferramentas) e resultado Definir um cronograma e discutir facilita\u00e7\u00e3o, estrutura da reuni\u00e3o, etc. Refinar o Backlog Determinar participantes necess\u00e1rios Atualizar a Defini\u00e7\u00e3o de Pronto Atualizar estimativas e o documento Estimativa Enviar Feedback de Engenharia para problemas encontrados","title":"Dia 5"},{"location":"accessibility/","text":"Acessibilidade A acessibilidade \u00e9 um componente cr\u00edtico de qualquer projeto bem-sucedido e garante que as solu\u00e7\u00f5es que constru\u00edmos sejam utiliz\u00e1veis e apreciadas pelo maior n\u00famero poss\u00edvel de pessoas. Embora o cumprimento das normas de acessibilidade seja obrigat\u00f3rio, a acessibilidade vai muito al\u00e9m do mero cumprimento. A acessibilidade \u00e9 sobre usar t\u00e9cnicas como design inclusivo para infundir diferentes perspectivas e toda a gama de diversidade humana nos produtos que constru\u00edmos. Ao incorporar acessibilidade em seu projeto desde a vis\u00e3o inicial at\u00e9 o MVP e al\u00e9m, voc\u00ea est\u00e1 promovendo um ambiente mais inclusivo para sua equipe e ajudando a fechar o \"Divis\u00e3o de Defici\u00eancia\" que existe para muitas pessoas que vivem com defici\u00eancias. Come\u00e7ando Se voc\u00ea \u00e9 novo em acessibilidade ou est\u00e1 procurando uma vis\u00e3o geral dos fundamentos da acessibilidade, o Microsoft Learn oferece um \u00f3timo curso de treinamento que abrange uma ampla gama de t\u00f3picos, desde a cria\u00e7\u00e3o de conte\u00fado acess\u00edvel no Office at\u00e9 o design de recursos de acessibilidade em seus pr\u00f3prios aplicativos. Voc\u00ea pode aprender mais sobre o curso ou come\u00e7ar em Microsoft Learn: Fundamentos de Acessibilidade . Design Inclusivo O design inclusivo \u00e9 uma metodologia que abra\u00e7a toda a gama de diversidade humana como um recurso para ajudar a construir melhores produtos e servi\u00e7os. O design inclusivo complementa a acessibilidade, indo al\u00e9m das normas de conformidade de acessibilidade para garantir que os produtos sejam utiliz\u00e1veis e apreciados por todas as pessoas. Ao aproveitar a metodologia de design inclusivo no in\u00edcio de um projeto, voc\u00ea pode esperar uma solu\u00e7\u00e3o mais inclusiva e melhor para todos. O site Microsoft Design Inclusivo oferece uma variedade de recursos para incorporar design inclusivo em seus projetos, incluindo atividades de design inclusivo que podem ser usadas em sess\u00f5es de vis\u00e3o e design de arquitetura. A metodologia de Design Inclusivo da Microsoft inclui os seguintes princ\u00edpios: Reconhecer a exclus\u00e3o Projetar para inclusividade n\u00e3o apenas abre nossos produtos e servi\u00e7os para mais pessoas, mas tamb\u00e9m reflete como as pessoas realmente s\u00e3o. Todos os seres humanos crescem e se adaptam ao mundo ao seu redor, e queremos que nossos designs reflitam isso. Resolver para um, estender para muitos Todos t\u00eam habilidades e limites para essas habilidades. Projetar para pessoas com defici\u00eancias permanentes realmente resulta em designs que beneficiam as pessoas universalmente. Restri\u00e7\u00f5es s\u00e3o uma coisa linda. Aprender com a diversidade Os seres humanos s\u00e3o os verdadeiros especialistas em se adaptar \u00e0 diversidade. O design inclusivo coloca as pessoas no centro desde o in\u00edcio do processo, e essas perspectivas frescas e diversas s\u00e3o a chave para uma verdadeira percep\u00e7\u00e3o. Ferramentas Insights de Acessibilidade Insights de Acessibilidade \u00e9 uma solu\u00e7\u00e3o gratuita e de c\u00f3digo aberto para identificar problemas de acessibilidade em aplicativos Windows, Android e web. Insights de Acessibilidade podem identificar uma ampla gama de problemas de acessibilidade, incluindo problemas com tags de imagem alternativas ausentes, organiza\u00e7\u00e3o de cabe\u00e7alhos, ordem de tabula\u00e7\u00e3o, contraste de cores e muito mais. Al\u00e9m disso, voc\u00ea pode usar Insights de Acessibilidade para simular daltonismo para garantir que sua interface do usu\u00e1rio seja acess\u00edvel \u00e0queles que experimentam alguma forma de daltonismo. Voc\u00ea pode baixar Insights de Acessibilidade aqui: https://accessibilityinsights.io/downloads/ Linter de Acessibilidade A Deque Systems \u00e9 uma empresa especializada em acessibilidade na web que oferece treinamento e ferramentas de acessibilidade para diversas organiza\u00e7\u00f5es, incluindo a Microsoft. Uma das muitas ferramentas oferecidas pela Deque \u00e9 o axe Accessibility Linter para o VS Code . Esta extens\u00e3o do VS Code utiliza o motor de regras axe-core para identificar problemas de acessibilidade em HTML, Angular, React, Markdown e Vue. Utilizar um verificador de acessibilidade pode ajudar a garantir que os problemas de acessibilidade sejam abordados no in\u00edcio do ciclo de desenvolvimento. Pr\u00e1ticas Testes de Acessibilidade Os testes de acessibilidade s\u00e3o uma subcategoria especializada de testes de software e incluem ferramentas automatizadas e processos de teste manuais que variam de projeto para projeto. Al\u00e9m das ferramentas como Accessibility Insights mencionadas anteriormente, existem muitas outras solu\u00e7\u00f5es para testes de acessibilidade. A W3C fornece uma lista abrangente de ferramentas de avalia\u00e7\u00e3o e teste em seu site em https://www.w3.org/WAI/ER/tools/ . Se voc\u00ea deseja adicionar testes automatizados aos seus Pipelines do Azure, pode considerar a extens\u00e3o Accessibility Testing criada por Drew Lewis, um ex-funcion\u00e1rio da Microsoft. \u00c9 importante lembrar que apenas a automa\u00e7\u00e3o das ferramentas n\u00e3o \u00e9 suficiente; certifique-se de complementar seus testes automatizados com testes manuais. O Accessibility Insights (link acima) pode orientar os usu\u00e1rios em algumas etapas de teste manual. Fundamentos de C\u00f3digo e Documenta\u00e7\u00e3o Antes de come\u00e7ar os testes, voc\u00ea pode fazer algumas pequenas altera\u00e7\u00f5es na forma como escreve o c\u00f3digo e a documenta\u00e7\u00e3o. Documente! Al\u00e9m da documenta\u00e7\u00e3o em texto, isso tamb\u00e9m significa coment\u00e1rios de c\u00f3digo, nomes claros de vari\u00e1veis e arquivos, e sa\u00eddas de pipeline ou scripts que relatem claramente o sucesso ou a falha e forne\u00e7am detalhes. Evite letras min\u00fasculas em nomes de vari\u00e1veis e arquivos, hashtags, neologismos, etc. Use camelCase, snake_case ou outros m\u00e9todos de separa\u00e7\u00e3o de palavras. Introduza abrevia\u00e7\u00f5es soletrando o termo completo e, em seguida, a abrevia\u00e7\u00e3o entre par\u00eanteses. Use cabe\u00e7alhos de forma eficaz para dividir o conte\u00fado por t\u00f3pico. N\u00e3o use mais de um h1 por p\u00e1gina e n\u00e3o pule n\u00edveis (por exemplo, use um h3 diretamente abaixo de um h1). Evite usar formata\u00e7\u00e3o para fazer algo parecer um cabe\u00e7alho quando n\u00e3o \u00e9. Use texto de link descritivo. Evite associar um link a frases como \"Leia mais\" e certifique-se de que o texto informe diretamente para onde o link aponta. O texto do link deve ser autoexplicativo. Ao incluir imagens ou diagramas, adicione texto alternativo (alt text). Isso nunca deve ser apenas \"Imagem\" ou \"Diagrama\" (ou similar). Em sua descri\u00e7\u00e3o, destaque o objetivo da imagem ou diagrama na p\u00e1gina e o que ele se destina a transmitir. Prefira guias a espa\u00e7os sempre que poss\u00edvel. Isso permite que os usu\u00e1rios usem sua largura de guia preferida, para que usu\u00e1rios com uma variedade de vis\u00f5es possam visualizar o c\u00f3digo facilmente. Recursos Adicionais Tecnologia e Ferramentas de Acessibilidade da Microsoft Diretrizes de Conte\u00fado Web para Acessibilidade (WCAG) Diretrizes e Requisitos de Acessibilidade | Guia de Estilo da Microsoft Guia de Estilo para Desenvolvedores do Google: Escrever Documenta\u00e7\u00e3o Acess\u00edvel","title":"Acessibilidade"},{"location":"accessibility/#acessibilidade","text":"A acessibilidade \u00e9 um componente cr\u00edtico de qualquer projeto bem-sucedido e garante que as solu\u00e7\u00f5es que constru\u00edmos sejam utiliz\u00e1veis e apreciadas pelo maior n\u00famero poss\u00edvel de pessoas. Embora o cumprimento das normas de acessibilidade seja obrigat\u00f3rio, a acessibilidade vai muito al\u00e9m do mero cumprimento. A acessibilidade \u00e9 sobre usar t\u00e9cnicas como design inclusivo para infundir diferentes perspectivas e toda a gama de diversidade humana nos produtos que constru\u00edmos. Ao incorporar acessibilidade em seu projeto desde a vis\u00e3o inicial at\u00e9 o MVP e al\u00e9m, voc\u00ea est\u00e1 promovendo um ambiente mais inclusivo para sua equipe e ajudando a fechar o \"Divis\u00e3o de Defici\u00eancia\" que existe para muitas pessoas que vivem com defici\u00eancias.","title":"Acessibilidade"},{"location":"accessibility/#comecando","text":"Se voc\u00ea \u00e9 novo em acessibilidade ou est\u00e1 procurando uma vis\u00e3o geral dos fundamentos da acessibilidade, o Microsoft Learn oferece um \u00f3timo curso de treinamento que abrange uma ampla gama de t\u00f3picos, desde a cria\u00e7\u00e3o de conte\u00fado acess\u00edvel no Office at\u00e9 o design de recursos de acessibilidade em seus pr\u00f3prios aplicativos. Voc\u00ea pode aprender mais sobre o curso ou come\u00e7ar em Microsoft Learn: Fundamentos de Acessibilidade .","title":"Come\u00e7ando"},{"location":"accessibility/#design-inclusivo","text":"O design inclusivo \u00e9 uma metodologia que abra\u00e7a toda a gama de diversidade humana como um recurso para ajudar a construir melhores produtos e servi\u00e7os. O design inclusivo complementa a acessibilidade, indo al\u00e9m das normas de conformidade de acessibilidade para garantir que os produtos sejam utiliz\u00e1veis e apreciados por todas as pessoas. Ao aproveitar a metodologia de design inclusivo no in\u00edcio de um projeto, voc\u00ea pode esperar uma solu\u00e7\u00e3o mais inclusiva e melhor para todos. O site Microsoft Design Inclusivo oferece uma variedade de recursos para incorporar design inclusivo em seus projetos, incluindo atividades de design inclusivo que podem ser usadas em sess\u00f5es de vis\u00e3o e design de arquitetura. A metodologia de Design Inclusivo da Microsoft inclui os seguintes princ\u00edpios:","title":"Design Inclusivo"},{"location":"accessibility/#reconhecer-a-exclusao","text":"Projetar para inclusividade n\u00e3o apenas abre nossos produtos e servi\u00e7os para mais pessoas, mas tamb\u00e9m reflete como as pessoas realmente s\u00e3o. Todos os seres humanos crescem e se adaptam ao mundo ao seu redor, e queremos que nossos designs reflitam isso.","title":"Reconhecer a exclus\u00e3o"},{"location":"accessibility/#resolver-para-um-estender-para-muitos","text":"Todos t\u00eam habilidades e limites para essas habilidades. Projetar para pessoas com defici\u00eancias permanentes realmente resulta em designs que beneficiam as pessoas universalmente. Restri\u00e7\u00f5es s\u00e3o uma coisa linda.","title":"Resolver para um, estender para muitos"},{"location":"accessibility/#aprender-com-a-diversidade","text":"Os seres humanos s\u00e3o os verdadeiros especialistas em se adaptar \u00e0 diversidade. O design inclusivo coloca as pessoas no centro desde o in\u00edcio do processo, e essas perspectivas frescas e diversas s\u00e3o a chave para uma verdadeira percep\u00e7\u00e3o.","title":"Aprender com a diversidade"},{"location":"accessibility/#ferramentas","text":"","title":"Ferramentas"},{"location":"accessibility/#insights-de-acessibilidade","text":"Insights de Acessibilidade \u00e9 uma solu\u00e7\u00e3o gratuita e de c\u00f3digo aberto para identificar problemas de acessibilidade em aplicativos Windows, Android e web. Insights de Acessibilidade podem identificar uma ampla gama de problemas de acessibilidade, incluindo problemas com tags de imagem alternativas ausentes, organiza\u00e7\u00e3o de cabe\u00e7alhos, ordem de tabula\u00e7\u00e3o, contraste de cores e muito mais. Al\u00e9m disso, voc\u00ea pode usar Insights de Acessibilidade para simular daltonismo para garantir que sua interface do usu\u00e1rio seja acess\u00edvel \u00e0queles que experimentam alguma forma de daltonismo. Voc\u00ea pode baixar Insights de Acessibilidade aqui: https://accessibilityinsights.io/downloads/","title":"Insights de Acessibilidade"},{"location":"accessibility/#linter-de-acessibilidade","text":"A Deque Systems \u00e9 uma empresa especializada em acessibilidade na web que oferece treinamento e ferramentas de acessibilidade para diversas organiza\u00e7\u00f5es, incluindo a Microsoft. Uma das muitas ferramentas oferecidas pela Deque \u00e9 o axe Accessibility Linter para o VS Code . Esta extens\u00e3o do VS Code utiliza o motor de regras axe-core para identificar problemas de acessibilidade em HTML, Angular, React, Markdown e Vue. Utilizar um verificador de acessibilidade pode ajudar a garantir que os problemas de acessibilidade sejam abordados no in\u00edcio do ciclo de desenvolvimento.","title":"Linter de Acessibilidade"},{"location":"accessibility/#praticas","text":"","title":"Pr\u00e1ticas"},{"location":"accessibility/#testes-de-acessibilidade","text":"Os testes de acessibilidade s\u00e3o uma subcategoria especializada de testes de software e incluem ferramentas automatizadas e processos de teste manuais que variam de projeto para projeto. Al\u00e9m das ferramentas como Accessibility Insights mencionadas anteriormente, existem muitas outras solu\u00e7\u00f5es para testes de acessibilidade. A W3C fornece uma lista abrangente de ferramentas de avalia\u00e7\u00e3o e teste em seu site em https://www.w3.org/WAI/ER/tools/ . Se voc\u00ea deseja adicionar testes automatizados aos seus Pipelines do Azure, pode considerar a extens\u00e3o Accessibility Testing criada por Drew Lewis, um ex-funcion\u00e1rio da Microsoft. \u00c9 importante lembrar que apenas a automa\u00e7\u00e3o das ferramentas n\u00e3o \u00e9 suficiente; certifique-se de complementar seus testes automatizados com testes manuais. O Accessibility Insights (link acima) pode orientar os usu\u00e1rios em algumas etapas de teste manual.","title":"Testes de Acessibilidade"},{"location":"accessibility/#fundamentos-de-codigo-e-documentacao","text":"Antes de come\u00e7ar os testes, voc\u00ea pode fazer algumas pequenas altera\u00e7\u00f5es na forma como escreve o c\u00f3digo e a documenta\u00e7\u00e3o. Documente! Al\u00e9m da documenta\u00e7\u00e3o em texto, isso tamb\u00e9m significa coment\u00e1rios de c\u00f3digo, nomes claros de vari\u00e1veis e arquivos, e sa\u00eddas de pipeline ou scripts que relatem claramente o sucesso ou a falha e forne\u00e7am detalhes. Evite letras min\u00fasculas em nomes de vari\u00e1veis e arquivos, hashtags, neologismos, etc. Use camelCase, snake_case ou outros m\u00e9todos de separa\u00e7\u00e3o de palavras. Introduza abrevia\u00e7\u00f5es soletrando o termo completo e, em seguida, a abrevia\u00e7\u00e3o entre par\u00eanteses. Use cabe\u00e7alhos de forma eficaz para dividir o conte\u00fado por t\u00f3pico. N\u00e3o use mais de um h1 por p\u00e1gina e n\u00e3o pule n\u00edveis (por exemplo, use um h3 diretamente abaixo de um h1). Evite usar formata\u00e7\u00e3o para fazer algo parecer um cabe\u00e7alho quando n\u00e3o \u00e9. Use texto de link descritivo. Evite associar um link a frases como \"Leia mais\" e certifique-se de que o texto informe diretamente para onde o link aponta. O texto do link deve ser autoexplicativo. Ao incluir imagens ou diagramas, adicione texto alternativo (alt text). Isso nunca deve ser apenas \"Imagem\" ou \"Diagrama\" (ou similar). Em sua descri\u00e7\u00e3o, destaque o objetivo da imagem ou diagrama na p\u00e1gina e o que ele se destina a transmitir. Prefira guias a espa\u00e7os sempre que poss\u00edvel. Isso permite que os usu\u00e1rios usem sua largura de guia preferida, para que usu\u00e1rios com uma variedade de vis\u00f5es possam visualizar o c\u00f3digo facilmente.","title":"Fundamentos de C\u00f3digo e Documenta\u00e7\u00e3o"},{"location":"accessibility/#recursos-adicionais","text":"Tecnologia e Ferramentas de Acessibilidade da Microsoft Diretrizes de Conte\u00fado Web para Acessibilidade (WCAG) Diretrizes e Requisitos de Acessibilidade | Guia de Estilo da Microsoft Guia de Estilo para Desenvolvedores do Google: Escrever Documenta\u00e7\u00e3o Acess\u00edvel","title":"Recursos Adicionais"},{"location":"agile-development/","text":"Documenta\u00e7\u00e3o \u00c1gil Conceitos B\u00e1sicos de \u00c1gil : Aprenda ou atualize seu conhecimento b\u00e1sico sobre m\u00e9todos \u00e1geis. Expectativas Centrais do \u00c1gil : Quais s\u00e3o as nossas expectativas centrais de uma equipe \u00c1gil. T\u00f3picos Avan\u00e7ados em \u00c1gil : V\u00e1 al\u00e9m dos conceitos b\u00e1sicos.","title":"Documenta\u00e7\u00e3o \u00c1gil"},{"location":"agile-development/#documentacao-agil","text":"Conceitos B\u00e1sicos de \u00c1gil : Aprenda ou atualize seu conhecimento b\u00e1sico sobre m\u00e9todos \u00e1geis. Expectativas Centrais do \u00c1gil : Quais s\u00e3o as nossas expectativas centrais de uma equipe \u00c1gil. T\u00f3picos Avan\u00e7ados em \u00c1gil : V\u00e1 al\u00e9m dos conceitos b\u00e1sicos.","title":"Documenta\u00e7\u00e3o \u00c1gil"},{"location":"agile-development/advanced-topics/","text":"T\u00f3picos Avan\u00e7ados em Desenvolvimento \u00c1gil Documenta\u00e7\u00e3o que ajuda voc\u00ea a ir al\u00e9m dos conceitos b\u00e1sicos e expectativas centrais. Gerenciamento de Backlog Colabora\u00e7\u00e3o Organiza\u00e7\u00e3o Efetiva Acordos de Equipe","title":"T\u00f3picos Avan\u00e7ados em Desenvolvimento \u00c1gil"},{"location":"agile-development/advanced-topics/#topicos-avancados-em-desenvolvimento-agil","text":"Documenta\u00e7\u00e3o que ajuda voc\u00ea a ir al\u00e9m dos conceitos b\u00e1sicos e expectativas centrais. Gerenciamento de Backlog Colabora\u00e7\u00e3o Organiza\u00e7\u00e3o Efetiva Acordos de Equipe","title":"T\u00f3picos Avan\u00e7ados em Desenvolvimento \u00c1gil"},{"location":"agile-development/advanced-topics/backlog-management/","text":"Recomenda\u00e7\u00f5es Avan\u00e7adas para Gerenciamento de Backlog Feedback Externo Fatias Minimalistas","title":"Recomenda\u00e7\u00f5es Avan\u00e7adas para Gerenciamento de Backlog"},{"location":"agile-development/advanced-topics/backlog-management/#recomendacoes-avancadas-para-gerenciamento-de-backlog","text":"Feedback Externo Fatias Minimalistas","title":"Recomenda\u00e7\u00f5es Avan\u00e7adas para Gerenciamento de Backlog"},{"location":"agile-development/advanced-topics/backlog-management/external-feedback/","text":"Feedback Externo V\u00e1rios interessados podem fornecer feedback para o produto em desenvolvimento durante um projeto, al\u00e9m de qualquer sess\u00e3o formal de revis\u00e3o e feedback exigida pela organiza\u00e7\u00e3o. A frequ\u00eancia e o m\u00e9todo de coleta de feedback por meio de revis\u00f5es variam dependendo do caso, mas algumas boas pr\u00e1ticas s\u00e3o: Capture cada revis\u00e3o no backlog como uma hist\u00f3ria de usu\u00e1rio separada. Padronize as tarefas que implementam essa hist\u00f3ria de usu\u00e1rio. Planeje proativamente uma hist\u00f3ria de usu\u00e1rio de revis\u00e3o para cada \u00c9pico / Funcionalidade em seu backlog.","title":"Feedback Externo"},{"location":"agile-development/advanced-topics/backlog-management/external-feedback/#feedback-externo","text":"V\u00e1rios interessados podem fornecer feedback para o produto em desenvolvimento durante um projeto, al\u00e9m de qualquer sess\u00e3o formal de revis\u00e3o e feedback exigida pela organiza\u00e7\u00e3o. A frequ\u00eancia e o m\u00e9todo de coleta de feedback por meio de revis\u00f5es variam dependendo do caso, mas algumas boas pr\u00e1ticas s\u00e3o: Capture cada revis\u00e3o no backlog como uma hist\u00f3ria de usu\u00e1rio separada. Padronize as tarefas que implementam essa hist\u00f3ria de usu\u00e1rio. Planeje proativamente uma hist\u00f3ria de usu\u00e1rio de revis\u00e3o para cada \u00c9pico / Funcionalidade em seu backlog.","title":"Feedback Externo"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/","text":"Fatias Minimalistas Sempre entregue seu trabalho usando fatias m\u00ednimas valiosas Divida seu item de trabalho em pequenos peda\u00e7os que s\u00e3o contribu\u00eddos em commits incrementais. Contribua com seus peda\u00e7os frequentemente. Siga uma abordagem iterativa, fornecendo atualiza\u00e7\u00f5es e mudan\u00e7as regularmente para a equipe. Isso permite feedback instant\u00e2neo e descoberta precoce de problemas, garantindo que voc\u00ea est\u00e1 desenvolvendo na dire\u00e7\u00e3o certa, tanto tecnicamente quanto funcionalmente. N\u00c3O trabalhe independentemente em sua tarefa sem fornecer atualiza\u00e7\u00f5es para sua equipe. Exemplo Imagine que voc\u00ea est\u00e1 trabalhando na adi\u00e7\u00e3o de funcionalidade de constru\u00e7\u00e3o de aplicativos UWP (Universal Windows Platform) para um servi\u00e7o de integra\u00e7\u00e3o cont\u00ednua que j\u00e1 possui suporte para Android/iOS. Abordagem Ruim Ap\u00f3s seis semanas de trabalho, voc\u00ea criou um PR com toda a funcionalidade necess\u00e1ria, incluindo a interface do portal (configura\u00e7\u00f5es de constru\u00e7\u00e3o), API REST do backend (funcionalidade de constru\u00e7\u00e3o UWP), telemetria, testes unit\u00e1rios e de integra\u00e7\u00e3o, etc. Boa Abordagem Voc\u00ea dividiu seu recurso em hist\u00f3rias de usu\u00e1rio menores (que por sua vez foram divididas em v\u00e1rias tarefas) e come\u00e7ou a trabalhar nelas uma de cada vez: Como usu\u00e1rio, posso construir aplicativos UWP com sucesso usando o servi\u00e7o atual Como usu\u00e1rio, posso ver a telemetria ao construir os aplicativos Como usu\u00e1rio, tenho a capacidade de selecionar a configura\u00e7\u00e3o de constru\u00e7\u00e3o (debug, release) Como usu\u00e1rio, tenho a capacidade de selecionar a plataforma de destino (arm, x86, x64) ... Voc\u00ea tamb\u00e9m dividiu suas hist\u00f3rias em tarefas menores e enviou PRs com base nessas tarefas. Por exemplo, voc\u00ea tem as seguintes tarefas para a primeira hist\u00f3ria de usu\u00e1rio acima: Habilitar a plataforma UWP no backend Adicionar bot\u00e3o construir \u00e0 interface do usu\u00e1rio (construir o primeiro arquivo de solu\u00e7\u00e3o encontrado) Adicionar um menu suspenso selecionar arquivo de solu\u00e7\u00e3o \u00e0 interface do usu\u00e1rio Implementar testes unit\u00e1rios Implementar testes de integra\u00e7\u00e3o para verificar se a constru\u00e7\u00e3o foi bem-sucedida Atualizar documenta\u00e7\u00e3o ... Recursos Regras do Minimalismo","title":"Fatias Minimalistas"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/#fatias-minimalistas","text":"","title":"Fatias Minimalistas"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/#sempre-entregue-seu-trabalho-usando-fatias-minimas-valiosas","text":"Divida seu item de trabalho em pequenos peda\u00e7os que s\u00e3o contribu\u00eddos em commits incrementais. Contribua com seus peda\u00e7os frequentemente. Siga uma abordagem iterativa, fornecendo atualiza\u00e7\u00f5es e mudan\u00e7as regularmente para a equipe. Isso permite feedback instant\u00e2neo e descoberta precoce de problemas, garantindo que voc\u00ea est\u00e1 desenvolvendo na dire\u00e7\u00e3o certa, tanto tecnicamente quanto funcionalmente. N\u00c3O trabalhe independentemente em sua tarefa sem fornecer atualiza\u00e7\u00f5es para sua equipe.","title":"Sempre entregue seu trabalho usando fatias m\u00ednimas valiosas"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/#exemplo","text":"Imagine que voc\u00ea est\u00e1 trabalhando na adi\u00e7\u00e3o de funcionalidade de constru\u00e7\u00e3o de aplicativos UWP (Universal Windows Platform) para um servi\u00e7o de integra\u00e7\u00e3o cont\u00ednua que j\u00e1 possui suporte para Android/iOS.","title":"Exemplo"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/#abordagem-ruim","text":"Ap\u00f3s seis semanas de trabalho, voc\u00ea criou um PR com toda a funcionalidade necess\u00e1ria, incluindo a interface do portal (configura\u00e7\u00f5es de constru\u00e7\u00e3o), API REST do backend (funcionalidade de constru\u00e7\u00e3o UWP), telemetria, testes unit\u00e1rios e de integra\u00e7\u00e3o, etc.","title":"Abordagem Ruim"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/#boa-abordagem","text":"Voc\u00ea dividiu seu recurso em hist\u00f3rias de usu\u00e1rio menores (que por sua vez foram divididas em v\u00e1rias tarefas) e come\u00e7ou a trabalhar nelas uma de cada vez: Como usu\u00e1rio, posso construir aplicativos UWP com sucesso usando o servi\u00e7o atual Como usu\u00e1rio, posso ver a telemetria ao construir os aplicativos Como usu\u00e1rio, tenho a capacidade de selecionar a configura\u00e7\u00e3o de constru\u00e7\u00e3o (debug, release) Como usu\u00e1rio, tenho a capacidade de selecionar a plataforma de destino (arm, x86, x64) ... Voc\u00ea tamb\u00e9m dividiu suas hist\u00f3rias em tarefas menores e enviou PRs com base nessas tarefas. Por exemplo, voc\u00ea tem as seguintes tarefas para a primeira hist\u00f3ria de usu\u00e1rio acima: Habilitar a plataforma UWP no backend Adicionar bot\u00e3o construir \u00e0 interface do usu\u00e1rio (construir o primeiro arquivo de solu\u00e7\u00e3o encontrado) Adicionar um menu suspenso selecionar arquivo de solu\u00e7\u00e3o \u00e0 interface do usu\u00e1rio Implementar testes unit\u00e1rios Implementar testes de integra\u00e7\u00e3o para verificar se a constru\u00e7\u00e3o foi bem-sucedida Atualizar documenta\u00e7\u00e3o ...","title":"Boa Abordagem"},{"location":"agile-development/advanced-topics/backlog-management/minimal-slices/#recursos","text":"Regras do Minimalismo","title":"Recursos"},{"location":"agile-development/advanced-topics/collaboration/","text":"Recomenda\u00e7\u00f5es Avan\u00e7adas para Colabora\u00e7\u00e3o Por que Colaborar Como usar a \"Pergunta Social do Dia\" Desenvolvimento de Equipe de Engajamento Programa\u00e7\u00e3o em Par e em Grupo (Swarm) Colabora\u00e7\u00e3o Virtual e Programa\u00e7\u00e3o em Par Como adicionar um Campo Personalizado de Emparelhamento em Hist\u00f3rias de Usu\u00e1rio do Azure DevOps Programa\u00e7\u00e3o em Par Sem Esfor\u00e7o com GitHub Codespaces e VSCode","title":"Recomenda\u00e7\u00f5es Avan\u00e7adas para Colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/#recomendacoes-avancadas-para-colaboracao","text":"Por que Colaborar Como usar a \"Pergunta Social do Dia\" Desenvolvimento de Equipe de Engajamento","title":"Recomenda\u00e7\u00f5es Avan\u00e7adas para Colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/#programacao-em-par-e-em-grupo-swarm","text":"Colabora\u00e7\u00e3o Virtual e Programa\u00e7\u00e3o em Par Como adicionar um Campo Personalizado de Emparelhamento em Hist\u00f3rias de Usu\u00e1rio do Azure DevOps Programa\u00e7\u00e3o em Par Sem Esfor\u00e7o com GitHub Codespaces e VSCode","title":"Programa\u00e7\u00e3o em Par e em Grupo (Swarm)"},{"location":"agile-development/advanced-topics/collaboration/add-pairing-field-azure-devops-cards/","text":"Como adicionar um Campo Personalizado de Emparelhamento em Hist\u00f3rias de Usu\u00e1rio do Azure DevOps Este documento descreve os benef\u00edcios de adicionar um campo personalizado do tipo Identidade nas hist\u00f3rias de usu\u00e1rio do Azure DevOps , pr\u00e9-requisitos e um guia passo a passo. Benef\u00edcios de adicionar um campo personalizado Ter os nomes de ambos os indiv\u00edduos trabalhando em uma hist\u00f3ria vis\u00edveis nos cart\u00f5es do Azure DevOps pode ser \u00fatil durante as cerim\u00f4nias de sprint e levar a uma maior responsabilidade pelo respons\u00e1vel pelo emparelhamento. Por exemplo, \u00e9 mais f\u00e1cil acompanhar os indiv\u00edduos designados para hist\u00f3rias como parte de um par durante o planejamento do sprint usando o campo \"nomes de emparelhamento\". Durante o stand-up, isso tamb\u00e9m pode ajudar o L\u00edder de Processo a filtrar hist\u00f3rias atribu\u00eddas ao indiv\u00edduo (tanto como propriet\u00e1rio quanto como respons\u00e1vel pelo emparelhamento) e mostr\u00e1-las no quadro. Al\u00e9m disso, o campo de emparelhamento pode fornecer um ponto de dados adicional para relat\u00f3rios e taxas de queima. Pr\u00e9-requisitos Antes de personalizar o Azure DevOps, revise Configurar e personalizar o Azure Boards . Para adicionar um campo personalizado \u00e0s hist\u00f3rias de usu\u00e1rio no Azure DevOps, as altera\u00e7\u00f5es devem ser feitas como uma Configura\u00e7\u00e3o Organizacional . Este documento, portanto, pressup\u00f5e o uso de uma Organiza\u00e7\u00e3o existente no Azure DevOps e que a conta de usu\u00e1rio usada para fazer essas altera\u00e7\u00f5es \u00e9 membro do Grupo de Administradores da Cole\u00e7\u00e3o de Projetos . Alterar as configura\u00e7\u00f5es da organiza\u00e7\u00e3o Duplicar o processo atualmente em uso. Navegue at\u00e9 as Configura\u00e7\u00f5es da Organiza\u00e7\u00e3o , dentro da aba Boards / Process. Selecione o tipo de Processo , clique no \u00edcone com tr\u00eas pontos ... e clique em Criar processo herdado . Clique no processo herdado rec\u00e9m-criado. Como voc\u00ea pode ver no exemplo abaixo, n\u00f3s o chamamos de 'Emparelhamento'. Clique no tipo de item de trabalho Hist\u00f3ria de Usu\u00e1rio . Clique em Novo Campo . D\u00ea um Nome e selecione Identidade em Tipo. Clique em Adicionar Campo . Isso completa a mudan\u00e7a nas Configura\u00e7\u00f5es da Organiza\u00e7\u00e3o. O restante das instru\u00e7\u00f5es deve ser conclu\u00eddo nas Configura\u00e7\u00f5es do Projeto. Alterar as configura\u00e7\u00f5es do projeto V\u00e1 para o Projeto que ser\u00e1 modificado, selecione Configura\u00e7\u00f5es do Projeto . Selecione Configura\u00e7\u00e3o do Projeto . Clique na p\u00e1gina de personaliza\u00e7\u00e3o de processo . Clique em Projetos e depois clique em Alterar processo . Altere o processo alvo para Emparelhamento e clique em Salvar. V\u00e1 para Boards . Clique no \u00edcone de engrenagem para abrir Configura\u00e7\u00f5es. Adicione o campo ao cart\u00e3o. Clique no \u00edcone verde + para adicionar e selecionar o campo de Emparelhamento. Marque a caixa para exibir campos, mesmo quando estiverem vazios. Salvar e fechar . Veja o cart\u00e3o modificado. Observe o novo campo de Emparelhamento. A Hist\u00f3ria agora pode ser atribu\u00edda a um Propriet\u00e1rio e a um Respons\u00e1vel pelo Emparelhamento!","title":"Como adicionar um Campo Personalizado de Emparelhamento em Hist\u00f3rias de Usu\u00e1rio do Azure DevOps"},{"location":"agile-development/advanced-topics/collaboration/add-pairing-field-azure-devops-cards/#como-adicionar-um-campo-personalizado-de-emparelhamento-em-historias-de-usuario-do-azure-devops","text":"Este documento descreve os benef\u00edcios de adicionar um campo personalizado do tipo Identidade nas hist\u00f3rias de usu\u00e1rio do Azure DevOps , pr\u00e9-requisitos e um guia passo a passo.","title":"Como adicionar um Campo Personalizado de Emparelhamento em Hist\u00f3rias de Usu\u00e1rio do Azure DevOps"},{"location":"agile-development/advanced-topics/collaboration/add-pairing-field-azure-devops-cards/#beneficios-de-adicionar-um-campo-personalizado","text":"Ter os nomes de ambos os indiv\u00edduos trabalhando em uma hist\u00f3ria vis\u00edveis nos cart\u00f5es do Azure DevOps pode ser \u00fatil durante as cerim\u00f4nias de sprint e levar a uma maior responsabilidade pelo respons\u00e1vel pelo emparelhamento. Por exemplo, \u00e9 mais f\u00e1cil acompanhar os indiv\u00edduos designados para hist\u00f3rias como parte de um par durante o planejamento do sprint usando o campo \"nomes de emparelhamento\". Durante o stand-up, isso tamb\u00e9m pode ajudar o L\u00edder de Processo a filtrar hist\u00f3rias atribu\u00eddas ao indiv\u00edduo (tanto como propriet\u00e1rio quanto como respons\u00e1vel pelo emparelhamento) e mostr\u00e1-las no quadro. Al\u00e9m disso, o campo de emparelhamento pode fornecer um ponto de dados adicional para relat\u00f3rios e taxas de queima.","title":"Benef\u00edcios de adicionar um campo personalizado"},{"location":"agile-development/advanced-topics/collaboration/add-pairing-field-azure-devops-cards/#pre-requisitos","text":"Antes de personalizar o Azure DevOps, revise Configurar e personalizar o Azure Boards . Para adicionar um campo personalizado \u00e0s hist\u00f3rias de usu\u00e1rio no Azure DevOps, as altera\u00e7\u00f5es devem ser feitas como uma Configura\u00e7\u00e3o Organizacional . Este documento, portanto, pressup\u00f5e o uso de uma Organiza\u00e7\u00e3o existente no Azure DevOps e que a conta de usu\u00e1rio usada para fazer essas altera\u00e7\u00f5es \u00e9 membro do Grupo de Administradores da Cole\u00e7\u00e3o de Projetos .","title":"Pr\u00e9-requisitos"},{"location":"agile-development/advanced-topics/collaboration/add-pairing-field-azure-devops-cards/#alterar-as-configuracoes-da-organizacao","text":"Duplicar o processo atualmente em uso. Navegue at\u00e9 as Configura\u00e7\u00f5es da Organiza\u00e7\u00e3o , dentro da aba Boards / Process. Selecione o tipo de Processo , clique no \u00edcone com tr\u00eas pontos ... e clique em Criar processo herdado . Clique no processo herdado rec\u00e9m-criado. Como voc\u00ea pode ver no exemplo abaixo, n\u00f3s o chamamos de 'Emparelhamento'. Clique no tipo de item de trabalho Hist\u00f3ria de Usu\u00e1rio . Clique em Novo Campo . D\u00ea um Nome e selecione Identidade em Tipo. Clique em Adicionar Campo . Isso completa a mudan\u00e7a nas Configura\u00e7\u00f5es da Organiza\u00e7\u00e3o. O restante das instru\u00e7\u00f5es deve ser conclu\u00eddo nas Configura\u00e7\u00f5es do Projeto.","title":"Alterar as configura\u00e7\u00f5es da organiza\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/add-pairing-field-azure-devops-cards/#alterar-as-configuracoes-do-projeto","text":"V\u00e1 para o Projeto que ser\u00e1 modificado, selecione Configura\u00e7\u00f5es do Projeto . Selecione Configura\u00e7\u00e3o do Projeto . Clique na p\u00e1gina de personaliza\u00e7\u00e3o de processo . Clique em Projetos e depois clique em Alterar processo . Altere o processo alvo para Emparelhamento e clique em Salvar. V\u00e1 para Boards . Clique no \u00edcone de engrenagem para abrir Configura\u00e7\u00f5es. Adicione o campo ao cart\u00e3o. Clique no \u00edcone verde + para adicionar e selecionar o campo de Emparelhamento. Marque a caixa para exibir campos, mesmo quando estiverem vazios. Salvar e fechar . Veja o cart\u00e3o modificado. Observe o novo campo de Emparelhamento. A Hist\u00f3ria agora pode ser atribu\u00edda a um Propriet\u00e1rio e a um Respons\u00e1vel pelo Emparelhamento!","title":"Alterar as configura\u00e7\u00f5es do projeto"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/","text":"Programa\u00e7\u00e3o em Par Sem Esfor\u00e7o com GitHub Codespaces e VSCode A programa\u00e7\u00e3o em par costumava ser uma t\u00e9cnica de desenvolvimento de software na qual dois programadores trabalham juntos em um \u00fanico computador, compartilhando um teclado e um mouse, para projetar, codificar, testar e depurar software conjuntamente. \u00c9 um dos padr\u00f5es explorados na se\u00e7\u00e3o por que colaborar? deste playbook. No entanto, com equipes que trabalham principalmente de forma remota, compartilhar um computador f\u00edsico tornou-se um desafio, mas abriu a porta para uma abordagem mais eficiente da programa\u00e7\u00e3o em par. Por meio da utiliza\u00e7\u00e3o eficaz de uma variedade de ferramentas e t\u00e9cnicas, implementamos com sucesso tanto as metodologias de programa\u00e7\u00e3o em par quanto em enxame. Como tal, estamos ansiosos para compartilhar alguns dos valiosos insights e conhecimentos adquiridos com essa experi\u00eancia. Como tornar a programa\u00e7\u00e3o em par uma experi\u00eancia indolor? Sess\u00f5es de Trabalho Para aprimorar as capacidades de programa\u00e7\u00e3o em par, voc\u00ea pode criar sess\u00f5es de trabalho regulares que est\u00e3o abertas a todos os membros da equipe. Isso facilita uma colabora\u00e7\u00e3o suave e eficiente, pois todos podem simplesmente participar e trabalhar juntos antes de se dividirem em grupos menores. Essa abordagem se mostrou particularmente ben\u00e9fica para novos membros da equipe que, de outra forma, poderiam se sentir sobrecarregados por uma grande base de c\u00f3digo. Ela emula o conceito do \" bebedouro humilde \", que promove um senso de conex\u00e3o entre os membros da equipe por meio de seu trabalho compartilhado. Al\u00e9m disso, agendar essas sess\u00f5es de trabalho com anteced\u00eancia garante colabora\u00e7\u00e3o intencional e fornece clareza sobre as responsabilidades da hist\u00f3ria do usu\u00e1rio. Para esse fim, atribua uma \u00fanica pessoa a cada hist\u00f3ria do usu\u00e1rio para garantir propriedade clara e eliminar ambiguidades. Ao fazer isso, isso poderia eliminar o problema comum de engenheiros hesitarem em modificar o c\u00f3digo fora de suas tarefas atribu\u00eddas devido ao sentimento de falta de propriedade. Essas sess\u00f5es de trabalho s\u00e3o fundamentais para promover uma din\u00e2mica de equipe coesa, permitindo o compartilhamento eficaz de conhecimento e a resolu\u00e7\u00e3o coletiva de problemas. GitHub Codespaces GitHub Codespaces \u00e9 um componente vital em um ambiente de desenvolvimento eficiente, particularmente no contexto da programa\u00e7\u00e3o em par. Priorize a configura\u00e7\u00e3o de um Codespace como a etapa inicial do projeto, precedendo tarefas como compila\u00e7\u00e3o do projeto na m\u00e1quina local ou instala\u00e7\u00e3o de plugins do VSCode. Para isso, certifique-se de atualizar a documenta\u00e7\u00e3o do Codespace antes de incorporar quaisquer instru\u00e7\u00f5es de in\u00edcio r\u00e1pido para ambientes locais. Al\u00e9m disso, demonstre consistentemente demos no ambiente de codespaces para garantir sua integra\u00e7\u00e3o proeminente em nosso fluxo de trabalho. Com sua infraestrutura baseada em nuvem, o GitHub Codespaces apresenta uma abordagem altamente eficiente e simplificada para codifica\u00e7\u00e3o colaborativa em tempo real. Como resultado, novos membros da equipe podem acessar facilmente o projeto GitHub e come\u00e7ar a codificar em segundos, sem necessidade de instala\u00e7\u00e3o em suas m\u00e1quinas locais. Esta solu\u00e7\u00e3o integrada e cont\u00ednua para programa\u00e7\u00e3o em par oferece um fluxo de trabalho simplificado, permitindo que voc\u00ea direcione sua aten\u00e7\u00e3o para a produ\u00e7\u00e3o de c\u00f3digo exemplar, livre das distra\u00e7\u00f5es de processos de configura\u00e7\u00e3o complicados. VSCode Live Share VSCode Live Share \u00e9 especificamente projetado para programa\u00e7\u00e3o em par e permite que voc\u00ea trabalhe na mesma base de c\u00f3digo, em tempo real, com os membros da sua equipe. O \u00e1rduo processo de configurar configura\u00e7\u00f5es complexas, lidar com configura\u00e7\u00f5es confusas, for\u00e7ar os olhos para trabalhar em telas pequenas ou trocar fisicamente de teclados n\u00e3o \u00e9 um problema com o LiveShare. Esta solu\u00e7\u00e3o inovadora permite o compartilhamento cont\u00ednuo do seu ambiente de desenvolvimento com os membros da sua equipe, facilitando experi\u00eancias suaves de codifica\u00e7\u00e3o colaborativa. Totalmente integrado ao Visual Studio Code e ao Visual Studio, o LiveShare oferece o benef\u00edcio adicional de compartilhamento de terminal, colabora\u00e7\u00e3o em sess\u00e3o de depura\u00e7\u00e3o e controle da m\u00e1quina host. Quando combinado com o GitHub Codespaces, ele apresenta um conjunto de ferramentas potente para programa\u00e7\u00e3o em par eficaz. Dica: Compartilhe extens\u00f5es do VSCode (incluindo Live Share) usando um devcontainer.json base. Isso garante que todos os membros da equipe tenham dispon\u00edvel o mesmo conjunto de extens\u00f5es e lhes permita focar na resolu\u00e7\u00e3o das necessidades de neg\u00f3cios desde o primeiro dia. Recursos GitHub Codespaces . VSCode Live Share . Criar um Dev Container . Como as empresas otimizaram o bebedouro humilde do escrit\u00f3rio .","title":"Programa\u00e7\u00e3o em Par Sem Esfor\u00e7o com GitHub Codespaces e VSCode"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/#programacao-em-par-sem-esforco-com-github-codespaces-e-vscode","text":"A programa\u00e7\u00e3o em par costumava ser uma t\u00e9cnica de desenvolvimento de software na qual dois programadores trabalham juntos em um \u00fanico computador, compartilhando um teclado e um mouse, para projetar, codificar, testar e depurar software conjuntamente. \u00c9 um dos padr\u00f5es explorados na se\u00e7\u00e3o por que colaborar? deste playbook. No entanto, com equipes que trabalham principalmente de forma remota, compartilhar um computador f\u00edsico tornou-se um desafio, mas abriu a porta para uma abordagem mais eficiente da programa\u00e7\u00e3o em par. Por meio da utiliza\u00e7\u00e3o eficaz de uma variedade de ferramentas e t\u00e9cnicas, implementamos com sucesso tanto as metodologias de programa\u00e7\u00e3o em par quanto em enxame. Como tal, estamos ansiosos para compartilhar alguns dos valiosos insights e conhecimentos adquiridos com essa experi\u00eancia.","title":"Programa\u00e7\u00e3o em Par Sem Esfor\u00e7o com GitHub Codespaces e VSCode"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/#como-tornar-a-programacao-em-par-uma-experiencia-indolor","text":"","title":"Como tornar a programa\u00e7\u00e3o em par uma experi\u00eancia indolor?"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/#sessoes-de-trabalho","text":"Para aprimorar as capacidades de programa\u00e7\u00e3o em par, voc\u00ea pode criar sess\u00f5es de trabalho regulares que est\u00e3o abertas a todos os membros da equipe. Isso facilita uma colabora\u00e7\u00e3o suave e eficiente, pois todos podem simplesmente participar e trabalhar juntos antes de se dividirem em grupos menores. Essa abordagem se mostrou particularmente ben\u00e9fica para novos membros da equipe que, de outra forma, poderiam se sentir sobrecarregados por uma grande base de c\u00f3digo. Ela emula o conceito do \" bebedouro humilde \", que promove um senso de conex\u00e3o entre os membros da equipe por meio de seu trabalho compartilhado. Al\u00e9m disso, agendar essas sess\u00f5es de trabalho com anteced\u00eancia garante colabora\u00e7\u00e3o intencional e fornece clareza sobre as responsabilidades da hist\u00f3ria do usu\u00e1rio. Para esse fim, atribua uma \u00fanica pessoa a cada hist\u00f3ria do usu\u00e1rio para garantir propriedade clara e eliminar ambiguidades. Ao fazer isso, isso poderia eliminar o problema comum de engenheiros hesitarem em modificar o c\u00f3digo fora de suas tarefas atribu\u00eddas devido ao sentimento de falta de propriedade. Essas sess\u00f5es de trabalho s\u00e3o fundamentais para promover uma din\u00e2mica de equipe coesa, permitindo o compartilhamento eficaz de conhecimento e a resolu\u00e7\u00e3o coletiva de problemas.","title":"Sess\u00f5es de Trabalho"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/#github-codespaces","text":"GitHub Codespaces \u00e9 um componente vital em um ambiente de desenvolvimento eficiente, particularmente no contexto da programa\u00e7\u00e3o em par. Priorize a configura\u00e7\u00e3o de um Codespace como a etapa inicial do projeto, precedendo tarefas como compila\u00e7\u00e3o do projeto na m\u00e1quina local ou instala\u00e7\u00e3o de plugins do VSCode. Para isso, certifique-se de atualizar a documenta\u00e7\u00e3o do Codespace antes de incorporar quaisquer instru\u00e7\u00f5es de in\u00edcio r\u00e1pido para ambientes locais. Al\u00e9m disso, demonstre consistentemente demos no ambiente de codespaces para garantir sua integra\u00e7\u00e3o proeminente em nosso fluxo de trabalho. Com sua infraestrutura baseada em nuvem, o GitHub Codespaces apresenta uma abordagem altamente eficiente e simplificada para codifica\u00e7\u00e3o colaborativa em tempo real. Como resultado, novos membros da equipe podem acessar facilmente o projeto GitHub e come\u00e7ar a codificar em segundos, sem necessidade de instala\u00e7\u00e3o em suas m\u00e1quinas locais. Esta solu\u00e7\u00e3o integrada e cont\u00ednua para programa\u00e7\u00e3o em par oferece um fluxo de trabalho simplificado, permitindo que voc\u00ea direcione sua aten\u00e7\u00e3o para a produ\u00e7\u00e3o de c\u00f3digo exemplar, livre das distra\u00e7\u00f5es de processos de configura\u00e7\u00e3o complicados.","title":"GitHub Codespaces"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/#vscode-live-share","text":"VSCode Live Share \u00e9 especificamente projetado para programa\u00e7\u00e3o em par e permite que voc\u00ea trabalhe na mesma base de c\u00f3digo, em tempo real, com os membros da sua equipe. O \u00e1rduo processo de configurar configura\u00e7\u00f5es complexas, lidar com configura\u00e7\u00f5es confusas, for\u00e7ar os olhos para trabalhar em telas pequenas ou trocar fisicamente de teclados n\u00e3o \u00e9 um problema com o LiveShare. Esta solu\u00e7\u00e3o inovadora permite o compartilhamento cont\u00ednuo do seu ambiente de desenvolvimento com os membros da sua equipe, facilitando experi\u00eancias suaves de codifica\u00e7\u00e3o colaborativa. Totalmente integrado ao Visual Studio Code e ao Visual Studio, o LiveShare oferece o benef\u00edcio adicional de compartilhamento de terminal, colabora\u00e7\u00e3o em sess\u00e3o de depura\u00e7\u00e3o e controle da m\u00e1quina host. Quando combinado com o GitHub Codespaces, ele apresenta um conjunto de ferramentas potente para programa\u00e7\u00e3o em par eficaz. Dica: Compartilhe extens\u00f5es do VSCode (incluindo Live Share) usando um devcontainer.json base. Isso garante que todos os membros da equipe tenham dispon\u00edvel o mesmo conjunto de extens\u00f5es e lhes permita focar na resolu\u00e7\u00e3o das necessidades de neg\u00f3cios desde o primeiro dia.","title":"VSCode Live Share"},{"location":"agile-development/advanced-topics/collaboration/pair-programming-tools/#recursos","text":"GitHub Codespaces . VSCode Live Share . Criar um Dev Container . Como as empresas otimizaram o bebedouro humilde do escrit\u00f3rio .","title":"Recursos"},{"location":"agile-development/advanced-topics/collaboration/social-question/","text":"Pergunta Social do Dia A pergunta social do dia \u00e9 uma quest\u00e3o curta opcional a ser feita ap\u00f3s as tr\u00eas perguntas do projeto no stand-up di\u00e1rio. Ela desenvolve a coes\u00e3o da equipe e a confian\u00e7a interpessoal ao longo de um projeto, facilitando o compartilhamento de prefer\u00eancias pessoais, estilo de vida ou outros contextos. A pergunta social deve ser escolhida antes do stand-up. O facilitador deve selecionar a pergunta de forma independente ou a partir das sugest\u00f5es ass\u00edncronas da equipe. Isso minimiza atrasos no in\u00edcio do stand-up. Dica: fazer o papel de facilitador do stand-up rodar a cada sprint permite que o facilitador escolha a pergunta social de forma independente, sem sobrecarregar nenhum membro da equipe. Propriedades de uma Boa Pergunta Uma boa pergunta tem uma resposta breve com pequena elabora\u00e7\u00e3o opcional. Uma resposta sim ou n\u00e3o n\u00e3o diz muito sobre algu\u00e9m, enquanto saber que sua fruta favorita \u00e9 um durian \u00e9 informativo. Boas perguntas s\u00e3o de baixa consequ\u00eancia, mas permitem controv\u00e9rsia. Ver algu\u00e9m afirmar fortemente que salm\u00e3o e lox em bagel de canela e uva-passa \u00e9 o melhor pedido \u00e9 cativante. Como corol\u00e1rio, uma boa pergunta \u00e9 aquela sobre a qual algu\u00e9m provavelmente \u00e9 apaixonado. Voc\u00ea sabe um pouco mais sobre a personalidade de um membro da equipe se os olhos dele se iluminam ao descrever sua m\u00fasica de karaok\u00ea favorita. Lista Inicial de Perguntas Perguntas potencialmente boas incluem: Qual \u00e9 o seu pedido no Starbucks? Qual \u00e9 o seu sistema operacional favorito? Qual \u00e9 a sua vers\u00e3o favorita do Windows? Qual \u00e9 a sua planta favorita, de casa ou de outro tipo? Qual \u00e9 a sua fruta favorita? Qual \u00e9 o seu fast-food favorito? Qual \u00e9 o seu macarr\u00e3o favorito? Qual \u00e9 o seu editor de texto favorito? Montanhas ou praia? DC ou Marvel? Caf\u00e9 com uma pessoa da hist\u00f3ria: quem? Qual foi a sua compra online mais tola? Qual \u00e9 a sua carreira alternativa? Qual \u00e9 o melhor recheio para bagel? Qual \u00e9 o seu prazer culposo na TV? Qual \u00e9 a sua m\u00fasica de karaok\u00ea preferida? Voc\u00ea preferiria ver o passado ou o futuro? Voc\u00ea preferiria ser capaz de se teleportar ou voar? Voc\u00ea preferiria viver debaixo d'\u00e1gua ou no espa\u00e7o por um ano? Qual \u00e9 o seu aplicativo de telefone favorito? Qual \u00e9 o seu peixe favorito, para comer ou de outra forma? Qual foi a sua melhor fantasia? Quem \u00e9 algu\u00e9m que voc\u00ea admira (da hist\u00f3ria, da sua vida pessoal, etc.)? D\u00ea um motivo. Qual foi o melhor elogio que voc\u00ea j\u00e1 recebeu? Qual \u00e9 o seu emoji favorito ou mais usado no momento? Qual foi o seu maior projeto de fa\u00e7a voc\u00ea mesmo? Qual \u00e9 o tempero que voc\u00ea usa em tudo? Qual \u00e9 o seu g\u00eanero/artista mais ouvido no Spotify (ou apenas o seu favorito) para este ano? Qual foi o seu primeiro computador? Qual \u00e9 o seu tipo favorito de taco? Qual \u00e9 a sua d\u00e9cada favorita? Qual \u00e9 a melhor forma de comer batatas? Qual foi a sua melhor f\u00e9rias (ficar em casa \u00e9 aceit\u00e1vel)? Desenho animado favorito? Escolha algu\u00e9m da sua fam\u00edlia e nos diga algo incr\u00edvel sobre ele. Qual foi a sua viagem de carro mais longa? O que voc\u00ea se lembra de ter aprendido quando era jovem e que \u00e9 ensinado de forma diferente agora? Qual era o seu brinquedo favorito quando crian\u00e7a?","title":"Pergunta Social do Dia"},{"location":"agile-development/advanced-topics/collaboration/social-question/#pergunta-social-do-dia","text":"A pergunta social do dia \u00e9 uma quest\u00e3o curta opcional a ser feita ap\u00f3s as tr\u00eas perguntas do projeto no stand-up di\u00e1rio. Ela desenvolve a coes\u00e3o da equipe e a confian\u00e7a interpessoal ao longo de um projeto, facilitando o compartilhamento de prefer\u00eancias pessoais, estilo de vida ou outros contextos. A pergunta social deve ser escolhida antes do stand-up. O facilitador deve selecionar a pergunta de forma independente ou a partir das sugest\u00f5es ass\u00edncronas da equipe. Isso minimiza atrasos no in\u00edcio do stand-up. Dica: fazer o papel de facilitador do stand-up rodar a cada sprint permite que o facilitador escolha a pergunta social de forma independente, sem sobrecarregar nenhum membro da equipe.","title":"Pergunta Social do Dia"},{"location":"agile-development/advanced-topics/collaboration/social-question/#propriedades-de-uma-boa-pergunta","text":"Uma boa pergunta tem uma resposta breve com pequena elabora\u00e7\u00e3o opcional. Uma resposta sim ou n\u00e3o n\u00e3o diz muito sobre algu\u00e9m, enquanto saber que sua fruta favorita \u00e9 um durian \u00e9 informativo. Boas perguntas s\u00e3o de baixa consequ\u00eancia, mas permitem controv\u00e9rsia. Ver algu\u00e9m afirmar fortemente que salm\u00e3o e lox em bagel de canela e uva-passa \u00e9 o melhor pedido \u00e9 cativante. Como corol\u00e1rio, uma boa pergunta \u00e9 aquela sobre a qual algu\u00e9m provavelmente \u00e9 apaixonado. Voc\u00ea sabe um pouco mais sobre a personalidade de um membro da equipe se os olhos dele se iluminam ao descrever sua m\u00fasica de karaok\u00ea favorita.","title":"Propriedades de uma Boa Pergunta"},{"location":"agile-development/advanced-topics/collaboration/social-question/#lista-inicial-de-perguntas","text":"Perguntas potencialmente boas incluem: Qual \u00e9 o seu pedido no Starbucks? Qual \u00e9 o seu sistema operacional favorito? Qual \u00e9 a sua vers\u00e3o favorita do Windows? Qual \u00e9 a sua planta favorita, de casa ou de outro tipo? Qual \u00e9 a sua fruta favorita? Qual \u00e9 o seu fast-food favorito? Qual \u00e9 o seu macarr\u00e3o favorito? Qual \u00e9 o seu editor de texto favorito? Montanhas ou praia? DC ou Marvel? Caf\u00e9 com uma pessoa da hist\u00f3ria: quem? Qual foi a sua compra online mais tola? Qual \u00e9 a sua carreira alternativa? Qual \u00e9 o melhor recheio para bagel? Qual \u00e9 o seu prazer culposo na TV? Qual \u00e9 a sua m\u00fasica de karaok\u00ea preferida? Voc\u00ea preferiria ver o passado ou o futuro? Voc\u00ea preferiria ser capaz de se teleportar ou voar? Voc\u00ea preferiria viver debaixo d'\u00e1gua ou no espa\u00e7o por um ano? Qual \u00e9 o seu aplicativo de telefone favorito? Qual \u00e9 o seu peixe favorito, para comer ou de outra forma? Qual foi a sua melhor fantasia? Quem \u00e9 algu\u00e9m que voc\u00ea admira (da hist\u00f3ria, da sua vida pessoal, etc.)? D\u00ea um motivo. Qual foi o melhor elogio que voc\u00ea j\u00e1 recebeu? Qual \u00e9 o seu emoji favorito ou mais usado no momento? Qual foi o seu maior projeto de fa\u00e7a voc\u00ea mesmo? Qual \u00e9 o tempero que voc\u00ea usa em tudo? Qual \u00e9 o seu g\u00eanero/artista mais ouvido no Spotify (ou apenas o seu favorito) para este ano? Qual foi o seu primeiro computador? Qual \u00e9 o seu tipo favorito de taco? Qual \u00e9 a sua d\u00e9cada favorita? Qual \u00e9 a melhor forma de comer batatas? Qual foi a sua melhor f\u00e9rias (ficar em casa \u00e9 aceit\u00e1vel)? Desenho animado favorito? Escolha algu\u00e9m da sua fam\u00edlia e nos diga algo incr\u00edvel sobre ele. Qual foi a sua viagem de carro mais longa? O que voc\u00ea se lembra de ter aprendido quando era jovem e que \u00e9 ensinado de forma diferente agora? Qual era o seu brinquedo favorito quando crian\u00e7a?","title":"Lista Inicial de Perguntas"},{"location":"agile-development/advanced-topics/collaboration/teaming-up/","text":"Desenvolvimento da Equipe de Engajamento Em cada envolvimento ISE, as din\u00e2micas s\u00e3o diferentes, assim como as necessidades da equipe. Com base na transfer\u00eancia de aprendizado entre equipes, nosso objetivo \u00e9 construir os ambientes certos de \"c\u00f3digo com\" em cada equipe. Esta documenta\u00e7\u00e3o oferece um modelo de alto n\u00edvel com algumas sugest\u00f5es, visando acelerar a fase de forma\u00e7\u00e3o da equipe para alcan\u00e7ar uma agilidade de alta velocidade, mas n\u00e3o tem a inten\u00e7\u00e3o de fornecer uma lista de itens \"obrigat\u00f3rios\". Identifica\u00e7\u00e3o Como \u00e9 afirmado nas fases de equipe de Tuckman, o desenvolvimento tradicional de equipe tem v\u00e1rias etapas. No entanto, essas fases podem ser extremamente r\u00e1pidas ou \u00e0s vezes incompat\u00edveis em equipes devido a fatores externos, o que se aplica aos envolvimentos ISE. Para minimizar o risco e definir as expectativas de forma correta para todas as partes, uma fase de identifica\u00e7\u00e3o \u00e9 importante para entender uns aos outros. Alguns passos potenciais nesta fase podem ser os seguintes (n\u00e3o limitados): Acordo de Trabalho Identifica\u00e7\u00e3o dos estilos/prefer\u00eancias na comunica\u00e7\u00e3o, compartilhamento, aprendizado e tomada de decis\u00e3o de cada membro da equipe Discuss\u00e3o sobre a necessidade de programa\u00e7\u00e3o em pares Decis\u00f5es sobre gerenciamento e refinamento do backlog, reuni\u00f5es de design semanais, sess\u00f5es de tempo social... etc. M\u00e9todos de comunica\u00e7\u00e3o s\u00edncronos/ass\u00edncronos, hor\u00e1rios de trabalho/flex\u00edveis Decis\u00f5es e identifica\u00e7\u00f5es de gr\u00e1ficos que ser\u00e3o \u00fateis para fornecer informa\u00e7\u00f5es transparentes e verdadeiras para todos Identifica\u00e7\u00e3o das \u00e1reas de \"Artesanato de Software\", o que significa que as ferramentas e m\u00e9todos ser\u00e3o amplamente utilizados durante o envolvimento e tomar as a\u00e7\u00f5es necess\u00e1rias no lado de aprimoramento da equipe, se necess\u00e1rio. GitHub, VSCode LiveShare, AzDevOps, ferramentas e bibliotecas de desenvolvimento necess\u00e1rias... mais. Se o aprimoramento em determinado(s) t\u00f3pico(s) for necess\u00e1rio, identificar as \u00e1reas e organizar picos de c\u00f3digo para aumentar o conhecimento da equipe sobre o(s) t\u00f3pico(s) em quest\u00e3o. Identifica\u00e7\u00e3o de canais de comunica\u00e7\u00e3o, loops de feedback e hor\u00e1rios recorrentes de chamadas da equipe fora das reuni\u00f5es regulares de sprint Introdu\u00e7\u00e3o ao Manifesto da Equipe de Agilidade T\u00e9cnica e planejamento da entrega t\u00e9cnica, visando manter o risco da d\u00edvida t\u00e9cnica m\u00ednimo. Seguindo o Plano e Depura\u00e7\u00e3o \u00c1gil A fase de identifica\u00e7\u00e3o acelera o processo de constru\u00e7\u00e3o de um ambiente seguro para cada indiv\u00edduo na equipe; posteriormente, a equipe tem os ativos necess\u00e1rios para seguir o plano. E \u00e9 responsabilidade da pr\u00f3pria equipe (engenheiros, PO, L\u00edder de Processo) depurar seu n\u00edvel de agilidade. Em cada equipe, a estabiliza\u00e7\u00e3o leva tempo, e a depura\u00e7\u00e3o \u00e1gil proativa \u00e9 o melhor acelerador para diminuir a distra\u00e7\u00e3o longe do objetivo do sprint/envolvimento. A equipe tamb\u00e9m \u00e9 respons\u00e1vel por manter o plano atualizado com base nas mudan\u00e7as/necessidades da equipe e nos resultados da depura\u00e7\u00e3o. Apenas como exemplo, as atividades de depura\u00e7\u00e3o de agilidade podem incluir: Pain\u00e9is relacionados com \"Objetivo\", como queima de trabalho/queima de sa\u00edda, envelhecimento de itens/PR, gr\u00e1fico de humor... etc. s\u00e3o acess\u00edveis \u00e0 equipe e a equipe est\u00e1 sempre atualizada Reuni\u00f5es de Refinamento do Backlog Tamanho das hist\u00f3rias (Muito grande? Muito pequeno?) As \"Hist\u00f3rias de Usu\u00e1rio\" e \"Tarefas\" est\u00e3o claras? Os Crit\u00e9rios de Aceita\u00e7\u00e3o s\u00e3o suficientes e corretos? Todos est\u00e3o prontos para come\u00e7ar ap\u00f3s pegar a Hist\u00f3ria de Usu\u00e1rio/Tarefa? Execu\u00e7\u00e3o de Retrospectivas Eficientes O Objetivo do Sprint est\u00e1 claro em cada itera\u00e7\u00e3o? O processo de estimativa na equipe est\u00e1 melhorando ao longo do tempo ou atende \u00e0 previs\u00e3o de entrega/carga de trabalho? Consulte gentilmente os Valores do Scrum para ter uma melhor compre ens\u00e3o para melhorar o comprometimento da equipe. Seguindo isso, as sugest\u00f5es acima visam remover disfuncionalidades \u00e1geis/equipe e fornecer uma compreens\u00e3o mais ampla da equipe, economia de tempo potencial e total transpar\u00eancia. Recursos Fases de Grupo de Tuckman Valores do Scrum","title":"Desenvolvimento da Equipe de Engajamento"},{"location":"agile-development/advanced-topics/collaboration/teaming-up/#desenvolvimento-da-equipe-de-engajamento","text":"Em cada envolvimento ISE, as din\u00e2micas s\u00e3o diferentes, assim como as necessidades da equipe. Com base na transfer\u00eancia de aprendizado entre equipes, nosso objetivo \u00e9 construir os ambientes certos de \"c\u00f3digo com\" em cada equipe. Esta documenta\u00e7\u00e3o oferece um modelo de alto n\u00edvel com algumas sugest\u00f5es, visando acelerar a fase de forma\u00e7\u00e3o da equipe para alcan\u00e7ar uma agilidade de alta velocidade, mas n\u00e3o tem a inten\u00e7\u00e3o de fornecer uma lista de itens \"obrigat\u00f3rios\".","title":"Desenvolvimento da Equipe de Engajamento"},{"location":"agile-development/advanced-topics/collaboration/teaming-up/#identificacao","text":"Como \u00e9 afirmado nas fases de equipe de Tuckman, o desenvolvimento tradicional de equipe tem v\u00e1rias etapas. No entanto, essas fases podem ser extremamente r\u00e1pidas ou \u00e0s vezes incompat\u00edveis em equipes devido a fatores externos, o que se aplica aos envolvimentos ISE. Para minimizar o risco e definir as expectativas de forma correta para todas as partes, uma fase de identifica\u00e7\u00e3o \u00e9 importante para entender uns aos outros. Alguns passos potenciais nesta fase podem ser os seguintes (n\u00e3o limitados): Acordo de Trabalho Identifica\u00e7\u00e3o dos estilos/prefer\u00eancias na comunica\u00e7\u00e3o, compartilhamento, aprendizado e tomada de decis\u00e3o de cada membro da equipe Discuss\u00e3o sobre a necessidade de programa\u00e7\u00e3o em pares Decis\u00f5es sobre gerenciamento e refinamento do backlog, reuni\u00f5es de design semanais, sess\u00f5es de tempo social... etc. M\u00e9todos de comunica\u00e7\u00e3o s\u00edncronos/ass\u00edncronos, hor\u00e1rios de trabalho/flex\u00edveis Decis\u00f5es e identifica\u00e7\u00f5es de gr\u00e1ficos que ser\u00e3o \u00fateis para fornecer informa\u00e7\u00f5es transparentes e verdadeiras para todos Identifica\u00e7\u00e3o das \u00e1reas de \"Artesanato de Software\", o que significa que as ferramentas e m\u00e9todos ser\u00e3o amplamente utilizados durante o envolvimento e tomar as a\u00e7\u00f5es necess\u00e1rias no lado de aprimoramento da equipe, se necess\u00e1rio. GitHub, VSCode LiveShare, AzDevOps, ferramentas e bibliotecas de desenvolvimento necess\u00e1rias... mais. Se o aprimoramento em determinado(s) t\u00f3pico(s) for necess\u00e1rio, identificar as \u00e1reas e organizar picos de c\u00f3digo para aumentar o conhecimento da equipe sobre o(s) t\u00f3pico(s) em quest\u00e3o. Identifica\u00e7\u00e3o de canais de comunica\u00e7\u00e3o, loops de feedback e hor\u00e1rios recorrentes de chamadas da equipe fora das reuni\u00f5es regulares de sprint Introdu\u00e7\u00e3o ao Manifesto da Equipe de Agilidade T\u00e9cnica e planejamento da entrega t\u00e9cnica, visando manter o risco da d\u00edvida t\u00e9cnica m\u00ednimo.","title":"Identifica\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/teaming-up/#seguindo-o-plano-e-depuracao-agil","text":"A fase de identifica\u00e7\u00e3o acelera o processo de constru\u00e7\u00e3o de um ambiente seguro para cada indiv\u00edduo na equipe; posteriormente, a equipe tem os ativos necess\u00e1rios para seguir o plano. E \u00e9 responsabilidade da pr\u00f3pria equipe (engenheiros, PO, L\u00edder de Processo) depurar seu n\u00edvel de agilidade. Em cada equipe, a estabiliza\u00e7\u00e3o leva tempo, e a depura\u00e7\u00e3o \u00e1gil proativa \u00e9 o melhor acelerador para diminuir a distra\u00e7\u00e3o longe do objetivo do sprint/envolvimento. A equipe tamb\u00e9m \u00e9 respons\u00e1vel por manter o plano atualizado com base nas mudan\u00e7as/necessidades da equipe e nos resultados da depura\u00e7\u00e3o. Apenas como exemplo, as atividades de depura\u00e7\u00e3o de agilidade podem incluir: Pain\u00e9is relacionados com \"Objetivo\", como queima de trabalho/queima de sa\u00edda, envelhecimento de itens/PR, gr\u00e1fico de humor... etc. s\u00e3o acess\u00edveis \u00e0 equipe e a equipe est\u00e1 sempre atualizada Reuni\u00f5es de Refinamento do Backlog Tamanho das hist\u00f3rias (Muito grande? Muito pequeno?) As \"Hist\u00f3rias de Usu\u00e1rio\" e \"Tarefas\" est\u00e3o claras? Os Crit\u00e9rios de Aceita\u00e7\u00e3o s\u00e3o suficientes e corretos? Todos est\u00e3o prontos para come\u00e7ar ap\u00f3s pegar a Hist\u00f3ria de Usu\u00e1rio/Tarefa? Execu\u00e7\u00e3o de Retrospectivas Eficientes O Objetivo do Sprint est\u00e1 claro em cada itera\u00e7\u00e3o? O processo de estimativa na equipe est\u00e1 melhorando ao longo do tempo ou atende \u00e0 previs\u00e3o de entrega/carga de trabalho? Consulte gentilmente os Valores do Scrum para ter uma melhor compre ens\u00e3o para melhorar o comprometimento da equipe. Seguindo isso, as sugest\u00f5es acima visam remover disfuncionalidades \u00e1geis/equipe e fornecer uma compreens\u00e3o mais ampla da equipe, economia de tempo potencial e total transpar\u00eancia.","title":"Seguindo o Plano e Depura\u00e7\u00e3o \u00c1gil"},{"location":"agile-development/advanced-topics/collaboration/teaming-up/#recursos","text":"Fases de Grupo de Tuckman Valores do Scrum","title":"Recursos"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/","text":"Colabora\u00e7\u00e3o Virtual e Programa\u00e7\u00e3o em Par A programa\u00e7\u00e3o em par \u00e9 o m\u00e9todo de trabalho padr\u00e3o que a maioria das grandes organiza\u00e7\u00f5es de engenharia usa para codifica\u00e7\u00e3o \"m\u00e3os no teclado\". Dois desenvolvedores, trabalhando de forma s\u00edncrona, olhando para a mesma tela e tentando codificar e projetar juntos, o que frequentemente resulta em um c\u00f3digo melhor e mais claro do que qualquer um poderia produzir individualmente. A programa\u00e7\u00e3o em par funciona bem nas circunst\u00e2ncias corretas, mas perde parte de seu charme quando executada em um ambiente completamente virtual. O ambiente virtual ainda envolve dois desenvolvedores olhando para a mesma tela e discutindo seus projetos, mas frequentemente h\u00e1 quest\u00f5es log\u00edsticas a serem tratadas, incluindo lat\u00eancia, problemas de configura\u00e7\u00e3o de microfone, considera\u00e7\u00f5es de espa\u00e7o de trabalho e pessoais, e muitos outros pequenos problemas individualmente triviais que pioram a experi\u00eancia. Os padr\u00f5es de trabalho virtual s\u00e3o diferentes dos padr\u00f5es presenciais aos quais estamos acostumados. A programa\u00e7\u00e3o em par, em sua ess\u00eancia, \u00e9 baseada nos seguintes princ\u00edpios: Gerar clareza atrav\u00e9s da comunica\u00e7\u00e3o Produzir maior qualidade atrav\u00e9s da colabora\u00e7\u00e3o Criar propriedade atrav\u00e9s da contribui\u00e7\u00e3o igual A programa\u00e7\u00e3o em par \u00e9 uma forma de alcan\u00e7ar esses resultados. O Teste de Equipe Vermelha (RTT, Red Team Testing) \u00e9 um m\u00e9todo de programa\u00e7\u00e3o alternativo que usa os mesmos princ\u00edpios, mas com algumas das vantagens que os m\u00e9todos de trabalho virtual oferecem. Teste de Equipe Vermelha (Red Team Testing - RTT) O Teste de Equipe Vermelha toma seu nome do paradigma de \"Equipe Vermelha\" e \"Equipe Azul\" de testes de penetra\u00e7\u00e3o e \u00e9 uma forma colaborativa e paralela de trabalhar virtualmente. No RTT, dois desenvolvedores decidem conjuntamente sobre a interface, arquitetura e design do programa, e ent\u00e3o se separam para a fase de implementa\u00e7\u00e3o. Um desenvolvedor escreve testes usando a interface p\u00fablica, tentando realizar testes de casos extremos, valida\u00e7\u00e3o de entrada e outros testes de estresse na interface. O segundo desenvolvedor est\u00e1 simultaneamente escrevendo a implementa\u00e7\u00e3o que eventualmente ser\u00e1 testada. O RTT tem a mesma filosofia que qualquer outro ciclo de vida de Desenvolvimento Orientado a Testes: toda implementa\u00e7\u00e3o \u00e9 separada da interface, e a interface pode ser testada sem conhecimento da implementa\u00e7\u00e3o. Etapas Fase de Design: Ambos os desenvolvedores projetam a interface juntos. Isso inclui: * Assinaturas e nomes de m\u00e9todos * Escrever documenta\u00e7\u00e3o ou docstrings para o que os m\u00e9todos pretendem fazer. * Decis\u00f5es de arquitetura que influenciariam os testes (padr\u00f5es de f\u00e1brica, etc.) Fase de Implementa\u00e7\u00e3o: Os desenvolvedores se separam e paralelizam o trabalho, continuando a se comunicar. * O Desenvolvedor A projetar\u00e1 a implementa\u00e7\u00e3o dos m\u00e9todos, aderindo ao design previamente decidido. * O Desenvolvedor B escrever\u00e1 testes simultaneamente para as mesmas assinaturas de m\u00e9todo, sem conhecer os detalhes da implementa\u00e7\u00e3o. Fase de Integra\u00e7\u00e3o e Teste: Ambos os desenvolvedores fazem o commit de seu c\u00f3digo e executam os testes. * Cen\u00e1rio ut\u00f3pico: Todos os testes s\u00e3o executados e passam corretamente. * Cen\u00e1rio realista: Os testes falharam ou quebraram devido a falhas nos testes. Isso leva a um esclarecimento adicional do design e uma discuss\u00e3o sobre por que os testes falharam. Os desenvolvedores repetir\u00e3o as tr\u00eas fases at\u00e9 que o c\u00f3digo esteja funcional e testado. Quando seguir a estrat\u00e9gia RTT O RTT funciona bem em circunst\u00e2ncias espec\u00edficas. Se a colabora\u00e7\u00e3o precisa acontecer virtualmente, e toda a comunica\u00e7\u00e3o \u00e9 virtual, o RTT reduz a necessidade de comunica\u00e7\u00e3o constante enquanto mant\u00e9m os benef\u00edcios de uma sess\u00e3o de design conjunta. Isso considera o elemento humano: a comunica\u00e7\u00e3o virtual \u00e9 mais exaustiva do que a comunica\u00e7\u00e3o presencial. O RTT tamb\u00e9m funciona bem quando h\u00e1 consenso completo, ou nenhum consenso, sobre qual prop\u00f3sito o c\u00f3digo serve. Como criar o design em conjunto e concordar em implementar e testar contra ele fazem parte do m\u00e9todo RTT, o RTT cria clareza for\u00e7ada atrav\u00e9s da itera\u00e7\u00e3o e comunica\u00e7\u00e3o. Benef\u00edcios O RTT tem muitos dos mesmos benef\u00edcios que a Programa\u00e7\u00e3o em Par e o Desenvolvimento Orientado a Testes, mas tenta atualiz\u00e1-los para um ambiente virtual. A implementa\u00e7\u00e3o e os testes de c\u00f3digo podem ser feitos em paralelo, a grandes dist\u00e2ncias ou em fusos hor\u00e1rios diferentes, o que reduz o tempo total necess\u00e1rio para terminar de escrever o c\u00f3digo. O RTT mant\u00e9m o paradigma de programa\u00e7\u00e3o em par, enquanto reduz a necessidade de comunica\u00e7\u00e3o constante por v\u00eddeo ou entre desenvolvedores. O RTT permite um foco detalhado em design e alinhamento de engenharia antes de implementar qualquer c\u00f3digo, levando a interfaces mais limpas e simples. O RTT incentiva que os testes sejam priorizados ao lado da implementa\u00e7\u00e3o, em vez de seguir ou ser influenciado pela implementa\u00e7\u00e3o do c\u00f3digo. A documenta\u00e7\u00e3o \u00e9 inerentemente uma parte do RTT, j\u00e1 que tanto o implementador quanto o testador precisam de documenta\u00e7\u00e3o correta e atualizada na fase de implementa\u00e7\u00e3o. O que voc\u00ea precisa para o RTT funcionar bem A demanda por comunica\u00e7\u00e3o constante e bom trabalho em equipe pode representar um desafio; atualiza\u00e7\u00f5es di\u00e1rias entre os membros da equipe s\u00e3o essenciais para man","title":"Colabora\u00e7\u00e3o Virtual e Programa\u00e7\u00e3o em Par"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/#colaboracao-virtual-e-programacao-em-par","text":"A programa\u00e7\u00e3o em par \u00e9 o m\u00e9todo de trabalho padr\u00e3o que a maioria das grandes organiza\u00e7\u00f5es de engenharia usa para codifica\u00e7\u00e3o \"m\u00e3os no teclado\". Dois desenvolvedores, trabalhando de forma s\u00edncrona, olhando para a mesma tela e tentando codificar e projetar juntos, o que frequentemente resulta em um c\u00f3digo melhor e mais claro do que qualquer um poderia produzir individualmente. A programa\u00e7\u00e3o em par funciona bem nas circunst\u00e2ncias corretas, mas perde parte de seu charme quando executada em um ambiente completamente virtual. O ambiente virtual ainda envolve dois desenvolvedores olhando para a mesma tela e discutindo seus projetos, mas frequentemente h\u00e1 quest\u00f5es log\u00edsticas a serem tratadas, incluindo lat\u00eancia, problemas de configura\u00e7\u00e3o de microfone, considera\u00e7\u00f5es de espa\u00e7o de trabalho e pessoais, e muitos outros pequenos problemas individualmente triviais que pioram a experi\u00eancia. Os padr\u00f5es de trabalho virtual s\u00e3o diferentes dos padr\u00f5es presenciais aos quais estamos acostumados. A programa\u00e7\u00e3o em par, em sua ess\u00eancia, \u00e9 baseada nos seguintes princ\u00edpios: Gerar clareza atrav\u00e9s da comunica\u00e7\u00e3o Produzir maior qualidade atrav\u00e9s da colabora\u00e7\u00e3o Criar propriedade atrav\u00e9s da contribui\u00e7\u00e3o igual A programa\u00e7\u00e3o em par \u00e9 uma forma de alcan\u00e7ar esses resultados. O Teste de Equipe Vermelha (RTT, Red Team Testing) \u00e9 um m\u00e9todo de programa\u00e7\u00e3o alternativo que usa os mesmos princ\u00edpios, mas com algumas das vantagens que os m\u00e9todos de trabalho virtual oferecem.","title":"Colabora\u00e7\u00e3o Virtual e Programa\u00e7\u00e3o em Par"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/#teste-de-equipe-vermelha-red-team-testing-rtt","text":"O Teste de Equipe Vermelha toma seu nome do paradigma de \"Equipe Vermelha\" e \"Equipe Azul\" de testes de penetra\u00e7\u00e3o e \u00e9 uma forma colaborativa e paralela de trabalhar virtualmente. No RTT, dois desenvolvedores decidem conjuntamente sobre a interface, arquitetura e design do programa, e ent\u00e3o se separam para a fase de implementa\u00e7\u00e3o. Um desenvolvedor escreve testes usando a interface p\u00fablica, tentando realizar testes de casos extremos, valida\u00e7\u00e3o de entrada e outros testes de estresse na interface. O segundo desenvolvedor est\u00e1 simultaneamente escrevendo a implementa\u00e7\u00e3o que eventualmente ser\u00e1 testada. O RTT tem a mesma filosofia que qualquer outro ciclo de vida de Desenvolvimento Orientado a Testes: toda implementa\u00e7\u00e3o \u00e9 separada da interface, e a interface pode ser testada sem conhecimento da implementa\u00e7\u00e3o.","title":"Teste de Equipe Vermelha (Red Team Testing - RTT)"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/#etapas","text":"Fase de Design: Ambos os desenvolvedores projetam a interface juntos. Isso inclui: * Assinaturas e nomes de m\u00e9todos * Escrever documenta\u00e7\u00e3o ou docstrings para o que os m\u00e9todos pretendem fazer. * Decis\u00f5es de arquitetura que influenciariam os testes (padr\u00f5es de f\u00e1brica, etc.) Fase de Implementa\u00e7\u00e3o: Os desenvolvedores se separam e paralelizam o trabalho, continuando a se comunicar. * O Desenvolvedor A projetar\u00e1 a implementa\u00e7\u00e3o dos m\u00e9todos, aderindo ao design previamente decidido. * O Desenvolvedor B escrever\u00e1 testes simultaneamente para as mesmas assinaturas de m\u00e9todo, sem conhecer os detalhes da implementa\u00e7\u00e3o. Fase de Integra\u00e7\u00e3o e Teste: Ambos os desenvolvedores fazem o commit de seu c\u00f3digo e executam os testes. * Cen\u00e1rio ut\u00f3pico: Todos os testes s\u00e3o executados e passam corretamente. * Cen\u00e1rio realista: Os testes falharam ou quebraram devido a falhas nos testes. Isso leva a um esclarecimento adicional do design e uma discuss\u00e3o sobre por que os testes falharam. Os desenvolvedores repetir\u00e3o as tr\u00eas fases at\u00e9 que o c\u00f3digo esteja funcional e testado.","title":"Etapas"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/#quando-seguir-a-estrategia-rtt","text":"O RTT funciona bem em circunst\u00e2ncias espec\u00edficas. Se a colabora\u00e7\u00e3o precisa acontecer virtualmente, e toda a comunica\u00e7\u00e3o \u00e9 virtual, o RTT reduz a necessidade de comunica\u00e7\u00e3o constante enquanto mant\u00e9m os benef\u00edcios de uma sess\u00e3o de design conjunta. Isso considera o elemento humano: a comunica\u00e7\u00e3o virtual \u00e9 mais exaustiva do que a comunica\u00e7\u00e3o presencial. O RTT tamb\u00e9m funciona bem quando h\u00e1 consenso completo, ou nenhum consenso, sobre qual prop\u00f3sito o c\u00f3digo serve. Como criar o design em conjunto e concordar em implementar e testar contra ele fazem parte do m\u00e9todo RTT, o RTT cria clareza for\u00e7ada atrav\u00e9s da itera\u00e7\u00e3o e comunica\u00e7\u00e3o.","title":"Quando seguir a estrat\u00e9gia RTT"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/#beneficios","text":"O RTT tem muitos dos mesmos benef\u00edcios que a Programa\u00e7\u00e3o em Par e o Desenvolvimento Orientado a Testes, mas tenta atualiz\u00e1-los para um ambiente virtual. A implementa\u00e7\u00e3o e os testes de c\u00f3digo podem ser feitos em paralelo, a grandes dist\u00e2ncias ou em fusos hor\u00e1rios diferentes, o que reduz o tempo total necess\u00e1rio para terminar de escrever o c\u00f3digo. O RTT mant\u00e9m o paradigma de programa\u00e7\u00e3o em par, enquanto reduz a necessidade de comunica\u00e7\u00e3o constante por v\u00eddeo ou entre desenvolvedores. O RTT permite um foco detalhado em design e alinhamento de engenharia antes de implementar qualquer c\u00f3digo, levando a interfaces mais limpas e simples. O RTT incentiva que os testes sejam priorizados ao lado da implementa\u00e7\u00e3o, em vez de seguir ou ser influenciado pela implementa\u00e7\u00e3o do c\u00f3digo. A documenta\u00e7\u00e3o \u00e9 inerentemente uma parte do RTT, j\u00e1 que tanto o implementador quanto o testador precisam de documenta\u00e7\u00e3o correta e atualizada na fase de implementa\u00e7\u00e3o.","title":"Benef\u00edcios"},{"location":"agile-development/advanced-topics/collaboration/virtual-collaboration/#o-que-voce-precisa-para-o-rtt-funcionar-bem","text":"A demanda por comunica\u00e7\u00e3o constante e bom trabalho em equipe pode representar um desafio; atualiza\u00e7\u00f5es di\u00e1rias entre os membros da equipe s\u00e3o essenciais para man","title":"O que voc\u00ea precisa para o RTT funcionar bem"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/","text":"Por que Colabora\u00e7\u00e3o Por que a colabora\u00e7\u00e3o \u00e9 importante Em engajamentos, visamos ser altamente colaborativos porque, quando codificamos juntos, temos um melhor desempenho, uma maior velocidade de sprint e um maior grau de compartilhamento de conhecimento entre a equipe. Existem dois padr\u00f5es comuns que usamos para colabora\u00e7\u00e3o: Programa\u00e7\u00e3o em Par e Enxameamento. Programa\u00e7\u00e3o em Par (\"pairing\") - dois engenheiros de software atribu\u00eddos a, e trabalhando em, uma \u00fanica hist\u00f3ria compartilhada de cada vez durante o sprint. O L\u00edder de Desenvolvimento atribui uma hist\u00f3ria de usu\u00e1rio a dois engenheiros - um engenheiro principal (dono da hist\u00f3ria) e um engenheiro secund\u00e1rio (par atribu\u00eddo). Programa\u00e7\u00e3o em Enxame (\"swarming\") - tr\u00eas ou mais engenheiros de software colaborando em um item de alta prioridade para lev\u00e1-lo \u00e0 conclus\u00e3o. Como programar em par Como mencionado, cada hist\u00f3ria \u00e9 intencionalmente atribu\u00edda a um par. O par atribu\u00eddo pode estar no processo de aprimoramento de habilidades, no entanto, eles s\u00e3o parceiros iguais no esfor\u00e7o de desenvolvimento. A seguir est\u00e3o algumas diretrizes gerais para programa\u00e7\u00e3o em par: Ap\u00f3s a atribui\u00e7\u00e3o da hist\u00f3ria/item do backlog do produto (PBI), o par precisa ser deliberado sobre como definir o trabalho a ser conclu\u00eddo. Essa informa\u00e7\u00e3o deve ser expressa claramente na descri\u00e7\u00e3o da hist\u00f3ria e nos crit\u00e9rios de aceita\u00e7\u00e3o. As expectativas sobre isso precisam ser comunicadas e acordadas por ambos os engenheiros e devem ser feitas antes de qualquer sess\u00e3o de trabalho real. O dono da hist\u00f3ria e o par atribu\u00eddo n\u00e3o dividem simplesmente o trabalho e sincronizam regularmente - eles trabalham ativamente juntos nas mesmas tarefas e podem compartilhar suas telas por meio de uma sess\u00e3o online do Teams. Ferramentas colaborativas como VS Live Share podem ser prefer\u00edveis ao compartilhamento de telas. Nem toda colabora\u00e7\u00e3o precisa ser baseada em compartilhamento de tela. Durante as sess\u00f5es colaborativas, um engenheiro fornece o ambiente de desenvolvimento enquanto o outro visualiza ativamente e comenta verbalmente. Os engenheiros trocam de lugar frequentemente de uma sess\u00e3o para a pr\u00f3xima, para que todos tenham tempo no controle do teclado. Os engenheiros utilizam branches de recursos para a colabora\u00e7\u00e3o durante o desenvolvimento de cada hist\u00f3ria, para ter pequenos Pull Requests (PRs) (em oposi\u00e7\u00e3o a um \u00fanico PR gigante) no final do sprint. O c\u00f3digo \u00e9 enviado ao reposit\u00f3rio por ambos os membros do par atribu\u00eddo onde e quando faz sentido, \u00e0 medida que as tarefas foram conclu\u00eddas. O par atribu\u00eddo \u00e9 a voz que representa o par durante o standup di\u00e1rio, enquanto \u00e9 apoiado pelo dono da hist\u00f3ria. Ter os nomes de ambos os indiv\u00edduos (dono e par atribu\u00eddo) vis\u00edveis no PBI pode ser \u00fatil durante as cerim\u00f4nias de sprint e levar a uma maior responsabilidade por parte do par atribu\u00eddo. Um exemplo disso usando cart\u00f5es do Azure DevOps pode ser encontrado aqui . Por que a programa\u00e7\u00e3o em par ajuda na colabora\u00e7\u00e3o A programa\u00e7\u00e3o em par ajuda na colabora\u00e7\u00e3o porque ambos os engenheiros compartilham igual responsabilidade por levar a hist\u00f3ria \u00e0 conclus\u00e3o. Este \u00e9 um exerc\u00edcio mutuamente ben\u00e9fico porque, enquanto o dono da hist\u00f3ria geralmente tem mais experi\u00eancia para se apoiar, o par atribu\u00eddo traz uma vis\u00e3o fresca que n\u00e3o \u00e9 nublada pela repeti\u00e7\u00e3o. Alguns outros benef\u00edcios incluem: Menos defeitos e maior responsabilidade. Ter dois conjuntos de olhos permite que os engenheiros tenham mais oportunidades de detectar erros e de lembrar tarefas frequentemente esquecidas, como escrever testes unit\u00e1rios e de integra\u00e7\u00e3o. A programa\u00e7\u00e3o em par permite que engenheiros com diferentes experi\u00eancias e conhecimentos aprendam um com o outro, colaborando e recebendo feedback em tempo real. Em vez de ter um engenheiro trabalhando sozinho em uma tarefa por longas horas e atingindo um ponto de isolamento, a programa\u00e7\u00e3o em par permite que o par se atualize mutuamente. Mesmo algo t\u00e3o simples quanto descrever o problema em voz alta pode ajudar a descobrir problemas ou bugs no c\u00f3digo. A programa\u00e7\u00e3o em par pode ajudar no brainstorming, bem como na valida\u00e7\u00e3o de detalhes, como tornar os nomes de vari\u00e1veis consistentes. Quando programar em enxame \u00c9 importante saber que nem todo PBI precisa usar enxameamento. Alguns sprints podem nem mesmo justificar o enxameamento. Programar em enxame quando: O trabalho \u00e9 complexo o suficiente para ter mentes coletivas colaborando (n\u00e3o porque a quantidade de trabalho \u00e9 mais do que o que seria conclu\u00eddo em um sprint). A tarefa em que o enxame trabalha se tornou (ou est\u00e1 em perigo iminente de se tornar) um bloqueador para outras hist\u00f3rias. Um desconhecido \u00e9 descoberto que precisa de um esfor\u00e7o colaborativo para formar uma decis\u00e3o sobre como seguir em frente. O conhecimento e a experi\u00eancia coletivos ajudam a mover a hist\u00f3ria mais rapidamente e, em \u00faltima an\u00e1lise, produzem um c\u00f3digo de melhor qualidade. - Um conflito ou diferen\u00e7a de opini\u00e3o n\u00e3o resolvida surge durante uma sess\u00e3o de programa\u00e7\u00e3o em par. Promova o trabalho para se tornar uma sess\u00e3o de enxameamento para ajudar a resolver o conflito. Como programar em enxame Assim que o par descobre que o PBI vai justificar o enxameamento, o par o traz para o resto da equipe (via estacionamento durante o stand-up ou de forma ass\u00edncrona). Os membros da equipe concordam ou se voluntariam para ajudar. O dono da hist\u00f3ria (ou par atribu\u00eddo) envia um convite de chamada do Teams para as partes interessadas. Isso permite que o enxame tenha um tempo de foco dedicado, bloqueando o tempo nos calend\u00e1rios. Durante uma sess\u00e3o de enxameamento, um engenheiro pode se ramificar se houver algo que precise ser tratado enquanto o enxame aborda o problema principal, depois se reconecta e relata. Isso permite que o enxame se concentre em um aspecto central e esteja todos na mesma p\u00e1gina. A chamada do Teams \u00e9 repetida at\u00e9 que uma resolu\u00e7\u00e3o seja encontrada ou um caminho alternativo para seguir em frente seja formulado. Por que a programa\u00e7\u00e3o em enxame ajuda na colabora\u00e7\u00e3o O enxameamento permite que o conhecimento e a expertise coletivos da equipe se unam de forma focada e unificada. N\u00e3o s\u00f3 o enxameamento ajuda a fechar o item mais rapidamente, mas tamb\u00e9m ajuda a equipe a entender os pontos fortes e fracos uns dos outros. Permite que a equipe construa um maior n\u00edvel de confian\u00e7a e trabalhe como uma unidade coesa. Quando decidir enxamear, programar em par e/ou dividir Embora muito tempo possa ser gasto na programa\u00e7\u00e3o em par, faz sentido dividir o trabalho quando as pessoas entendem como o trabalho ser\u00e1 realizado, e o trabalho a ser feito \u00e9 em grande parte prescritivo. Uma vez que a hist\u00f3ria foi conjuntamente distribu\u00edda por ambos os engenheiros, os engenheiros podem optar por abordar algumas tarefas separadamente e depois combinar o trabalho no final. A programa\u00e7\u00e3o em par \u00e9 mais \u00fatil quando os engenheiros n\u00e3o t\u00eam clareza perfeita sobre o que precisa ser feito ou como pode ser feito. O enxameamento \u00e9 feito quando os dois engenheiros atribu\u00eddos \u00e0 hist\u00f3ria precisam de uma placa de som adicional ou precisam de expertise que outros membros da equipe poderiam fornecer. Benef\u00edcios do aumento da colabora\u00e7\u00e3o O compartilhamento de conhecimento e a uni\u00e3o de engenheiros de ISE e clientes de uma forma \"code-with\" \u00e9 um aspecto importante dos engajamentos de ISE. Isso aumenta tanto a capacidade de nossos clientes quanto de nossa equipe de ISE para construir no Azure. Somos respons\u00e1veis por demonstrar fundamentos de engenharia e deixar o cliente em um lugar melhor depois que nos desengajamos. Isso s\u00f3 pode acontecer se colaborarmos e nos envolvermos juntos como equipe. Al\u00e9m de melhorar a qualidade do software, isso tamb\u00e9m adiciona um aspecto social ben\u00e9fico aos engajamentos. Recursos Como adicionar um campo personalizado de programa\u00e7\u00e3o em par nas Hist\u00f3rias de Usu\u00e1rio do Azure DevOps - adicionando um campo personalizado do tipo Identity no Azure DevOps para programa\u00e7\u00e3o em par Sobre Programa\u00e7\u00e3o em Par - Martin Fowler Li\u00e7\u00f5es pr\u00e1ticas de Programa\u00e7\u00e3o em Par - essas podem ser usadas (e adaptadas) para apoiar a introdu\u00e7\u00e3o da programa\u00e7\u00e3o em par em sua equipe (interna da MS ou incluindo clientes) Programa\u00e7\u00e3o em Par sem Esfor\u00e7o com GitHub Codespaces e VSCode","title":"Por que Colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#por-que-colaboracao","text":"","title":"Por que Colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#por-que-a-colaboracao-e-importante","text":"Em engajamentos, visamos ser altamente colaborativos porque, quando codificamos juntos, temos um melhor desempenho, uma maior velocidade de sprint e um maior grau de compartilhamento de conhecimento entre a equipe. Existem dois padr\u00f5es comuns que usamos para colabora\u00e7\u00e3o: Programa\u00e7\u00e3o em Par e Enxameamento. Programa\u00e7\u00e3o em Par (\"pairing\") - dois engenheiros de software atribu\u00eddos a, e trabalhando em, uma \u00fanica hist\u00f3ria compartilhada de cada vez durante o sprint. O L\u00edder de Desenvolvimento atribui uma hist\u00f3ria de usu\u00e1rio a dois engenheiros - um engenheiro principal (dono da hist\u00f3ria) e um engenheiro secund\u00e1rio (par atribu\u00eddo). Programa\u00e7\u00e3o em Enxame (\"swarming\") - tr\u00eas ou mais engenheiros de software colaborando em um item de alta prioridade para lev\u00e1-lo \u00e0 conclus\u00e3o.","title":"Por que a colabora\u00e7\u00e3o \u00e9 importante"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#como-programar-em-par","text":"Como mencionado, cada hist\u00f3ria \u00e9 intencionalmente atribu\u00edda a um par. O par atribu\u00eddo pode estar no processo de aprimoramento de habilidades, no entanto, eles s\u00e3o parceiros iguais no esfor\u00e7o de desenvolvimento. A seguir est\u00e3o algumas diretrizes gerais para programa\u00e7\u00e3o em par: Ap\u00f3s a atribui\u00e7\u00e3o da hist\u00f3ria/item do backlog do produto (PBI), o par precisa ser deliberado sobre como definir o trabalho a ser conclu\u00eddo. Essa informa\u00e7\u00e3o deve ser expressa claramente na descri\u00e7\u00e3o da hist\u00f3ria e nos crit\u00e9rios de aceita\u00e7\u00e3o. As expectativas sobre isso precisam ser comunicadas e acordadas por ambos os engenheiros e devem ser feitas antes de qualquer sess\u00e3o de trabalho real. O dono da hist\u00f3ria e o par atribu\u00eddo n\u00e3o dividem simplesmente o trabalho e sincronizam regularmente - eles trabalham ativamente juntos nas mesmas tarefas e podem compartilhar suas telas por meio de uma sess\u00e3o online do Teams. Ferramentas colaborativas como VS Live Share podem ser prefer\u00edveis ao compartilhamento de telas. Nem toda colabora\u00e7\u00e3o precisa ser baseada em compartilhamento de tela. Durante as sess\u00f5es colaborativas, um engenheiro fornece o ambiente de desenvolvimento enquanto o outro visualiza ativamente e comenta verbalmente. Os engenheiros trocam de lugar frequentemente de uma sess\u00e3o para a pr\u00f3xima, para que todos tenham tempo no controle do teclado. Os engenheiros utilizam branches de recursos para a colabora\u00e7\u00e3o durante o desenvolvimento de cada hist\u00f3ria, para ter pequenos Pull Requests (PRs) (em oposi\u00e7\u00e3o a um \u00fanico PR gigante) no final do sprint. O c\u00f3digo \u00e9 enviado ao reposit\u00f3rio por ambos os membros do par atribu\u00eddo onde e quando faz sentido, \u00e0 medida que as tarefas foram conclu\u00eddas. O par atribu\u00eddo \u00e9 a voz que representa o par durante o standup di\u00e1rio, enquanto \u00e9 apoiado pelo dono da hist\u00f3ria. Ter os nomes de ambos os indiv\u00edduos (dono e par atribu\u00eddo) vis\u00edveis no PBI pode ser \u00fatil durante as cerim\u00f4nias de sprint e levar a uma maior responsabilidade por parte do par atribu\u00eddo. Um exemplo disso usando cart\u00f5es do Azure DevOps pode ser encontrado aqui .","title":"Como programar em par"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#por-que-a-programacao-em-par-ajuda-na-colaboracao","text":"A programa\u00e7\u00e3o em par ajuda na colabora\u00e7\u00e3o porque ambos os engenheiros compartilham igual responsabilidade por levar a hist\u00f3ria \u00e0 conclus\u00e3o. Este \u00e9 um exerc\u00edcio mutuamente ben\u00e9fico porque, enquanto o dono da hist\u00f3ria geralmente tem mais experi\u00eancia para se apoiar, o par atribu\u00eddo traz uma vis\u00e3o fresca que n\u00e3o \u00e9 nublada pela repeti\u00e7\u00e3o. Alguns outros benef\u00edcios incluem: Menos defeitos e maior responsabilidade. Ter dois conjuntos de olhos permite que os engenheiros tenham mais oportunidades de detectar erros e de lembrar tarefas frequentemente esquecidas, como escrever testes unit\u00e1rios e de integra\u00e7\u00e3o. A programa\u00e7\u00e3o em par permite que engenheiros com diferentes experi\u00eancias e conhecimentos aprendam um com o outro, colaborando e recebendo feedback em tempo real. Em vez de ter um engenheiro trabalhando sozinho em uma tarefa por longas horas e atingindo um ponto de isolamento, a programa\u00e7\u00e3o em par permite que o par se atualize mutuamente. Mesmo algo t\u00e3o simples quanto descrever o problema em voz alta pode ajudar a descobrir problemas ou bugs no c\u00f3digo. A programa\u00e7\u00e3o em par pode ajudar no brainstorming, bem como na valida\u00e7\u00e3o de detalhes, como tornar os nomes de vari\u00e1veis consistentes.","title":"Por que a programa\u00e7\u00e3o em par ajuda na colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#quando-programar-em-enxame","text":"\u00c9 importante saber que nem todo PBI precisa usar enxameamento. Alguns sprints podem nem mesmo justificar o enxameamento. Programar em enxame quando: O trabalho \u00e9 complexo o suficiente para ter mentes coletivas colaborando (n\u00e3o porque a quantidade de trabalho \u00e9 mais do que o que seria conclu\u00eddo em um sprint). A tarefa em que o enxame trabalha se tornou (ou est\u00e1 em perigo iminente de se tornar) um bloqueador para outras hist\u00f3rias. Um desconhecido \u00e9 descoberto que precisa de um esfor\u00e7o colaborativo para formar uma decis\u00e3o sobre como seguir em frente. O conhecimento e a experi\u00eancia coletivos ajudam a mover a hist\u00f3ria mais rapidamente e, em \u00faltima an\u00e1lise, produzem um c\u00f3digo de melhor qualidade. - Um conflito ou diferen\u00e7a de opini\u00e3o n\u00e3o resolvida surge durante uma sess\u00e3o de programa\u00e7\u00e3o em par. Promova o trabalho para se tornar uma sess\u00e3o de enxameamento para ajudar a resolver o conflito.","title":"Quando programar em enxame"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#como-programar-em-enxame","text":"Assim que o par descobre que o PBI vai justificar o enxameamento, o par o traz para o resto da equipe (via estacionamento durante o stand-up ou de forma ass\u00edncrona). Os membros da equipe concordam ou se voluntariam para ajudar. O dono da hist\u00f3ria (ou par atribu\u00eddo) envia um convite de chamada do Teams para as partes interessadas. Isso permite que o enxame tenha um tempo de foco dedicado, bloqueando o tempo nos calend\u00e1rios. Durante uma sess\u00e3o de enxameamento, um engenheiro pode se ramificar se houver algo que precise ser tratado enquanto o enxame aborda o problema principal, depois se reconecta e relata. Isso permite que o enxame se concentre em um aspecto central e esteja todos na mesma p\u00e1gina. A chamada do Teams \u00e9 repetida at\u00e9 que uma resolu\u00e7\u00e3o seja encontrada ou um caminho alternativo para seguir em frente seja formulado.","title":"Como programar em enxame"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#por-que-a-programacao-em-enxame-ajuda-na-colaboracao","text":"O enxameamento permite que o conhecimento e a expertise coletivos da equipe se unam de forma focada e unificada. N\u00e3o s\u00f3 o enxameamento ajuda a fechar o item mais rapidamente, mas tamb\u00e9m ajuda a equipe a entender os pontos fortes e fracos uns dos outros. Permite que a equipe construa um maior n\u00edvel de confian\u00e7a e trabalhe como uma unidade coesa.","title":"Por que a programa\u00e7\u00e3o em enxame ajuda na colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#quando-decidir-enxamear-programar-em-par-eou-dividir","text":"Embora muito tempo possa ser gasto na programa\u00e7\u00e3o em par, faz sentido dividir o trabalho quando as pessoas entendem como o trabalho ser\u00e1 realizado, e o trabalho a ser feito \u00e9 em grande parte prescritivo. Uma vez que a hist\u00f3ria foi conjuntamente distribu\u00edda por ambos os engenheiros, os engenheiros podem optar por abordar algumas tarefas separadamente e depois combinar o trabalho no final. A programa\u00e7\u00e3o em par \u00e9 mais \u00fatil quando os engenheiros n\u00e3o t\u00eam clareza perfeita sobre o que precisa ser feito ou como pode ser feito. O enxameamento \u00e9 feito quando os dois engenheiros atribu\u00eddos \u00e0 hist\u00f3ria precisam de uma placa de som adicional ou precisam de expertise que outros membros da equipe poderiam fornecer.","title":"Quando decidir enxamear, programar em par e/ou dividir"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#beneficios-do-aumento-da-colaboracao","text":"O compartilhamento de conhecimento e a uni\u00e3o de engenheiros de ISE e clientes de uma forma \"code-with\" \u00e9 um aspecto importante dos engajamentos de ISE. Isso aumenta tanto a capacidade de nossos clientes quanto de nossa equipe de ISE para construir no Azure. Somos respons\u00e1veis por demonstrar fundamentos de engenharia e deixar o cliente em um lugar melhor depois que nos desengajamos. Isso s\u00f3 pode acontecer se colaborarmos e nos envolvermos juntos como equipe. Al\u00e9m de melhorar a qualidade do software, isso tamb\u00e9m adiciona um aspecto social ben\u00e9fico aos engajamentos.","title":"Benef\u00edcios do aumento da colabora\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/collaboration/why-collaboration/#recursos","text":"Como adicionar um campo personalizado de programa\u00e7\u00e3o em par nas Hist\u00f3rias de Usu\u00e1rio do Azure DevOps - adicionando um campo personalizado do tipo Identity no Azure DevOps para programa\u00e7\u00e3o em par Sobre Programa\u00e7\u00e3o em Par - Martin Fowler Li\u00e7\u00f5es pr\u00e1ticas de Programa\u00e7\u00e3o em Par - essas podem ser usadas (e adaptadas) para apoiar a introdu\u00e7\u00e3o da programa\u00e7\u00e3o em par em sua equipe (interna da MS ou incluindo clientes) Programa\u00e7\u00e3o em Par sem Esfor\u00e7o com GitHub Codespaces e VSCode","title":"Recursos"},{"location":"agile-development/advanced-topics/effective-organization/","text":"Recomenda\u00e7\u00f5es Avan\u00e7adas para uma Organiza\u00e7\u00e3o Mais Eficiente Plano de Entrega/Lan\u00e7amento Scrum de Scrums","title":"Recomenda\u00e7\u00f5es Avan\u00e7adas para uma Organiza\u00e7\u00e3o Mais Eficiente"},{"location":"agile-development/advanced-topics/effective-organization/#recomendacoes-avancadas-para-uma-organizacao-mais-eficiente","text":"Plano de Entrega/Lan\u00e7amento Scrum de Scrums","title":"Recomenda\u00e7\u00f5es Avan\u00e7adas para uma Organiza\u00e7\u00e3o Mais Eficiente"},{"location":"agile-development/advanced-topics/effective-organization/delivery-plan/","text":"Plano de Entrega Objetivos Embora o Scrum n\u00e3o exija e desencoraje o planejamento de mais de um sprint por vez, a maioria de n\u00f3s trabalha em empresas onde somos dependentes de equipes externas (por exemplo: marketing, vendas, suporte). Uma avalia\u00e7\u00e3o aproximada do escopo do projeto planejado \u00e9 alcan\u00e7\u00e1vel dentro de um prazo e recursos razo\u00e1veis. O objetivo \u00e9 ter um plano e uma estimativa aproximados como ponto de partida, e n\u00e3o implementar o \"Agilefall\". Note que este \u00e9 apenas um ponto de partida para permitir discuss\u00f5es de planejamento. Esperamos que o cronograma real evolua e mude ao longo do tempo e que voc\u00ea atualize o escopo e o cronograma \u00e0 medida que avan\u00e7a. Os Planos de Entrega garantem que suas equipes estejam alinhadas com os objetivos organizacionais. Benef\u00edcios Ao concluir a avalia\u00e7\u00e3o, voc\u00ea pode questionar o escopo, o prazo ou pedir mais recursos. \u00c0 medida que avan\u00e7a na entrega do seu projeto/produto, voc\u00ea pode destacar riscos para o escopo, prazo e recursos. Abordagem Uma abordagem que voc\u00ea pode adotar \u00e9 com post-its e uma planilha. Etapa 1: Classifique as funcionalidades por ordem de import\u00e2ncia para tudo em seu backlog Funcionalidades Funcionais Funcionalidades N\u00e3o-funcionais Pesquisa e Design de Usu\u00e1rio Testes Documenta\u00e7\u00e3o Transfer\u00eancia de Conhecimento/Processos de Suporte Etapa 2: Classifique as funcionalidades em termos de semanas de trabalho por pessoa. Em alguns cen\u00e1rios, voc\u00ea n\u00e3o tem ideia de qu\u00e3o complexo \u00e9 o trabalho. Nessa situa\u00e7\u00e3o, voc\u00ea pode pedir tempo para realizar um spike (limitar o esfor\u00e7o para que voc\u00ea possa voltar a tempo). Etapa 3: Calcule a capacidade da equipe com base no n\u00famero de semanas por pessoa com sua data de in\u00edcio e t\u00e9rmino e menos feriados, f\u00e9rias, confer\u00eancias, treinamentos e dias de integra\u00e7\u00e3o. Al\u00e9m disso, subtraia o tempo se a pessoa tamb\u00e9m estiver trabalhando em defeitos e suporte. Etapa 4: Com base em sua capacidade, voc\u00ea agora tem as op\u00e7\u00f5es Pedir mais recursos. Aten\u00e7\u00e3o: integrar novos recursos leva tempo. Reduzir o escopo para o MVP mais b\u00e1sico. Aten\u00e7\u00e3o: ao reduzir mais o escopo, ele pode n\u00e3o ser mais valioso para o cliente. Considere um cupcake que \u00e9 tudo o que voc\u00ea precisa. Voc\u00ea n\u00e3o quer retirar a cobertura. Pedir mais tempo. Geralmente, isso \u00e9 o mais flex\u00edvel, mas se houver uma data de marketing que voc\u00ea precisa cumprir, isso pode n\u00e3o ser t\u00e3o flex\u00edvel. Ferramentas Voc\u00ea tamb\u00e9m pode aproveitar uma dessas ferramentas criando seus \u00e9picos e funcionalidades e adicionando as estimativas de semanas. O recurso Planos (Pr\u00e9-visualiza\u00e7\u00e3o) no Azure DevOps ajudar\u00e1 voc\u00ea a fazer um plano. Os Planos de Entrega fornecem um cronograma de hist\u00f3rias ou funcionalidades que sua equipe planeja entregar. Os Planos de Entrega mostram os itens de trabalho agendados por um sprint (caminho de itera\u00e7\u00e3o) de equipes selecionadas contra uma vis\u00e3o de calend\u00e1rio. Confluence JIRA, Trello, Rally, Asana, Basecamp e GitHub Issues s\u00e3o outras ferramentas semelhantes no mercado (algumas s\u00e3o gratuitas, outras voc\u00ea paga uma taxa mensal, ou voc\u00ea pode instalar no local) que voc\u00ea pode aproveitar.","title":"Plano de Entrega"},{"location":"agile-development/advanced-topics/effective-organization/delivery-plan/#plano-de-entrega","text":"","title":"Plano de Entrega"},{"location":"agile-development/advanced-topics/effective-organization/delivery-plan/#objetivos","text":"Embora o Scrum n\u00e3o exija e desencoraje o planejamento de mais de um sprint por vez, a maioria de n\u00f3s trabalha em empresas onde somos dependentes de equipes externas (por exemplo: marketing, vendas, suporte). Uma avalia\u00e7\u00e3o aproximada do escopo do projeto planejado \u00e9 alcan\u00e7\u00e1vel dentro de um prazo e recursos razo\u00e1veis. O objetivo \u00e9 ter um plano e uma estimativa aproximados como ponto de partida, e n\u00e3o implementar o \"Agilefall\". Note que este \u00e9 apenas um ponto de partida para permitir discuss\u00f5es de planejamento. Esperamos que o cronograma real evolua e mude ao longo do tempo e que voc\u00ea atualize o escopo e o cronograma \u00e0 medida que avan\u00e7a. Os Planos de Entrega garantem que suas equipes estejam alinhadas com os objetivos organizacionais.","title":"Objetivos"},{"location":"agile-development/advanced-topics/effective-organization/delivery-plan/#beneficios","text":"Ao concluir a avalia\u00e7\u00e3o, voc\u00ea pode questionar o escopo, o prazo ou pedir mais recursos. \u00c0 medida que avan\u00e7a na entrega do seu projeto/produto, voc\u00ea pode destacar riscos para o escopo, prazo e recursos.","title":"Benef\u00edcios"},{"location":"agile-development/advanced-topics/effective-organization/delivery-plan/#abordagem","text":"Uma abordagem que voc\u00ea pode adotar \u00e9 com post-its e uma planilha. Etapa 1: Classifique as funcionalidades por ordem de import\u00e2ncia para tudo em seu backlog Funcionalidades Funcionais Funcionalidades N\u00e3o-funcionais Pesquisa e Design de Usu\u00e1rio Testes Documenta\u00e7\u00e3o Transfer\u00eancia de Conhecimento/Processos de Suporte Etapa 2: Classifique as funcionalidades em termos de semanas de trabalho por pessoa. Em alguns cen\u00e1rios, voc\u00ea n\u00e3o tem ideia de qu\u00e3o complexo \u00e9 o trabalho. Nessa situa\u00e7\u00e3o, voc\u00ea pode pedir tempo para realizar um spike (limitar o esfor\u00e7o para que voc\u00ea possa voltar a tempo). Etapa 3: Calcule a capacidade da equipe com base no n\u00famero de semanas por pessoa com sua data de in\u00edcio e t\u00e9rmino e menos feriados, f\u00e9rias, confer\u00eancias, treinamentos e dias de integra\u00e7\u00e3o. Al\u00e9m disso, subtraia o tempo se a pessoa tamb\u00e9m estiver trabalhando em defeitos e suporte. Etapa 4: Com base em sua capacidade, voc\u00ea agora tem as op\u00e7\u00f5es Pedir mais recursos. Aten\u00e7\u00e3o: integrar novos recursos leva tempo. Reduzir o escopo para o MVP mais b\u00e1sico. Aten\u00e7\u00e3o: ao reduzir mais o escopo, ele pode n\u00e3o ser mais valioso para o cliente. Considere um cupcake que \u00e9 tudo o que voc\u00ea precisa. Voc\u00ea n\u00e3o quer retirar a cobertura. Pedir mais tempo. Geralmente, isso \u00e9 o mais flex\u00edvel, mas se houver uma data de marketing que voc\u00ea precisa cumprir, isso pode n\u00e3o ser t\u00e3o flex\u00edvel.","title":"Abordagem"},{"location":"agile-development/advanced-topics/effective-organization/delivery-plan/#ferramentas","text":"Voc\u00ea tamb\u00e9m pode aproveitar uma dessas ferramentas criando seus \u00e9picos e funcionalidades e adicionando as estimativas de semanas. O recurso Planos (Pr\u00e9-visualiza\u00e7\u00e3o) no Azure DevOps ajudar\u00e1 voc\u00ea a fazer um plano. Os Planos de Entrega fornecem um cronograma de hist\u00f3rias ou funcionalidades que sua equipe planeja entregar. Os Planos de Entrega mostram os itens de trabalho agendados por um sprint (caminho de itera\u00e7\u00e3o) de equipes selecionadas contra uma vis\u00e3o de calend\u00e1rio. Confluence JIRA, Trello, Rally, Asana, Basecamp e GitHub Issues s\u00e3o outras ferramentas semelhantes no mercado (algumas s\u00e3o gratuitas, outras voc\u00ea paga uma taxa mensal, ou voc\u00ea pode instalar no local) que voc\u00ea pode aproveitar.","title":"Ferramentas"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/","text":"Scrum de Scrums Scrum de Scrums \u00e9 uma t\u00e9cnica usada para escalar o Scrum para um grupo maior trabalhando em dire\u00e7\u00e3o ao mesmo objetivo de projeto. No Scrum, consideramos uma equipe grande demais quando ultrapassa 10-12 indiv\u00edduos. Isso deve ser decidido caso a caso. Se o projeto for configurado em v\u00e1rias correntes de trabalho que cont\u00eam um grupo fixo de pessoas e uma reuni\u00e3o de stand-up comum est\u00e1 diminuindo a produtividade, o Scrum de Scrums deve ser considerado. A equipe identificaria os diferentes subgrupos que atuariam como equipes Scrum separadas com seu pr\u00f3prio backlog, quadro e stand-up . Objetivos O objetivo da cerim\u00f4nia de Scrum de Scrums \u00e9 dar \u00e0s subequipes a agilidade de que precisam sem perder visibilidade e coordena\u00e7\u00e3o. Tamb\u00e9m ajuda a garantir que as subequipes estejam alcan\u00e7ando seus objetivos de sprint e que estejam indo na dire\u00e7\u00e3o certa para alcan\u00e7ar o objetivo geral do projeto. A cerim\u00f4nia de Scrum de Scrums acontece todos os dias e pode ser vista como um stand-up regular: O que foi feito no dia anterior pela subequipe. O que ser\u00e1 feito hoje pela subequipe. Quais s\u00e3o os bloqueadores ou outros problemas para a subequipe. Quais s\u00e3o os bloqueadores ou problemas que podem impactar outras subequipes. O resultado da reuni\u00e3o resultar\u00e1 em uma lista de impedimentos relacionados \u00e0 coordena\u00e7\u00e3o de todo o projeto. As solu\u00e7\u00f5es podem ser: concordar com interfaces entre equipes, discutir mudan\u00e7as de arquitetura, evoluir limites de responsabilidade, etc. Esta lista de impedimentos geralmente \u00e9 gerenciada em um backlog separado, mas n\u00e3o precisa ser. Participa\u00e7\u00e3o A orienta\u00e7\u00e3o comum \u00e9 ter, em m\u00e9dia, uma pessoa por subequipe para participar do Scrum de Scrums. Idealmente, o L\u00edder de Processo de cada subequipe os representaria nesta cerim\u00f4nia. Em alguns casos, o representante do dia \u00e9 selecionado no final de cada stand-up di\u00e1rio da subequipe e pode mudar todos os dias. Na pr\u00e1tica, ter um representante fixo tende a ser mais eficiente a longo prazo. Impacto Esta pr\u00e1tica \u00e9 \u00fatil em casos de projetos mais longos e com um escopo maior, exigindo mais pessoas. Ao ter mais pessoas, geralmente \u00e9 mais f\u00e1cil dividir o projeto em subequipes. Ter um Scrum de Scrums di\u00e1rio melhora a comunica\u00e7\u00e3o, reduz o risco de problemas de integra\u00e7\u00e3o e aumenta as chances de sucesso do projeto. Ao escolher implementar o Scrum de Scrums, voc\u00ea precisa ter em mente que alguns membros da equipe ter\u00e3o reuni\u00f5es adicionais para coordenar e participar. Al\u00e9m disso: todos os membros da equipe de cada subequipe precisam ser atualizados sobre as decis\u00f5es em um momento posterior para garantir um bom fluxo de informa\u00e7\u00f5es. Medidas A maneira mais f\u00e1cil de medir o impacto \u00e9 acompanhando o tempo para resolver problemas no backlog do Scrum de Scrums. Voc\u00ea tamb\u00e9m pode acompanhar problemas relatados durante a retrospectiva relacionados \u00e0 coordena\u00e7\u00e3o global (est\u00e1 bem feito? pode ser melhorado?). Orienta\u00e7\u00f5es para Facilita\u00e7\u00e3o Isso deve ser facilitado como um stand-up regular.","title":"Scrum de Scrums"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/#scrum-de-scrums","text":"Scrum de Scrums \u00e9 uma t\u00e9cnica usada para escalar o Scrum para um grupo maior trabalhando em dire\u00e7\u00e3o ao mesmo objetivo de projeto. No Scrum, consideramos uma equipe grande demais quando ultrapassa 10-12 indiv\u00edduos. Isso deve ser decidido caso a caso. Se o projeto for configurado em v\u00e1rias correntes de trabalho que cont\u00eam um grupo fixo de pessoas e uma reuni\u00e3o de stand-up comum est\u00e1 diminuindo a produtividade, o Scrum de Scrums deve ser considerado. A equipe identificaria os diferentes subgrupos que atuariam como equipes Scrum separadas com seu pr\u00f3prio backlog, quadro e stand-up .","title":"Scrum de Scrums"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/#objetivos","text":"O objetivo da cerim\u00f4nia de Scrum de Scrums \u00e9 dar \u00e0s subequipes a agilidade de que precisam sem perder visibilidade e coordena\u00e7\u00e3o. Tamb\u00e9m ajuda a garantir que as subequipes estejam alcan\u00e7ando seus objetivos de sprint e que estejam indo na dire\u00e7\u00e3o certa para alcan\u00e7ar o objetivo geral do projeto. A cerim\u00f4nia de Scrum de Scrums acontece todos os dias e pode ser vista como um stand-up regular: O que foi feito no dia anterior pela subequipe. O que ser\u00e1 feito hoje pela subequipe. Quais s\u00e3o os bloqueadores ou outros problemas para a subequipe. Quais s\u00e3o os bloqueadores ou problemas que podem impactar outras subequipes. O resultado da reuni\u00e3o resultar\u00e1 em uma lista de impedimentos relacionados \u00e0 coordena\u00e7\u00e3o de todo o projeto. As solu\u00e7\u00f5es podem ser: concordar com interfaces entre equipes, discutir mudan\u00e7as de arquitetura, evoluir limites de responsabilidade, etc. Esta lista de impedimentos geralmente \u00e9 gerenciada em um backlog separado, mas n\u00e3o precisa ser.","title":"Objetivos"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/#participacao","text":"A orienta\u00e7\u00e3o comum \u00e9 ter, em m\u00e9dia, uma pessoa por subequipe para participar do Scrum de Scrums. Idealmente, o L\u00edder de Processo de cada subequipe os representaria nesta cerim\u00f4nia. Em alguns casos, o representante do dia \u00e9 selecionado no final de cada stand-up di\u00e1rio da subequipe e pode mudar todos os dias. Na pr\u00e1tica, ter um representante fixo tende a ser mais eficiente a longo prazo.","title":"Participa\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/#impacto","text":"Esta pr\u00e1tica \u00e9 \u00fatil em casos de projetos mais longos e com um escopo maior, exigindo mais pessoas. Ao ter mais pessoas, geralmente \u00e9 mais f\u00e1cil dividir o projeto em subequipes. Ter um Scrum de Scrums di\u00e1rio melhora a comunica\u00e7\u00e3o, reduz o risco de problemas de integra\u00e7\u00e3o e aumenta as chances de sucesso do projeto. Ao escolher implementar o Scrum de Scrums, voc\u00ea precisa ter em mente que alguns membros da equipe ter\u00e3o reuni\u00f5es adicionais para coordenar e participar. Al\u00e9m disso: todos os membros da equipe de cada subequipe precisam ser atualizados sobre as decis\u00f5es em um momento posterior para garantir um bom fluxo de informa\u00e7\u00f5es.","title":"Impacto"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/#medidas","text":"A maneira mais f\u00e1cil de medir o impacto \u00e9 acompanhando o tempo para resolver problemas no backlog do Scrum de Scrums. Voc\u00ea tamb\u00e9m pode acompanhar problemas relatados durante a retrospectiva relacionados \u00e0 coordena\u00e7\u00e3o global (est\u00e1 bem feito? pode ser melhorado?).","title":"Medidas"},{"location":"agile-development/advanced-topics/effective-organization/scrum-of-scrums/#orientacoes-para-facilitacao","text":"Isso deve ser facilitado como um stand-up regular.","title":"Orienta\u00e7\u00f5es para Facilita\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/team-agreements/","text":"Acordos de Equipe Defini\u00e7\u00e3o de Conclu\u00eddo Defini\u00e7\u00e3o de Pronto Acordos de Trabalho Manifesto da Equipe Objetivos Os acordos de equipe ajudam a esclarecer as expectativas para todos os membros da equipe, seja em rela\u00e7\u00e3o a como a equipe trabalha junta (Acordos de Trabalho) ou como julgar se uma hist\u00f3ria est\u00e1 completa (Defini\u00e7\u00e3o de Conclu\u00eddo).","title":"Acordos de Equipe"},{"location":"agile-development/advanced-topics/team-agreements/#acordos-de-equipe","text":"Defini\u00e7\u00e3o de Conclu\u00eddo Defini\u00e7\u00e3o de Pronto Acordos de Trabalho Manifesto da Equipe","title":"Acordos de Equipe"},{"location":"agile-development/advanced-topics/team-agreements/#objetivos","text":"Os acordos de equipe ajudam a esclarecer as expectativas para todos os membros da equipe, seja em rela\u00e7\u00e3o a como a equipe trabalha junta (Acordos de Trabalho) ou como julgar se uma hist\u00f3ria est\u00e1 completa (Defini\u00e7\u00e3o de Conclu\u00eddo).","title":"Objetivos"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-done/","text":"Defini\u00e7\u00e3o de Conclu\u00eddo Para fechar uma hist\u00f3ria de usu\u00e1rio, um sprint ou um marco, \u00e9 importante verificar se as tarefas est\u00e3o completas. A equipe de desenvolvimento deve decidir em conjunto qual \u00e9 a sua Defini\u00e7\u00e3o de Conclu\u00eddo e documentar isso no projeto. Abaixo est\u00e3o alguns exemplos de verifica\u00e7\u00f5es para garantir que a hist\u00f3ria de usu\u00e1rio, sprint, tarefa esteja conclu\u00edda. Funcionalidade/Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de aceita\u00e7\u00e3o s\u00e3o atendidos Refatora\u00e7\u00e3o est\u00e1 completa O c\u00f3digo \u00e9 compilado sem erros Testes unit\u00e1rios s\u00e3o escritos e aprovados Testes unit\u00e1rios existentes s\u00e3o aprovados Diagn\u00f3sticos/telemetria suficientes s\u00e3o registrados Revis\u00e3o de c\u00f3digo est\u00e1 completa Revis\u00e3o de UX est\u00e1 completa (se aplic\u00e1vel) Documenta\u00e7\u00e3o est\u00e1 atualizada A funcionalidade \u00e9 mesclada na branch de desenvolvimento A funcionalidade \u00e9 aprovada pelo propriet\u00e1rio do produto Objetivo do Sprint Defini\u00e7\u00e3o de Conclu\u00eddo para todas as hist\u00f3rias de usu\u00e1rio inclu\u00eddas no sprint s\u00e3o atendidas Backlog do produto est\u00e1 atualizado Testes funcionais e de integra\u00e7\u00e3o s\u00e3o aprovados Testes de desempenho s\u00e3o aprovados Testes de ponta a ponta s\u00e3o aprovados Todos os bugs s\u00e3o corrigidos O sprint \u00e9 aprovado por desenvolvedores, arquitetos de software, gerente de projeto, propriet\u00e1rio do produto, etc. Lan\u00e7amento/Marco C\u00f3digo Completo (objetivos dos sprints s\u00e3o atendidos) O lan\u00e7amento \u00e9 marcado como pronto para implanta\u00e7\u00e3o em produ\u00e7\u00e3o pelo propriet\u00e1rio do produto","title":"Defini\u00e7\u00e3o de Conclu\u00eddo"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-done/#definicao-de-concluido","text":"Para fechar uma hist\u00f3ria de usu\u00e1rio, um sprint ou um marco, \u00e9 importante verificar se as tarefas est\u00e3o completas. A equipe de desenvolvimento deve decidir em conjunto qual \u00e9 a sua Defini\u00e7\u00e3o de Conclu\u00eddo e documentar isso no projeto. Abaixo est\u00e3o alguns exemplos de verifica\u00e7\u00f5es para garantir que a hist\u00f3ria de usu\u00e1rio, sprint, tarefa esteja conclu\u00edda.","title":"Defini\u00e7\u00e3o de Conclu\u00eddo"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-done/#funcionalidadehistoria-de-usuario","text":"Crit\u00e9rios de aceita\u00e7\u00e3o s\u00e3o atendidos Refatora\u00e7\u00e3o est\u00e1 completa O c\u00f3digo \u00e9 compilado sem erros Testes unit\u00e1rios s\u00e3o escritos e aprovados Testes unit\u00e1rios existentes s\u00e3o aprovados Diagn\u00f3sticos/telemetria suficientes s\u00e3o registrados Revis\u00e3o de c\u00f3digo est\u00e1 completa Revis\u00e3o de UX est\u00e1 completa (se aplic\u00e1vel) Documenta\u00e7\u00e3o est\u00e1 atualizada A funcionalidade \u00e9 mesclada na branch de desenvolvimento A funcionalidade \u00e9 aprovada pelo propriet\u00e1rio do produto","title":"Funcionalidade/Hist\u00f3ria de Usu\u00e1rio"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-done/#objetivo-do-sprint","text":"Defini\u00e7\u00e3o de Conclu\u00eddo para todas as hist\u00f3rias de usu\u00e1rio inclu\u00eddas no sprint s\u00e3o atendidas Backlog do produto est\u00e1 atualizado Testes funcionais e de integra\u00e7\u00e3o s\u00e3o aprovados Testes de desempenho s\u00e3o aprovados Testes de ponta a ponta s\u00e3o aprovados Todos os bugs s\u00e3o corrigidos O sprint \u00e9 aprovado por desenvolvedores, arquitetos de software, gerente de projeto, propriet\u00e1rio do produto, etc.","title":"Objetivo do Sprint"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-done/#lancamentomarco","text":"C\u00f3digo Completo (objetivos dos sprints s\u00e3o atendidos) O lan\u00e7amento \u00e9 marcado como pronto para implanta\u00e7\u00e3o em produ\u00e7\u00e3o pelo propriet\u00e1rio do produto","title":"Lan\u00e7amento/Marco"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/","text":"Defini\u00e7\u00e3o de Pronto Quando a equipe de desenvolvimento escolhe uma hist\u00f3ria de usu\u00e1rio do topo do backlog, a hist\u00f3ria precisa ter detalhes suficientes para estimar o trabalho necess\u00e1rio para complet\u00e1-la dentro do sprint. Se tiver detalhes suficientes para a estimativa, ela est\u00e1 Pronta para ser desenvolvida. Se uma hist\u00f3ria de usu\u00e1rio n\u00e3o estiver Pronta no in\u00edcio do Sprint, aumenta a chance de que a hist\u00f3ria n\u00e3o ser\u00e1 conclu\u00edda no final deste sprint. O que \u00e9 Defini\u00e7\u00e3o de Pronto \u00e9 o acordo feito pela equipe Scrum sobre qu\u00e3o completa uma hist\u00f3ria de usu\u00e1rio deve estar para ser selecionada como candidata \u00e0 estimativa no planejamento do sprint. Estes podem ser codificados como uma lista de verifica\u00e7\u00e3o nas hist\u00f3rias de usu\u00e1rio usando Modelos de Issue do GitHub ou Modelos de Item de Trabalho do Azure DevOps . Pode ser entendido como uma lista de verifica\u00e7\u00e3o que ajuda o Propriet\u00e1rio do Produto a garantir que a hist\u00f3ria de usu\u00e1rio que escreveu cont\u00e9m todos os detalhes necess\u00e1rios para a equipe Scrum entender o trabalho a ser feito. Exemplos de itens da lista de verifica\u00e7\u00e3o de pronto A descri\u00e7\u00e3o cont\u00e9m os detalhes, incluindo quaisquer valores de entrada necess\u00e1rios para implementar a hist\u00f3ria de usu\u00e1rio? A hist\u00f3ria de usu\u00e1rio tem crit\u00e9rios de aceita\u00e7\u00e3o claros e completos? A hist\u00f3ria de usu\u00e1rio aborda a necessidade de neg\u00f3cios? Podemos medir os crit\u00e9rios de aceita\u00e7\u00e3o? A hist\u00f3ria de usu\u00e1rio \u00e9 pequena o suficiente para ser implementada em um curto per\u00edodo de tempo, mas grande o suficiente para fornecer valor ao cliente? A hist\u00f3ria de usu\u00e1rio est\u00e1 bloqueada? Por exemplo, ela depende de algum dos seguintes: A conclus\u00e3o de um trabalho n\u00e3o terminado Um entreg\u00e1vel fornecido por outra equipe (artefato de c\u00f3digo, dados, etc...) Quem escreve A lista de verifica\u00e7\u00e3o de pronto pode ser escrita por um Propriet\u00e1rio do Produto em acordo com a equipe de desenvolvimento e o L\u00edder do Processo. Quando a Defini\u00e7\u00e3o de Pronto deve ser atualizada Atualize ou altere a defini\u00e7\u00e3o de pronto sempre que a equipe Scrum observar que h\u00e1 informa\u00e7\u00f5es faltando nas hist\u00f3rias de usu\u00e1rio que impactam recorrentemente o planejamento. O que deve ser evitado A lista de verifica\u00e7\u00e3o de pronto deve conter itens que se aplicam de forma ampla. N\u00e3o inclua itens ou detalhes que se aplicam apenas a uma ou duas hist\u00f3rias de usu\u00e1rio. Isso pode se tornar um excesso ao escrever as hist\u00f3rias de usu\u00e1rio. Como preparar hist\u00f3rias para estarem prontas No caso de o trabalho de maior prioridade ainda n\u00e3o estar pronto, ainda pode ser poss\u00edvel fazer progresso. Aqui est\u00e3o algumas estrat\u00e9gias que podem ajudar: Sess\u00f5es de Refinamento do Backlog s\u00e3o um bom momento para validar que hist\u00f3rias de usu\u00e1rio de alta prioridade s\u00e3o verificadas para ter uma descri\u00e7\u00e3o clara, crit\u00e9rios de aceita\u00e7\u00e3o e valor comercial demonstr\u00e1vel. Tamb\u00e9m \u00e9 um bom momento para dividir grandes hist\u00f3rias que provavelmente n\u00e3o ser\u00e3o conclu\u00eddas em um \u00fanico sprint. Sess\u00f5es de prioriza\u00e7\u00e3o s\u00e3o um bom momento para priorizar hist\u00f3rias de usu\u00e1rio que desbloqueiam outros trabalhos de alta prioridade bloqueados. Hist\u00f3rias de usu\u00e1rio bloqueadas muitas vezes podem ser divididas de forma a desbloquear uma parte do escopo original. Esta \u00e9 uma boa maneira de fazer progresso, mesmo quando algum trabalho est\u00e1 bloqueado.","title":"Defini\u00e7\u00e3o de Pronto"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#definicao-de-pronto","text":"Quando a equipe de desenvolvimento escolhe uma hist\u00f3ria de usu\u00e1rio do topo do backlog, a hist\u00f3ria precisa ter detalhes suficientes para estimar o trabalho necess\u00e1rio para complet\u00e1-la dentro do sprint. Se tiver detalhes suficientes para a estimativa, ela est\u00e1 Pronta para ser desenvolvida. Se uma hist\u00f3ria de usu\u00e1rio n\u00e3o estiver Pronta no in\u00edcio do Sprint, aumenta a chance de que a hist\u00f3ria n\u00e3o ser\u00e1 conclu\u00edda no final deste sprint.","title":"Defini\u00e7\u00e3o de Pronto"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#o-que-e","text":"Defini\u00e7\u00e3o de Pronto \u00e9 o acordo feito pela equipe Scrum sobre qu\u00e3o completa uma hist\u00f3ria de usu\u00e1rio deve estar para ser selecionada como candidata \u00e0 estimativa no planejamento do sprint. Estes podem ser codificados como uma lista de verifica\u00e7\u00e3o nas hist\u00f3rias de usu\u00e1rio usando Modelos de Issue do GitHub ou Modelos de Item de Trabalho do Azure DevOps . Pode ser entendido como uma lista de verifica\u00e7\u00e3o que ajuda o Propriet\u00e1rio do Produto a garantir que a hist\u00f3ria de usu\u00e1rio que escreveu cont\u00e9m todos os detalhes necess\u00e1rios para a equipe Scrum entender o trabalho a ser feito.","title":"O que \u00e9"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#exemplos-de-itens-da-lista-de-verificacao-de-pronto","text":"A descri\u00e7\u00e3o cont\u00e9m os detalhes, incluindo quaisquer valores de entrada necess\u00e1rios para implementar a hist\u00f3ria de usu\u00e1rio? A hist\u00f3ria de usu\u00e1rio tem crit\u00e9rios de aceita\u00e7\u00e3o claros e completos? A hist\u00f3ria de usu\u00e1rio aborda a necessidade de neg\u00f3cios? Podemos medir os crit\u00e9rios de aceita\u00e7\u00e3o? A hist\u00f3ria de usu\u00e1rio \u00e9 pequena o suficiente para ser implementada em um curto per\u00edodo de tempo, mas grande o suficiente para fornecer valor ao cliente? A hist\u00f3ria de usu\u00e1rio est\u00e1 bloqueada? Por exemplo, ela depende de algum dos seguintes: A conclus\u00e3o de um trabalho n\u00e3o terminado Um entreg\u00e1vel fornecido por outra equipe (artefato de c\u00f3digo, dados, etc...)","title":"Exemplos de itens da lista de verifica\u00e7\u00e3o de pronto"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#quem-escreve","text":"A lista de verifica\u00e7\u00e3o de pronto pode ser escrita por um Propriet\u00e1rio do Produto em acordo com a equipe de desenvolvimento e o L\u00edder do Processo.","title":"Quem escreve"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#quando-a-definicao-de-pronto-deve-ser-atualizada","text":"Atualize ou altere a defini\u00e7\u00e3o de pronto sempre que a equipe Scrum observar que h\u00e1 informa\u00e7\u00f5es faltando nas hist\u00f3rias de usu\u00e1rio que impactam recorrentemente o planejamento.","title":"Quando a Defini\u00e7\u00e3o de Pronto deve ser atualizada"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#o-que-deve-ser-evitado","text":"A lista de verifica\u00e7\u00e3o de pronto deve conter itens que se aplicam de forma ampla. N\u00e3o inclua itens ou detalhes que se aplicam apenas a uma ou duas hist\u00f3rias de usu\u00e1rio. Isso pode se tornar um excesso ao escrever as hist\u00f3rias de usu\u00e1rio.","title":"O que deve ser evitado"},{"location":"agile-development/advanced-topics/team-agreements/definition-of-ready/#como-preparar-historias-para-estarem-prontas","text":"No caso de o trabalho de maior prioridade ainda n\u00e3o estar pronto, ainda pode ser poss\u00edvel fazer progresso. Aqui est\u00e3o algumas estrat\u00e9gias que podem ajudar: Sess\u00f5es de Refinamento do Backlog s\u00e3o um bom momento para validar que hist\u00f3rias de usu\u00e1rio de alta prioridade s\u00e3o verificadas para ter uma descri\u00e7\u00e3o clara, crit\u00e9rios de aceita\u00e7\u00e3o e valor comercial demonstr\u00e1vel. Tamb\u00e9m \u00e9 um bom momento para dividir grandes hist\u00f3rias que provavelmente n\u00e3o ser\u00e3o conclu\u00eddas em um \u00fanico sprint. Sess\u00f5es de prioriza\u00e7\u00e3o s\u00e3o um bom momento para priorizar hist\u00f3rias de usu\u00e1rio que desbloqueiam outros trabalhos de alta prioridade bloqueados. Hist\u00f3rias de usu\u00e1rio bloqueadas muitas vezes podem ser divididas de forma a desbloquear uma parte do escopo original. Esta \u00e9 uma boa maneira de fazer progresso, mesmo quando algum trabalho est\u00e1 bloqueado.","title":"Como preparar hist\u00f3rias para estarem prontas"},{"location":"agile-development/advanced-topics/team-agreements/team-manifesto/","text":"Manifesto da Equipe Introdu\u00e7\u00e3o As equipes da ISE trabalham com uma nova equipe de desenvolvimento em cada envolvimento com o cliente, o que requer uma fase de introdu\u00e7\u00e3o e transfer\u00eancia de conhecimento antes de iniciar um envolvimento. A conclus\u00e3o desta fase de quebra-gelos e discuss\u00f5es sobre os padr\u00f5es leva tempo, mas \u00e9 necess\u00e1ria para come\u00e7ar a aumentar a curva de aprendizado da nova equipe. Um manifesto da equipe \u00e9 um documento \u00e1gil de uma p\u00e1gina entre os membros da equipe que resume os princ\u00edpios e valores b\u00e1sicos da equipe e visa fornecer um consenso sobre as expectativas t\u00e9cnicas de cada membro da equipe para entregar um resultado de alta qualidade no final de cada envolvimento. O objetivo \u00e9 reduzir o tempo na defini\u00e7\u00e3o das expectativas corretas sem organizar reuni\u00f5es mais longas de \"leitura de documentos da equipe\" e fornecer um consenso entre os membros da equipe para responder \u00e0 pergunta - \"Como a nova equipe desenvolve o software?\" - abrangendo todos os t\u00f3picos fundamentais de engenharia e excel\u00eancia, como processo de lan\u00e7amento, codifica\u00e7\u00e3o limpa, testes. Outro objetivo principal de escrever o manifesto \u00e9 iniciar uma conversa durante a \"sess\u00e3o de constru\u00e7\u00e3o do manifesto\" para detectar quaisquer diferen\u00e7as de opini\u00e3o sobre como a equipe deve trabalhar. Ele tamb\u00e9m serve da mesma forma quando um novo membro da equipe se junta \u00e0 equipe. Novos integrantes podem se atualizar rapidamente sobre os padr\u00f5es acordados. Como Construir um Manifesto da Equipe Pode-se dizer que o melhor momento para come\u00e7ar a constru\u00ed-lo \u00e9 na fase muito inicial do envolvimento, quando as equipes se encontram umas com as outras para swarming ou durante a fase de prepara\u00e7\u00e3o. \u00c9 recomendado manter o manifesto da equipe o mais simples poss\u00edvel, ent\u00e3o, de prefer\u00eancia, um documento simples de uma p\u00e1gina que n\u00e3o inclui quaisquer refer\u00eancias ou links \u00e9 um bom formato para ele. Se houver necessidade de fornecer conhecimento sobre certos t\u00f3picos, a forma de fazer isso \u00e9 realizar sess\u00f5es brown-bag, katas t\u00e9cnicas, pr\u00e1ticas de equipe, documenta\u00e7\u00f5es e outros posteriormente. Alguns pontos importantes sobre o manifesto da equipe: O manifesto da equipe \u00e9 constru\u00eddo pela pr\u00f3pria equipe de desenvolvimento Deve cobrir todos os pontos t\u00e9cnicos de engenharia necess\u00e1rios para a excel\u00eancia, bem como itens de mentalidade de agilidade comportamental que a equipe considera relevantes Visa dar um entendimento comum sobre a expertise, pr\u00e1ticas e/ou mentalidade desejadas dentro da equipe Com base nas necessidades da equipe e nos resultados da retrospectiva, ele pode ser modificado durante o envolvimento. Na ISE, buscamos qualidade em vez de quantidade, e software bem elaborado, bem como um ambiente confort\u00e1vel/transparente onde cada membro da equipe possa alcan\u00e7ar seu maior potencial. A diferen\u00e7a entre o manifesto da equipe e outros documentos da equipe \u00e9 que ele \u00e9 usado para dar um breve resumo das expectativas em torno da forma t\u00e9cnica de trabalhar e da mentalidade apoiada na equipe, antes que os sprints de code-with comecem. Abaixo, voc\u00ea pode encontrar alguns t\u00f3picos que muitas equipes abordam durante os envolvimentos, T\u00f3pico Sobre o que \u00e9? Propriedade Coletiva A equipe possui o c\u00f3digo em vez de indiv\u00edduos? Qual \u00e9 a expectativa? Respeito Qualquer declara\u00e7\u00e3o preferida sobre ser um valor \"obrigat\u00f3rio\" da equipe Colabora\u00e7\u00e3o Qualquer declara\u00e7\u00e3o preferida sobre como a equipe deseja colaborar? Transpar\u00eancia Uma simples declara\u00e7\u00e3o sobre ser um valor \"obrigat\u00f3rio\" da equipe e, se preferir, como isso \u00e9 fornecido pela equipe? reuni\u00f5es, retrospectivas, mecanismos de feedback, etc. Expertise em Ferramentas de Desenvolvimento Quais ferramentas, como Git, VS Code LiveShare, etc., est\u00e3o sendo usadas? Qual \u00e9 a defini\u00e7\u00e3o do uso esperado delas? Dimensionamento de PR O que a equipe prefere em PRs? Branching Estrat\u00e9gia e padr\u00f5es de branches da equipe Padr\u00f5es de Commit Formato preferido nas mensagens de commit, regras e mais C\u00f3digo Limpo A equipe segue princ\u00edpios de c\u00f3digo limpo? Programa\u00e7\u00e3o em Par/Enxame A equipe aplicar\u00e1 programa\u00e7\u00e3o em par/enxame? Se sim, quais estilos de programa\u00e7\u00e3o s\u00e3o adequados para a equipe? Processo de Lan\u00e7amento Princ\u00edpios em torno do processo de lan\u00e7amento, como port\u00f5es de qualidade, processo de revis\u00e3o...etc. Revis\u00e3o de C\u00f3digo Qualquer regra para revis\u00e3o de c\u00f3digo, como n\u00famero m\u00ednimo de revisores, regras da equipe...etc. Prontid\u00e3o para A\u00e7\u00e3o Como o backlog ser\u00e1 refinado? Como garantimos uma clara Defini\u00e7\u00e3o de Conclu\u00eddo e Crit\u00e9rios de Aceita\u00e7\u00e3o? TDD A equipe seguir\u00e1 TDD? Cobertura de Teste Existe algum n\u00famero, porcentagem ou medida esperada? Dimens\u00f5es em Testes Testes necess\u00e1rios para software de alta qualidade, por exemplo: unit\u00e1rios, integra\u00e7\u00e3o, funcionais, desempenho, regress\u00e3o, aceita\u00e7\u00e3o Processo de Constru\u00e7\u00e3o Construir para todos? ou n\u00e3o; A declara\u00e7\u00e3o clara de onde o c\u00f3digo e sob quais condi\u00e7\u00f5es o c\u00f3digo deve funcionar? por exemplo: SO, DevOps, depend\u00eancia de ferramenta Corre\u00e7\u00e3o de Bugs As regras para corre\u00e7\u00e3o de bugs na equipe? por exemplo: pessoas de contato, anexando PR ao problema, etc. D\u00edvida T\u00e9cnica Como a equipe gerencia/segue isso? Refatora\u00e7\u00e3o Como a equipe gerencia/segue isso? Documenta\u00e7\u00e3o \u00c1gil A equipe deseja usar diagramas e tabelas mais do que artigos detalhados do KB? Documenta\u00e7\u00e3o Eficiente Quando \u00e9 necess\u00e1rio? \u00c9 um pr\u00e9-requisito para concluir tarefas/PRs etc.? Defini\u00e7\u00e3o de Divers\u00e3o Como nos divertiremos para relaxar/desfrutar do esp\u00edrito de equipe durante o envolvimento no projeto? Ferramentas Geralmente, sess\u00f5es de equipe s\u00e3o suficientes para construir um manifesto e chegar a um consenso em torno dele, e se houver necessidade de melhor\u00e1-lo de forma estruturada, existem muitos blogs e ferramentas online, qualquer ferramenta de retrospectiva pode ser usada. Recursos Agilidade T\u00e9cnica*","title":"Manifesto da Equipe"},{"location":"agile-development/advanced-topics/team-agreements/team-manifesto/#manifesto-da-equipe","text":"","title":"Manifesto da Equipe"},{"location":"agile-development/advanced-topics/team-agreements/team-manifesto/#introducao","text":"As equipes da ISE trabalham com uma nova equipe de desenvolvimento em cada envolvimento com o cliente, o que requer uma fase de introdu\u00e7\u00e3o e transfer\u00eancia de conhecimento antes de iniciar um envolvimento. A conclus\u00e3o desta fase de quebra-gelos e discuss\u00f5es sobre os padr\u00f5es leva tempo, mas \u00e9 necess\u00e1ria para come\u00e7ar a aumentar a curva de aprendizado da nova equipe. Um manifesto da equipe \u00e9 um documento \u00e1gil de uma p\u00e1gina entre os membros da equipe que resume os princ\u00edpios e valores b\u00e1sicos da equipe e visa fornecer um consenso sobre as expectativas t\u00e9cnicas de cada membro da equipe para entregar um resultado de alta qualidade no final de cada envolvimento. O objetivo \u00e9 reduzir o tempo na defini\u00e7\u00e3o das expectativas corretas sem organizar reuni\u00f5es mais longas de \"leitura de documentos da equipe\" e fornecer um consenso entre os membros da equipe para responder \u00e0 pergunta - \"Como a nova equipe desenvolve o software?\" - abrangendo todos os t\u00f3picos fundamentais de engenharia e excel\u00eancia, como processo de lan\u00e7amento, codifica\u00e7\u00e3o limpa, testes. Outro objetivo principal de escrever o manifesto \u00e9 iniciar uma conversa durante a \"sess\u00e3o de constru\u00e7\u00e3o do manifesto\" para detectar quaisquer diferen\u00e7as de opini\u00e3o sobre como a equipe deve trabalhar. Ele tamb\u00e9m serve da mesma forma quando um novo membro da equipe se junta \u00e0 equipe. Novos integrantes podem se atualizar rapidamente sobre os padr\u00f5es acordados.","title":"Introdu\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/team-agreements/team-manifesto/#como-construir-um-manifesto-da-equipe","text":"Pode-se dizer que o melhor momento para come\u00e7ar a constru\u00ed-lo \u00e9 na fase muito inicial do envolvimento, quando as equipes se encontram umas com as outras para swarming ou durante a fase de prepara\u00e7\u00e3o. \u00c9 recomendado manter o manifesto da equipe o mais simples poss\u00edvel, ent\u00e3o, de prefer\u00eancia, um documento simples de uma p\u00e1gina que n\u00e3o inclui quaisquer refer\u00eancias ou links \u00e9 um bom formato para ele. Se houver necessidade de fornecer conhecimento sobre certos t\u00f3picos, a forma de fazer isso \u00e9 realizar sess\u00f5es brown-bag, katas t\u00e9cnicas, pr\u00e1ticas de equipe, documenta\u00e7\u00f5es e outros posteriormente. Alguns pontos importantes sobre o manifesto da equipe: O manifesto da equipe \u00e9 constru\u00eddo pela pr\u00f3pria equipe de desenvolvimento Deve cobrir todos os pontos t\u00e9cnicos de engenharia necess\u00e1rios para a excel\u00eancia, bem como itens de mentalidade de agilidade comportamental que a equipe considera relevantes Visa dar um entendimento comum sobre a expertise, pr\u00e1ticas e/ou mentalidade desejadas dentro da equipe Com base nas necessidades da equipe e nos resultados da retrospectiva, ele pode ser modificado durante o envolvimento. Na ISE, buscamos qualidade em vez de quantidade, e software bem elaborado, bem como um ambiente confort\u00e1vel/transparente onde cada membro da equipe possa alcan\u00e7ar seu maior potencial. A diferen\u00e7a entre o manifesto da equipe e outros documentos da equipe \u00e9 que ele \u00e9 usado para dar um breve resumo das expectativas em torno da forma t\u00e9cnica de trabalhar e da mentalidade apoiada na equipe, antes que os sprints de code-with comecem. Abaixo, voc\u00ea pode encontrar alguns t\u00f3picos que muitas equipes abordam durante os envolvimentos, T\u00f3pico Sobre o que \u00e9? Propriedade Coletiva A equipe possui o c\u00f3digo em vez de indiv\u00edduos? Qual \u00e9 a expectativa? Respeito Qualquer declara\u00e7\u00e3o preferida sobre ser um valor \"obrigat\u00f3rio\" da equipe Colabora\u00e7\u00e3o Qualquer declara\u00e7\u00e3o preferida sobre como a equipe deseja colaborar? Transpar\u00eancia Uma simples declara\u00e7\u00e3o sobre ser um valor \"obrigat\u00f3rio\" da equipe e, se preferir, como isso \u00e9 fornecido pela equipe? reuni\u00f5es, retrospectivas, mecanismos de feedback, etc. Expertise em Ferramentas de Desenvolvimento Quais ferramentas, como Git, VS Code LiveShare, etc., est\u00e3o sendo usadas? Qual \u00e9 a defini\u00e7\u00e3o do uso esperado delas? Dimensionamento de PR O que a equipe prefere em PRs? Branching Estrat\u00e9gia e padr\u00f5es de branches da equipe Padr\u00f5es de Commit Formato preferido nas mensagens de commit, regras e mais C\u00f3digo Limpo A equipe segue princ\u00edpios de c\u00f3digo limpo? Programa\u00e7\u00e3o em Par/Enxame A equipe aplicar\u00e1 programa\u00e7\u00e3o em par/enxame? Se sim, quais estilos de programa\u00e7\u00e3o s\u00e3o adequados para a equipe? Processo de Lan\u00e7amento Princ\u00edpios em torno do processo de lan\u00e7amento, como port\u00f5es de qualidade, processo de revis\u00e3o...etc. Revis\u00e3o de C\u00f3digo Qualquer regra para revis\u00e3o de c\u00f3digo, como n\u00famero m\u00ednimo de revisores, regras da equipe...etc. Prontid\u00e3o para A\u00e7\u00e3o Como o backlog ser\u00e1 refinado? Como garantimos uma clara Defini\u00e7\u00e3o de Conclu\u00eddo e Crit\u00e9rios de Aceita\u00e7\u00e3o? TDD A equipe seguir\u00e1 TDD? Cobertura de Teste Existe algum n\u00famero, porcentagem ou medida esperada? Dimens\u00f5es em Testes Testes necess\u00e1rios para software de alta qualidade, por exemplo: unit\u00e1rios, integra\u00e7\u00e3o, funcionais, desempenho, regress\u00e3o, aceita\u00e7\u00e3o Processo de Constru\u00e7\u00e3o Construir para todos? ou n\u00e3o; A declara\u00e7\u00e3o clara de onde o c\u00f3digo e sob quais condi\u00e7\u00f5es o c\u00f3digo deve funcionar? por exemplo: SO, DevOps, depend\u00eancia de ferramenta Corre\u00e7\u00e3o de Bugs As regras para corre\u00e7\u00e3o de bugs na equipe? por exemplo: pessoas de contato, anexando PR ao problema, etc. D\u00edvida T\u00e9cnica Como a equipe gerencia/segue isso? Refatora\u00e7\u00e3o Como a equipe gerencia/segue isso? Documenta\u00e7\u00e3o \u00c1gil A equipe deseja usar diagramas e tabelas mais do que artigos detalhados do KB? Documenta\u00e7\u00e3o Eficiente Quando \u00e9 necess\u00e1rio? \u00c9 um pr\u00e9-requisito para concluir tarefas/PRs etc.? Defini\u00e7\u00e3o de Divers\u00e3o Como nos divertiremos para relaxar/desfrutar do esp\u00edrito de equipe durante o envolvimento no projeto?","title":"Como Construir um Manifesto da Equipe"},{"location":"agile-development/advanced-topics/team-agreements/team-manifesto/#ferramentas","text":"Geralmente, sess\u00f5es de equipe s\u00e3o suficientes para construir um manifesto e chegar a um consenso em torno dele, e se houver necessidade de melhor\u00e1-lo de forma estruturada, existem muitos blogs e ferramentas online, qualquer ferramenta de retrospectiva pode ser usada.","title":"Ferramentas"},{"location":"agile-development/advanced-topics/team-agreements/team-manifesto/#recursos","text":"Agilidade T\u00e9cnica*","title":"Recursos"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/","text":"Se\u00e7\u00f5es de um Acordo de Trabalho Um acordo de trabalho \u00e9 um documento ou um conjunto de documentos que descrevem como trabalhamos juntos como uma equipe e quais s\u00e3o nossas expectativas e princ\u00edpios. O acordo de trabalho \u00e9 criado pela equipe no in\u00edcio do projeto e \u00e9 armazenado no reposit\u00f3rio para que esteja prontamente dispon\u00edvel para todos que trabalham no projeto. A seguir est\u00e3o exemplos de se\u00e7\u00f5es e pontos que podem fazer parte de um acordo de trabalho, mas cada equipe deve compor o seu pr\u00f3prio e ajustar hor\u00e1rios, canais de comunica\u00e7\u00e3o, pol\u00edticas de nomea\u00e7\u00e3o de branches, etc., para atender \u00e0s necessidades da equipe. Geral Trabalhamos como uma \u00fanica equipe em dire\u00e7\u00e3o a um objetivo comum e escopo claro Certificamo-nos de que a voz de todos seja ouvida e escutada Mostramos igual respeito a todos os membros da equipe Trabalhamos como uma equipe para ter expectativas comuns para a entrega t\u00e9cnica que s\u00e3o documentadas em um Manifesto da Equipe . Certificamo-nos de disseminar nossa expertise e habilidades na equipe, para que nenhuma \u00fanica pessoa seja a \u00fanica respons\u00e1vel por uma habilidade Todos os hor\u00e1rios abaixo est\u00e3o listados em CET Comunica\u00e7\u00e3o Comunicamos todas as informa\u00e7\u00f5es relevantes para a equipe atrav\u00e9s do canal de Equipes do Projeto Adicionamos todos os spikes t\u00e9cnicos , estudos de trade-off e outra documenta\u00e7\u00e3o t\u00e9cnica ao reposit\u00f3rio do projeto atrav\u00e9s de revis\u00f5es de design ass\u00edncronas em PRs Equil\u00edbrio entre Trabalho e Vida Pessoal Nosso hor\u00e1rio de expediente, quando podemos esperar colaborar via Microsoft Teams, telefone ou presencialmente, \u00e9 de segunda a sexta-feira, das 10h \u00e0s 17h N\u00e3o somos obrigados a responder e-mails ap\u00f3s as 18h, nos fins de semana ou quando estamos de f\u00e9rias ou feriados. Trabalhamos em diferentes fusos hor\u00e1rios e respeitamos isso, especialmente ao marcar reuni\u00f5es recorrentes. Gravamos reuni\u00f5es sempre que poss\u00edvel, para que os membros da equipe que n\u00e3o puderam participar ao vivo possam ouvir mais tarde. Qualidade e n\u00e3o Quantidade Concordamos com uma Defini\u00e7\u00e3o de Conclu\u00eddo para nossas hist\u00f3rias de usu\u00e1rio e sprints e vivemos de acordo com ela. Seguimos as melhores pr\u00e1ticas de engenharia, como o Code With Engineering Playbook Ritmo do Scrum Atividade Quando Dura\u00e7\u00e3o Quem Respons\u00e1vel Objetivo Reuni\u00e3o Di\u00e1ria do Projeto Ter-Sex 9h 15 min Todos L\u00edder de Processo O que foi realizado, pr\u00f3ximos passos, bloqueios Demonstra\u00e7\u00e3o do Sprint Segunda 9h 1 hora Todos L\u00edder de Desenvolvimento Apresentar o trabalho realizado e aprovar a conclus\u00e3o da hist\u00f3ria de usu\u00e1rio Retrospectiva do Sprint Segunda 10h 1 hora Todos L\u00edder de Processo A equipe de desenvolvimento compartilha aprendizados e o que pode ser melhorado Planejamento do Sprint Segunda 11h 1 hora Todos PO Dimensionar e planejar hist\u00f3rias de usu\u00e1rio para o sprint Cria\u00e7\u00e3o de Tarefas Ap\u00f3s o Planejamento do Sprint - Equipe de Desenvolvimento L\u00edder de Desenvolvimento Criar tarefas para esclarecer e determinar a velocidade Refinamento do Backlog Quarta 14h 1 hora L\u00edder de Desenvolvimento, PO PO Preparar para o pr\u00f3ximo sprint e garantir que as hist\u00f3rias estejam prontas para o pr\u00f3ximo sprint. L\u00edder de Processo O L\u00edder de Processo \u00e9 respons\u00e1vel por liderar quaisquer pr\u00e1ticas de scrum ou \u00e1geis para permitir que o projeto avance. Facilitar reuni\u00f5es di\u00e1rias e responsabilizar a equipe pela presen\u00e7a e participa\u00e7\u00e3o. Manter a reuni\u00e3o em movimento conforme descrito na p\u00e1gina Reuni\u00e3o Di\u00e1ria do Projeto . Certificar-se de que todas as a\u00e7\u00f5es est\u00e3o documentadas e garantir que cada uma tenha um respons\u00e1vel e uma data de vencimento e rastrear as quest\u00f5es em aberto. Anota\u00e7\u00f5es conforme necess\u00e1rio ap\u00f3s o planejamento/reuni\u00f5es di\u00e1rias. Certificar-se de que os itens s\u00e3o movidos para o estacionamento e garantir o acompanhamento posterior. Manter um local mostrando o trabalho e o status da equipe e remover impedimentos que est\u00e3o bloqueando a equipe. Responsabilizar a equipe pelos resultados de forma solid\u00e1ria. - Certificar-se de que a documenta\u00e7\u00e3o do projeto e do programa est\u00e3o atualizadas. - Garantir o rastreamento/seguimento de a\u00e7\u00f5es da retrospectiva (planejamento de itera\u00e7\u00e3o e libera\u00e7\u00e3o) e das reuni\u00f5es di\u00e1rias. - Facilitar a retrospectiva do sprint. - Treinar o Product Owner e a equipe no processo, conforme necess\u00e1rio. Gerenciamento de Backlog Trabalhamos juntos em uma Defini\u00e7\u00e3o de Pronto e todas as hist\u00f3rias de usu\u00e1rio atribu\u00eddas a um sprint precisam seguir isso Comunicamos o que estamos trabalhando atrav\u00e9s do quadro Atribu\u00edmos a n\u00f3s mesmos uma tarefa quando estamos prontos para trabalhar nela (n\u00e3o antes) e a movemos para ativo Capturamos qualquer trabalho que fazemos relacionado ao projeto em uma hist\u00f3ria de usu\u00e1rio/tarefa Fechamos nossas tarefas/hist\u00f3rias de usu\u00e1rio apenas quando est\u00e3o conclu\u00eddas (conforme descrito na Defini\u00e7\u00e3o de Conclu\u00eddo ) Trabalhamos com o PM se quisermos adicionar uma nova hist\u00f3ria de usu\u00e1rio ao sprint Se adicionarmos novas tarefas ao quadro, certificamo-nos de que ela corresponde aos crit\u00e9rios de aceita\u00e7\u00e3o da hist\u00f3ria de usu\u00e1rio (para evitar o aumento do escopo). Se n\u00e3o corresponder aos crit\u00e9rios de aceita\u00e7\u00e3o, devemos discutir com o PM para ver se precisamos de uma nova hist\u00f3ria de usu\u00e1rio para a tarefa ou se devemos ajustar os crit\u00e9rios de aceita\u00e7\u00e3o. Gerenciamento de C\u00f3digo Seguimos a conven\u00e7\u00e3o de nomenclatura de branch do git flow para branches e identificamos o n\u00famero da tarefa, por exemplo, feature/123-add-working-agreement Mesclamos todo o c\u00f3digo em branches principais atrav\u00e9s de PRs Todos os PRs s\u00e3o revisados por uma pessoa de [Nome do Cliente/Parceiro] e uma da Microsoft (para transfer\u00eancia de conhecimento e para garantir que os padr\u00f5es de c\u00f3digo e seguran\u00e7a sejam atendidos) Sempre revisamos os PRs existentes antes de come\u00e7ar a trabalhar em uma nova tarefa Olhamos os PRs abertos no final da reuni\u00e3o di\u00e1ria para garantir que todos os PRs tenham revisores. Tratamos a documenta\u00e7\u00e3o como c\u00f3digo e aplicamos os mesmos padr\u00f5es ao Markdown como c\u00f3digo.","title":"Se\u00e7\u00f5es de um Acordo de Trabalho"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#secoes-de-um-acordo-de-trabalho","text":"Um acordo de trabalho \u00e9 um documento ou um conjunto de documentos que descrevem como trabalhamos juntos como uma equipe e quais s\u00e3o nossas expectativas e princ\u00edpios. O acordo de trabalho \u00e9 criado pela equipe no in\u00edcio do projeto e \u00e9 armazenado no reposit\u00f3rio para que esteja prontamente dispon\u00edvel para todos que trabalham no projeto. A seguir est\u00e3o exemplos de se\u00e7\u00f5es e pontos que podem fazer parte de um acordo de trabalho, mas cada equipe deve compor o seu pr\u00f3prio e ajustar hor\u00e1rios, canais de comunica\u00e7\u00e3o, pol\u00edticas de nomea\u00e7\u00e3o de branches, etc., para atender \u00e0s necessidades da equipe.","title":"Se\u00e7\u00f5es de um Acordo de Trabalho"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#geral","text":"Trabalhamos como uma \u00fanica equipe em dire\u00e7\u00e3o a um objetivo comum e escopo claro Certificamo-nos de que a voz de todos seja ouvida e escutada Mostramos igual respeito a todos os membros da equipe Trabalhamos como uma equipe para ter expectativas comuns para a entrega t\u00e9cnica que s\u00e3o documentadas em um Manifesto da Equipe . Certificamo-nos de disseminar nossa expertise e habilidades na equipe, para que nenhuma \u00fanica pessoa seja a \u00fanica respons\u00e1vel por uma habilidade Todos os hor\u00e1rios abaixo est\u00e3o listados em CET","title":"Geral"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#comunicacao","text":"Comunicamos todas as informa\u00e7\u00f5es relevantes para a equipe atrav\u00e9s do canal de Equipes do Projeto Adicionamos todos os spikes t\u00e9cnicos , estudos de trade-off e outra documenta\u00e7\u00e3o t\u00e9cnica ao reposit\u00f3rio do projeto atrav\u00e9s de revis\u00f5es de design ass\u00edncronas em PRs","title":"Comunica\u00e7\u00e3o"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#equilibrio-entre-trabalho-e-vida-pessoal","text":"Nosso hor\u00e1rio de expediente, quando podemos esperar colaborar via Microsoft Teams, telefone ou presencialmente, \u00e9 de segunda a sexta-feira, das 10h \u00e0s 17h N\u00e3o somos obrigados a responder e-mails ap\u00f3s as 18h, nos fins de semana ou quando estamos de f\u00e9rias ou feriados. Trabalhamos em diferentes fusos hor\u00e1rios e respeitamos isso, especialmente ao marcar reuni\u00f5es recorrentes. Gravamos reuni\u00f5es sempre que poss\u00edvel, para que os membros da equipe que n\u00e3o puderam participar ao vivo possam ouvir mais tarde.","title":"Equil\u00edbrio entre Trabalho e Vida Pessoal"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#qualidade-e-nao-quantidade","text":"Concordamos com uma Defini\u00e7\u00e3o de Conclu\u00eddo para nossas hist\u00f3rias de usu\u00e1rio e sprints e vivemos de acordo com ela. Seguimos as melhores pr\u00e1ticas de engenharia, como o Code With Engineering Playbook","title":"Qualidade e n\u00e3o Quantidade"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#ritmo-do-scrum","text":"Atividade Quando Dura\u00e7\u00e3o Quem Respons\u00e1vel Objetivo Reuni\u00e3o Di\u00e1ria do Projeto Ter-Sex 9h 15 min Todos L\u00edder de Processo O que foi realizado, pr\u00f3ximos passos, bloqueios Demonstra\u00e7\u00e3o do Sprint Segunda 9h 1 hora Todos L\u00edder de Desenvolvimento Apresentar o trabalho realizado e aprovar a conclus\u00e3o da hist\u00f3ria de usu\u00e1rio Retrospectiva do Sprint Segunda 10h 1 hora Todos L\u00edder de Processo A equipe de desenvolvimento compartilha aprendizados e o que pode ser melhorado Planejamento do Sprint Segunda 11h 1 hora Todos PO Dimensionar e planejar hist\u00f3rias de usu\u00e1rio para o sprint Cria\u00e7\u00e3o de Tarefas Ap\u00f3s o Planejamento do Sprint - Equipe de Desenvolvimento L\u00edder de Desenvolvimento Criar tarefas para esclarecer e determinar a velocidade Refinamento do Backlog Quarta 14h 1 hora L\u00edder de Desenvolvimento, PO PO Preparar para o pr\u00f3ximo sprint e garantir que as hist\u00f3rias estejam prontas para o pr\u00f3ximo sprint.","title":"Ritmo do Scrum"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#lider-de-processo","text":"O L\u00edder de Processo \u00e9 respons\u00e1vel por liderar quaisquer pr\u00e1ticas de scrum ou \u00e1geis para permitir que o projeto avance. Facilitar reuni\u00f5es di\u00e1rias e responsabilizar a equipe pela presen\u00e7a e participa\u00e7\u00e3o. Manter a reuni\u00e3o em movimento conforme descrito na p\u00e1gina Reuni\u00e3o Di\u00e1ria do Projeto . Certificar-se de que todas as a\u00e7\u00f5es est\u00e3o documentadas e garantir que cada uma tenha um respons\u00e1vel e uma data de vencimento e rastrear as quest\u00f5es em aberto. Anota\u00e7\u00f5es conforme necess\u00e1rio ap\u00f3s o planejamento/reuni\u00f5es di\u00e1rias. Certificar-se de que os itens s\u00e3o movidos para o estacionamento e garantir o acompanhamento posterior. Manter um local mostrando o trabalho e o status da equipe e remover impedimentos que est\u00e3o bloqueando a equipe. Responsabilizar a equipe pelos resultados de forma solid\u00e1ria. - Certificar-se de que a documenta\u00e7\u00e3o do projeto e do programa est\u00e3o atualizadas. - Garantir o rastreamento/seguimento de a\u00e7\u00f5es da retrospectiva (planejamento de itera\u00e7\u00e3o e libera\u00e7\u00e3o) e das reuni\u00f5es di\u00e1rias. - Facilitar a retrospectiva do sprint. - Treinar o Product Owner e a equipe no processo, conforme necess\u00e1rio.","title":"L\u00edder de Processo"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#gerenciamento-de-backlog","text":"Trabalhamos juntos em uma Defini\u00e7\u00e3o de Pronto e todas as hist\u00f3rias de usu\u00e1rio atribu\u00eddas a um sprint precisam seguir isso Comunicamos o que estamos trabalhando atrav\u00e9s do quadro Atribu\u00edmos a n\u00f3s mesmos uma tarefa quando estamos prontos para trabalhar nela (n\u00e3o antes) e a movemos para ativo Capturamos qualquer trabalho que fazemos relacionado ao projeto em uma hist\u00f3ria de usu\u00e1rio/tarefa Fechamos nossas tarefas/hist\u00f3rias de usu\u00e1rio apenas quando est\u00e3o conclu\u00eddas (conforme descrito na Defini\u00e7\u00e3o de Conclu\u00eddo ) Trabalhamos com o PM se quisermos adicionar uma nova hist\u00f3ria de usu\u00e1rio ao sprint Se adicionarmos novas tarefas ao quadro, certificamo-nos de que ela corresponde aos crit\u00e9rios de aceita\u00e7\u00e3o da hist\u00f3ria de usu\u00e1rio (para evitar o aumento do escopo). Se n\u00e3o corresponder aos crit\u00e9rios de aceita\u00e7\u00e3o, devemos discutir com o PM para ver se precisamos de uma nova hist\u00f3ria de usu\u00e1rio para a tarefa ou se devemos ajustar os crit\u00e9rios de aceita\u00e7\u00e3o.","title":"Gerenciamento de Backlog"},{"location":"agile-development/advanced-topics/team-agreements/working-agreements/#gerenciamento-de-codigo","text":"Seguimos a conven\u00e7\u00e3o de nomenclatura de branch do git flow para branches e identificamos o n\u00famero da tarefa, por exemplo, feature/123-add-working-agreement Mesclamos todo o c\u00f3digo em branches principais atrav\u00e9s de PRs Todos os PRs s\u00e3o revisados por uma pessoa de [Nome do Cliente/Parceiro] e uma da Microsoft (para transfer\u00eancia de conhecimento e para garantir que os padr\u00f5es de c\u00f3digo e seguran\u00e7a sejam atendidos) Sempre revisamos os PRs existentes antes de come\u00e7ar a trabalhar em uma nova tarefa Olhamos os PRs abertos no final da reuni\u00e3o di\u00e1ria para garantir que todos os PRs tenham revisores. Tratamos a documenta\u00e7\u00e3o como c\u00f3digo e aplicamos os mesmos padr\u00f5es ao Markdown como c\u00f3digo.","title":"Gerenciamento de C\u00f3digo"},{"location":"agile-development/basics/","text":"Fundamentos do Desenvolvimento \u00c1gil Se voc\u00ea \u00e9 novo no desenvolvimento \u00c1gil ou est\u00e1 procurando uma atualiza\u00e7\u00e3o, esta se\u00e7\u00e3o fornecer\u00e1 links para informa\u00e7\u00f5es que oferecem melhores pr\u00e1ticas para Gerenciamento de Backlog, Cerim\u00f4nias \u00c1geis, Pap\u00e9is dentro do \u00c1gil e Sprints \u00c1geis. O que \u00e9 \u00c1gil O que \u00e9 Desenvolvimento \u00c1gil Gerenciamento de Backlog Cerim\u00f4nias Pap\u00e9is Sprints","title":"Fundamentos do Desenvolvimento \u00c1gil"},{"location":"agile-development/basics/#fundamentos-do-desenvolvimento-agil","text":"Se voc\u00ea \u00e9 novo no desenvolvimento \u00c1gil ou est\u00e1 procurando uma atualiza\u00e7\u00e3o, esta se\u00e7\u00e3o fornecer\u00e1 links para informa\u00e7\u00f5es que oferecem melhores pr\u00e1ticas para Gerenciamento de Backlog, Cerim\u00f4nias \u00c1geis, Pap\u00e9is dentro do \u00c1gil e Sprints \u00c1geis. O que \u00e9 \u00c1gil O que \u00e9 Desenvolvimento \u00c1gil Gerenciamento de Backlog Cerim\u00f4nias Pap\u00e9is Sprints","title":"Fundamentos do Desenvolvimento \u00c1gil"},{"location":"agile-development/basics/Backlog%20Management/","text":"Fundamentos do Gerenciamento de Backlog para o Backlog do Produto e do Sprint Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as melhores pr\u00e1ticas de gerenciamento de Backlogs do Produto e do Sprint. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico de como gerenciar ambos os backlogs do produto e do sprint, como criar crit\u00e9rios de aceita\u00e7\u00e3o para hist\u00f3rias de usu\u00e1rios, criar uma defini\u00e7\u00e3o de \"feito\" e defini\u00e7\u00e3o de \"pronto\" para hist\u00f3rias de usu\u00e1rios e os fundamentos sobre a estimativa de hist\u00f3rias de usu\u00e1rios. Backlog do Produto Backlog do Sprint Crit\u00e9rios de Aceita\u00e7\u00e3o Defini\u00e7\u00e3o de Feito Defini\u00e7\u00e3o de Pronto Fundamentos da Estimativa em \u00c1gil","title":"Fundamentos do Gerenciamento de Backlog para o Backlog do Produto e do Sprint"},{"location":"agile-development/basics/Backlog%20Management/#fundamentos-do-gerenciamento-de-backlog-para-o-backlog-do-produto-e-do-sprint","text":"Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as melhores pr\u00e1ticas de gerenciamento de Backlogs do Produto e do Sprint. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico de como gerenciar ambos os backlogs do produto e do sprint, como criar crit\u00e9rios de aceita\u00e7\u00e3o para hist\u00f3rias de usu\u00e1rios, criar uma defini\u00e7\u00e3o de \"feito\" e defini\u00e7\u00e3o de \"pronto\" para hist\u00f3rias de usu\u00e1rios e os fundamentos sobre a estimativa de hist\u00f3rias de usu\u00e1rios. Backlog do Produto Backlog do Sprint Crit\u00e9rios de Aceita\u00e7\u00e3o Defini\u00e7\u00e3o de Feito Defini\u00e7\u00e3o de Pronto Fundamentos da Estimativa em \u00c1gil","title":"Fundamentos do Gerenciamento de Backlog para o Backlog do Produto e do Sprint"},{"location":"agile-development/basics/Ceremonies/","text":"Fundamentos das Cerim\u00f4nias \u00c1geis Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as melhores pr\u00e1ticas para conduzir as cerim\u00f4nias \u00e1geis. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico das principais cerim\u00f4nias \u00e1geis em termos de prop\u00f3sito, valor e melhores pr\u00e1ticas para conduzir e facilitar essas cerim\u00f4nias. Planejamento Refinamento Retrospectiva Revis\u00e3o/Demo do Sprint Stand-Up/Scrum Di\u00e1rio","title":"Fundamentos das Cerim\u00f4nias \u00c1geis"},{"location":"agile-development/basics/Ceremonies/#fundamentos-das-cerimonias-ageis","text":"Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as melhores pr\u00e1ticas para conduzir as cerim\u00f4nias \u00e1geis. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico das principais cerim\u00f4nias \u00e1geis em termos de prop\u00f3sito, valor e melhores pr\u00e1ticas para conduzir e facilitar essas cerim\u00f4nias. Planejamento Refinamento Retrospectiva Revis\u00e3o/Demo do Sprint Stand-Up/Scrum Di\u00e1rio","title":"Fundamentos das Cerim\u00f4nias \u00c1geis"},{"location":"agile-development/basics/Roles/","text":"Pap\u00e9is no Agile/Scrum Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as defini\u00e7\u00f5es dos pap\u00e9is tradicionais dentro do Agile/Scrum. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico dos principais pap\u00e9is \u00e1geis em termos do que eles s\u00e3o e das expectativas para o papel. Product Owner (Dono do Produto) Scrum Master Equipe de Desenvolvimento","title":"Pap\u00e9is no Agile/Scrum"},{"location":"agile-development/basics/Roles/#papeis-no-agilescrum","text":"Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as defini\u00e7\u00f5es dos pap\u00e9is tradicionais dentro do Agile/Scrum. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico dos principais pap\u00e9is \u00e1geis em termos do que eles s\u00e3o e das expectativas para o papel. Product Owner (Dono do Produto) Scrum Master Equipe de Desenvolvimento","title":"Pap\u00e9is no Agile/Scrum"},{"location":"agile-development/basics/Sprints/","text":"O Sprint Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as melhores pr\u00e1ticas em rela\u00e7\u00e3o ao que \u00e9 um sprint dentro do agile e as pr\u00e1ticas em torno do sprint. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico do Planejamento do Sprint e do Backlog do Sprint, Execu\u00e7\u00e3o do Sprint e o Standup Di\u00e1rio, Revis\u00e3o do Sprint e Retrospectiva do Sprint, e a principal entrega do sprint, que \u00e9 chamada de Incremento. Planejamento do Sprint e o Backlog do Sprint Execu\u00e7\u00e3o do Sprint e o Standup Di\u00e1rio Revis\u00e3o do Sprint e Retrospectiva do Sprint Incremento","title":"O Sprint"},{"location":"agile-development/basics/Sprints/#o-sprint","text":"Esta se\u00e7\u00e3o cont\u00e9m links que direcionam voc\u00ea para as melhores pr\u00e1ticas em rela\u00e7\u00e3o ao que \u00e9 um sprint dentro do agile e as pr\u00e1ticas em torno do sprint. Ap\u00f3s ler as melhores pr\u00e1ticas, voc\u00ea deve ter um entendimento b\u00e1sico do Planejamento do Sprint e do Backlog do Sprint, Execu\u00e7\u00e3o do Sprint e o Standup Di\u00e1rio, Revis\u00e3o do Sprint e Retrospectiva do Sprint, e a principal entrega do sprint, que \u00e9 chamada de Incremento. Planejamento do Sprint e o Backlog do Sprint Execu\u00e7\u00e3o do Sprint e o Standup Di\u00e1rio Revis\u00e3o do Sprint e Retrospectiva do Sprint Incremento","title":"O Sprint"},{"location":"agile-development/core-expectations/","text":"Expectativas Centrais do Agile Esta se\u00e7\u00e3o cont\u00e9m as expectativas centrais para as pr\u00e1ticas \u00e1geis na ISE: Deve permanecer concisa e vincular \u00e0 documenta\u00e7\u00e3o externa para detalhes. Cada se\u00e7\u00e3o cont\u00e9m uma lista de expectativas centrais e sugest\u00f5es: Expectativas centrais s\u00e3o o que cada equipe de desenvolvimento deve almejar. Sugest\u00f5es n\u00e3o s\u00e3o expectativas. S\u00e3o nossa experi\u00eancia aprendida para atender a essas expectativas e podem ser adotadas e modificadas para se adequar ao projeto. Notas: Preferimos o uso de \"l\u00edder de processo\" em vez de \"scrum master\". Descreve o mesmo papel. \"Equipe\" , neste documento, refere-se a toda a equipe trabalhando em um projeto (equipe de desenvolvimento, l\u00edder de desenvolvimento, gerente de projeto, etc.). Seguimos os princ\u00edpios \u00e1geis e geralmente Scrum Expectativas Gerais para um Projeto A equipe \u00e9 previs\u00edvel em sua entrega. A equipe faz ajustes relevantes e os compartilha de forma transparente. Pap\u00e9is e responsabilidades s\u00e3o esclarecidos e acordados antes do in\u00edcio do projeto. A equipe est\u00e1 impulsionando a melhoria cont\u00ednua de seu pr\u00f3prio processo para atender \u00e0s expectativas centrais e aumentar o sucesso do projeto. Expectativas e Sugest\u00f5es Centrais Sprints Expectativas: A estrutura do sprint oferece oportunidades frequentes para feedback e ajuste no contexto de projetos relativamente pequenos. As cerim\u00f4nias do sprint devem ser planejadas para acomodar os hor\u00e1rios de trabalho da equipe e levar em considera\u00e7\u00e3o restri\u00e7\u00f5es de tempo r\u00edgidas e flex\u00edveis. Sugest\u00f5es: O sprint come\u00e7a no dia 1: a cria\u00e7\u00e3o do plano de jogo, a revis\u00e3o do plano de jogo e o compartilhamento est\u00e3o inclu\u00eddos nos sprints e devem ser refletidos no backlog. Defina um objetivo de sprint que ser\u00e1 usado para determinar o sucesso do sprint. Nota: Os sprints geralmente duram 1 semana para aumentar o n\u00famero de oportunidades para ajustes. E minimizar o risco de perder o objetivo do sprint. Estimativa Expectativas: A estimativa suporta a previsibilidade do trabalho e entrega da equipe. A estimativa refor\u00e7a o valor da responsabilidade para a equipe. O processo de estimativa \u00e9 aprimorado ao longo do tempo e discutido regularmente. A estimativa \u00e9 inclusiva dos diferentes indiv\u00edduos na equipe. Sugest\u00f5es: A estimativa aproximada geralmente \u00e9 feita para um SE 2 gen\u00e9rico de desenvolvimento. Exemplo 1 A equipe usa tamanhos de camiseta (P, M, G, GG) e concorda antecipadamente qual tamanho se encaixa em um sprint. Neste exemplo: P, M se encaixam em um sprint, G, GG s\u00e3o muito grandes para um sprint e precisam ser divididos / refinados O l\u00edder de desenvolvimento, com o apoio da equipe, estima aproximadamente quantas hist\u00f3rias P e M podem ser feitas nos primeiros sprints Essa estimativa aproximada \u00e9 refinada ao longo do tempo e usada como uma entrada para o planejamento futuro do sprint e para ajustar a previs\u00e3o da data de t\u00e9rmino do projeto Exemplo 2 A equipe usa um \u00fanico indicador: \"essa hist\u00f3ria cabe em um sprint?\", se n\u00e3o, a hist\u00f3ria precisa ser dividida O l\u00edder de desenvolvimento, com o apoio da equipe, estima aproximadamente quantas hist\u00f3rias podem ser feitas nos primeiros sprints Quantas hist\u00f3rias s\u00e3o feitas em cada sprint, em m\u00e9dia, \u00e9 usado como uma entrada para o planejamento futuro do sprint e como um indicador para ajustar a previs\u00e3o da data de t\u00e9rmino do projeto Exemplo 3 A equipe faz o planejamento do poker e estima em pontos de hist\u00f3ria Os pontos de hist\u00f3ria s\u00e3o usados aproximadamente para estimar quanto pode ser feito no pr\u00f3ximo sprint O l\u00edder de desenvolvimento e o TPM usam os sprints passados e a velocidade observada para ajustar a previs\u00e3o da data de t\u00e9rmino do projeto Outras considera\u00e7\u00f5es Estimar hist\u00f3rias usando pontos de hist\u00f3ria em projetos menores nem sempre fornece o valor que forneceria em maiores. Evite converter pontos de hist\u00f3ria ou tamanhos de camiseta para dias. Medir a precis\u00e3o da estimativa: Colete dados para monitorar a precis\u00e3o da estimativa e a conclus\u00e3o do sprint ao longo do tempo para impulsionar melhorias. Use o objetivo do sprint para entender se a estimativa estava correta. Se o objetivo do sprint for atingido: mais alguma coisa importa? Pr\u00e1ticas de Scrum: Embora o Scrum n\u00e3o prescreva como dimensionar o trabalho, o Scrum Profissional \u00e9 tendencioso contra a estimativa absoluta (horas, pontos de fun\u00e7\u00e3o, dias ideais, etc.) e em dire\u00e7\u00e3o ao dimensionamento relativo. Planejamento do Poker: \u00e9 uma t\u00e9cnica colaborativa para atribuir tamanho relativo. Os desenvolvedores podem escolher quaisquer unidades que desejarem - pontos de hist\u00f3ria e tamanhos de camiseta s\u00e3o exemplos de unidades. PBIs do 'Mesmo Tamanho' \u00e9 uma abordagem de estimativa relativa que envolve dividir os itens em partes pequenas o suficiente para que sejam mais ou menos do mesmo tamanho. A velocidade pode ser entendida como uma contagem de PBIs; isso \u00e0s vezes \u00e9 usado por equipes que fazem entrega cont\u00ednua. PBIs do 'Tamanho Certo' \u00e9 uma abordagem de estimativa relativa que envolve dividir as coisas em partes pequenas o suficiente para entregar valor em um determinado per\u00edodo de tempo (ou seja, chegar a Feito at\u00e9 o final de um Sprint). Isso \u00e0s vezes est\u00e1 associado a equipes que utilizam fluxo para previs\u00e3o. As equipes usam dados hist\u00f3ricos para determinar se acham que podem concluir o PBI dentro do n\u00edvel de confian\u00e7a que seus dados hist\u00f3ricos dizem que normalmente concluem um PBI. Links: A coisa mais importante que voc\u00ea est\u00e1 perdendo sobre estimativa Planejamento do Sprint Expectativas: O planejamento su porta princ\u00edpios de Diversidade e Inclus\u00e3o e oferece oportunidades iguais. - O Planejamento define como o trabalho ser\u00e1 conclu\u00eddo no sprint. - As hist\u00f3rias se encaixam em um sprint e s\u00e3o projetadas e prontas antes do planejamento. Sugest\u00f5es: Objetivo do Sprint: Considere definir um objetivo de sprint ou uma lista de objetivos para cada sprint. Objetivos de sprint eficazes s\u00e3o uma lista concisa de itens em forma de t\u00f3picos. Um objetivo de sprint pode ser criado primeiro e usado como uma entrada para escolher as hist\u00f3rias para o sprint. Um objetivo de sprint tamb\u00e9m pode ser criado a partir da lista de hist\u00f3rias que foram escolhidas para o Sprint. O objetivo do sprint pode ser usado: No final de cada reuni\u00e3o de stand-up, para lembrar a estrela do norte para o Sprint e ajudar todos a dar um passo atr\u00e1s *Durante a revis\u00e3o do sprint (\"o objetivo foi alcan\u00e7ado?\", \"Se n\u00e3o, por qu\u00ea?\") Nota: Uma maneira simples de definir um objetivo de sprint \u00e9 criar uma hist\u00f3ria de usu\u00e1rio em cada backlog de sprint e nome\u00e1-la \"Objetivo do Sprint XX\". Voc\u00ea pode adicionar os t\u00f3picos na descri\u00e7\u00e3o. Hist\u00f3rias: Exemplo 1 - Preparando com anteced\u00eancia: O l\u00edder de desenvolvimento e o propriet\u00e1rio do produto planejam tempo para preparar o backlog do sprint antes do planejamento do sprint. O l\u00edder de desenvolvimento usa sua experi\u00eancia (passada e no projeto atual) e a estimativa feita para essas hist\u00f3rias para avaliar quantas devem estar no sprint. O l\u00edder de desenvolvimento pede \u00e0 equipe inteira para olhar o backlog provis\u00f3rio do sprint antes do planejamento do sprint. O l\u00edder de desenvolvimento atribui hist\u00f3rias a desenvolvedores espec\u00edficos ap\u00f3s confirmar com eles que faz sentido Durante a reuni\u00e3o de planejamento do sprint, a equipe revisa o objetivo do sprint e as hist\u00f3rias. Todos confirmam que entendem o plano e acham que \u00e9 razo\u00e1vel. Exemplo 2 - Construindo durante a reuni\u00e3o de planejamento: O propriet\u00e1rio do produto garante que os itens de maior prioridade do backlog do produto sejam refinados e estimados seguindo o processo de estimativa da equipe. Durante a reuni\u00e3o de planejamento do Sprint, o propriet\u00e1rio do produto descreve cada hist\u00f3ria, uma a uma, come\u00e7ando pela de maior prioridade. Para cada hist\u00f3ria, o l\u00edder de desenvolvimento e a equipe confirmam que entendem o que precisa ser feito e adicionam a hist\u00f3ria ao backlog do sprint. A equipe continua considerando mais hist\u00f3rias at\u00e9 um ponto em que concordam que o backlog do sprint est\u00e1 cheio. Isso deve ser informado pela estimativa, experi\u00eancia passada do desenvolvedor e experi\u00eancia passada neste projeto espec\u00edfico. As hist\u00f3rias s\u00e3o atribu\u00eddas durante a reuni\u00e3o de planejamento: Op\u00e7\u00e3o 1: O l\u00edder de desenvolvimento faz sugest\u00f5es sobre quem poderia trabalhar em cada hist\u00f3ria. Cada engenheiro concorda ou discute, se necess\u00e1rio. Op\u00e7\u00e3o 2: A equipe revisa cada hist\u00f3ria e os engenheiros volunt\u00e1rios selecionam a que desejam ser atribu\u00eddos. ( Nota : esta op\u00e7\u00e3o pode causar problemas com as primeiras expectativas centrais. Quem trabalha no qu\u00ea? Em \u00faltima an\u00e1lise, \u00e9 responsabilidade do l\u00edder de desenvolvimento garantir que cada engenheiro tenha a oportunidade de trabalhar no que faz sentido para seu crescimento.) Tarefas: Exemplos de abordagens para cria\u00e7\u00e3o e atribui\u00e7\u00e3o de tarefas: As hist\u00f3rias s\u00e3o divididas em tarefas com anteced\u00eancia pelo l\u00edder de desenvolvimento e atribu\u00eddas antes/durante o planejamento do sprint aos engenheiros. As hist\u00f3rias s\u00e3o atribu\u00eddas a engenheiros mais experientes, que s\u00e3o respons\u00e1veis por dividi-las em tarefas. As hist\u00f3rias s\u00e3o divididas em tarefas durante a reuni\u00e3o de planejamento do Sprint pela equipe inteira. Nota : Dependendo da senioridade da equipe, considere dividir em tarefas antes do planejamento do sprint. Isso pode ajudar a sair do planejamento do sprint com todo o trabalho atribu\u00eddo. Tamb\u00e9m aumenta a clareza para engenheiros j\u00fanior. Links: Defini\u00e7\u00e3o de Pronto Modelo de Objetivo de Sprint *Notas: A autoatribui\u00e7\u00e3o por membros da equipe pode dar uma sensa\u00e7\u00e3o de justi\u00e7a na forma como o trabalho \u00e9 dividido na equipe. \u00c0s vezes, isso acaba n\u00e3o sendo o caso, pois pode dar vantagem \u00e0s vozes mais altas ou mais experientes na equipe. Os indiv\u00edduos tamb\u00e9m tendem a permanecer em sua zona de conforto, o que pode n\u00e3o ser a abordagem certa para o pr\u00f3prio crescimento.* Backlog Expectativas: As hist\u00f3rias de usu\u00e1rio t\u00eam crit\u00e9rios de aceita\u00e7\u00e3o claros e defini\u00e7\u00e3o de pronto. As atividades de design s\u00e3o planejadas como parte do backlog (um design para uma hist\u00f3ria que precisa dele deve ser feito antes de ser adicionado em um Sprint). Sugest\u00f5es: Considere o refinamento do backlog como uma atividade cont\u00ednua, que se expande fora da t\u00edpica \"Reuni\u00e3o de Refinamento\". A d\u00edvida t\u00e9cnica \u00e9 principalmente devida a atalhos feitos na implementa\u00e7\u00e3o, bem como ao custo de manuten\u00e7\u00e3o futuro como resultado natural da melhoria cont\u00ednua. Atalhos devem geralmente ser evitados. Em alguns casos raros em que ocorrem, priorizar e planejar atividades de melhoria para reduzir essa d\u00edvida em um momento posterior \u00e9 a abordagem recomendada. Retrospectivas Expectativas: As retrospectivas levam a itens acion\u00e1veis que ajudam a crescer as pr\u00e1ticas de engenharia da equipe. Esses itens est\u00e3o no backlog, atribu\u00eddos e priorizados para serem corrigidos at\u00e9 uma data acordada (o padr\u00e3o sendo a pr\u00f3xima retrospectiva). \u00c9 usado para fazer as perguntas dif\u00edceis (\"geralmente n\u00e3o terminamos o que planejamos, vamos falar sobre isso\") quando necess\u00e1rio. Sugest\u00f5es: Considere outros formatos de retro dispon\u00edveis fora de Mad Sad Glad. Coletar dados: Triple Nickels, Linha do Tempo, Mad Sad Glad, Radar da Equipe Gerar Insights: 5 Porqu\u00eas, Espinha de Peixe, Padr\u00f5es e Mudan\u00e7as Considere definir uma \u00e1rea de foco para a retro. Agende tempo suficiente para garantir que voc\u00ea possa ter a conversa de que precisa para obter o plano correto de a\u00e7\u00e3o e melhorar a forma como voc\u00ea trabalha. Traga um facilitador neutro para retrospectivas de projeto ou retrospectivas que introspectam ap\u00f3s um per\u00edodo dif\u00edcil. Use as seguintes t\u00e9cnicas de retrospectivas para abordar tend\u00eancias espec\u00edficas que possam estar surgindo em um projeto: 5 porqu\u00eas: Se uma equipe est\u00e1 enfrentando um problema e n\u00e3o tem certeza da causa raiz exata, o exerc\u00edcio dos 5 porqu\u00eas, retirado do setor de an\u00e1lise de neg\u00f3cios, pode ajudar a chegar ao fundo dele. Por exemplo, se uma equipe n\u00e3o consegue chegar a Pronto a cada Sprint, isso iria para o topo do quadro branco. A equipe ent\u00e3o pergunta por que esse problema existe, escrevendo essa resposta na caixa abaixo. Em seguida, a equipe pergunta por que novamente, mas desta vez em resposta ao porqu\u00ea que acabaram de identificar. Continue esse processo at\u00e9 que a equipe identifique uma causa raiz real, que geralmente se torna aparente em cinco etapas. Processos, ferramentas, indiv\u00edduos, intera\u00e7\u00f5es e a Defini\u00e7\u00e3o de Pronto: Esta abordagem incentiva os membros da equipe a pensar de forma mais ampla. Pe\u00e7a aos membros da equipe para identificar o que est\u00e1 indo bem e ideias para melhoria nas categorias de processos, ferramentas, indiv\u00edduos/intera\u00e7\u00f5es e a Defini\u00e7\u00e3o de Pronto. Em seguida, pe\u00e7a aos membros da equipe para votar em quais ideias de melhoria focar durante o pr\u00f3ximo Sprint. Foco: Esta t\u00e9cnica de retrospectiva incorpora o conceito de vis\u00e3o. Usando esta t\u00e9cnica, voc\u00ea pergunta aos membros da equipe para onde gostariam de ir? Decida como a equipe deve ser em 4 semanas e, em seguida, pergunte o que est\u00e1 impedindo-os de chegar l\u00e1 e como podem resolver o impedimento. Se voc\u00ea est\u00e1 focando em melhorias espec\u00edficas, voc\u00ea pode usar esta t\u00e9cnica para uma ou duas retrospectivas seguidas, para que a equipe possa ver o progresso ao longo do tempo. Demonstra\u00e7\u00e3o do Sprint Expectativas: Cada sprint tem demonstra\u00e7\u00f5es que ilustram o objetivo do sprint e como ele se encaixa no objetivo do projeto. Sugest\u00f5es: Considere n\u00e3o pr\u00e9-gravar demonstra\u00e7\u00f5es de sprint com anteced\u00eancia. Voc\u00ea pode gravar a reuni\u00e3o de demonstra\u00e7\u00e3o e arquiv\u00e1-la. Uma demonstra\u00e7\u00e3o n\u00e3o precisa ser sobre c\u00f3digo em execu\u00e7\u00e3o. Pode ser mostrando documenta\u00e7\u00e3o que foi escrita. Stand-up Expectativas: O stand-up \u00e9 executado de forma eficiente. O stand-up ajuda a equipe a entender o que foi feito, o que ser\u00e1 feito e quais s\u00e3o os bloqueadores. O stand-up ajuda a equipe a entender se eles atender\u00e3o ao objetivo do sprint ou n\u00e3o. Sugest\u00f5es: Mantenha o stand-up curto e eficiente. Reserve as conversas mais longas para uma se\u00e7\u00e3o de estacionamento ou para uma conversa que ser\u00e1 planejada posteriormente. Fa\u00e7a stand-ups di\u00e1rios: 15 minutos de stand-up e 15 minutos de estacionamento. Se algu\u00e9m n\u00e3o puder comparecer ao stand-up excepcionalmente: Pe\u00e7a-lhes para fazer um stand-up escrito com anteced\u00eancia. Os stand-ups devem incluir todos os envolvidos no projeto, incluindo o cliente. Projetos com fusos hor\u00e1rios amplamente divergentes devem ser evitados, se poss\u00edvel, mas se voc\u00ea estiver em um, voc\u00ea deve adaptar os stand-ups para atender \u00e0s necessidades e restri\u00e7\u00f5es de tempo de todos os membros da equipe. Documenta\u00e7\u00e3o O que \u00e9 Scrum? Retrospectiva \u00c1gil: Tornando Boas Equipes \u00d3timas Hist\u00f3rias de Usu\u00e1rios Aplicadas: Para Desenvolvimento de Software Scrum Essencial: Um Guia Pr\u00e1tico para o Processo \u00c1gil Mais Popular","title":"Expectativas Centrais do Agile"},{"location":"agile-development/core-expectations/#expectativas-centrais-do-agile","text":"Esta se\u00e7\u00e3o cont\u00e9m as expectativas centrais para as pr\u00e1ticas \u00e1geis na ISE: Deve permanecer concisa e vincular \u00e0 documenta\u00e7\u00e3o externa para detalhes. Cada se\u00e7\u00e3o cont\u00e9m uma lista de expectativas centrais e sugest\u00f5es: Expectativas centrais s\u00e3o o que cada equipe de desenvolvimento deve almejar. Sugest\u00f5es n\u00e3o s\u00e3o expectativas. S\u00e3o nossa experi\u00eancia aprendida para atender a essas expectativas e podem ser adotadas e modificadas para se adequar ao projeto. Notas: Preferimos o uso de \"l\u00edder de processo\" em vez de \"scrum master\". Descreve o mesmo papel. \"Equipe\" , neste documento, refere-se a toda a equipe trabalhando em um projeto (equipe de desenvolvimento, l\u00edder de desenvolvimento, gerente de projeto, etc.). Seguimos os princ\u00edpios \u00e1geis e geralmente Scrum","title":"Expectativas Centrais do Agile"},{"location":"agile-development/core-expectations/#expectativas-gerais-para-um-projeto","text":"A equipe \u00e9 previs\u00edvel em sua entrega. A equipe faz ajustes relevantes e os compartilha de forma transparente. Pap\u00e9is e responsabilidades s\u00e3o esclarecidos e acordados antes do in\u00edcio do projeto. A equipe est\u00e1 impulsionando a melhoria cont\u00ednua de seu pr\u00f3prio processo para atender \u00e0s expectativas centrais e aumentar o sucesso do projeto.","title":"Expectativas Gerais para um Projeto"},{"location":"agile-development/core-expectations/#expectativas-e-sugestoes-centrais","text":"","title":"Expectativas e Sugest\u00f5es Centrais"},{"location":"agile-development/core-expectations/#sprints","text":"Expectativas: A estrutura do sprint oferece oportunidades frequentes para feedback e ajuste no contexto de projetos relativamente pequenos. As cerim\u00f4nias do sprint devem ser planejadas para acomodar os hor\u00e1rios de trabalho da equipe e levar em considera\u00e7\u00e3o restri\u00e7\u00f5es de tempo r\u00edgidas e flex\u00edveis. Sugest\u00f5es: O sprint come\u00e7a no dia 1: a cria\u00e7\u00e3o do plano de jogo, a revis\u00e3o do plano de jogo e o compartilhamento est\u00e3o inclu\u00eddos nos sprints e devem ser refletidos no backlog. Defina um objetivo de sprint que ser\u00e1 usado para determinar o sucesso do sprint. Nota: Os sprints geralmente duram 1 semana para aumentar o n\u00famero de oportunidades para ajustes. E minimizar o risco de perder o objetivo do sprint.","title":"Sprints"},{"location":"agile-development/core-expectations/#estimativa","text":"Expectativas: A estimativa suporta a previsibilidade do trabalho e entrega da equipe. A estimativa refor\u00e7a o valor da responsabilidade para a equipe. O processo de estimativa \u00e9 aprimorado ao longo do tempo e discutido regularmente. A estimativa \u00e9 inclusiva dos diferentes indiv\u00edduos na equipe. Sugest\u00f5es: A estimativa aproximada geralmente \u00e9 feita para um SE 2 gen\u00e9rico de desenvolvimento. Exemplo 1 A equipe usa tamanhos de camiseta (P, M, G, GG) e concorda antecipadamente qual tamanho se encaixa em um sprint. Neste exemplo: P, M se encaixam em um sprint, G, GG s\u00e3o muito grandes para um sprint e precisam ser divididos / refinados O l\u00edder de desenvolvimento, com o apoio da equipe, estima aproximadamente quantas hist\u00f3rias P e M podem ser feitas nos primeiros sprints Essa estimativa aproximada \u00e9 refinada ao longo do tempo e usada como uma entrada para o planejamento futuro do sprint e para ajustar a previs\u00e3o da data de t\u00e9rmino do projeto Exemplo 2 A equipe usa um \u00fanico indicador: \"essa hist\u00f3ria cabe em um sprint?\", se n\u00e3o, a hist\u00f3ria precisa ser dividida O l\u00edder de desenvolvimento, com o apoio da equipe, estima aproximadamente quantas hist\u00f3rias podem ser feitas nos primeiros sprints Quantas hist\u00f3rias s\u00e3o feitas em cada sprint, em m\u00e9dia, \u00e9 usado como uma entrada para o planejamento futuro do sprint e como um indicador para ajustar a previs\u00e3o da data de t\u00e9rmino do projeto Exemplo 3 A equipe faz o planejamento do poker e estima em pontos de hist\u00f3ria Os pontos de hist\u00f3ria s\u00e3o usados aproximadamente para estimar quanto pode ser feito no pr\u00f3ximo sprint O l\u00edder de desenvolvimento e o TPM usam os sprints passados e a velocidade observada para ajustar a previs\u00e3o da data de t\u00e9rmino do projeto Outras considera\u00e7\u00f5es Estimar hist\u00f3rias usando pontos de hist\u00f3ria em projetos menores nem sempre fornece o valor que forneceria em maiores. Evite converter pontos de hist\u00f3ria ou tamanhos de camiseta para dias. Medir a precis\u00e3o da estimativa: Colete dados para monitorar a precis\u00e3o da estimativa e a conclus\u00e3o do sprint ao longo do tempo para impulsionar melhorias. Use o objetivo do sprint para entender se a estimativa estava correta. Se o objetivo do sprint for atingido: mais alguma coisa importa? Pr\u00e1ticas de Scrum: Embora o Scrum n\u00e3o prescreva como dimensionar o trabalho, o Scrum Profissional \u00e9 tendencioso contra a estimativa absoluta (horas, pontos de fun\u00e7\u00e3o, dias ideais, etc.) e em dire\u00e7\u00e3o ao dimensionamento relativo. Planejamento do Poker: \u00e9 uma t\u00e9cnica colaborativa para atribuir tamanho relativo. Os desenvolvedores podem escolher quaisquer unidades que desejarem - pontos de hist\u00f3ria e tamanhos de camiseta s\u00e3o exemplos de unidades. PBIs do 'Mesmo Tamanho' \u00e9 uma abordagem de estimativa relativa que envolve dividir os itens em partes pequenas o suficiente para que sejam mais ou menos do mesmo tamanho. A velocidade pode ser entendida como uma contagem de PBIs; isso \u00e0s vezes \u00e9 usado por equipes que fazem entrega cont\u00ednua. PBIs do 'Tamanho Certo' \u00e9 uma abordagem de estimativa relativa que envolve dividir as coisas em partes pequenas o suficiente para entregar valor em um determinado per\u00edodo de tempo (ou seja, chegar a Feito at\u00e9 o final de um Sprint). Isso \u00e0s vezes est\u00e1 associado a equipes que utilizam fluxo para previs\u00e3o. As equipes usam dados hist\u00f3ricos para determinar se acham que podem concluir o PBI dentro do n\u00edvel de confian\u00e7a que seus dados hist\u00f3ricos dizem que normalmente concluem um PBI. Links: A coisa mais importante que voc\u00ea est\u00e1 perdendo sobre estimativa","title":"Estimativa"},{"location":"agile-development/core-expectations/#planejamento-do-sprint","text":"Expectativas: O planejamento su porta princ\u00edpios de Diversidade e Inclus\u00e3o e oferece oportunidades iguais. - O Planejamento define como o trabalho ser\u00e1 conclu\u00eddo no sprint. - As hist\u00f3rias se encaixam em um sprint e s\u00e3o projetadas e prontas antes do planejamento. Sugest\u00f5es: Objetivo do Sprint: Considere definir um objetivo de sprint ou uma lista de objetivos para cada sprint. Objetivos de sprint eficazes s\u00e3o uma lista concisa de itens em forma de t\u00f3picos. Um objetivo de sprint pode ser criado primeiro e usado como uma entrada para escolher as hist\u00f3rias para o sprint. Um objetivo de sprint tamb\u00e9m pode ser criado a partir da lista de hist\u00f3rias que foram escolhidas para o Sprint. O objetivo do sprint pode ser usado: No final de cada reuni\u00e3o de stand-up, para lembrar a estrela do norte para o Sprint e ajudar todos a dar um passo atr\u00e1s *Durante a revis\u00e3o do sprint (\"o objetivo foi alcan\u00e7ado?\", \"Se n\u00e3o, por qu\u00ea?\") Nota: Uma maneira simples de definir um objetivo de sprint \u00e9 criar uma hist\u00f3ria de usu\u00e1rio em cada backlog de sprint e nome\u00e1-la \"Objetivo do Sprint XX\". Voc\u00ea pode adicionar os t\u00f3picos na descri\u00e7\u00e3o. Hist\u00f3rias: Exemplo 1 - Preparando com anteced\u00eancia: O l\u00edder de desenvolvimento e o propriet\u00e1rio do produto planejam tempo para preparar o backlog do sprint antes do planejamento do sprint. O l\u00edder de desenvolvimento usa sua experi\u00eancia (passada e no projeto atual) e a estimativa feita para essas hist\u00f3rias para avaliar quantas devem estar no sprint. O l\u00edder de desenvolvimento pede \u00e0 equipe inteira para olhar o backlog provis\u00f3rio do sprint antes do planejamento do sprint. O l\u00edder de desenvolvimento atribui hist\u00f3rias a desenvolvedores espec\u00edficos ap\u00f3s confirmar com eles que faz sentido Durante a reuni\u00e3o de planejamento do sprint, a equipe revisa o objetivo do sprint e as hist\u00f3rias. Todos confirmam que entendem o plano e acham que \u00e9 razo\u00e1vel. Exemplo 2 - Construindo durante a reuni\u00e3o de planejamento: O propriet\u00e1rio do produto garante que os itens de maior prioridade do backlog do produto sejam refinados e estimados seguindo o processo de estimativa da equipe. Durante a reuni\u00e3o de planejamento do Sprint, o propriet\u00e1rio do produto descreve cada hist\u00f3ria, uma a uma, come\u00e7ando pela de maior prioridade. Para cada hist\u00f3ria, o l\u00edder de desenvolvimento e a equipe confirmam que entendem o que precisa ser feito e adicionam a hist\u00f3ria ao backlog do sprint. A equipe continua considerando mais hist\u00f3rias at\u00e9 um ponto em que concordam que o backlog do sprint est\u00e1 cheio. Isso deve ser informado pela estimativa, experi\u00eancia passada do desenvolvedor e experi\u00eancia passada neste projeto espec\u00edfico. As hist\u00f3rias s\u00e3o atribu\u00eddas durante a reuni\u00e3o de planejamento: Op\u00e7\u00e3o 1: O l\u00edder de desenvolvimento faz sugest\u00f5es sobre quem poderia trabalhar em cada hist\u00f3ria. Cada engenheiro concorda ou discute, se necess\u00e1rio. Op\u00e7\u00e3o 2: A equipe revisa cada hist\u00f3ria e os engenheiros volunt\u00e1rios selecionam a que desejam ser atribu\u00eddos. ( Nota : esta op\u00e7\u00e3o pode causar problemas com as primeiras expectativas centrais. Quem trabalha no qu\u00ea? Em \u00faltima an\u00e1lise, \u00e9 responsabilidade do l\u00edder de desenvolvimento garantir que cada engenheiro tenha a oportunidade de trabalhar no que faz sentido para seu crescimento.) Tarefas: Exemplos de abordagens para cria\u00e7\u00e3o e atribui\u00e7\u00e3o de tarefas: As hist\u00f3rias s\u00e3o divididas em tarefas com anteced\u00eancia pelo l\u00edder de desenvolvimento e atribu\u00eddas antes/durante o planejamento do sprint aos engenheiros. As hist\u00f3rias s\u00e3o atribu\u00eddas a engenheiros mais experientes, que s\u00e3o respons\u00e1veis por dividi-las em tarefas. As hist\u00f3rias s\u00e3o divididas em tarefas durante a reuni\u00e3o de planejamento do Sprint pela equipe inteira. Nota : Dependendo da senioridade da equipe, considere dividir em tarefas antes do planejamento do sprint. Isso pode ajudar a sair do planejamento do sprint com todo o trabalho atribu\u00eddo. Tamb\u00e9m aumenta a clareza para engenheiros j\u00fanior. Links: Defini\u00e7\u00e3o de Pronto Modelo de Objetivo de Sprint *Notas: A autoatribui\u00e7\u00e3o por membros da equipe pode dar uma sensa\u00e7\u00e3o de justi\u00e7a na forma como o trabalho \u00e9 dividido na equipe. \u00c0s vezes, isso acaba n\u00e3o sendo o caso, pois pode dar vantagem \u00e0s vozes mais altas ou mais experientes na equipe. Os indiv\u00edduos tamb\u00e9m tendem a permanecer em sua zona de conforto, o que pode n\u00e3o ser a abordagem certa para o pr\u00f3prio crescimento.*","title":"Planejamento do Sprint"},{"location":"agile-development/core-expectations/#backlog","text":"Expectativas: As hist\u00f3rias de usu\u00e1rio t\u00eam crit\u00e9rios de aceita\u00e7\u00e3o claros e defini\u00e7\u00e3o de pronto. As atividades de design s\u00e3o planejadas como parte do backlog (um design para uma hist\u00f3ria que precisa dele deve ser feito antes de ser adicionado em um Sprint). Sugest\u00f5es: Considere o refinamento do backlog como uma atividade cont\u00ednua, que se expande fora da t\u00edpica \"Reuni\u00e3o de Refinamento\". A d\u00edvida t\u00e9cnica \u00e9 principalmente devida a atalhos feitos na implementa\u00e7\u00e3o, bem como ao custo de manuten\u00e7\u00e3o futuro como resultado natural da melhoria cont\u00ednua. Atalhos devem geralmente ser evitados. Em alguns casos raros em que ocorrem, priorizar e planejar atividades de melhoria para reduzir essa d\u00edvida em um momento posterior \u00e9 a abordagem recomendada.","title":"Backlog"},{"location":"agile-development/core-expectations/#retrospectivas","text":"Expectativas: As retrospectivas levam a itens acion\u00e1veis que ajudam a crescer as pr\u00e1ticas de engenharia da equipe. Esses itens est\u00e3o no backlog, atribu\u00eddos e priorizados para serem corrigidos at\u00e9 uma data acordada (o padr\u00e3o sendo a pr\u00f3xima retrospectiva). \u00c9 usado para fazer as perguntas dif\u00edceis (\"geralmente n\u00e3o terminamos o que planejamos, vamos falar sobre isso\") quando necess\u00e1rio. Sugest\u00f5es: Considere outros formatos de retro dispon\u00edveis fora de Mad Sad Glad. Coletar dados: Triple Nickels, Linha do Tempo, Mad Sad Glad, Radar da Equipe Gerar Insights: 5 Porqu\u00eas, Espinha de Peixe, Padr\u00f5es e Mudan\u00e7as Considere definir uma \u00e1rea de foco para a retro. Agende tempo suficiente para garantir que voc\u00ea possa ter a conversa de que precisa para obter o plano correto de a\u00e7\u00e3o e melhorar a forma como voc\u00ea trabalha. Traga um facilitador neutro para retrospectivas de projeto ou retrospectivas que introspectam ap\u00f3s um per\u00edodo dif\u00edcil. Use as seguintes t\u00e9cnicas de retrospectivas para abordar tend\u00eancias espec\u00edficas que possam estar surgindo em um projeto: 5 porqu\u00eas: Se uma equipe est\u00e1 enfrentando um problema e n\u00e3o tem certeza da causa raiz exata, o exerc\u00edcio dos 5 porqu\u00eas, retirado do setor de an\u00e1lise de neg\u00f3cios, pode ajudar a chegar ao fundo dele. Por exemplo, se uma equipe n\u00e3o consegue chegar a Pronto a cada Sprint, isso iria para o topo do quadro branco. A equipe ent\u00e3o pergunta por que esse problema existe, escrevendo essa resposta na caixa abaixo. Em seguida, a equipe pergunta por que novamente, mas desta vez em resposta ao porqu\u00ea que acabaram de identificar. Continue esse processo at\u00e9 que a equipe identifique uma causa raiz real, que geralmente se torna aparente em cinco etapas. Processos, ferramentas, indiv\u00edduos, intera\u00e7\u00f5es e a Defini\u00e7\u00e3o de Pronto: Esta abordagem incentiva os membros da equipe a pensar de forma mais ampla. Pe\u00e7a aos membros da equipe para identificar o que est\u00e1 indo bem e ideias para melhoria nas categorias de processos, ferramentas, indiv\u00edduos/intera\u00e7\u00f5es e a Defini\u00e7\u00e3o de Pronto. Em seguida, pe\u00e7a aos membros da equipe para votar em quais ideias de melhoria focar durante o pr\u00f3ximo Sprint. Foco: Esta t\u00e9cnica de retrospectiva incorpora o conceito de vis\u00e3o. Usando esta t\u00e9cnica, voc\u00ea pergunta aos membros da equipe para onde gostariam de ir? Decida como a equipe deve ser em 4 semanas e, em seguida, pergunte o que est\u00e1 impedindo-os de chegar l\u00e1 e como podem resolver o impedimento. Se voc\u00ea est\u00e1 focando em melhorias espec\u00edficas, voc\u00ea pode usar esta t\u00e9cnica para uma ou duas retrospectivas seguidas, para que a equipe possa ver o progresso ao longo do tempo.","title":"Retrospectivas"},{"location":"agile-development/core-expectations/#demonstracao-do-sprint","text":"Expectativas: Cada sprint tem demonstra\u00e7\u00f5es que ilustram o objetivo do sprint e como ele se encaixa no objetivo do projeto. Sugest\u00f5es: Considere n\u00e3o pr\u00e9-gravar demonstra\u00e7\u00f5es de sprint com anteced\u00eancia. Voc\u00ea pode gravar a reuni\u00e3o de demonstra\u00e7\u00e3o e arquiv\u00e1-la. Uma demonstra\u00e7\u00e3o n\u00e3o precisa ser sobre c\u00f3digo em execu\u00e7\u00e3o. Pode ser mostrando documenta\u00e7\u00e3o que foi escrita.","title":"Demonstra\u00e7\u00e3o do Sprint"},{"location":"agile-development/core-expectations/#stand-up","text":"Expectativas: O stand-up \u00e9 executado de forma eficiente. O stand-up ajuda a equipe a entender o que foi feito, o que ser\u00e1 feito e quais s\u00e3o os bloqueadores. O stand-up ajuda a equipe a entender se eles atender\u00e3o ao objetivo do sprint ou n\u00e3o. Sugest\u00f5es: Mantenha o stand-up curto e eficiente. Reserve as conversas mais longas para uma se\u00e7\u00e3o de estacionamento ou para uma conversa que ser\u00e1 planejada posteriormente. Fa\u00e7a stand-ups di\u00e1rios: 15 minutos de stand-up e 15 minutos de estacionamento. Se algu\u00e9m n\u00e3o puder comparecer ao stand-up excepcionalmente: Pe\u00e7a-lhes para fazer um stand-up escrito com anteced\u00eancia. Os stand-ups devem incluir todos os envolvidos no projeto, incluindo o cliente. Projetos com fusos hor\u00e1rios amplamente divergentes devem ser evitados, se poss\u00edvel, mas se voc\u00ea estiver em um, voc\u00ea deve adaptar os stand-ups para atender \u00e0s necessidades e restri\u00e7\u00f5es de tempo de todos os membros da equipe.","title":"Stand-up"},{"location":"agile-development/core-expectations/#documentacao","text":"O que \u00e9 Scrum? Retrospectiva \u00c1gil: Tornando Boas Equipes \u00d3timas Hist\u00f3rias de Usu\u00e1rios Aplicadas: Para Desenvolvimento de Software Scrum Essencial: Um Guia Pr\u00e1tico para o Processo \u00c1gil Mais Popular","title":"Documenta\u00e7\u00e3o"},{"location":"automated-testing/","text":"Testando Mapa de Resultados para T\u00e9cnicas de Teste A tabela abaixo mapeia resultados -- os resultados que voc\u00ea pode querer alcan\u00e7ar em seus esfor\u00e7os de valida\u00e7\u00e3o -- para uma ou mais t\u00e9cnicas que podem ser usadas para alcan\u00e7ar esse resultado. Quando estou trabalhando em... Quero obter este resultado... ...ent\u00e3o devo considerar Desenvolvimento Comprovar compatibilidade retroativa com chamadores e clientes existentes Shadow testing Desenvolvimento Garantir que a l\u00f3gica do programa esteja correta para uma variedade de entradas esperadas, principais, de borda e inesperadas Unit testing ; Testes funcionais; Consumer-driven Contract Testing ; Integration testing Desenvolvimento Prevenir regress\u00f5es na corre\u00e7\u00e3o l\u00f3gica; quanto mais cedo, melhor Unit testing ; Testes funcionais; Consumer-driven Contract Testing ; Integration testing ; An\u00e9is (cada um desses s\u00e3o escopos de cobertura em expans\u00e3o) Desenvolvimento Validar rapidamente a corre\u00e7\u00e3o principal de um ponto de funcionalidade (por exemplo, uma \u00fanica API), manualmente Testes de fuma\u00e7a manuais Ferramentas: postman, powershell, curl Desenvolvimento Validar intera\u00e7\u00f5es entre componentes isoladamente, garantindo que componentes consumidores e provedores sejam compat\u00edveis e estejam de acordo com um entendimento compartilhado documentado em um contrato Consumer-driven Contract Testing Desenvolvimento; Integration testing Validar que m\u00faltiplos componentes funcionem juntos em v\u00e1rias interfaces em uma cadeia de chamadas, incluindo saltos de rede Integration testing ; Testes de ponta a ponta ( End-to-End testing ); Testes de ponta a ponta segmentados ( End-to-End testing ) Desenvolvimento Comprovar recupera\u00e7\u00e3o de desastres \u2013 recupera\u00e7\u00e3o de corrup\u00e7\u00e3o de dados Simula\u00e7\u00f5es de DR Desenvolvimento Encontrar vulnerabilidades na autentica\u00e7\u00e3o ou autoriza\u00e7\u00e3o do servi\u00e7o Cen\u00e1rio (seguran\u00e7a) Desenvolvimento Comprovar interpreta\u00e7\u00e3o correta de RBAC e reivindica\u00e7\u00f5es no c\u00f3digo de autoriza\u00e7\u00e3o Cen\u00e1rio (seguran\u00e7a) Desenvolvimento Documentar e/ou impor uso v\u00e1lido da API Unit testing ; Testes funcionais; Consumer-driven Contract Testing Desenvolvimento Comprovar a corre\u00e7\u00e3o da implementa\u00e7\u00e3o antes de uma depend\u00eancia ou na aus\u00eancia de uma depend\u00eancia Unit testing (com mocks); Unit testing (com emuladores); Consumer-driven Contract Testing Desenvolvimento Garantir que a interface do usu\u00e1rio seja acess\u00edvel Accessibility Desenvolvimento Garantir que os usu\u00e1rios possam operar a interface UI testing (automated) (observa\u00e7\u00e3o de usabilidade humana) Desenvolvimento Prevenir regress\u00e3o na experi\u00eancia do usu\u00e1rio Automa\u00e7\u00e3o de UI; End-to-End testing Desenvolvimento Detectar e prevenir fen\u00f4menos de 'vizinho barulhento' Load testing Desenvolvimento Detectar quedas de disponibilidade Synthetic Transaction testing ; Sondas externas Desenvolvimento Prevenir regress\u00e3o em casos de uso / fluxos de trabalho de cen\u00e1rio 'composto' (por exemplo, um sistema de com\u00e9rcio eletr\u00f4nico pode ter muitas APIs que, usadas juntas em uma sequ\u00eancia, executam um cen\u00e1rio de \"compra e venda\") End-to-End testing ; Cen\u00e1rio Desenvolvimento; Opera\u00e7\u00f5es Prevenir regress\u00f5es em m\u00e9tricas de desempenho em tempo de execu\u00e7\u00e3o, por exemplo, lat\u00eancia / custo / consumo de recursos; quanto mais cedo, melhor An\u00e9is; Synthetic Transaction testing / Transa\u00e7\u00e3o; C\u00e3es de guarda de revers\u00e3o Desenvolvimento; Otimiza\u00e7\u00e3o Comparar qualquer m\u00e9trica dada entre 2 implementa\u00e7\u00f5es candidatas ou varia\u00e7\u00f5es na funcionalidade Testes A/B; Flighting Desenvolvimento; Staging Comprovar que o sistema de produ\u00e7\u00e3o de capacidade provisionada atende aos objetivos de confiabilidade, disponibilidade, consumo de recursos, desempenho Load testing (stress) ; Pico; Soak; Performance testing Desenvolvimento; Staging Entender as principais caracter\u00edsticas de desempenho da experi\u00eancia do usu\u00e1rio \u2013 lat\u00eancia, conversa\u00e7\u00e3o, resili\u00eancia a erros de rede Carga; Performance testing ; Cen\u00e1rio (particionamento de rede) Desenvolvimento; Staging; Opera\u00e7\u00e3o Descobrir pontos de fus\u00e3o (as cargas nas quais ocorre falha ou consumo m\u00e1ximo toler\u00e1vel de recursos) para cada componente individual na pilha Squeeze; Load testing (stress) Desenvolvimento; Staging; Opera\u00e7\u00e3o Descobrir o ponto de fus\u00e3o geral do sistema (as cargas nas quais o sistema de ponta a ponta falha) e qual componente \u00e9 o elo mais fraco em toda a pilha Squeeze; Load testing (stress) Desenvolvimento; Staging; Opera\u00e7\u00e3o Medir limites de capacidade para provisionamento dado para prever ou satisfazer necessidades futuras de provisionamento Squeeze; Load testing (stress) Desenvolvimento; Staging; Opera\u00e7\u00e3o Criar / exercitar manual de failover Simula\u00e7\u00f5es de Failover Desenvolvimento; Staging; Opera\u00e7\u00e3o Comprovar recupera\u00e7\u00e3o de desastres \u2013 perda de data center (o cen\u00e1rio do meteoro); medir MTTR Simula\u00e7\u00f5es de DR Desenvolvimento; Staging; Opera\u00e7\u00e3o Entender se os pain\u00e9is de observabilidade est\u00e3o corretos e se a telemetria est\u00e1 completa e fluindo Valida\u00e7\u00e3o de Rastreamento; Load testing (stress) ; Cen\u00e1rio; End-to-End testing Desenvolvimento; Staging; Opera\u00e7\u00e3o Medir impacto da sazonalidade do tr\u00e1fego Load testing Desenvolvimento; Staging; Opera\u00e7\u00e3o Comprovar que transa\u00e7\u00f5es e alertas notificam / tomam a\u00e7\u00f5es corretamente Synthetic Transaction testing (casos negativos); Load testing Desenvolvimento; Staging; Opera\u00e7\u00e3o; Otimiza\u00e7\u00e3o Entender a curva de escalabilidade, ou seja, como o sistema consome recursos com carga Load testing (stress) ; Performance testing Opera\u00e7\u00e3o; Otimiza\u00e7\u00e3o Descobrir o comportamento do sistema ao longo do tempo Soak Otimiza\u00e7\u00e3o Encontrar oportunidades de economia de custos Squeeze Staging; Opera\u00e7\u00e3o Medir impacto de failover / aumento de escala (reparticionamento, aumento de provisionamento) / redu\u00e7\u00e3o de escala Simula\u00e7\u00f5es de Failover; Simula\u00e7\u00f5es de Escala Staging; Opera\u00e7\u00e3o Criar/Exercitar manual para aumento/redu\u00e7\u00e3o de provisionamento Simula\u00e7\u00f5es de Escala Staging; Opera\u00e7\u00e3o Medir comportamento sob mudan\u00e7as r\u00e1pidas no tr\u00e1fego Spike Staging; Otimiza\u00e7\u00e3o Descobrir m\u00e9tricas de custo por unidade de volume de carga (quais fatores influenciam o custo em quais pontos de carga, por exemplo, custo por milh\u00e3o de usu\u00e1rios simult\u00e2neos) Carga (stress) Desenvolvimento; Opera\u00e7\u00e3o Descobrir pontos onde um sistema n\u00e3o \u00e9 resiliente a falhas imprevis\u00edveis, mas inevit\u00e1veis (queda de rede, falha de hardware, manuten\u00e7\u00e3o de host de VM, falhas de rack/switch, atos aleat\u00f3rios do Divino Mal\u00e9volo, flares solares, tubar\u00f5es que comem rel\u00e9s de cabos submarinos, radia\u00e7\u00e3o c\u00f3smica, quedas de energia, operadores de retroescavadeiras renegados, lobos mastigando caixas de jun\u00e7\u00e3o, ...) Caos Desenvolvimento Realizar testes unit\u00e1rios em conectores personalizados da plataforma Power Custom Connector Testing Se\u00e7\u00f5es dentro de Testes Consumer-driven contract (CDC) testing End-to-End testing Fault Injection testing Integration testing Performance testing Shadow testing Smoke testing Synthetic Transaction testing UI testing Unit testing Testes Espec\u00edficos de Tecnologia Usando o padr\u00e3o DevTest para construir cont\u00eaineres com AzDO Usando Azurite para executar testes de armazenamento de blob no pipeline","title":"Testando"},{"location":"automated-testing/#testando","text":"","title":"Testando"},{"location":"automated-testing/#mapa-de-resultados-para-tecnicas-de-teste","text":"A tabela abaixo mapeia resultados -- os resultados que voc\u00ea pode querer alcan\u00e7ar em seus esfor\u00e7os de valida\u00e7\u00e3o -- para uma ou mais t\u00e9cnicas que podem ser usadas para alcan\u00e7ar esse resultado. Quando estou trabalhando em... Quero obter este resultado... ...ent\u00e3o devo considerar Desenvolvimento Comprovar compatibilidade retroativa com chamadores e clientes existentes Shadow testing Desenvolvimento Garantir que a l\u00f3gica do programa esteja correta para uma variedade de entradas esperadas, principais, de borda e inesperadas Unit testing ; Testes funcionais; Consumer-driven Contract Testing ; Integration testing Desenvolvimento Prevenir regress\u00f5es na corre\u00e7\u00e3o l\u00f3gica; quanto mais cedo, melhor Unit testing ; Testes funcionais; Consumer-driven Contract Testing ; Integration testing ; An\u00e9is (cada um desses s\u00e3o escopos de cobertura em expans\u00e3o) Desenvolvimento Validar rapidamente a corre\u00e7\u00e3o principal de um ponto de funcionalidade (por exemplo, uma \u00fanica API), manualmente Testes de fuma\u00e7a manuais Ferramentas: postman, powershell, curl Desenvolvimento Validar intera\u00e7\u00f5es entre componentes isoladamente, garantindo que componentes consumidores e provedores sejam compat\u00edveis e estejam de acordo com um entendimento compartilhado documentado em um contrato Consumer-driven Contract Testing Desenvolvimento; Integration testing Validar que m\u00faltiplos componentes funcionem juntos em v\u00e1rias interfaces em uma cadeia de chamadas, incluindo saltos de rede Integration testing ; Testes de ponta a ponta ( End-to-End testing ); Testes de ponta a ponta segmentados ( End-to-End testing ) Desenvolvimento Comprovar recupera\u00e7\u00e3o de desastres \u2013 recupera\u00e7\u00e3o de corrup\u00e7\u00e3o de dados Simula\u00e7\u00f5es de DR Desenvolvimento Encontrar vulnerabilidades na autentica\u00e7\u00e3o ou autoriza\u00e7\u00e3o do servi\u00e7o Cen\u00e1rio (seguran\u00e7a) Desenvolvimento Comprovar interpreta\u00e7\u00e3o correta de RBAC e reivindica\u00e7\u00f5es no c\u00f3digo de autoriza\u00e7\u00e3o Cen\u00e1rio (seguran\u00e7a) Desenvolvimento Documentar e/ou impor uso v\u00e1lido da API Unit testing ; Testes funcionais; Consumer-driven Contract Testing Desenvolvimento Comprovar a corre\u00e7\u00e3o da implementa\u00e7\u00e3o antes de uma depend\u00eancia ou na aus\u00eancia de uma depend\u00eancia Unit testing (com mocks); Unit testing (com emuladores); Consumer-driven Contract Testing Desenvolvimento Garantir que a interface do usu\u00e1rio seja acess\u00edvel Accessibility Desenvolvimento Garantir que os usu\u00e1rios possam operar a interface UI testing (automated) (observa\u00e7\u00e3o de usabilidade humana) Desenvolvimento Prevenir regress\u00e3o na experi\u00eancia do usu\u00e1rio Automa\u00e7\u00e3o de UI; End-to-End testing Desenvolvimento Detectar e prevenir fen\u00f4menos de 'vizinho barulhento' Load testing Desenvolvimento Detectar quedas de disponibilidade Synthetic Transaction testing ; Sondas externas Desenvolvimento Prevenir regress\u00e3o em casos de uso / fluxos de trabalho de cen\u00e1rio 'composto' (por exemplo, um sistema de com\u00e9rcio eletr\u00f4nico pode ter muitas APIs que, usadas juntas em uma sequ\u00eancia, executam um cen\u00e1rio de \"compra e venda\") End-to-End testing ; Cen\u00e1rio Desenvolvimento; Opera\u00e7\u00f5es Prevenir regress\u00f5es em m\u00e9tricas de desempenho em tempo de execu\u00e7\u00e3o, por exemplo, lat\u00eancia / custo / consumo de recursos; quanto mais cedo, melhor An\u00e9is; Synthetic Transaction testing / Transa\u00e7\u00e3o; C\u00e3es de guarda de revers\u00e3o Desenvolvimento; Otimiza\u00e7\u00e3o Comparar qualquer m\u00e9trica dada entre 2 implementa\u00e7\u00f5es candidatas ou varia\u00e7\u00f5es na funcionalidade Testes A/B; Flighting Desenvolvimento; Staging Comprovar que o sistema de produ\u00e7\u00e3o de capacidade provisionada atende aos objetivos de confiabilidade, disponibilidade, consumo de recursos, desempenho Load testing (stress) ; Pico; Soak; Performance testing Desenvolvimento; Staging Entender as principais caracter\u00edsticas de desempenho da experi\u00eancia do usu\u00e1rio \u2013 lat\u00eancia, conversa\u00e7\u00e3o, resili\u00eancia a erros de rede Carga; Performance testing ; Cen\u00e1rio (particionamento de rede) Desenvolvimento; Staging; Opera\u00e7\u00e3o Descobrir pontos de fus\u00e3o (as cargas nas quais ocorre falha ou consumo m\u00e1ximo toler\u00e1vel de recursos) para cada componente individual na pilha Squeeze; Load testing (stress) Desenvolvimento; Staging; Opera\u00e7\u00e3o Descobrir o ponto de fus\u00e3o geral do sistema (as cargas nas quais o sistema de ponta a ponta falha) e qual componente \u00e9 o elo mais fraco em toda a pilha Squeeze; Load testing (stress) Desenvolvimento; Staging; Opera\u00e7\u00e3o Medir limites de capacidade para provisionamento dado para prever ou satisfazer necessidades futuras de provisionamento Squeeze; Load testing (stress) Desenvolvimento; Staging; Opera\u00e7\u00e3o Criar / exercitar manual de failover Simula\u00e7\u00f5es de Failover Desenvolvimento; Staging; Opera\u00e7\u00e3o Comprovar recupera\u00e7\u00e3o de desastres \u2013 perda de data center (o cen\u00e1rio do meteoro); medir MTTR Simula\u00e7\u00f5es de DR Desenvolvimento; Staging; Opera\u00e7\u00e3o Entender se os pain\u00e9is de observabilidade est\u00e3o corretos e se a telemetria est\u00e1 completa e fluindo Valida\u00e7\u00e3o de Rastreamento; Load testing (stress) ; Cen\u00e1rio; End-to-End testing Desenvolvimento; Staging; Opera\u00e7\u00e3o Medir impacto da sazonalidade do tr\u00e1fego Load testing Desenvolvimento; Staging; Opera\u00e7\u00e3o Comprovar que transa\u00e7\u00f5es e alertas notificam / tomam a\u00e7\u00f5es corretamente Synthetic Transaction testing (casos negativos); Load testing Desenvolvimento; Staging; Opera\u00e7\u00e3o; Otimiza\u00e7\u00e3o Entender a curva de escalabilidade, ou seja, como o sistema consome recursos com carga Load testing (stress) ; Performance testing Opera\u00e7\u00e3o; Otimiza\u00e7\u00e3o Descobrir o comportamento do sistema ao longo do tempo Soak Otimiza\u00e7\u00e3o Encontrar oportunidades de economia de custos Squeeze Staging; Opera\u00e7\u00e3o Medir impacto de failover / aumento de escala (reparticionamento, aumento de provisionamento) / redu\u00e7\u00e3o de escala Simula\u00e7\u00f5es de Failover; Simula\u00e7\u00f5es de Escala Staging; Opera\u00e7\u00e3o Criar/Exercitar manual para aumento/redu\u00e7\u00e3o de provisionamento Simula\u00e7\u00f5es de Escala Staging; Opera\u00e7\u00e3o Medir comportamento sob mudan\u00e7as r\u00e1pidas no tr\u00e1fego Spike Staging; Otimiza\u00e7\u00e3o Descobrir m\u00e9tricas de custo por unidade de volume de carga (quais fatores influenciam o custo em quais pontos de carga, por exemplo, custo por milh\u00e3o de usu\u00e1rios simult\u00e2neos) Carga (stress) Desenvolvimento; Opera\u00e7\u00e3o Descobrir pontos onde um sistema n\u00e3o \u00e9 resiliente a falhas imprevis\u00edveis, mas inevit\u00e1veis (queda de rede, falha de hardware, manuten\u00e7\u00e3o de host de VM, falhas de rack/switch, atos aleat\u00f3rios do Divino Mal\u00e9volo, flares solares, tubar\u00f5es que comem rel\u00e9s de cabos submarinos, radia\u00e7\u00e3o c\u00f3smica, quedas de energia, operadores de retroescavadeiras renegados, lobos mastigando caixas de jun\u00e7\u00e3o, ...) Caos Desenvolvimento Realizar testes unit\u00e1rios em conectores personalizados da plataforma Power Custom Connector Testing","title":"Mapa de Resultados para T\u00e9cnicas de Teste"},{"location":"automated-testing/#secoes-dentro-de-testes","text":"Consumer-driven contract (CDC) testing End-to-End testing Fault Injection testing Integration testing Performance testing Shadow testing Smoke testing Synthetic Transaction testing UI testing Unit testing","title":"Se\u00e7\u00f5es dentro de Testes"},{"location":"automated-testing/#testes-especificos-de-tecnologia","text":"Usando o padr\u00e3o DevTest para construir cont\u00eaineres com AzDO Usando Azurite para executar testes de armazenamento de blob no pipeline","title":"Testes Espec\u00edficos de Tecnologia"},{"location":"automated-testing/cdc-testing/","text":"Teste de Contrato Orientado pelo Consumidor (CDC) O Teste de Contrato Orientado pelo Consumidor (ou CDC, na sigla em ingl\u00eas) \u00e9 uma metodologia de teste de software usada para testar componentes de um sistema isoladamente, garantindo que os componentes provedores sejam compat\u00edveis com as expectativas que os componentes consumidores t\u00eam deles. Por que Teste de Contrato Orientado pelo Consumidor O CDC tenta superar as v\u00e1rias desvantagens dolorosas dos testes E2E automatizados com componentes interagindo juntos: Testes E2E s\u00e3o lentos Testes E2E quebram facilmente Testes E2E s\u00e3o caros e dif\u00edceis de manter Testes E2E de sistemas maiores podem ser dif\u00edceis ou imposs\u00edveis de serem executados fora de um ambiente de teste dedicado Embora as melhores pr\u00e1ticas de teste sugiram escrever apenas alguns testes E2E em compara\u00e7\u00e3o com os testes de integra\u00e7\u00e3o e unit\u00e1rios mais baratos, r\u00e1pidos e est\u00e1veis, como ilustrado na pir\u00e2mide de testes abaixo, a experi\u00eancia mostra que muitas equipes acabam escrevendo muitos testes E2E . Uma raz\u00e3o para isso \u00e9 que os testes E2E d\u00e3o aos desenvolvedores a maior confian\u00e7a para lan\u00e7ar, pois est\u00e3o testando o \"sistema real\". O CDC aborda essas quest\u00f5es testando intera\u00e7\u00f5es entre componentes isoladamente usando mocks que est\u00e3o de acordo com um entendimento compartilhado documentado em um \"contrato\". Contratos s\u00e3o acordados entre consumidor e provedor e s\u00e3o regularmente verificados contra uma inst\u00e2ncia real do componente provedor. Isso efetivamente divide um sistema maior em partes menores que podem ser testadas individualmente isoladas umas das outras, levando a testes mais simples, r\u00e1pidos e est\u00e1veis que tamb\u00e9m d\u00e3o confian\u00e7a para lan\u00e7ar. Alguns testes E2E ainda s\u00e3o necess\u00e1rios para verificar o sistema como um todo quando implantado no ambiente real, mas a maioria das intera\u00e7\u00f5es funcionais entre componentes pode ser coberta com testes CDC. O teste CDC foi inicialmente desenvolvido para testar APIs RESTful, mas o padr\u00e3o se aplica a todos os sistemas consumidor-provedor e existem ferramentas para outros protocolos de mensagens al\u00e9m do HTTP. Blocos de Design de Teste de Contrato Orientado pelo Consumidor Em uma abordagem orientada pelo consumidor , o consumidor direciona as mudan\u00e7as nos contratos entre um consumidor (o cliente) e um provedor (o servidor). Isso pode parecer contraintuitivo, mas ajuda os provedores a criar APIs que se ajustem \u00e0s necessidades reais dos consumidores, em vez de tentar adivinh\u00e1-las antecipadamente. A seguir, descrevemos os blocos de constru\u00e7\u00e3o do CDC ordenados por sua ocorr\u00eancia no ciclo de desenvolvimento. Testes do Consumidor com Mock do Provedor Os consumidores come\u00e7am criando testes de integra\u00e7\u00e3o contra um mock do provedor e executando-os como parte de seu pipeline de CI. Respostas esperadas s\u00e3o definidas no mock do provedor para solicita\u00e7\u00f5es disparadas a partir dos testes. Por meio disso, o consumidor essencialmente define o contrato que espera que o provedor cumpra. Contrato Contratos s\u00e3o gerados a partir das expectativas definidas no mock do provedor como resultado de uma execu\u00e7\u00e3o bem-sucedida do teste. Frameworks de CDC como o Pact fornecem uma especifica\u00e7\u00e3o para contratos no formato json, consistindo na lista de solicita\u00e7\u00f5es/respostas geradas a partir dos testes do consumidor, al\u00e9m de alguns metadados adicionais. Contratos n\u00e3o s\u00e3o um substituto para uma discuss\u00e3o entre a equipe do consumidor e do provedor. Este \u00e9 o momento em que essa discuss\u00e3o deve ocorrer (se j\u00e1 n\u00e3o tiver ocorrido antes). Os testes do consumidor e o contrato gerado s\u00e3o refinados com o feedback e a coopera\u00e7\u00e3o da equipe do provedor. Por \u00faltimo, o contrato finalizado \u00e9 versionado e armazenado em um local central acess\u00edvel por ambos, consumidor e provedor. Contratos complementam documentos de especifica\u00e7\u00e3o de API como o OpenAPI. Especifica\u00e7\u00f5es de API descrevem a estrutura e o formato da API. Um contrato, por outro lado, especifica que para uma determinada solicita\u00e7\u00e3o, uma determinada resposta \u00e9 esperada. Um documento de especifica\u00e7\u00f5es de API \u00e9 \u00fatil para escrever um contrato de API e pode ser usado para validar que o contrato est\u00e1 em conformidade com a especifica\u00e7\u00e3o da API. Verifica\u00e7\u00e3o de Contrato do Provedor Do lado do provedor, testes tamb\u00e9m s\u00e3o executados como parte de um pipeline separado que verifica contratos contra respostas reais do provedor. A verifica\u00e7\u00e3o do contrato falha se as respostas reais diferirem das respostas esperadas, conforme especificado no contrato. A causa disso pode ser: Expectativas inv\u00e1lidas do lado do consumidor, levando \u00e0 incompatibilidade com a implementa\u00e7\u00e3o atual do provedor. Implementa\u00e7\u00e3o defeituosa do provedor devido a alguma funcionalidade ausente ou a uma regress\u00e3o. De qualquer forma, gra\u00e7as ao CDC, \u00e9 f\u00e1cil identificar problemas de integra\u00e7\u00e3o at\u00e9 o consumidor/provedor da intera\u00e7\u00e3o afetada. Isso \u00e9 uma grande vantagem em compara\u00e7\u00e3o com a dor de depura\u00e7\u00e3o que isso poderia ter sido com uma abordagem de teste E2E. Frameworks e Ferramentas de Teste CDC Pact \u00e9 uma implementa\u00e7\u00e3o de teste CDC que permite a simula\u00e7\u00e3o de respostas no c\u00f3digo-base do consumidor e a verifica\u00e7\u00e3o das intera\u00e7\u00f5es no c\u00f3digo-base do provedor, enquanto define uma especifica\u00e7\u00e3o para contratos . Foi originalmente escrito em Ruby, mas tem wrappers dispon\u00edveis para v\u00e1rias linguagens. Pact \u00e9 o padr\u00e3o de facto a ser usado ao trabalhar com CDC. Spring Cloud Contract \u00e9 uma implementa\u00e7\u00e3o de teste CDC da Spring e oferece f\u00e1cil integra\u00e7\u00e3o no ecossistema Spring. Suporte para provedores e consumidores n\u00e3o-Spring e n\u00e3o-JVM tamb\u00e9m existe. Conclus\u00e3o O CDC tem v\u00e1rios benef\u00edcios que o tornam uma abordagem a ser considerada ao lidar com sistemas compostos por m\u00faltiplos componentes interagindo juntos. Os esfor\u00e7os de manuten\u00e7\u00e3o podem ser reduzidos testando intera\u00e7\u00f5es entre consumidor e provedor isoladamente, sem a necessidade de um ambiente integrado complexo, especialmente \u00e0 medida que as intera\u00e7\u00f5es entre componentes aumentam em n\u00famero e se tornam mais complexas. Al\u00e9m disso, uma colabora\u00e7\u00e3o pr\u00f3xima entre as equipes de consumidores e provedores \u00e9 fortemente incentivada atrav\u00e9s do processo de desenvolvimento do CDC, o que pode trazer muitos outros benef\u00edcios. Contratos oferecem uma forma formal de documentar o entendimento compartilhado de como os componentes interagem entre si e servem como base para a comunica\u00e7\u00e3o entre as equipes. De certa forma, o reposit\u00f3rio de contratos serve como uma documenta\u00e7\u00e3o ao vivo de todas as intera\u00e7\u00f5es entre consumidor e provedor de um sistema. O CDC tem algumas desvantagens tamb\u00e9m. Uma camada extra de teste \u00e9 adicionada, exigindo um investimento adequado em educa\u00e7\u00e3o para que os membros da equipe entendam e usem o CDC corretamente. Al\u00e9m disso, o escopo do teste CDC deve ser considerado cuidadosamente para evitar confundir o CDC com outras camadas de teste funcional de n\u00edvel superior. Testes de contrato n\u00e3o s\u00e3o o lugar para verificar a l\u00f3gica de neg\u00f3cios interna e a corre\u00e7\u00e3o do consumidor. Recursos Pir\u00e2mide de teste do blog de Kent C. Dodd Pact , uma ferramenta de teste de contrato orientada pelo consumidor baseada em c\u00f3digo com suporte para v\u00e1rias linguagens de programa\u00e7\u00e3o diferentes Contratos orientados pelo consumidor de Ian Robinson Teste de contrato de Martin Fowler Um exemplo simples de uso do teste de contrato orientado pelo consumidor Pact em uma aplica\u00e7\u00e3o cliente-servidor Java Workshop Pact dotnet","title":"Teste de Contrato Orientado pelo Consumidor (CDC)"},{"location":"automated-testing/cdc-testing/#teste-de-contrato-orientado-pelo-consumidor-cdc","text":"O Teste de Contrato Orientado pelo Consumidor (ou CDC, na sigla em ingl\u00eas) \u00e9 uma metodologia de teste de software usada para testar componentes de um sistema isoladamente, garantindo que os componentes provedores sejam compat\u00edveis com as expectativas que os componentes consumidores t\u00eam deles.","title":"Teste de Contrato Orientado pelo Consumidor (CDC)"},{"location":"automated-testing/cdc-testing/#por-que-teste-de-contrato-orientado-pelo-consumidor","text":"O CDC tenta superar as v\u00e1rias desvantagens dolorosas dos testes E2E automatizados com componentes interagindo juntos: Testes E2E s\u00e3o lentos Testes E2E quebram facilmente Testes E2E s\u00e3o caros e dif\u00edceis de manter Testes E2E de sistemas maiores podem ser dif\u00edceis ou imposs\u00edveis de serem executados fora de um ambiente de teste dedicado Embora as melhores pr\u00e1ticas de teste sugiram escrever apenas alguns testes E2E em compara\u00e7\u00e3o com os testes de integra\u00e7\u00e3o e unit\u00e1rios mais baratos, r\u00e1pidos e est\u00e1veis, como ilustrado na pir\u00e2mide de testes abaixo, a experi\u00eancia mostra que muitas equipes acabam escrevendo muitos testes E2E . Uma raz\u00e3o para isso \u00e9 que os testes E2E d\u00e3o aos desenvolvedores a maior confian\u00e7a para lan\u00e7ar, pois est\u00e3o testando o \"sistema real\". O CDC aborda essas quest\u00f5es testando intera\u00e7\u00f5es entre componentes isoladamente usando mocks que est\u00e3o de acordo com um entendimento compartilhado documentado em um \"contrato\". Contratos s\u00e3o acordados entre consumidor e provedor e s\u00e3o regularmente verificados contra uma inst\u00e2ncia real do componente provedor. Isso efetivamente divide um sistema maior em partes menores que podem ser testadas individualmente isoladas umas das outras, levando a testes mais simples, r\u00e1pidos e est\u00e1veis que tamb\u00e9m d\u00e3o confian\u00e7a para lan\u00e7ar. Alguns testes E2E ainda s\u00e3o necess\u00e1rios para verificar o sistema como um todo quando implantado no ambiente real, mas a maioria das intera\u00e7\u00f5es funcionais entre componentes pode ser coberta com testes CDC. O teste CDC foi inicialmente desenvolvido para testar APIs RESTful, mas o padr\u00e3o se aplica a todos os sistemas consumidor-provedor e existem ferramentas para outros protocolos de mensagens al\u00e9m do HTTP.","title":"Por que Teste de Contrato Orientado pelo Consumidor"},{"location":"automated-testing/cdc-testing/#blocos-de-design-de-teste-de-contrato-orientado-pelo-consumidor","text":"Em uma abordagem orientada pelo consumidor , o consumidor direciona as mudan\u00e7as nos contratos entre um consumidor (o cliente) e um provedor (o servidor). Isso pode parecer contraintuitivo, mas ajuda os provedores a criar APIs que se ajustem \u00e0s necessidades reais dos consumidores, em vez de tentar adivinh\u00e1-las antecipadamente. A seguir, descrevemos os blocos de constru\u00e7\u00e3o do CDC ordenados por sua ocorr\u00eancia no ciclo de desenvolvimento.","title":"Blocos de Design de Teste de Contrato Orientado pelo Consumidor"},{"location":"automated-testing/cdc-testing/#testes-do-consumidor-com-mock-do-provedor","text":"Os consumidores come\u00e7am criando testes de integra\u00e7\u00e3o contra um mock do provedor e executando-os como parte de seu pipeline de CI. Respostas esperadas s\u00e3o definidas no mock do provedor para solicita\u00e7\u00f5es disparadas a partir dos testes. Por meio disso, o consumidor essencialmente define o contrato que espera que o provedor cumpra.","title":"Testes do Consumidor com Mock do Provedor"},{"location":"automated-testing/cdc-testing/#contrato","text":"Contratos s\u00e3o gerados a partir das expectativas definidas no mock do provedor como resultado de uma execu\u00e7\u00e3o bem-sucedida do teste. Frameworks de CDC como o Pact fornecem uma especifica\u00e7\u00e3o para contratos no formato json, consistindo na lista de solicita\u00e7\u00f5es/respostas geradas a partir dos testes do consumidor, al\u00e9m de alguns metadados adicionais. Contratos n\u00e3o s\u00e3o um substituto para uma discuss\u00e3o entre a equipe do consumidor e do provedor. Este \u00e9 o momento em que essa discuss\u00e3o deve ocorrer (se j\u00e1 n\u00e3o tiver ocorrido antes). Os testes do consumidor e o contrato gerado s\u00e3o refinados com o feedback e a coopera\u00e7\u00e3o da equipe do provedor. Por \u00faltimo, o contrato finalizado \u00e9 versionado e armazenado em um local central acess\u00edvel por ambos, consumidor e provedor. Contratos complementam documentos de especifica\u00e7\u00e3o de API como o OpenAPI. Especifica\u00e7\u00f5es de API descrevem a estrutura e o formato da API. Um contrato, por outro lado, especifica que para uma determinada solicita\u00e7\u00e3o, uma determinada resposta \u00e9 esperada. Um documento de especifica\u00e7\u00f5es de API \u00e9 \u00fatil para escrever um contrato de API e pode ser usado para validar que o contrato est\u00e1 em conformidade com a especifica\u00e7\u00e3o da API.","title":"Contrato"},{"location":"automated-testing/cdc-testing/#verificacao-de-contrato-do-provedor","text":"Do lado do provedor, testes tamb\u00e9m s\u00e3o executados como parte de um pipeline separado que verifica contratos contra respostas reais do provedor. A verifica\u00e7\u00e3o do contrato falha se as respostas reais diferirem das respostas esperadas, conforme especificado no contrato. A causa disso pode ser: Expectativas inv\u00e1lidas do lado do consumidor, levando \u00e0 incompatibilidade com a implementa\u00e7\u00e3o atual do provedor. Implementa\u00e7\u00e3o defeituosa do provedor devido a alguma funcionalidade ausente ou a uma regress\u00e3o. De qualquer forma, gra\u00e7as ao CDC, \u00e9 f\u00e1cil identificar problemas de integra\u00e7\u00e3o at\u00e9 o consumidor/provedor da intera\u00e7\u00e3o afetada. Isso \u00e9 uma grande vantagem em compara\u00e7\u00e3o com a dor de depura\u00e7\u00e3o que isso poderia ter sido com uma abordagem de teste E2E.","title":"Verifica\u00e7\u00e3o de Contrato do Provedor"},{"location":"automated-testing/cdc-testing/#frameworks-e-ferramentas-de-teste-cdc","text":"Pact \u00e9 uma implementa\u00e7\u00e3o de teste CDC que permite a simula\u00e7\u00e3o de respostas no c\u00f3digo-base do consumidor e a verifica\u00e7\u00e3o das intera\u00e7\u00f5es no c\u00f3digo-base do provedor, enquanto define uma especifica\u00e7\u00e3o para contratos . Foi originalmente escrito em Ruby, mas tem wrappers dispon\u00edveis para v\u00e1rias linguagens. Pact \u00e9 o padr\u00e3o de facto a ser usado ao trabalhar com CDC. Spring Cloud Contract \u00e9 uma implementa\u00e7\u00e3o de teste CDC da Spring e oferece f\u00e1cil integra\u00e7\u00e3o no ecossistema Spring. Suporte para provedores e consumidores n\u00e3o-Spring e n\u00e3o-JVM tamb\u00e9m existe.","title":"Frameworks e Ferramentas de Teste CDC"},{"location":"automated-testing/cdc-testing/#conclusao","text":"O CDC tem v\u00e1rios benef\u00edcios que o tornam uma abordagem a ser considerada ao lidar com sistemas compostos por m\u00faltiplos componentes interagindo juntos. Os esfor\u00e7os de manuten\u00e7\u00e3o podem ser reduzidos testando intera\u00e7\u00f5es entre consumidor e provedor isoladamente, sem a necessidade de um ambiente integrado complexo, especialmente \u00e0 medida que as intera\u00e7\u00f5es entre componentes aumentam em n\u00famero e se tornam mais complexas. Al\u00e9m disso, uma colabora\u00e7\u00e3o pr\u00f3xima entre as equipes de consumidores e provedores \u00e9 fortemente incentivada atrav\u00e9s do processo de desenvolvimento do CDC, o que pode trazer muitos outros benef\u00edcios. Contratos oferecem uma forma formal de documentar o entendimento compartilhado de como os componentes interagem entre si e servem como base para a comunica\u00e7\u00e3o entre as equipes. De certa forma, o reposit\u00f3rio de contratos serve como uma documenta\u00e7\u00e3o ao vivo de todas as intera\u00e7\u00f5es entre consumidor e provedor de um sistema. O CDC tem algumas desvantagens tamb\u00e9m. Uma camada extra de teste \u00e9 adicionada, exigindo um investimento adequado em educa\u00e7\u00e3o para que os membros da equipe entendam e usem o CDC corretamente. Al\u00e9m disso, o escopo do teste CDC deve ser considerado cuidadosamente para evitar confundir o CDC com outras camadas de teste funcional de n\u00edvel superior. Testes de contrato n\u00e3o s\u00e3o o lugar para verificar a l\u00f3gica de neg\u00f3cios interna e a corre\u00e7\u00e3o do consumidor.","title":"Conclus\u00e3o"},{"location":"automated-testing/cdc-testing/#recursos","text":"Pir\u00e2mide de teste do blog de Kent C. Dodd Pact , uma ferramenta de teste de contrato orientada pelo consumidor baseada em c\u00f3digo com suporte para v\u00e1rias linguagens de programa\u00e7\u00e3o diferentes Contratos orientados pelo consumidor de Ian Robinson Teste de contrato de Martin Fowler Um exemplo simples de uso do teste de contrato orientado pelo consumidor Pact em uma aplica\u00e7\u00e3o cliente-servidor Java Workshop Pact dotnet","title":"Recursos"},{"location":"automated-testing/e2e-testing/","text":"Teste de Ponta a Ponta (E2E) O teste de ponta a ponta (E2E) \u00e9 uma metodologia de teste de software para verificar um fluxo funcional e de dados de uma aplica\u00e7\u00e3o composta por v\u00e1rios subsistemas trabalhando juntos do in\u00edcio ao fim. Muitas vezes, esses sistemas s\u00e3o desenvolvidos em diferentes tecnologias por diferentes equipes ou organiza\u00e7\u00f5es. Finalmente, eles se unem para formar uma aplica\u00e7\u00e3o de neg\u00f3cios funcional. Portanto, testar um \u00fanico sistema n\u00e3o seria suficiente. Assim, o teste de ponta a ponta verifica a aplica\u00e7\u00e3o do in\u00edcio ao fim, colocando todos os seus componentes juntos. Por que Teste E2E [O Porqu\u00ea] Em muitos cen\u00e1rios de aplicativos de software comerciais, um sistema de software moderno consiste em sua interconex\u00e3o com v\u00e1rios subsistemas. Esses subsistemas podem estar dentro da mesma organiza\u00e7\u00e3o ou podem ser componentes de diferentes organiza\u00e7\u00f5es. Al\u00e9m disso, esses subsistemas podem ter ciclos de lan\u00e7amento de vida \u00fatil semelhantes ou diferentes do sistema atual. Como resultado, se houver qualquer falha ou defeito em qualquer subsistema, isso pode afetar adversamente todo o sistema de software, levando ao seu colapso. A ilustra\u00e7\u00e3o acima \u00e9 uma pir\u00e2mide de teste do blog de Kent C. Dodd , que \u00e9 uma combina\u00e7\u00e3o das pir\u00e2mides do blog de Martin Fowler e do Google Testing Blog . A maioria dos seus testes est\u00e1 na parte inferior da pir\u00e2mide. \u00c0 medida que voc\u00ea sobe na pir\u00e2mide, o n\u00famero de testes diminui. Al\u00e9m disso, subindo na pir\u00e2mide, os testes ficam mais lentos e mais caros para escrever, executar e manter. Cada tipo de teste varia para o seu prop\u00f3sito, aplica\u00e7\u00e3o e as \u00e1reas que se destina a cobrir. Para mais informa\u00e7\u00f5es sobre a an\u00e1lise comparativa de diferentes tipos de testes, consulte este documento ## Unidade vs Integra\u00e7\u00e3o vs Sistema vs Teste E2E . Blocos de Design de Teste E2E [O Qu\u00ea] Vamos examinar todas as 3 categorias uma por uma: Fun\u00e7\u00f5es do Usu\u00e1rio As seguintes a\u00e7\u00f5es devem ser realizadas como parte da constru\u00e7\u00e3o de fun\u00e7\u00f5es do usu\u00e1rio: Liste as fun\u00e7\u00f5es iniciadas pelo usu\u00e1rio dos sistemas de software e seus subsistemas interconectados. Para qualquer fun\u00e7\u00e3o, acompanhe as a\u00e7\u00f5es realizadas, bem como os dados de entrada e sa\u00edda. Encontre as rela\u00e7\u00f5es, se houver, entre diferentes fun\u00e7\u00f5es do usu\u00e1rio. Descubra a natureza das diferentes fun\u00e7\u00f5es do usu\u00e1rio, ou seja, se s\u00e3o independentes ou reutiliz\u00e1veis. Condi\u00e7\u00f5es As seguintes atividades devem ser realizadas como parte da constru\u00e7\u00e3o de condi\u00e7\u00f5es com base nas fun\u00e7\u00f5es do usu\u00e1rio: Para cada uma das fun\u00e7\u00f5es do usu\u00e1rio, um conjunto de condi\u00e7\u00f5es deve ser preparado. O tempo, as condi\u00e7\u00f5es de dados e outros fatores que afetam as fun\u00e7\u00f5es do usu\u00e1rio podem ser considerados como par\u00e2metros. Casos de Teste Os seguintes fatores devem ser considerados para a constru\u00e7\u00e3o de casos de teste: Para cada cen\u00e1rio, um ou mais casos de teste devem ser criados para testar cada funcionalidade das fun\u00e7\u00f5es do usu\u00e1rio. Se poss\u00edvel, esses casos de teste devem ser automatizados por meio dos processos padr\u00e3o de pipeline de CI/CD com o acompanhamento de cada build bem-sucedido e falho no AzDO. Cada condi\u00e7\u00e3o deve ser listada como um caso de teste separado. Aplicando o Teste E2E [O Como] Como qualquer outro teste, o teste E2E tamb\u00e9m passa por fases formais de planejamento, execu\u00e7\u00e3o de teste e encerramento. O teste E2E \u00e9 feito com as seguintes etapas: Planejamento An\u00e1lise de requisitos de neg\u00f3cios e funcionais Desenvolvimento do plano de teste Desenvolvimento do caso de teste Configura\u00e7\u00e3o do ambiente de teste semelhante \u00e0 produ\u00e7\u00e3o Configura\u00e7\u00e3o dos dados de teste Decidir crit\u00e9rios de sa\u00edda Escolher os m\u00e9todos de teste mais aplic\u00e1veis ao seu sistema. Para a defini\u00e7\u00e3o dos v\u00e1rios m\u00e9todos de teste, consulte o documento M\u00e9todos de Teste . Pr\u00e9-requisito O teste do sistema deve estar completo para todos os sistemas participantes. Todos os subsistemas devem ser combinados para funcionar como uma aplica\u00e7\u00e3o completa. O ambiente de teste semelhante \u00e0 produ\u00e7\u00e3o deve estar pronto. Execu\u00e7\u00e3o do Teste Execute os casos de teste Registre os resultados do teste e decida sobre a aprova\u00e7\u00e3o e falha Relate os bugs na ferramenta de relat\u00f3rio de bugs Re-verifique as corre\u00e7\u00f5es de bugs Encerramento do Teste Prepara\u00e7\u00e3o do relat\u00f3rio de teste Avalia\u00e7\u00e3o dos crit\u00e9rios de sa\u00edda Encerramento da fase de teste M\u00e9tricas de Teste Rastrear as m\u00e9tricas de qualidade d\u00e1 uma vis\u00e3o sobre o status atual do teste. Algumas m\u00e9tricas comuns de teste E2E s\u00e3o: Status de prepara\u00e7\u00e3o do caso de teste : N\u00famero de casos de teste prontos versus o n\u00famero total de casos de teste. Progresso frequente do teste : N\u00famero de casos de teste executados de maneira frequente e consistente, por exemplo, semanalmente, versus um n\u00famero-alvo de casos de teste no mesmo per\u00edodo de tempo. Status dos defeitos : Esta m\u00e9trica representa o status dos defeitos encontrados durante o teste. Os defeitos devem ser registrados na ferramenta de rastreamento de defeitos (por exemplo, backlog do AzDO) e resolvidos de acordo com sua gravidade e prioridade. Portanto, a porcentagem de defeitos abertos e fechados de acordo com sua gravidade e prioridade deve ser calculada para rastrear esta m\u00e9trica. A consulta do painel AzDO pode ser usada para rastrear essa m\u00e9trica. Disponibilidade do ambiente de teste : Esta m\u00e9trica rastreia a dura\u00e7\u00e3o do ambiente de teste usado para o teste de ponta a ponta versus sua dura\u00e7\u00e3o de aloca\u00e7\u00e3o programada. Frameworks e Ferramentas de Teste E2E 1. Gauge Framework Gauge \u00e9 um framework gratuito e de c\u00f3digo aberto para escrever e executar testes E2E. Algumas caracter\u00edsticas-chave do Gauge que o tornam \u00fanico incluem: Sintaxe simples, flex\u00edvel e rica baseada em Markdown. Suporte consistente entre plataformas/linguagens para escrever c\u00f3digo de teste. Uma arquitetura modular com suporte a plugins. Suporta execu\u00e7\u00e3o orientada a dados e fontes de dados externas. Ajuda voc\u00ea a criar su\u00edtes de teste sustent\u00e1veis. Suporta Visual Studio Code, Intellij IDEA, IDE Support. Suporta relat\u00f3rios em html, json e XML. Site do Gauge Framework 2. Robot Framework Robot Framework \u00e9 um framework de automa\u00e7\u00e3o de c\u00f3digo aberto gen\u00e9rico. O framework tem uma sintaxe f\u00e1cil, utilizando palavras-chave leg\u00edveis por humanos. Suas capacidades podem ser estendidas por bibliotecas implementadas com Python ou Java. Robot compartilha muitos dos mesmos \"pr\u00f3s\" que o Gauge, exceto as ferramentas de desenvolvimento e a sintaxe. Em nosso uso, descobrimos que o Intellisense do VS Code oferecido com o Gauge era muito mais est\u00e1vel do que as ofertas para o Robot. Tamb\u00e9m achamos a sintaxe menos leg\u00edvel do que o que o Gauge oferecia. Embora ambos os frameworks permitam defini\u00e7\u00f5es de casos de teste baseadas em marca\u00e7\u00e3o, a sintaxe do Gauge l\u00ea muito mais como uma frase em portugu\u00eas do que o Robot. Finalmente, o Intellisense est\u00e1 incorporado nos arquivos de marca\u00e7\u00e3o para casos de teste do Gauge, o que criar\u00e1 um stub de fun\u00e7\u00e3o para a defini\u00e7\u00e3o de teste real se o desenvolvedor permitir. O mesmo n\u00e3o pode ser dito do Robot Framework. Site do Robot Framework 3. TestCraft TestCraft \u00e9 uma plataforma de automa\u00e7\u00e3o de teste Selenium sem c\u00f3digo. Sua tecnologia revolucion\u00e1ria de IA e modelagem visual \u00fanica permitem uma cria\u00e7\u00e3o e execu\u00e7\u00e3o de teste mais r\u00e1pida, eliminando a sobrecarga de manuten\u00e7\u00e3o de teste. Os testadores criam cen\u00e1rios de teste totalmente automatizados sem codifica\u00e7\u00e3o. Os clientes encontram bugs mais rapidamente, lan\u00e7am com mais frequ\u00eancia, integram-se com a abordagem CI/CD e melhoram a qualidade geral de seus produtos digitais. Isso cria uma experi\u00eancia completa de teste de ponta a ponta. Site do Perfecto (TestCraft) ou obtenha-o no Visual Studio Marketplace 4. Ranorex Studio Ranorex Studio \u00e9 uma ferramenta completa de automa\u00e7\u00e3o de teste de ponta a ponta para aplica\u00e7\u00f5es desktop, web e m\u00f3veis. Crie testes confi\u00e1veis rapidamente sem qualquer codifica\u00e7\u00e3o ou usando o IDE completo. Use arquivos CSV ou Excel externos ou um banco de dados SQL como entradas para seus testes. Execute testes em paralelo ou em uma grade Selenium com o Selenium WebDriver integrado. O Ranorex Studio se integra ao seu processo de CI/CD para encurtar seus ciclos de lan\u00e7amento sem sacrificar a qualidade. Os testes do Ranorex Studio tamb\u00e9m se integram ao Azure DevOps (AzDO), que podem ser executados como parte de um pipeline de build no AzDO. Site do Ranorex Studio 5. Katalon Studio Katalon Studio \u00e9 uma excelente solu\u00e7\u00e3o de automa\u00e7\u00e3o de ponta a ponta para testes web, API, m\u00f3veis e desktop com suporte DevOps. Com o Katalon Studio, o teste automatizado pode ser facilmente integrado a qualquer pipeline de CI/CD para lan\u00e7ar produtos mais rapidamente, garantindo alta qualidade. O Katalon Studio personaliza para usu\u00e1rios de iniciantes a especialistas. Fun\u00e7\u00f5es robustas como Espionagem, Grava\u00e7\u00e3o, Interface de editor duplo e Palavras-chave personalizadas tornam poss\u00edvel a configura\u00e7\u00e3o, cria\u00e7\u00e3o e manuten\u00e7\u00e3o de testes para os usu\u00e1rios. Constru\u00eddo em cima do Selenium e Appium, o Katalon Studio ajuda a padronizar seus testes de ponta a ponta. Ele tamb\u00e9m est\u00e1 em conformidade com os frameworks mais populares para trabalhar de forma integrada com outras ferramentas no ecossistema de teste automatizado. O Katalon \u00e9 endossado pela Gartner, profissionais de TI e uma grande comunidade de teste. Nota: No momento da escrita deste texto, a extens\u00e3o do Katalon Studio para AzDO N\u00c3O estava dispon\u00edvel para Linux. Site do Katalon Studio ou leia sobre sua integra\u00e7\u00e3o com o AzDO 6. BugBug.io BugBug \u00e9 uma maneira f\u00e1cil de automatizar testes para aplica\u00e7\u00f5es web. A ferramenta foca na simplicidade, mas ainda permite que voc\u00ea cubra todos os casos de teste essenciais sem codifica\u00e7\u00e3o. \u00c9 uma solu\u00e7\u00e3o completa - voc\u00ea pode criar testes facilmente e usar a nuvem integrada para execut\u00e1-los de acordo com um cronograma ou a partir do seu CI/CD, sem altera\u00e7\u00f5es na sua pr\u00f3pria infraestrutura. BugBug \u00e9 uma alternativa interessante ao Selenium porque \u00e9 realmente uma tecnologia completamente diferente. Ele \u00e9 baseado em uma extens\u00e3o do Chrome que permite ao BugBug gravar e executar testes mais rapidamente do que os frameworks da velha escola. A maior vantagem do BugBug \u00e9 sua facilidade de uso. A maioria dos testes criados com o BugBug simplesmente funciona imediatamente. Isso torna mais f\u00e1cil para pessoas n\u00e3o t\u00e9cnicas manterem os testes - com o BugBug, voc\u00ea pode economizar dinheiro na contrata\u00e7\u00e3o de um engenheiro de QA. Site do BugBug Conclus\u00e3o Espero que voc\u00ea tenha aprendido v\u00e1rios aspectos do teste E2E, como seus processos, m\u00e9tricas, a diferen\u00e7a entre testes Unit\u00e1rios, de Integra\u00e7\u00e3o e E2E, e os v\u00e1rios frameworks e ferramentas de teste E2E recomendados. Para qualquer lan\u00e7amento comercial do software, a verifica\u00e7\u00e3o do teste E2E desempenha um papel importante, pois testa toda a aplica\u00e7\u00e3o em um ambiente que imita exatamente os usu\u00e1rios do mundo real, como comunica\u00e7\u00e3o de rede, intera\u00e7\u00e3o com middleware e servi\u00e7os de back-end, etc. Por fim, o teste E2E \u00e9 frequentemente realizado manualmente, pois o custo de automatizar tais casos de teste \u00e9 muito alto para ser suportado por qualquer organiza\u00e7\u00e3o. Dito isso, o objetivo final de cada organiza\u00e7\u00e3o \u00e9 tornar o teste E2E o mais eficiente poss\u00edvel, adicionando componentes de teste totalmente e semi-automatizados ao processo. Portanto, os v\u00e1rios frameworks e ferramentas de teste E2E listados neste artigo v\u00eam em socorro. Recursos Wikipedia: Teste de Software Wikipedia: Teste Unit\u00e1rio Wikipedia: Teste de Integra\u00e7\u00e3o Wikipedia: Teste de Sistema","title":"Teste de Ponta a Ponta (E2E)"},{"location":"automated-testing/e2e-testing/#teste-de-ponta-a-ponta-e2e","text":"O teste de ponta a ponta (E2E) \u00e9 uma metodologia de teste de software para verificar um fluxo funcional e de dados de uma aplica\u00e7\u00e3o composta por v\u00e1rios subsistemas trabalhando juntos do in\u00edcio ao fim. Muitas vezes, esses sistemas s\u00e3o desenvolvidos em diferentes tecnologias por diferentes equipes ou organiza\u00e7\u00f5es. Finalmente, eles se unem para formar uma aplica\u00e7\u00e3o de neg\u00f3cios funcional. Portanto, testar um \u00fanico sistema n\u00e3o seria suficiente. Assim, o teste de ponta a ponta verifica a aplica\u00e7\u00e3o do in\u00edcio ao fim, colocando todos os seus componentes juntos.","title":"Teste de Ponta a Ponta (E2E)"},{"location":"automated-testing/e2e-testing/#por-que-teste-e2e-o-porque","text":"Em muitos cen\u00e1rios de aplicativos de software comerciais, um sistema de software moderno consiste em sua interconex\u00e3o com v\u00e1rios subsistemas. Esses subsistemas podem estar dentro da mesma organiza\u00e7\u00e3o ou podem ser componentes de diferentes organiza\u00e7\u00f5es. Al\u00e9m disso, esses subsistemas podem ter ciclos de lan\u00e7amento de vida \u00fatil semelhantes ou diferentes do sistema atual. Como resultado, se houver qualquer falha ou defeito em qualquer subsistema, isso pode afetar adversamente todo o sistema de software, levando ao seu colapso. A ilustra\u00e7\u00e3o acima \u00e9 uma pir\u00e2mide de teste do blog de Kent C. Dodd , que \u00e9 uma combina\u00e7\u00e3o das pir\u00e2mides do blog de Martin Fowler e do Google Testing Blog . A maioria dos seus testes est\u00e1 na parte inferior da pir\u00e2mide. \u00c0 medida que voc\u00ea sobe na pir\u00e2mide, o n\u00famero de testes diminui. Al\u00e9m disso, subindo na pir\u00e2mide, os testes ficam mais lentos e mais caros para escrever, executar e manter. Cada tipo de teste varia para o seu prop\u00f3sito, aplica\u00e7\u00e3o e as \u00e1reas que se destina a cobrir. Para mais informa\u00e7\u00f5es sobre a an\u00e1lise comparativa de diferentes tipos de testes, consulte este documento ## Unidade vs Integra\u00e7\u00e3o vs Sistema vs Teste E2E .","title":"Por que Teste E2E [O Porqu\u00ea]"},{"location":"automated-testing/e2e-testing/#blocos-de-design-de-teste-e2e-o-que","text":"Vamos examinar todas as 3 categorias uma por uma:","title":"Blocos de Design de Teste E2E [O Qu\u00ea]"},{"location":"automated-testing/e2e-testing/#funcoes-do-usuario","text":"As seguintes a\u00e7\u00f5es devem ser realizadas como parte da constru\u00e7\u00e3o de fun\u00e7\u00f5es do usu\u00e1rio: Liste as fun\u00e7\u00f5es iniciadas pelo usu\u00e1rio dos sistemas de software e seus subsistemas interconectados. Para qualquer fun\u00e7\u00e3o, acompanhe as a\u00e7\u00f5es realizadas, bem como os dados de entrada e sa\u00edda. Encontre as rela\u00e7\u00f5es, se houver, entre diferentes fun\u00e7\u00f5es do usu\u00e1rio. Descubra a natureza das diferentes fun\u00e7\u00f5es do usu\u00e1rio, ou seja, se s\u00e3o independentes ou reutiliz\u00e1veis.","title":"Fun\u00e7\u00f5es do Usu\u00e1rio"},{"location":"automated-testing/e2e-testing/#condicoes","text":"As seguintes atividades devem ser realizadas como parte da constru\u00e7\u00e3o de condi\u00e7\u00f5es com base nas fun\u00e7\u00f5es do usu\u00e1rio: Para cada uma das fun\u00e7\u00f5es do usu\u00e1rio, um conjunto de condi\u00e7\u00f5es deve ser preparado. O tempo, as condi\u00e7\u00f5es de dados e outros fatores que afetam as fun\u00e7\u00f5es do usu\u00e1rio podem ser considerados como par\u00e2metros.","title":"Condi\u00e7\u00f5es"},{"location":"automated-testing/e2e-testing/#casos-de-teste","text":"Os seguintes fatores devem ser considerados para a constru\u00e7\u00e3o de casos de teste: Para cada cen\u00e1rio, um ou mais casos de teste devem ser criados para testar cada funcionalidade das fun\u00e7\u00f5es do usu\u00e1rio. Se poss\u00edvel, esses casos de teste devem ser automatizados por meio dos processos padr\u00e3o de pipeline de CI/CD com o acompanhamento de cada build bem-sucedido e falho no AzDO. Cada condi\u00e7\u00e3o deve ser listada como um caso de teste separado.","title":"Casos de Teste"},{"location":"automated-testing/e2e-testing/#aplicando-o-teste-e2e-o-como","text":"Como qualquer outro teste, o teste E2E tamb\u00e9m passa por fases formais de planejamento, execu\u00e7\u00e3o de teste e encerramento. O teste E2E \u00e9 feito com as seguintes etapas:","title":"Aplicando o Teste E2E [O Como]"},{"location":"automated-testing/e2e-testing/#planejamento","text":"An\u00e1lise de requisitos de neg\u00f3cios e funcionais Desenvolvimento do plano de teste Desenvolvimento do caso de teste Configura\u00e7\u00e3o do ambiente de teste semelhante \u00e0 produ\u00e7\u00e3o Configura\u00e7\u00e3o dos dados de teste Decidir crit\u00e9rios de sa\u00edda Escolher os m\u00e9todos de teste mais aplic\u00e1veis ao seu sistema. Para a defini\u00e7\u00e3o dos v\u00e1rios m\u00e9todos de teste, consulte o documento M\u00e9todos de Teste .","title":"Planejamento"},{"location":"automated-testing/e2e-testing/#pre-requisito","text":"O teste do sistema deve estar completo para todos os sistemas participantes. Todos os subsistemas devem ser combinados para funcionar como uma aplica\u00e7\u00e3o completa. O ambiente de teste semelhante \u00e0 produ\u00e7\u00e3o deve estar pronto.","title":"Pr\u00e9-requisito"},{"location":"automated-testing/e2e-testing/#execucao-do-teste","text":"Execute os casos de teste Registre os resultados do teste e decida sobre a aprova\u00e7\u00e3o e falha Relate os bugs na ferramenta de relat\u00f3rio de bugs Re-verifique as corre\u00e7\u00f5es de bugs","title":"Execu\u00e7\u00e3o do Teste"},{"location":"automated-testing/e2e-testing/#encerramento-do-teste","text":"Prepara\u00e7\u00e3o do relat\u00f3rio de teste Avalia\u00e7\u00e3o dos crit\u00e9rios de sa\u00edda Encerramento da fase de teste","title":"Encerramento do Teste"},{"location":"automated-testing/e2e-testing/#metricas-de-teste","text":"Rastrear as m\u00e9tricas de qualidade d\u00e1 uma vis\u00e3o sobre o status atual do teste. Algumas m\u00e9tricas comuns de teste E2E s\u00e3o: Status de prepara\u00e7\u00e3o do caso de teste : N\u00famero de casos de teste prontos versus o n\u00famero total de casos de teste. Progresso frequente do teste : N\u00famero de casos de teste executados de maneira frequente e consistente, por exemplo, semanalmente, versus um n\u00famero-alvo de casos de teste no mesmo per\u00edodo de tempo. Status dos defeitos : Esta m\u00e9trica representa o status dos defeitos encontrados durante o teste. Os defeitos devem ser registrados na ferramenta de rastreamento de defeitos (por exemplo, backlog do AzDO) e resolvidos de acordo com sua gravidade e prioridade. Portanto, a porcentagem de defeitos abertos e fechados de acordo com sua gravidade e prioridade deve ser calculada para rastrear esta m\u00e9trica. A consulta do painel AzDO pode ser usada para rastrear essa m\u00e9trica. Disponibilidade do ambiente de teste : Esta m\u00e9trica rastreia a dura\u00e7\u00e3o do ambiente de teste usado para o teste de ponta a ponta versus sua dura\u00e7\u00e3o de aloca\u00e7\u00e3o programada.","title":"M\u00e9tricas de Teste"},{"location":"automated-testing/e2e-testing/#frameworks-e-ferramentas-de-teste-e2e","text":"","title":"Frameworks e Ferramentas de Teste E2E"},{"location":"automated-testing/e2e-testing/#1-gauge-framework","text":"Gauge \u00e9 um framework gratuito e de c\u00f3digo aberto para escrever e executar testes E2E. Algumas caracter\u00edsticas-chave do Gauge que o tornam \u00fanico incluem: Sintaxe simples, flex\u00edvel e rica baseada em Markdown. Suporte consistente entre plataformas/linguagens para escrever c\u00f3digo de teste. Uma arquitetura modular com suporte a plugins. Suporta execu\u00e7\u00e3o orientada a dados e fontes de dados externas. Ajuda voc\u00ea a criar su\u00edtes de teste sustent\u00e1veis. Suporta Visual Studio Code, Intellij IDEA, IDE Support. Suporta relat\u00f3rios em html, json e XML. Site do Gauge Framework","title":"1. Gauge Framework"},{"location":"automated-testing/e2e-testing/#2-robot-framework","text":"Robot Framework \u00e9 um framework de automa\u00e7\u00e3o de c\u00f3digo aberto gen\u00e9rico. O framework tem uma sintaxe f\u00e1cil, utilizando palavras-chave leg\u00edveis por humanos. Suas capacidades podem ser estendidas por bibliotecas implementadas com Python ou Java. Robot compartilha muitos dos mesmos \"pr\u00f3s\" que o Gauge, exceto as ferramentas de desenvolvimento e a sintaxe. Em nosso uso, descobrimos que o Intellisense do VS Code oferecido com o Gauge era muito mais est\u00e1vel do que as ofertas para o Robot. Tamb\u00e9m achamos a sintaxe menos leg\u00edvel do que o que o Gauge oferecia. Embora ambos os frameworks permitam defini\u00e7\u00f5es de casos de teste baseadas em marca\u00e7\u00e3o, a sintaxe do Gauge l\u00ea muito mais como uma frase em portugu\u00eas do que o Robot. Finalmente, o Intellisense est\u00e1 incorporado nos arquivos de marca\u00e7\u00e3o para casos de teste do Gauge, o que criar\u00e1 um stub de fun\u00e7\u00e3o para a defini\u00e7\u00e3o de teste real se o desenvolvedor permitir. O mesmo n\u00e3o pode ser dito do Robot Framework. Site do Robot Framework","title":"2. Robot Framework"},{"location":"automated-testing/e2e-testing/#3-testcraft","text":"TestCraft \u00e9 uma plataforma de automa\u00e7\u00e3o de teste Selenium sem c\u00f3digo. Sua tecnologia revolucion\u00e1ria de IA e modelagem visual \u00fanica permitem uma cria\u00e7\u00e3o e execu\u00e7\u00e3o de teste mais r\u00e1pida, eliminando a sobrecarga de manuten\u00e7\u00e3o de teste. Os testadores criam cen\u00e1rios de teste totalmente automatizados sem codifica\u00e7\u00e3o. Os clientes encontram bugs mais rapidamente, lan\u00e7am com mais frequ\u00eancia, integram-se com a abordagem CI/CD e melhoram a qualidade geral de seus produtos digitais. Isso cria uma experi\u00eancia completa de teste de ponta a ponta. Site do Perfecto (TestCraft) ou obtenha-o no Visual Studio Marketplace","title":"3. TestCraft"},{"location":"automated-testing/e2e-testing/#4-ranorex-studio","text":"Ranorex Studio \u00e9 uma ferramenta completa de automa\u00e7\u00e3o de teste de ponta a ponta para aplica\u00e7\u00f5es desktop, web e m\u00f3veis. Crie testes confi\u00e1veis rapidamente sem qualquer codifica\u00e7\u00e3o ou usando o IDE completo. Use arquivos CSV ou Excel externos ou um banco de dados SQL como entradas para seus testes. Execute testes em paralelo ou em uma grade Selenium com o Selenium WebDriver integrado. O Ranorex Studio se integra ao seu processo de CI/CD para encurtar seus ciclos de lan\u00e7amento sem sacrificar a qualidade. Os testes do Ranorex Studio tamb\u00e9m se integram ao Azure DevOps (AzDO), que podem ser executados como parte de um pipeline de build no AzDO. Site do Ranorex Studio","title":"4. Ranorex Studio"},{"location":"automated-testing/e2e-testing/#5-katalon-studio","text":"Katalon Studio \u00e9 uma excelente solu\u00e7\u00e3o de automa\u00e7\u00e3o de ponta a ponta para testes web, API, m\u00f3veis e desktop com suporte DevOps. Com o Katalon Studio, o teste automatizado pode ser facilmente integrado a qualquer pipeline de CI/CD para lan\u00e7ar produtos mais rapidamente, garantindo alta qualidade. O Katalon Studio personaliza para usu\u00e1rios de iniciantes a especialistas. Fun\u00e7\u00f5es robustas como Espionagem, Grava\u00e7\u00e3o, Interface de editor duplo e Palavras-chave personalizadas tornam poss\u00edvel a configura\u00e7\u00e3o, cria\u00e7\u00e3o e manuten\u00e7\u00e3o de testes para os usu\u00e1rios. Constru\u00eddo em cima do Selenium e Appium, o Katalon Studio ajuda a padronizar seus testes de ponta a ponta. Ele tamb\u00e9m est\u00e1 em conformidade com os frameworks mais populares para trabalhar de forma integrada com outras ferramentas no ecossistema de teste automatizado. O Katalon \u00e9 endossado pela Gartner, profissionais de TI e uma grande comunidade de teste. Nota: No momento da escrita deste texto, a extens\u00e3o do Katalon Studio para AzDO N\u00c3O estava dispon\u00edvel para Linux. Site do Katalon Studio ou leia sobre sua integra\u00e7\u00e3o com o AzDO","title":"5. Katalon Studio"},{"location":"automated-testing/e2e-testing/#6-bugbugio","text":"BugBug \u00e9 uma maneira f\u00e1cil de automatizar testes para aplica\u00e7\u00f5es web. A ferramenta foca na simplicidade, mas ainda permite que voc\u00ea cubra todos os casos de teste essenciais sem codifica\u00e7\u00e3o. \u00c9 uma solu\u00e7\u00e3o completa - voc\u00ea pode criar testes facilmente e usar a nuvem integrada para execut\u00e1-los de acordo com um cronograma ou a partir do seu CI/CD, sem altera\u00e7\u00f5es na sua pr\u00f3pria infraestrutura. BugBug \u00e9 uma alternativa interessante ao Selenium porque \u00e9 realmente uma tecnologia completamente diferente. Ele \u00e9 baseado em uma extens\u00e3o do Chrome que permite ao BugBug gravar e executar testes mais rapidamente do que os frameworks da velha escola. A maior vantagem do BugBug \u00e9 sua facilidade de uso. A maioria dos testes criados com o BugBug simplesmente funciona imediatamente. Isso torna mais f\u00e1cil para pessoas n\u00e3o t\u00e9cnicas manterem os testes - com o BugBug, voc\u00ea pode economizar dinheiro na contrata\u00e7\u00e3o de um engenheiro de QA. Site do BugBug","title":"6. BugBug.io"},{"location":"automated-testing/e2e-testing/#conclusao","text":"Espero que voc\u00ea tenha aprendido v\u00e1rios aspectos do teste E2E, como seus processos, m\u00e9tricas, a diferen\u00e7a entre testes Unit\u00e1rios, de Integra\u00e7\u00e3o e E2E, e os v\u00e1rios frameworks e ferramentas de teste E2E recomendados. Para qualquer lan\u00e7amento comercial do software, a verifica\u00e7\u00e3o do teste E2E desempenha um papel importante, pois testa toda a aplica\u00e7\u00e3o em um ambiente que imita exatamente os usu\u00e1rios do mundo real, como comunica\u00e7\u00e3o de rede, intera\u00e7\u00e3o com middleware e servi\u00e7os de back-end, etc. Por fim, o teste E2E \u00e9 frequentemente realizado manualmente, pois o custo de automatizar tais casos de teste \u00e9 muito alto para ser suportado por qualquer organiza\u00e7\u00e3o. Dito isso, o objetivo final de cada organiza\u00e7\u00e3o \u00e9 tornar o teste E2E o mais eficiente poss\u00edvel, adicionando componentes de teste totalmente e semi-automatizados ao processo. Portanto, os v\u00e1rios frameworks e ferramentas de teste E2E listados neste artigo v\u00eam em socorro.","title":"Conclus\u00e3o"},{"location":"automated-testing/e2e-testing/#recursos","text":"Wikipedia: Teste de Software Wikipedia: Teste Unit\u00e1rio Wikipedia: Teste de Integra\u00e7\u00e3o Wikipedia: Teste de Sistema","title":"Recursos"},{"location":"automated-testing/e2e-testing/testing-comparison/","text":"Teste Unit\u00e1rio vs Teste de Integra\u00e7\u00e3o vs Teste de Sistema vs Teste E2E A tabela abaixo ilustra as caracter\u00edsticas mais cr\u00edticas e diferen\u00e7as entre Teste Unit\u00e1rio, Teste de Integra\u00e7\u00e3o, Teste de Sistema e Teste de Ponta a Ponta (E2E), e quando aplicar cada metodologia em um projeto. Teste Unit\u00e1rio Teste de Integra\u00e7\u00e3o Teste de Sistema Teste E2E Escopo M\u00f3dulos, APIs M\u00f3dulos, interfaces Aplica\u00e7\u00e3o, sistema Todos os subsistemas, depend\u00eancias de rede, servi\u00e7os e bancos de dados Tamanho Pequeno Pequeno a m\u00e9dio Grande Extra Grande Ambiente Desenvolvimento Teste de integra\u00e7\u00e3o Teste de QA Similar \u00e0 produ\u00e7\u00e3o Dados Dados simulados Dados de teste Dados de teste C\u00f3pia de dados de produ\u00e7\u00e3o reais Sistema Sob Teste Teste unit\u00e1rio isolado Interfaces e fluxo de dados entre os m\u00f3dulos Sistema espec\u00edfico como um todo Fluxo da aplica\u00e7\u00e3o do in\u00edcio ao fim Cen\u00e1rios Perspectivas do desenvolvedor Perspectivas de desenvolvedores e testadores de TI Perspectivas de desenvolvedores e testadores de QA Perspectivas do usu\u00e1rio final Quando Ap\u00f3s cada build Ap\u00f3s o teste unit\u00e1rio Antes do teste E2E e ap\u00f3s os testes unit\u00e1rios e de integra\u00e7\u00e3o Ap\u00f3s o teste de sistema Automatizado ou Manual Automatizado Manual ou automatizado Manual ou automatizado Manual","title":"Teste Unit\u00e1rio vs Teste de Integra\u00e7\u00e3o vs Teste de Sistema vs Teste E2E"},{"location":"automated-testing/e2e-testing/testing-comparison/#teste-unitario-vs-teste-de-integracao-vs-teste-de-sistema-vs-teste-e2e","text":"A tabela abaixo ilustra as caracter\u00edsticas mais cr\u00edticas e diferen\u00e7as entre Teste Unit\u00e1rio, Teste de Integra\u00e7\u00e3o, Teste de Sistema e Teste de Ponta a Ponta (E2E), e quando aplicar cada metodologia em um projeto. Teste Unit\u00e1rio Teste de Integra\u00e7\u00e3o Teste de Sistema Teste E2E Escopo M\u00f3dulos, APIs M\u00f3dulos, interfaces Aplica\u00e7\u00e3o, sistema Todos os subsistemas, depend\u00eancias de rede, servi\u00e7os e bancos de dados Tamanho Pequeno Pequeno a m\u00e9dio Grande Extra Grande Ambiente Desenvolvimento Teste de integra\u00e7\u00e3o Teste de QA Similar \u00e0 produ\u00e7\u00e3o Dados Dados simulados Dados de teste Dados de teste C\u00f3pia de dados de produ\u00e7\u00e3o reais Sistema Sob Teste Teste unit\u00e1rio isolado Interfaces e fluxo de dados entre os m\u00f3dulos Sistema espec\u00edfico como um todo Fluxo da aplica\u00e7\u00e3o do in\u00edcio ao fim Cen\u00e1rios Perspectivas do desenvolvedor Perspectivas de desenvolvedores e testadores de TI Perspectivas de desenvolvedores e testadores de QA Perspectivas do usu\u00e1rio final Quando Ap\u00f3s cada build Ap\u00f3s o teste unit\u00e1rio Antes do teste E2E e ap\u00f3s os testes unit\u00e1rios e de integra\u00e7\u00e3o Ap\u00f3s o teste de sistema Automatizado ou Manual Automatizado Manual ou automatizado Manual ou automatizado Manual","title":"Teste Unit\u00e1rio vs Teste de Integra\u00e7\u00e3o vs Teste de Sistema vs Teste E2E"},{"location":"automated-testing/e2e-testing/testing-methods/","text":"M\u00e9todos de Teste E2E Teste Horizontal Este m\u00e9todo \u00e9 muito comumente usado. Ele ocorre horizontalmente no contexto de v\u00e1rias aplica\u00e7\u00f5es. Pegue, por exemplo, um sistema de gerenciamento de ingest\u00e3o de dados. Os dados de entrada podem ser injetados de v\u00e1rias fontes, mas depois s\u00e3o \"achatados\" em um pipeline de processamento horizontal que pode incluir v\u00e1rios componentes, como uma API de gateway, transforma\u00e7\u00e3o de dados, valida\u00e7\u00e3o de dados, armazenamento, etc. Ao longo de todo o processamento de Extra\u00e7\u00e3o-Transforma\u00e7\u00e3o-Carga (ETL), o fluxo de dados pode ser rastreado e monitorado sob o espectro horizontal com pequenos toques opcionais, e portanto n\u00e3o importantes para o caso de teste E2E geral, servi\u00e7os como registro, auditoria, autentica\u00e7\u00e3o. Teste Vertical Neste m\u00e9todo, todas as transa\u00e7\u00f5es mais cr\u00edticas de qualquer aplica\u00e7\u00e3o s\u00e3o verificadas e avaliadas desde o in\u00edcio at\u00e9 o fim. Cada camada individual da aplica\u00e7\u00e3o \u00e9 testada come\u00e7ando de cima para baixo. Pegue, por exemplo, uma aplica\u00e7\u00e3o baseada na web que usa servi\u00e7os de middleware para acessar recursos de back-end. Nesse caso, cada camada (n\u00edvel) precisa ser totalmente testada em conjunto com as camadas \"conectadas\" acima e abaixo, nas quais os servi\u00e7os \"conversam\" entre si durante o fluxo de dados de ponta a ponta. Todos esses cen\u00e1rios de teste complexos exigir\u00e3o valida\u00e7\u00e3o adequada e testes automatizados dedicados. Portanto, este m\u00e9todo \u00e9 muito mais dif\u00edcil. Diretrizes para o Design de Casos de Teste E2E A seguir est\u00e3o listadas algumas diretrizes que devem ser levadas em considera\u00e7\u00e3o ao projetar os casos de teste para a realiza\u00e7\u00e3o de testes E2E: Os casos de teste devem ser projetados a partir da perspectiva do usu\u00e1rio final. Deve-se focar em testar alguns recursos existentes do sistema. V\u00e1rios cen\u00e1rios devem ser considerados para criar m\u00faltiplos casos de teste. Diferentes conjuntos de casos de teste devem ser criados para focar em m\u00faltiplos cen\u00e1rios do sistema.","title":"M\u00e9todos de Teste E2E"},{"location":"automated-testing/e2e-testing/testing-methods/#metodos-de-teste-e2e","text":"","title":"M\u00e9todos de Teste E2E"},{"location":"automated-testing/e2e-testing/testing-methods/#teste-horizontal","text":"Este m\u00e9todo \u00e9 muito comumente usado. Ele ocorre horizontalmente no contexto de v\u00e1rias aplica\u00e7\u00f5es. Pegue, por exemplo, um sistema de gerenciamento de ingest\u00e3o de dados. Os dados de entrada podem ser injetados de v\u00e1rias fontes, mas depois s\u00e3o \"achatados\" em um pipeline de processamento horizontal que pode incluir v\u00e1rios componentes, como uma API de gateway, transforma\u00e7\u00e3o de dados, valida\u00e7\u00e3o de dados, armazenamento, etc. Ao longo de todo o processamento de Extra\u00e7\u00e3o-Transforma\u00e7\u00e3o-Carga (ETL), o fluxo de dados pode ser rastreado e monitorado sob o espectro horizontal com pequenos toques opcionais, e portanto n\u00e3o importantes para o caso de teste E2E geral, servi\u00e7os como registro, auditoria, autentica\u00e7\u00e3o.","title":"Teste Horizontal"},{"location":"automated-testing/e2e-testing/testing-methods/#teste-vertical","text":"Neste m\u00e9todo, todas as transa\u00e7\u00f5es mais cr\u00edticas de qualquer aplica\u00e7\u00e3o s\u00e3o verificadas e avaliadas desde o in\u00edcio at\u00e9 o fim. Cada camada individual da aplica\u00e7\u00e3o \u00e9 testada come\u00e7ando de cima para baixo. Pegue, por exemplo, uma aplica\u00e7\u00e3o baseada na web que usa servi\u00e7os de middleware para acessar recursos de back-end. Nesse caso, cada camada (n\u00edvel) precisa ser totalmente testada em conjunto com as camadas \"conectadas\" acima e abaixo, nas quais os servi\u00e7os \"conversam\" entre si durante o fluxo de dados de ponta a ponta. Todos esses cen\u00e1rios de teste complexos exigir\u00e3o valida\u00e7\u00e3o adequada e testes automatizados dedicados. Portanto, este m\u00e9todo \u00e9 muito mais dif\u00edcil.","title":"Teste Vertical"},{"location":"automated-testing/e2e-testing/testing-methods/#diretrizes-para-o-design-de-casos-de-teste-e2e","text":"A seguir est\u00e3o listadas algumas diretrizes que devem ser levadas em considera\u00e7\u00e3o ao projetar os casos de teste para a realiza\u00e7\u00e3o de testes E2E: Os casos de teste devem ser projetados a partir da perspectiva do usu\u00e1rio final. Deve-se focar em testar alguns recursos existentes do sistema. V\u00e1rios cen\u00e1rios devem ser considerados para criar m\u00faltiplos casos de teste. Diferentes conjuntos de casos de teste devem ser criados para focar em m\u00faltiplos cen\u00e1rios do sistema.","title":"Diretrizes para o Design de Casos de Teste E2E"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/","text":"Framework Gauge Gauge \u00e9 um framework gratuito e de c\u00f3digo aberto para escrever e executar testes E2E. Algumas caracter\u00edsticas-chave do Gauge que o tornam \u00fanico incluem: Sintaxe simples, flex\u00edvel e rica baseada em Markdown. Suporte consistente entre plataformas/linguagens para escrever c\u00f3digo de teste. Uma arquitetura modular com suporte a plugins. Extens\u00edvel atrav\u00e9s de plugins e personaliz\u00e1vel. Suporta execu\u00e7\u00e3o orientada a dados e fontes de dados externas. Ajuda voc\u00ea a criar su\u00edtes de teste sustent\u00e1veis. Suporta Visual Studio Code, Intellij IDEA, suporte IDE. O que \u00e9 uma Especifica\u00e7\u00e3o As especifica\u00e7\u00f5es do Gauge s\u00e3o escritas usando uma sintaxe Markdown. Por exemplo: # Procurar pelo blob de dados ## Procurar por arquivo * Ir para o blob do Azure Nesta especifica\u00e7\u00e3o, Procurar pelo blob de dados \u00e9 o cabe\u00e7alho da especifica\u00e7\u00e3o , Procurar por arquivo \u00e9 um cen\u00e1rio com um passo Ir para o blob do Azure . O que \u00e9 uma Implementa\u00e7\u00e3o Voc\u00ea pode implementar os passos em uma especifica\u00e7\u00e3o usando uma linguagem de programa\u00e7\u00e3o, por exemplo: from getgauge.python import step import os from step_impl.utils.driver import Driver @step ( \"Ir para o blob do Azure\" ) def gotoAzureStorage () : URL = os.getenv ( 'STORAGE_ENDPOINT' ) Driver.driver.get ( URL ) O runner do Gauge l\u00ea e executa passos e suas implementa\u00e7\u00f5es para cada cen\u00e1rio na especifica\u00e7\u00e3o e gera um relat\u00f3rio de cen\u00e1rios aprovados ou reprovados. # Procurar pelo blob de dados ## Procurar por arquivo \u2714 Relat\u00f3rio html gerado com sucesso para = > reports/html-report/index.html Especifica\u00e7\u00f5es: 1 executadas 1 aprovadas 0 reprovadas 0 ignoradas Cen\u00e1rios: 1 executados 1 aprovados 0 reprovados 0 ignorados Reutilizando Passos O Gauge ajuda voc\u00ea a se concentrar no teste do fluxo de uma aplica\u00e7\u00e3o. O Gauge faz isso tornando os passos t\u00e3o reutiliz\u00e1veis quanto poss\u00edvel. Com o Gauge, voc\u00ea n\u00e3o precisa construir frameworks personalizados usando uma linguagem de programa\u00e7\u00e3o. Por exemplo, os passos do Gauge podem passar par\u00e2metros para uma implementa\u00e7\u00e3o usando um texto entre aspas. # Procurar pelo blob de dados ## Procurar por arquivo * Ir para o blob do Azure * Procurar por \"store_data.csv\" A implementa\u00e7\u00e3o agora pode usar \"store_data.csv\" da seguinte forma: from getgauge.python import step import os @step ( \"Procurar por <query>\" ) def searchForQuery ( query ) : write ( query ) press ( \"Enter\" ) Voc\u00ea pode ent\u00e3o reutilizar este passo dentro ou entre cen\u00e1rios com diferentes par\u00e2metros: # Procurar pelo blob de dados ## Procurar por dados da loja #1 * Ir para o blob do Azure * Procurar por \"store_1.csv\" ## Procurar por dados da loja #2 * Ir para o blob do Azure * Procurar por \"store_2.csv\" Ou combinar mais de um passo em conceitos # Procurar no armazenamento do Azure por <query> * Ir para o blob do Azure * Procurar por \"store_1.csv\" O conceito, Procurar no armazenamento do Azure por <query> pode ser usado como um passo em uma especifica\u00e7\u00e3o. # Procurar pelo blob de dados ## Procurar por dados da loja #1 * Procurar no armazenamento do Azure por \"store_1.csv\" ## Procurar por dados da loja #2 * Procurar no armazenamento do Azure por \"store_2.csv\" Teste Orientado a Dados O Gauge tamb\u00e9m suporta teste orientado a dados usando tabelas Markdown, bem como arquivos csv externos, por exemplo: # Procurar pelo blob de dados | query | | --------- | | store_1 | | store_2 | | store_3 | ## Procurar por dados das lojas * Procurar no armazenamento do Azure por <query> Isso executar\u00e1 o cen\u00e1rio para todas as linhas da tabela. Nos exemplos acima, refatoramos uma especifica\u00e7\u00e3o para ser concisa e flex\u00edvel sem alterar a implementa\u00e7\u00e3o. Outros Recursos Esta \u00e9 uma breve introdu\u00e7\u00e3o a alguns recursos do Gauge. Consulte a documenta\u00e7\u00e3o do Gauge para recursos adicionais, como: Relat\u00f3rios Tags Execu\u00e7\u00e3o Paralela Ambientes Capturas de tela Plugins E muito mais Instalando o Gauge Este guia de introdu\u00e7\u00e3o o levar\u00e1 pelos recursos principais do Gauge. Ao final deste guia, voc\u00ea ser\u00e1 capaz de instalar o Gauge e aprender como criar seu primeiro projeto de automa\u00e7\u00e3o de teste com o Gauge. Instru\u00e7\u00f5es de Instala\u00e7\u00e3o para Windows OS Passo 1: Instalando o Gauge no Windows Esta se\u00e7\u00e3o fornece instru\u00e7\u00f5es espec\u00edficas sobre como configurar o Gauge em um ambiente Microsoft Windows. Baixe o seguinte pacote de instala\u00e7\u00e3o para obter a vers\u00e3o est\u00e1vel mais recente do Gauge. Passo 2: Instalando a extens\u00e3o Gauge para Visual Studio Code Siga os passos para adicionar o plugin Gauge Visual Studio Code a partir do IDE. Instale a seguinte extens\u00e3o Gauge para Visual Studio Code . Solu\u00e7\u00e3o de Problemas de Instala\u00e7\u00e3o Se, ao executar sua primeira especifica\u00e7\u00e3o do Gauge, voc\u00ea receber o erro de pacotes Python ausentes, abra a janela do terminal de linha de comando e execute este comando: python.exe -m pip install getgauge == 0 .3.7 --user Instru\u00e7\u00f5es de Instala\u00e7\u00e3opara macOS Passo 1: Instalando o Gauge no macOS Esta se\u00e7\u00e3o fornece instru\u00e7\u00f5es espec\u00edficas sobre como configurar o Gauge em um ambiente macOS. Instale o brew se ainda n\u00e3o o tiver feito: Acesse o site do brew e siga as instru\u00e7\u00f5es l\u00e1. Execute o comando brew para instalar o Gauge: > brew install gauge Se o HomeBrew estiver funcionando corretamente, voc\u00ea dever\u00e1 ver algo semelhante ao seguinte: == > Buscando gauge == > Baixando https://ghcr.io/v2/homebrew/core/gauge/manifests/1.4.3 ######################################################################## 100.0% == > Baixando https://ghcr.io/v2/homebrew/core/gauge/blobs/sha256:05117bb3c0b2efeafe41e817cd3ad86307c1d2ea7e0e835655c4b51ab2472893 == > Baixando de https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:05117bb3c0b2efeafe41e817cd3ad86307c1d2ea7e0e835655c4b51ab2472893?se = 2022 -12-13T12%3A35%3A00Z & sig = I78SuuwNgSMFoBTT ######################################################################## 100.0% == > Despejando gauge--1.4.3.ventura.bottle.tar.gz /usr/local/Cellar/gauge/1.4.3: 6 arquivos, 18 .9MB Passo 2: Instalando a extens\u00e3o Gauge para Visual Studio Code Siga os passos para adicionar o plugin Gauge Visual Studio Code a partir do IDE: Instale a seguinte extens\u00e3o Gauge para Visual Studio Code . Solu\u00e7\u00e3o de Problemas P\u00f3s-Instala\u00e7\u00e3o Se, ao executar sua primeira especifica\u00e7\u00e3o do Gauge, voc\u00ea receber o erro de pacotes Python ausentes, abra a janela do terminal de linha de comando e execute este comando: python.exe -m pip install getgauge == 0 .3.7 --user","title":"Framework Gauge"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#framework-gauge","text":"Gauge \u00e9 um framework gratuito e de c\u00f3digo aberto para escrever e executar testes E2E. Algumas caracter\u00edsticas-chave do Gauge que o tornam \u00fanico incluem: Sintaxe simples, flex\u00edvel e rica baseada em Markdown. Suporte consistente entre plataformas/linguagens para escrever c\u00f3digo de teste. Uma arquitetura modular com suporte a plugins. Extens\u00edvel atrav\u00e9s de plugins e personaliz\u00e1vel. Suporta execu\u00e7\u00e3o orientada a dados e fontes de dados externas. Ajuda voc\u00ea a criar su\u00edtes de teste sustent\u00e1veis. Suporta Visual Studio Code, Intellij IDEA, suporte IDE.","title":"Framework Gauge"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#o-que-e-uma-especificacao","text":"As especifica\u00e7\u00f5es do Gauge s\u00e3o escritas usando uma sintaxe Markdown. Por exemplo: # Procurar pelo blob de dados ## Procurar por arquivo * Ir para o blob do Azure Nesta especifica\u00e7\u00e3o, Procurar pelo blob de dados \u00e9 o cabe\u00e7alho da especifica\u00e7\u00e3o , Procurar por arquivo \u00e9 um cen\u00e1rio com um passo Ir para o blob do Azure .","title":"O que \u00e9 uma Especifica\u00e7\u00e3o"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#o-que-e-uma-implementacao","text":"Voc\u00ea pode implementar os passos em uma especifica\u00e7\u00e3o usando uma linguagem de programa\u00e7\u00e3o, por exemplo: from getgauge.python import step import os from step_impl.utils.driver import Driver @step ( \"Ir para o blob do Azure\" ) def gotoAzureStorage () : URL = os.getenv ( 'STORAGE_ENDPOINT' ) Driver.driver.get ( URL ) O runner do Gauge l\u00ea e executa passos e suas implementa\u00e7\u00f5es para cada cen\u00e1rio na especifica\u00e7\u00e3o e gera um relat\u00f3rio de cen\u00e1rios aprovados ou reprovados. # Procurar pelo blob de dados ## Procurar por arquivo \u2714 Relat\u00f3rio html gerado com sucesso para = > reports/html-report/index.html Especifica\u00e7\u00f5es: 1 executadas 1 aprovadas 0 reprovadas 0 ignoradas Cen\u00e1rios: 1 executados 1 aprovados 0 reprovados 0 ignorados","title":"O que \u00e9 uma Implementa\u00e7\u00e3o"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#reutilizando-passos","text":"O Gauge ajuda voc\u00ea a se concentrar no teste do fluxo de uma aplica\u00e7\u00e3o. O Gauge faz isso tornando os passos t\u00e3o reutiliz\u00e1veis quanto poss\u00edvel. Com o Gauge, voc\u00ea n\u00e3o precisa construir frameworks personalizados usando uma linguagem de programa\u00e7\u00e3o. Por exemplo, os passos do Gauge podem passar par\u00e2metros para uma implementa\u00e7\u00e3o usando um texto entre aspas. # Procurar pelo blob de dados ## Procurar por arquivo * Ir para o blob do Azure * Procurar por \"store_data.csv\" A implementa\u00e7\u00e3o agora pode usar \"store_data.csv\" da seguinte forma: from getgauge.python import step import os @step ( \"Procurar por <query>\" ) def searchForQuery ( query ) : write ( query ) press ( \"Enter\" ) Voc\u00ea pode ent\u00e3o reutilizar este passo dentro ou entre cen\u00e1rios com diferentes par\u00e2metros: # Procurar pelo blob de dados ## Procurar por dados da loja #1 * Ir para o blob do Azure * Procurar por \"store_1.csv\" ## Procurar por dados da loja #2 * Ir para o blob do Azure * Procurar por \"store_2.csv\" Ou combinar mais de um passo em conceitos # Procurar no armazenamento do Azure por <query> * Ir para o blob do Azure * Procurar por \"store_1.csv\" O conceito, Procurar no armazenamento do Azure por <query> pode ser usado como um passo em uma especifica\u00e7\u00e3o. # Procurar pelo blob de dados ## Procurar por dados da loja #1 * Procurar no armazenamento do Azure por \"store_1.csv\" ## Procurar por dados da loja #2 * Procurar no armazenamento do Azure por \"store_2.csv\"","title":"Reutilizando Passos"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#teste-orientado-a-dados","text":"O Gauge tamb\u00e9m suporta teste orientado a dados usando tabelas Markdown, bem como arquivos csv externos, por exemplo: # Procurar pelo blob de dados | query | | --------- | | store_1 | | store_2 | | store_3 | ## Procurar por dados das lojas * Procurar no armazenamento do Azure por <query> Isso executar\u00e1 o cen\u00e1rio para todas as linhas da tabela. Nos exemplos acima, refatoramos uma especifica\u00e7\u00e3o para ser concisa e flex\u00edvel sem alterar a implementa\u00e7\u00e3o.","title":"Teste Orientado a Dados"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#outros-recursos","text":"Esta \u00e9 uma breve introdu\u00e7\u00e3o a alguns recursos do Gauge. Consulte a documenta\u00e7\u00e3o do Gauge para recursos adicionais, como: Relat\u00f3rios Tags Execu\u00e7\u00e3o Paralela Ambientes Capturas de tela Plugins E muito mais","title":"Outros Recursos"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#instalando-o-gauge","text":"Este guia de introdu\u00e7\u00e3o o levar\u00e1 pelos recursos principais do Gauge. Ao final deste guia, voc\u00ea ser\u00e1 capaz de instalar o Gauge e aprender como criar seu primeiro projeto de automa\u00e7\u00e3o de teste com o Gauge.","title":"Instalando o Gauge"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#instrucoes-de-instalacao-para-windows-os","text":"","title":"Instru\u00e7\u00f5es de Instala\u00e7\u00e3o para Windows OS"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#passo-1-instalando-o-gauge-no-windows","text":"Esta se\u00e7\u00e3o fornece instru\u00e7\u00f5es espec\u00edficas sobre como configurar o Gauge em um ambiente Microsoft Windows. Baixe o seguinte pacote de instala\u00e7\u00e3o para obter a vers\u00e3o est\u00e1vel mais recente do Gauge.","title":"Passo 1: Instalando o Gauge no Windows"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#passo-2-instalando-a-extensao-gauge-para-visual-studio-code","text":"Siga os passos para adicionar o plugin Gauge Visual Studio Code a partir do IDE. Instale a seguinte extens\u00e3o Gauge para Visual Studio Code .","title":"Passo 2: Instalando a extens\u00e3o Gauge para Visual Studio Code"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#solucao-de-problemas-de-instalacao","text":"Se, ao executar sua primeira especifica\u00e7\u00e3o do Gauge, voc\u00ea receber o erro de pacotes Python ausentes, abra a janela do terminal de linha de comando e execute este comando: python.exe -m pip install getgauge == 0 .3.7 --user","title":"Solu\u00e7\u00e3o de Problemas de Instala\u00e7\u00e3o"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#instrucoes-de-instalacaopara-macos","text":"","title":"Instru\u00e7\u00f5es de Instala\u00e7\u00e3opara macOS"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#passo-1-instalando-o-gauge-no-macos","text":"Esta se\u00e7\u00e3o fornece instru\u00e7\u00f5es espec\u00edficas sobre como configurar o Gauge em um ambiente macOS. Instale o brew se ainda n\u00e3o o tiver feito: Acesse o site do brew e siga as instru\u00e7\u00f5es l\u00e1. Execute o comando brew para instalar o Gauge: > brew install gauge Se o HomeBrew estiver funcionando corretamente, voc\u00ea dever\u00e1 ver algo semelhante ao seguinte: == > Buscando gauge == > Baixando https://ghcr.io/v2/homebrew/core/gauge/manifests/1.4.3 ######################################################################## 100.0% == > Baixando https://ghcr.io/v2/homebrew/core/gauge/blobs/sha256:05117bb3c0b2efeafe41e817cd3ad86307c1d2ea7e0e835655c4b51ab2472893 == > Baixando de https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:05117bb3c0b2efeafe41e817cd3ad86307c1d2ea7e0e835655c4b51ab2472893?se = 2022 -12-13T12%3A35%3A00Z & sig = I78SuuwNgSMFoBTT ######################################################################## 100.0% == > Despejando gauge--1.4.3.ventura.bottle.tar.gz /usr/local/Cellar/gauge/1.4.3: 6 arquivos, 18 .9MB","title":"Passo 1: Instalando o Gauge no macOS"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#passo-2-instalando-a-extensao-gauge-para-visual-studio-code_1","text":"Siga os passos para adicionar o plugin Gauge Visual Studio Code a partir do IDE: Instale a seguinte extens\u00e3o Gauge para Visual Studio Code .","title":"Passo 2: Instalando a extens\u00e3o Gauge para Visual Studio Code"},{"location":"automated-testing/e2e-testing/recipes/gauge-framework/#solucao-de-problemas-pos-instalacao","text":"Se, ao executar sua primeira especifica\u00e7\u00e3o do Gauge, voc\u00ea receber o erro de pacotes Python ausentes, abra a janela do terminal de linha de comando e execute este comando: python.exe -m pip install getgauge == 0 .3.7 --user","title":"Solu\u00e7\u00e3o de Problemas P\u00f3s-Instala\u00e7\u00e3o"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/","text":"Testes com Postman O objetivo deste documento \u00e9 fornecer orienta\u00e7\u00f5es sobre como usar o Newman em seu pipeline de CI/CD para executar testes de ponta a ponta (E2E) definidos em Cole\u00e7\u00f5es do Postman, seguindo as melhores pr\u00e1ticas de seguran\u00e7a. Primeiramente, apresentaremos o Postman e o Newman e, em seguida, descreveremos v\u00e1rios casos de uso de testes com o Postman que explicam por que voc\u00ea pode querer ir al\u00e9m dos testes locais com Cole\u00e7\u00f5es do Postman. No caso de uso final, pretendemos usar um script shell que faz refer\u00eancia ao caminho do arquivo da Cole\u00e7\u00e3o do Postman e ao caminho do arquivo de Ambiente como entradas para o Newman. Abaixo est\u00e1 um diagrama de fluxo representando o resultado do caso de uso final: Postman e Newman Postman \u00e9 uma plataforma API gratuita para testar APIs. As principais funcionalidades destacadas neste guia incluem: Cole\u00e7\u00f5es do Postman Arquivos de Ambiente do Postman Scripts do Postman Newman \u00e9 um executor de Cole\u00e7\u00f5es do Postman via linha de comando. Ele permite que voc\u00ea execute e teste uma Cole\u00e7\u00e3o do Postman diretamente da linha de comando. As principais funcionalidades destacadas neste guia incluem: Comando Run do Newman O que \u00e9 uma Cole\u00e7\u00e3o Uma Cole\u00e7\u00e3o do Postman \u00e9 um grupo de requisi\u00e7\u00f5es salvas que podem ser executadas. Uma cole\u00e7\u00e3o pode ser exportada como um arquivo json. O que \u00e9 um Arquivo de Ambiente Um arquivo de Ambiente do Postman cont\u00e9m vari\u00e1veis de ambiente que podem ser referenciadas por uma Cole\u00e7\u00e3o do Postman v\u00e1lida. O que \u00e9 um Script do Postman Um Script do Postman \u00e9 um Javascript hospedado dentro de uma Cole\u00e7\u00e3o do Postman que pode ser escrito para executar contra sua Cole\u00e7\u00e3o do Postman e Arquivo de Ambiente. O que \u00e9 o Comando Run do Newman Um comando CLI do Newman que permite especificar uma Cole\u00e7\u00e3o do Postman a ser executada. Instalando o Postman e o Newman Para instru\u00e7\u00f5es espec\u00edficas sobre como instalar o Postman, visite a p\u00e1gina de Downloads do Postman . Para instru\u00e7\u00f5es espec\u00edficas sobre como instalar o Newman, visite a p\u00e1gina do pacote Newman no NPMJS . Implementando Testes Automatizados de Ponta a Ponta (E2E) com Cole\u00e7\u00f5es do Postman Para fornecer orienta\u00e7\u00f5es sobre como implementar testes E2E automatizados com o Postman, a se\u00e7\u00e3o abaixo come\u00e7a com um caso de uso que explica os compromissos que um desenvolvedor ou analista de QA pode enfrentar ao pretender usar o Postman para testes iniciais. Cada caso de uso representa cen\u00e1rios que facilitam o objetivo final de testes E2E automatizados. Caso de Uso - Teste Funcional Manual de Pontos de Extremidade Um desenvolvedor ou analista de QA gostaria de testar localmente dados de entrada contra servi\u00e7os de API que compartilham um token oauth2 comum. Como resultado, eles usam o Postman para criar uma su\u00edte de testes de API de Cole\u00e7\u00f5es do Postman que podem ser executadas localmente contra pontos de extremidade individuais em diferentes ambientes. Ap\u00f3s validar que sua Cole\u00e7\u00e3o do Postman funciona, eles a compartilham com sua equipe. Os passos podem ser os seguintes: Para cada um dos seus servi\u00e7os de API existentes, use o recurso de importa\u00e7\u00e3o do IDE do Postman para importar sua Especifica\u00e7\u00e3o OpenAPI (Swagger) como uma Cole\u00e7\u00e3o do Postman. Se um servi\u00e7o ainda n\u00e3o estiver usando o Swagger, procure orienta\u00e7\u00f5es espec\u00edficas de linguagem sobre como usar o Swagger para gerar uma Especifica\u00e7\u00e3o OpenAPI para o seu servi\u00e7o. Finalmente, se o seu servi\u00e7o tiver apenas alguns pontos de extremidade, leia a documenta\u00e7\u00e3o do Postman para orienta\u00e7\u00f5es sobre como criar manualmente uma Cole\u00e7\u00e3o do Postman. Forne\u00e7a clareza extra sobre uma requisi\u00e7\u00e3o em uma Cole\u00e7\u00e3o do Postman usando o recurso Exemplo do Postman para salvar suas respostas como exemplos. Voc\u00ea tamb\u00e9m pode simplesmente adicionar um exemplo manualmente. Por favor, leia a documenta\u00e7\u00e3o do Postman para orienta\u00e7\u00f5es sobre como especificar exemplos. Combine cada Cole\u00e7\u00e3o do Postman em uma Cole\u00e7\u00e3o do Postman centralizada. Construa arquivos de Ambiente do Postman (local, Dev e/ou QA) e parametrize todas as requisi\u00e7\u00f5es salvas da Cole\u00e7\u00e3o do Postman de forma que referencie os arquivos de Ambiente do Postman. Use o recurso de Script do Postman para criar um script de pr\u00e9-busca compartilhado que atualiza automaticamente os tokens de autentica\u00e7\u00e3o expirados por requisi\u00e7\u00e3o salva. Isso exigiria referenciar segredos de um arquivo de Ambiente do Postman. // Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. /* A requisi\u00e7\u00e3o para um ponto de extremidade de autoriza\u00e7\u00e3o oauth2 que emitir\u00e1 um token com base nas credenciais fornecidas. */ const oauth2Request = POST {...}; var getToken = true ; if ( pm . environment . get ( 'ACCESS_TOKEN_EXPIRY' ) <= ( new Date ()). getTime ()) { console . log ( 'Token expirou' ) } else { getToken = false ; console . log ( 'Token e data de expira\u00e7\u00e3o est\u00e3o bons' ); } if ( getToken === true ) { pm . sendRequest ( oauth2Request , function ( _ , res ) { console . log ( 'Salve o token' ) var responseJson = res . json (); pm . environment . set ( 'token' , responseJson . access_token ) console . log ( 'Salve a data de expira\u00e7\u00e3o' ) var expiryDate = new Date (); expiryDate . setSeconds ( expiryDate . getSeconds () + responseJson . expires_in ); pm . environment . set ( 'ACCESS_TOKEN_EXPIRY' , expiryDate . getTime ()); }); } Use o IDE do Postman para exercitar pontos de extremidade. Exporte a cole\u00e7\u00e3o e os arquivos de ambiente e, em seguida, remova quaisquer segredos antes de fazer o commit no seu reposit\u00f3rio. Come\u00e7ar com essa abordagem tem as seguintes vantagens: Voc\u00ea se preparou para as etapas iniciais de uma cole\u00e7\u00e3o de postman E2E, agregando as cole\u00e7\u00f5es em um \u00fanico arquivo e usando arquivos de ambiente para facilitar a troca de ambientes. O token \u00e9 atualizado automaticamente em cada chamada na cole\u00e7\u00e3o. Isso economiza tempo normalmente perdido ao ter que solicitar manualmente um token que expirou. Concede ao QA/Dev controle granular para enviar combina\u00e7\u00f5es de dados de entrada por ponto de extremidade. Concede aos desenvolvedores uma experi\u00eancia comum por meio dos recursos do IDE do Postman. Terminar com essa abordagem tem as seguintes desvantagens: Promove o compartilhamento inseguro de segredos. As credenciais necess\u00e1rias para solicitar o token JWT no script de pr\u00e9-busca est\u00e3o sendo compartilhadas manualmente. Segredos podem acabar sendo expostos no hist\u00f3rico de commits do git por v\u00e1rias raz\u00f5es (ex. Compartilhando os arquivos de Ambiente do Postman exportados). As cole\u00e7\u00f5es s\u00f3 podem ser usadas localmente para acessar APIs (locais ou implantadas). N\u00e3o \u00e9 baseado em CI. Cada desenvolvedor tem que manter atualizados tanto sua Cole\u00e7\u00e3o do Postman quanto seus arquivos de Ambiente do Postman para acompanhar as \u00faltimas altera\u00e7\u00f5es nos servi\u00e7os implantados. Caso de Uso - Teste Funcional Manual de Pontos de Extremidade com Azure Key Vault e Azure App Config Um desenvolvedor ou analista de QA pode ter uma su\u00edte de testes de API existente de Cole\u00e7\u00f5es do Postman; no entanto, agora eles querem desencorajar o compartilhamento inseguro de segredos. Como resultado, eles constroem um script que se conecta tanto ao Key Vault quanto ao Azure App Config para gerar automaticamente arquivos de Ambiente do Postman, em vez de registr\u00e1-los em um reposit\u00f3rio compartilhado. Os passos podem ser os seguintes: Crie um Azure Key Vault e armazene segredos de autentica\u00e7\u00e3o por ambiente: - \"Chave:valor\" (ex. \"dev-auth-password:12345\" ) - \"Chave:valor\" (ex. \"qa-auth-password:12345\" ) Crie uma inst\u00e2ncia compartilhada do Azure App Configuration e salve todas as suas vari\u00e1veis de ambiente do Postman. Esta inst\u00e2ncia ser\u00e1 dedicada a manter todas as suas vari\u00e1veis de ambiente do Postman: > NOTA: Use o recurso de R\u00f3tulo (Label) para distinguir entre ambientes. - \"Chave:valor\" -> \"apiRoute:url\" (ex. \"servicename:https://servicename.net\" & R\u00f3tulo = \"QA\" ) - \"Chave:valor\" -> \"Header:value\" (ex. \"token: \" & R\u00f3tulo = \"QA\" ) - \"Chave:valor\" -> \"KeyVaultKey:KeyVaultSecret\" (ex. \"authpassword:qa-auth-password\" & R\u00f3tulo = \"QA\" ) Instale o Powershell ou o Bash. O Powershell funciona tanto para o Azure Powershell quanto para o Azure CLI. Baixe o Azure CLI, fa\u00e7a login na assinatura apropriada e certifique-se de ter acesso aos recursos apropriados. Alguns comandos \u00fateis est\u00e3o abaixo: # fazer login na assinatura apropriada az login # validar o login az account show # validar o acesso ao Key Vault az keyvault secret list - -vault-name \"$KeyvaultName\" # validar o acesso ao App Configuration az appconfig kv list - -name \"$AppConfigName\" Construa um script que gere automaticamente seus arquivos de ambiente. > NOTA: O App Configuration faz refer\u00eancia ao Key Vault; no entanto, seu script \u00e9 respons\u00e1vel por autenticar adequadamente tanto no App Configuration quanto no Key Vault. Os dois servi\u00e7os n\u00e3o se comunicam diretamente. ```powershell (CreatePostmanEnvironmentFiles.ps1) # Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. ############################################################ env = $arg1 # 1. listar vari\u00e1veis de ambiente do app para um ambiente envVars = az appconfig kv list --name PostmanAppConfig --label $env | ConvertFrom-Json # 2. percorrer o array envVars para obter URIs do Key Vault keyvaultURI = \"\" $envVars | % {if($ .key -eq 'password'){keyvaultURI = $ .value}} # 3. analisar URIs para obter o nome do Key Vault e os nomes dos segredos # 4. obter segredo do Key Vault kvsecret = az keyvault secret show --name $secretName --vault-name $keyvaultName --query \"value\" # 5. definir o valor da senha para o segredo retornado do Key Vault $envVars | % {if($ .key -eq 'password'){$ .value=$kvsecret}} # 6. criar arquivo de ambiente envFile = @{ \"_postman_variable_scope\" = \"environment\", \"name\" = $env, values = @() } foreach($var in $envVars){ $envFile.values += @{ key = $var.key; value = $var.value; } } $envFile | ConvertTo-Json -depth 50 | Out-File -encoding ASCII -FilePath .\\$env.postman_environment.json ``` Use o IDE do Postman para importar os arquivos de Ambiente do Postman a serem referenciados pela sua cole\u00e7\u00e3o. Esta abordagem tem as seguintes vantagens: Herda todas as vantagens do caso anterior. Desencoraja o compartilhamento inseguro de segredos. Os segredos agora s\u00e3o retirados do Key Vault via Azure CLI. A URI do Key Vault tamb\u00e9m n\u00e3o precisa mais ser compartilhada para acesso aos tokens de autentica\u00e7\u00e3o. Fonte \u00fanica de verdade para arquivos de Ambiente do Postman. N\u00e3o h\u00e1 mais necessidade de compartilh\u00e1-los via reposit\u00f3rio. O desenvolvedor s\u00f3 precisa gerenciar uma \u00fanica Cole\u00e7\u00e3o do Postman. Terminar com essa abordagem tem as seguintes desvantagens: Segredos podem acabar sendo expostos no hist\u00f3rico de commits do git se .gitIgnore n\u00e3o for atualizado para ignorar arquivos de Ambiente do Postman. As cole\u00e7\u00f5es s\u00f3 podem ser usadas localmente para acessar APIs (locais ou implantadas). N\u00e3o \u00e9 baseado em CI. Caso de Uso - Testes E2E com Integra\u00e7\u00e3o Cont\u00ednua e Newman Um desenvolvedor ou analista de QA pode ter uma su\u00edte de testes de API existente de Cole\u00e7\u00f5es do Postman locais que seguem as melhores pr\u00e1ticas de seguran\u00e7a para desenvolvimento; no entanto, agora eles querem que os testes E2E sejam executados como parte de um pipeline de CI automatizado. Com o advento do Newman, voc\u00ea pode agora usar mais prontamente o Postman para criar uma su\u00edte de testes de API execut\u00e1vel no seu CI. Os passos podem ser os seguintes: Atualize sua Cole\u00e7\u00e3o do Postman para usar o recurso de Teste do Postman para criar afirma\u00e7\u00f5es de teste que cobrir\u00e3o todas as solicita\u00e7\u00f5es salvas de ponta a ponta. Leia a documenta\u00e7\u00e3o do Postman para orienta\u00e7\u00e3o sobre como usar o recurso de Teste do Postman. Use localmente o Newman para validar que os testes est\u00e3o funcionando conforme o esperado. newman run tests \\ e2e_Postman_collection . json -e qa . postman_environment . json Construa um script que execute automaticamente as afirma\u00e7\u00f5es de teste do Postman via Newman e Azure CLI. > NOTA: Um Service Principal do Azure deve ser configurado para continuar usando o azure cli neste exemplo de pipeline de CI. ```powershell (RunPostmanE2eTests.ps1) # Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. ############################################################ # 1. fa\u00e7a login no Azure usando um Service Principal az login --service-principal -u $APP_ID -p $AZURE_SECRET --tenant $AZURE_TENANT # 2. liste as vari\u00e1veis de ambiente do app para um ambiente envVars = az appconfig kv list --name PostmanAppConfig --label $env | ConvertFrom-Json # 3. percorra o array envVars para obter URIs do Key Vault keyvaultURI = \"\" @envVars | % {if($ .key -eq 'password'){keyvaultURI = $ .value}} # 4. analise URIs para obter o nome do Key Vault e os nomes dos segredos # 5. obtenha o segredo do Key Vault kvsecret = az keyvault secret show --name $secretName --vault-name $keyvaultName --query \"value\" # 6. defina o valor da senha para o segredo retornado do Key Vault $envVars | % {if($ .key -eq 'password'){$ .value=$kvsecret}} # 7. crie o arquivo de ambiente envFile = @{ \"_postman_variable_scope\" = \"environment\", \"name\" = $env, values = @() } foreach($var in $envVars){ $envFile.values += @{ key = $var.key; value = $var.value; } } $envFile | ConvertTo-Json -depth 50 | Out-File -encoding ASCII $env.postman_environment.json # 8. instale o Newman npm install --save-dev newman # 9. execute testes E2E automatizados via Newman node_modules.bin\\newman run tests\\e2e_Postman_collection.json -e $env.postman_environment.json ``` Crie um arquivo yaml e defina um passo que executar\u00e1 seu script de teste. (ex. Um arquivo yaml direcionado para o Azure Devops que executa um script Powershell.) # Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. ############################################################ displayName : 'Executar testes E2E do Postman' inputs : targetType : 'filePath' filePath : RunPostmanE2eTests.ps1 env : APP_ID : $(environment.appId) # credenciais para az cli AZURE_SECRET : $(environment.secret) AZURE_TENANT : $(environment.tenant) Esta abordagem tem a seguinte vantagem: Os testes E2E agora podem ser executados automaticamente como parte de um pipeline de CI. Terminar com essa abordagem tem a seguinte desvantagem: Os arquivos de Ambiente do Postman n\u00e3o est\u00e3o mais sendo gerados em um ambiente local para testes manuais pr\u00e1ticos. No entanto, isso pode ser resolvido gerenciando dois scripts.","title":"Testes com Postman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#testes-com-postman","text":"O objetivo deste documento \u00e9 fornecer orienta\u00e7\u00f5es sobre como usar o Newman em seu pipeline de CI/CD para executar testes de ponta a ponta (E2E) definidos em Cole\u00e7\u00f5es do Postman, seguindo as melhores pr\u00e1ticas de seguran\u00e7a. Primeiramente, apresentaremos o Postman e o Newman e, em seguida, descreveremos v\u00e1rios casos de uso de testes com o Postman que explicam por que voc\u00ea pode querer ir al\u00e9m dos testes locais com Cole\u00e7\u00f5es do Postman. No caso de uso final, pretendemos usar um script shell que faz refer\u00eancia ao caminho do arquivo da Cole\u00e7\u00e3o do Postman e ao caminho do arquivo de Ambiente como entradas para o Newman. Abaixo est\u00e1 um diagrama de fluxo representando o resultado do caso de uso final:","title":"Testes com Postman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#postman-e-newman","text":"Postman \u00e9 uma plataforma API gratuita para testar APIs. As principais funcionalidades destacadas neste guia incluem: Cole\u00e7\u00f5es do Postman Arquivos de Ambiente do Postman Scripts do Postman Newman \u00e9 um executor de Cole\u00e7\u00f5es do Postman via linha de comando. Ele permite que voc\u00ea execute e teste uma Cole\u00e7\u00e3o do Postman diretamente da linha de comando. As principais funcionalidades destacadas neste guia incluem: Comando Run do Newman","title":"Postman e Newman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#o-que-e-uma-colecao","text":"Uma Cole\u00e7\u00e3o do Postman \u00e9 um grupo de requisi\u00e7\u00f5es salvas que podem ser executadas. Uma cole\u00e7\u00e3o pode ser exportada como um arquivo json.","title":"O que \u00e9 uma Cole\u00e7\u00e3o"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#o-que-e-um-arquivo-de-ambiente","text":"Um arquivo de Ambiente do Postman cont\u00e9m vari\u00e1veis de ambiente que podem ser referenciadas por uma Cole\u00e7\u00e3o do Postman v\u00e1lida.","title":"O que \u00e9 um Arquivo de Ambiente"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#o-que-e-um-script-do-postman","text":"Um Script do Postman \u00e9 um Javascript hospedado dentro de uma Cole\u00e7\u00e3o do Postman que pode ser escrito para executar contra sua Cole\u00e7\u00e3o do Postman e Arquivo de Ambiente.","title":"O que \u00e9 um Script do Postman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#o-que-e-o-comando-run-do-newman","text":"Um comando CLI do Newman que permite especificar uma Cole\u00e7\u00e3o do Postman a ser executada.","title":"O que \u00e9 o Comando Run do Newman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#instalando-o-postman-e-o-newman","text":"Para instru\u00e7\u00f5es espec\u00edficas sobre como instalar o Postman, visite a p\u00e1gina de Downloads do Postman . Para instru\u00e7\u00f5es espec\u00edficas sobre como instalar o Newman, visite a p\u00e1gina do pacote Newman no NPMJS .","title":"Instalando o Postman e o Newman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#implementando-testes-automatizados-de-ponta-a-ponta-e2e-com-colecoes-do-postman","text":"Para fornecer orienta\u00e7\u00f5es sobre como implementar testes E2E automatizados com o Postman, a se\u00e7\u00e3o abaixo come\u00e7a com um caso de uso que explica os compromissos que um desenvolvedor ou analista de QA pode enfrentar ao pretender usar o Postman para testes iniciais. Cada caso de uso representa cen\u00e1rios que facilitam o objetivo final de testes E2E automatizados.","title":"Implementando Testes Automatizados de Ponta a Ponta (E2E) com Cole\u00e7\u00f5es do Postman"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#caso-de-uso-teste-funcional-manual-de-pontos-de-extremidade","text":"Um desenvolvedor ou analista de QA gostaria de testar localmente dados de entrada contra servi\u00e7os de API que compartilham um token oauth2 comum. Como resultado, eles usam o Postman para criar uma su\u00edte de testes de API de Cole\u00e7\u00f5es do Postman que podem ser executadas localmente contra pontos de extremidade individuais em diferentes ambientes. Ap\u00f3s validar que sua Cole\u00e7\u00e3o do Postman funciona, eles a compartilham com sua equipe. Os passos podem ser os seguintes: Para cada um dos seus servi\u00e7os de API existentes, use o recurso de importa\u00e7\u00e3o do IDE do Postman para importar sua Especifica\u00e7\u00e3o OpenAPI (Swagger) como uma Cole\u00e7\u00e3o do Postman. Se um servi\u00e7o ainda n\u00e3o estiver usando o Swagger, procure orienta\u00e7\u00f5es espec\u00edficas de linguagem sobre como usar o Swagger para gerar uma Especifica\u00e7\u00e3o OpenAPI para o seu servi\u00e7o. Finalmente, se o seu servi\u00e7o tiver apenas alguns pontos de extremidade, leia a documenta\u00e7\u00e3o do Postman para orienta\u00e7\u00f5es sobre como criar manualmente uma Cole\u00e7\u00e3o do Postman. Forne\u00e7a clareza extra sobre uma requisi\u00e7\u00e3o em uma Cole\u00e7\u00e3o do Postman usando o recurso Exemplo do Postman para salvar suas respostas como exemplos. Voc\u00ea tamb\u00e9m pode simplesmente adicionar um exemplo manualmente. Por favor, leia a documenta\u00e7\u00e3o do Postman para orienta\u00e7\u00f5es sobre como especificar exemplos. Combine cada Cole\u00e7\u00e3o do Postman em uma Cole\u00e7\u00e3o do Postman centralizada. Construa arquivos de Ambiente do Postman (local, Dev e/ou QA) e parametrize todas as requisi\u00e7\u00f5es salvas da Cole\u00e7\u00e3o do Postman de forma que referencie os arquivos de Ambiente do Postman. Use o recurso de Script do Postman para criar um script de pr\u00e9-busca compartilhado que atualiza automaticamente os tokens de autentica\u00e7\u00e3o expirados por requisi\u00e7\u00e3o salva. Isso exigiria referenciar segredos de um arquivo de Ambiente do Postman. // Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. /* A requisi\u00e7\u00e3o para um ponto de extremidade de autoriza\u00e7\u00e3o oauth2 que emitir\u00e1 um token com base nas credenciais fornecidas. */ const oauth2Request = POST {...}; var getToken = true ; if ( pm . environment . get ( 'ACCESS_TOKEN_EXPIRY' ) <= ( new Date ()). getTime ()) { console . log ( 'Token expirou' ) } else { getToken = false ; console . log ( 'Token e data de expira\u00e7\u00e3o est\u00e3o bons' ); } if ( getToken === true ) { pm . sendRequest ( oauth2Request , function ( _ , res ) { console . log ( 'Salve o token' ) var responseJson = res . json (); pm . environment . set ( 'token' , responseJson . access_token ) console . log ( 'Salve a data de expira\u00e7\u00e3o' ) var expiryDate = new Date (); expiryDate . setSeconds ( expiryDate . getSeconds () + responseJson . expires_in ); pm . environment . set ( 'ACCESS_TOKEN_EXPIRY' , expiryDate . getTime ()); }); } Use o IDE do Postman para exercitar pontos de extremidade. Exporte a cole\u00e7\u00e3o e os arquivos de ambiente e, em seguida, remova quaisquer segredos antes de fazer o commit no seu reposit\u00f3rio. Come\u00e7ar com essa abordagem tem as seguintes vantagens: Voc\u00ea se preparou para as etapas iniciais de uma cole\u00e7\u00e3o de postman E2E, agregando as cole\u00e7\u00f5es em um \u00fanico arquivo e usando arquivos de ambiente para facilitar a troca de ambientes. O token \u00e9 atualizado automaticamente em cada chamada na cole\u00e7\u00e3o. Isso economiza tempo normalmente perdido ao ter que solicitar manualmente um token que expirou. Concede ao QA/Dev controle granular para enviar combina\u00e7\u00f5es de dados de entrada por ponto de extremidade. Concede aos desenvolvedores uma experi\u00eancia comum por meio dos recursos do IDE do Postman. Terminar com essa abordagem tem as seguintes desvantagens: Promove o compartilhamento inseguro de segredos. As credenciais necess\u00e1rias para solicitar o token JWT no script de pr\u00e9-busca est\u00e3o sendo compartilhadas manualmente. Segredos podem acabar sendo expostos no hist\u00f3rico de commits do git por v\u00e1rias raz\u00f5es (ex. Compartilhando os arquivos de Ambiente do Postman exportados). As cole\u00e7\u00f5es s\u00f3 podem ser usadas localmente para acessar APIs (locais ou implantadas). N\u00e3o \u00e9 baseado em CI. Cada desenvolvedor tem que manter atualizados tanto sua Cole\u00e7\u00e3o do Postman quanto seus arquivos de Ambiente do Postman para acompanhar as \u00faltimas altera\u00e7\u00f5es nos servi\u00e7os implantados.","title":"Caso de Uso - Teste Funcional Manual de Pontos de Extremidade"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#caso-de-uso-teste-funcional-manual-de-pontos-de-extremidade-com-azure-key-vault-e-azure-app-config","text":"Um desenvolvedor ou analista de QA pode ter uma su\u00edte de testes de API existente de Cole\u00e7\u00f5es do Postman; no entanto, agora eles querem desencorajar o compartilhamento inseguro de segredos. Como resultado, eles constroem um script que se conecta tanto ao Key Vault quanto ao Azure App Config para gerar automaticamente arquivos de Ambiente do Postman, em vez de registr\u00e1-los em um reposit\u00f3rio compartilhado. Os passos podem ser os seguintes: Crie um Azure Key Vault e armazene segredos de autentica\u00e7\u00e3o por ambiente: - \"Chave:valor\" (ex. \"dev-auth-password:12345\" ) - \"Chave:valor\" (ex. \"qa-auth-password:12345\" ) Crie uma inst\u00e2ncia compartilhada do Azure App Configuration e salve todas as suas vari\u00e1veis de ambiente do Postman. Esta inst\u00e2ncia ser\u00e1 dedicada a manter todas as suas vari\u00e1veis de ambiente do Postman: > NOTA: Use o recurso de R\u00f3tulo (Label) para distinguir entre ambientes. - \"Chave:valor\" -> \"apiRoute:url\" (ex. \"servicename:https://servicename.net\" & R\u00f3tulo = \"QA\" ) - \"Chave:valor\" -> \"Header:value\" (ex. \"token: \" & R\u00f3tulo = \"QA\" ) - \"Chave:valor\" -> \"KeyVaultKey:KeyVaultSecret\" (ex. \"authpassword:qa-auth-password\" & R\u00f3tulo = \"QA\" ) Instale o Powershell ou o Bash. O Powershell funciona tanto para o Azure Powershell quanto para o Azure CLI. Baixe o Azure CLI, fa\u00e7a login na assinatura apropriada e certifique-se de ter acesso aos recursos apropriados. Alguns comandos \u00fateis est\u00e3o abaixo: # fazer login na assinatura apropriada az login # validar o login az account show # validar o acesso ao Key Vault az keyvault secret list - -vault-name \"$KeyvaultName\" # validar o acesso ao App Configuration az appconfig kv list - -name \"$AppConfigName\" Construa um script que gere automaticamente seus arquivos de ambiente. > NOTA: O App Configuration faz refer\u00eancia ao Key Vault; no entanto, seu script \u00e9 respons\u00e1vel por autenticar adequadamente tanto no App Configuration quanto no Key Vault. Os dois servi\u00e7os n\u00e3o se comunicam diretamente. ```powershell (CreatePostmanEnvironmentFiles.ps1) # Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. ############################################################ env = $arg1 # 1. listar vari\u00e1veis de ambiente do app para um ambiente envVars = az appconfig kv list --name PostmanAppConfig --label $env | ConvertFrom-Json # 2. percorrer o array envVars para obter URIs do Key Vault keyvaultURI = \"\" $envVars | % {if($ .key -eq 'password'){keyvaultURI = $ .value}} # 3. analisar URIs para obter o nome do Key Vault e os nomes dos segredos # 4. obter segredo do Key Vault kvsecret = az keyvault secret show --name $secretName --vault-name $keyvaultName --query \"value\" # 5. definir o valor da senha para o segredo retornado do Key Vault $envVars | % {if($ .key -eq 'password'){$ .value=$kvsecret}} # 6. criar arquivo de ambiente envFile = @{ \"_postman_variable_scope\" = \"environment\", \"name\" = $env, values = @() } foreach($var in $envVars){ $envFile.values += @{ key = $var.key; value = $var.value; } } $envFile | ConvertTo-Json -depth 50 | Out-File -encoding ASCII -FilePath .\\$env.postman_environment.json ``` Use o IDE do Postman para importar os arquivos de Ambiente do Postman a serem referenciados pela sua cole\u00e7\u00e3o. Esta abordagem tem as seguintes vantagens: Herda todas as vantagens do caso anterior. Desencoraja o compartilhamento inseguro de segredos. Os segredos agora s\u00e3o retirados do Key Vault via Azure CLI. A URI do Key Vault tamb\u00e9m n\u00e3o precisa mais ser compartilhada para acesso aos tokens de autentica\u00e7\u00e3o. Fonte \u00fanica de verdade para arquivos de Ambiente do Postman. N\u00e3o h\u00e1 mais necessidade de compartilh\u00e1-los via reposit\u00f3rio. O desenvolvedor s\u00f3 precisa gerenciar uma \u00fanica Cole\u00e7\u00e3o do Postman. Terminar com essa abordagem tem as seguintes desvantagens: Segredos podem acabar sendo expostos no hist\u00f3rico de commits do git se .gitIgnore n\u00e3o for atualizado para ignorar arquivos de Ambiente do Postman. As cole\u00e7\u00f5es s\u00f3 podem ser usadas localmente para acessar APIs (locais ou implantadas). N\u00e3o \u00e9 baseado em CI.","title":"Caso de Uso - Teste Funcional Manual de Pontos de Extremidade com Azure Key Vault e Azure App Config"},{"location":"automated-testing/e2e-testing/recipes/postman-testing/#caso-de-uso-testes-e2e-com-integracao-continua-e-newman","text":"Um desenvolvedor ou analista de QA pode ter uma su\u00edte de testes de API existente de Cole\u00e7\u00f5es do Postman locais que seguem as melhores pr\u00e1ticas de seguran\u00e7a para desenvolvimento; no entanto, agora eles querem que os testes E2E sejam executados como parte de um pipeline de CI automatizado. Com o advento do Newman, voc\u00ea pode agora usar mais prontamente o Postman para criar uma su\u00edte de testes de API execut\u00e1vel no seu CI. Os passos podem ser os seguintes: Atualize sua Cole\u00e7\u00e3o do Postman para usar o recurso de Teste do Postman para criar afirma\u00e7\u00f5es de teste que cobrir\u00e3o todas as solicita\u00e7\u00f5es salvas de ponta a ponta. Leia a documenta\u00e7\u00e3o do Postman para orienta\u00e7\u00e3o sobre como usar o recurso de Teste do Postman. Use localmente o Newman para validar que os testes est\u00e3o funcionando conforme o esperado. newman run tests \\ e2e_Postman_collection . json -e qa . postman_environment . json Construa um script que execute automaticamente as afirma\u00e7\u00f5es de teste do Postman via Newman e Azure CLI. > NOTA: Um Service Principal do Azure deve ser configurado para continuar usando o azure cli neste exemplo de pipeline de CI. ```powershell (RunPostmanE2eTests.ps1) # Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. ############################################################ # 1. fa\u00e7a login no Azure usando um Service Principal az login --service-principal -u $APP_ID -p $AZURE_SECRET --tenant $AZURE_TENANT # 2. liste as vari\u00e1veis de ambiente do app para um ambiente envVars = az appconfig kv list --name PostmanAppConfig --label $env | ConvertFrom-Json # 3. percorra o array envVars para obter URIs do Key Vault keyvaultURI = \"\" @envVars | % {if($ .key -eq 'password'){keyvaultURI = $ .value}} # 4. analise URIs para obter o nome do Key Vault e os nomes dos segredos # 5. obtenha o segredo do Key Vault kvsecret = az keyvault secret show --name $secretName --vault-name $keyvaultName --query \"value\" # 6. defina o valor da senha para o segredo retornado do Key Vault $envVars | % {if($ .key -eq 'password'){$ .value=$kvsecret}} # 7. crie o arquivo de ambiente envFile = @{ \"_postman_variable_scope\" = \"environment\", \"name\" = $env, values = @() } foreach($var in $envVars){ $envFile.values += @{ key = $var.key; value = $var.value; } } $envFile | ConvertTo-Json -depth 50 | Out-File -encoding ASCII $env.postman_environment.json # 8. instale o Newman npm install --save-dev newman # 9. execute testes E2E automatizados via Newman node_modules.bin\\newman run tests\\e2e_Postman_collection.json -e $env.postman_environment.json ``` Crie um arquivo yaml e defina um passo que executar\u00e1 seu script de teste. (ex. Um arquivo yaml direcionado para o Azure Devops que executa um script Powershell.) # Por favor, trate isso como pseudoc\u00f3digo e ajuste conforme necess\u00e1rio. ############################################################ displayName : 'Executar testes E2E do Postman' inputs : targetType : 'filePath' filePath : RunPostmanE2eTests.ps1 env : APP_ID : $(environment.appId) # credenciais para az cli AZURE_SECRET : $(environment.secret) AZURE_TENANT : $(environment.tenant) Esta abordagem tem a seguinte vantagem: Os testes E2E agora podem ser executados automaticamente como parte de um pipeline de CI. Terminar com essa abordagem tem a seguinte desvantagem: Os arquivos de Ambiente do Postman n\u00e3o est\u00e3o mais sendo gerados em um ambiente local para testes manuais pr\u00e1ticos. No entanto, isso pode ser resolvido gerenciando dois scripts.","title":"Caso de Uso - Testes E2E com Integra\u00e7\u00e3o Cont\u00ednua e Newman"},{"location":"automated-testing/fault-injection-testing/","text":"Teste de Inje\u00e7\u00e3o de Falhas O teste de inje\u00e7\u00e3o de falhas \u00e9 a introdu\u00e7\u00e3o deliberada de erros e falhas em um sistema para validar e fortalecer sua estabilidade e confiabilidade . O objetivo \u00e9 melhorar o design do sistema para resili\u00eancia e desempenho sob condi\u00e7\u00f5es intermitentes de falha ao longo do tempo. Quando Usar Problema Abordado Os sistemas precisam ser resilientes \u00e0s condi\u00e7\u00f5es que causam interrup\u00e7\u00f5es inevit\u00e1veis na produ\u00e7\u00e3o. Aplica\u00e7\u00f5es modernas s\u00e3o constru\u00eddas com um n\u00famero crescente de depend\u00eancias; em infraestrutura, plataforma, rede, software de terceiros ou APIs, etc. Tais sistemas aumentam o risco de impacto de interrup\u00e7\u00f5es de depend\u00eancia. Cada componente dependente pode falhar. Al\u00e9m disso, suas intera\u00e7\u00f5es com outros componentes podem propagar a falha. M\u00e9todos de inje\u00e7\u00e3o de falhas s\u00e3o uma forma de aumentar a cobertura e validar a robustez do software e o tratamento de erros, seja no momento da constru\u00e7\u00e3o ou em tempo de execu\u00e7\u00e3o, com a inten\u00e7\u00e3o de \"abra\u00e7ar a falha\" como parte do ciclo de vida do desenvolvimento. Esses m\u00e9todos auxiliam as equipes de engenharia no projeto e na valida\u00e7\u00e3o cont\u00ednua para falhas, contabilizando condi\u00e7\u00f5es de falha conhecidas e desconhecidas, arquitetura para redund\u00e2ncia, emprego de mecanismos de repeti\u00e7\u00e3o e retrocesso, etc. Aplic\u00e1vel a Software - Caminhos de c\u00f3digo para tratamento de erros, gerenciamento de mem\u00f3ria no processo. Exemplos de testes: Testes de unidade/integra\u00e7\u00e3o de casos extremos e/ou testes de carga (ou seja, stress e soak). Protocolo - Vulnerabilidades em interfaces de comunica\u00e7\u00e3o, como par\u00e2metros de linha de comando ou APIs. Exemplos de testes: Fuzzing fornece dados inv\u00e1lidos, inesperados ou aleat\u00f3rios como entrada, podemos avaliar o n\u00edvel de estabilidade do protocolo de um componente. Infraestrutura - Interrup\u00e7\u00f5es, problemas de rede, falhas de hardware. Exemplos de testes: Usar diferentes m\u00e9todos para causar falha na infraestrutura subjacente, como desligar inst\u00e2ncias de m\u00e1quinas virtuais (VM), travar processos, expirar certificados, introduzir lat\u00eancia de rede, etc. Esse n\u00edvel de teste depende de observa\u00e7\u00f5es de m\u00e9tricas estat\u00edsticas ao longo do tempo e da medi\u00e7\u00e3o dos desvios de seu comportamento observado durante a falha, ou de seu tempo de recupera\u00e7\u00e3o. Como Usar Arquitetura Terminologia Falha - A causa julgada ou hipotetizada de um erro. Erro - Aquela parte do estado do sistema que pode causar uma falha subsequente. Falha - Um evento que ocorre quando o servi\u00e7o prestado se desvia do estado correto. Ciclo Falha-Erro-Falha - Um mecanismo chave em confiabilidade : Uma falha pode causar um erro. Um erro pode causar mais erros dentro do limite do sistema; portanto, cada novo erro atua como uma falha. Quando estados de erro s\u00e3o observados no limite do sistema, eles s\u00e3o denominados falhas. (Modelado por Laprie/Avizienis ) Fundamentos do Teste de Inje\u00e7\u00e3o de Falhas A inje\u00e7\u00e3o de falhas \u00e9 uma forma avan\u00e7ada de teste em que o sistema \u00e9 submetido a diferentes modos de falha , e onde o engenheiro de teste pode saber antecipadamente qual \u00e9 o resultado esperado, como no caso de testes de valida\u00e7\u00e3o de lan\u00e7amento, ou em uma explora\u00e7\u00e3o para encontrar problemas potenciais no produto, que devem ser mitigados. Inje\u00e7\u00e3o de Falhas e Engenharia do Caos O teste de inje\u00e7\u00e3o de falhas \u00e9 uma abordagem espec\u00edfica para testar uma condi\u00e7\u00e3o. Ele introduz uma falha em um sistema para validar sua robustez. A engenharia do caos, cunhada pela Netflix, \u00e9 uma pr\u00e1tica para gerar novas informa\u00e7\u00f5es. H\u00e1 uma sobreposi\u00e7\u00e3o de preocupa\u00e7\u00f5es e muitas vezes de ferramentas entre os termos, e muitas vezes a engenharia do caos usa inje\u00e7\u00e3o de falhas para introduzir os efeitos necess\u00e1rios no sistema. Passos de Alto N\u00edvel Teste de inje\u00e7\u00e3o de falhas no ciclo de desenvolvimento A inje\u00e7\u00e3o de falhas \u00e9 uma forma eficaz de encontrar bugs de seguran\u00e7a no software, tanto que o Ciclo de Desenvolvimento de Seguran\u00e7a da Microsoft exige fuzzing em todas as interfaces n\u00e3o confi\u00e1veis de cada produto e teste de penetra\u00e7\u00e3o, que inclui a introdu\u00e7\u00e3o de falhas no sistema, para descobrir vulnerabilidades potenciais resultantes de erros de codifica\u00e7\u00e3o, falhas de configura\u00e7\u00e3o do sistema ou outras fraquezas operacionais de implanta\u00e7\u00e3o. A cobertura automatizada de inje\u00e7\u00e3o de falhas em um pipeline de CI promove uma abordagem Shift-Left de teste mais cedo no ciclo de vida para poss\u00edveis problemas. Exemplos de realiza\u00e7\u00e3o de inje\u00e7\u00e3o de falhas durante o ciclo de vida do desenvolvimento: Usando ferramentas de fuzzing no CI. Executar testes de cen\u00e1rio de ponta a ponta existentes (como testes de integra\u00e7\u00e3o ou de estresse), que s\u00e3o aumentados com inje\u00e7\u00e3o de falhas. Escrever testes de regress\u00e3o e aceita\u00e7\u00e3o com base em problemas que foram encontrados e corrigidos ou com base em incidentes de servi\u00e7o resolvidos. Valida\u00e7\u00f5es ad-hoc (manuais) de falha no ambiente de desenvolvimento para novos recursos. Teste de inje\u00e7\u00e3o de falhas no ciclo de lan\u00e7amento Muito parecido com Testes de Monitoramento Sint\u00e9tico , o teste de inje\u00e7\u00e3o de falhas no ciclo de lan\u00e7amento faz parte da abordagem de teste Shift-Right , que usa m\u00e9todos seguros para realizar testes em um ambiente de produ\u00e7\u00e3o ou pr\u00e9-produ\u00e7\u00e3o. Dada a natureza das aplica\u00e7\u00f5es distribu\u00eddas baseadas em nuvem, \u00e9 muito dif\u00edcil simular o comportamento real dos servi\u00e7os fora de seu ambiente de produ\u00e7\u00e3o. Os testadores s\u00e3o incentivados a executar testes onde realmente importa, em um sistema ao vivo com tr\u00e1fego de clientes. Os testes de inje\u00e7\u00e3o de falhas dependem da observabilidade de m\u00e9tricas e geralmente s\u00e3o estat\u00edsticos; Os seguintes passos de alto n\u00edvel fornecem uma amostra de como praticar inje\u00e7\u00e3o de falhas e engenharia do caos: Medir e definir um estado est\u00e1vel (saud\u00e1vel) para a interoperabilidade do sistema. Criar hip\u00f3teses com base no comportamento previsto quando uma falha \u00e9 introduzida. Introduzir eventos de falha do mundo real no sistema. Medir o estado e compar\u00e1-lo ao estado de refer\u00eancia. Documentar o processo e as observa\u00e7\u00f5es. Identificar e agir com base no resultado. Teste de inje\u00e7\u00e3o de falhas em Kubernetes Com o avan\u00e7o do Kubernetes (k8s) como plataforma de infraestrutura, o teste de inje\u00e7\u00e3o de falhas em Kubernetes tornou-se inevit\u00e1vel para garantir que o sistema se comporte de maneira confi\u00e1vel no caso de uma falha ou falha. Pode haver diferentes tipos de cargas de trabalho rodando dentro de um cluster k8s que s\u00e3o escritas em diferentes linguagens. Por exemplo, dentro de um cluster K8s, voc\u00ea pode executar um microservi\u00e7o, um aplicativo web e/ou um trabalho agendado. Portanto, voc\u00ea precisa ter um mecanismo para injetar falhas em qualquer tipo de carga de trabalho rodando dentro do cluster. Al\u00e9m disso, os clusters Kubernetes s\u00e3o gerenciados de forma diferente da infraestrutura tradicional. As ferramentas usadas para teste de inje\u00e7\u00e3o de falhas dentro do Kubernetes devem ter compatibilidade com a infraestrutura k8s. Estas s\u00e3o as principais caracter\u00edsticas que s\u00e3o necess\u00e1rias: Facilidade de injetar falhas em pods do Kubernetes. Suporte para instala\u00e7\u00e3o r\u00e1pida de ferramentas dentro do cluster. Suporte para configura\u00e7\u00f5es baseadas em YAML que funcionam bem com o Kubernetes. Facilidade de personaliza\u00e7\u00e3o para adicionar recursos personalizados. Suporte para fluxos de trabalho para implantar v\u00e1rias cargas de trabalho e falhas. Facilidade de manuten\u00e7\u00e3o da ferramenta. Facilidade de integra\u00e7\u00e3o com telemetria. Melhores Pr\u00e1ticas e Conselhos Experimentar na produ\u00e7\u00e3o tem o benef\u00edcio de executar testes contra um sistema ao vivo com tr\u00e1fego real de usu\u00e1rios, garantindo sua sa\u00fade ou construindo confian\u00e7a em sua capacidade de lidar com erros de forma elegante. No entanto, tem o potencial de causar dor desnecess\u00e1ria ao cliente. Um teste pode ter sucesso ou falhar. No caso de falha, \u00e9 prov\u00e1vel que haja algum impacto no ambiente de produ\u00e7\u00e3o. Pensar sobre o Raio de Explos\u00e3o do efeito, caso o teste falhe, \u00e9 um passo crucial a ser realizado previamente. As seguintes pr\u00e1ticas podem ajudar a minimizar esse risco: Execute testes em um ambiente n\u00e3o produtivo primeiro. Entenda como o sistema se comporta em um ambiente seguro, usando carga de trabalho sint\u00e9tica, antes de introduzir riscos potenciais ao tr\u00e1fego do cliente. Use inje\u00e7\u00e3o de falhas como port\u00f5es em diferentes est\u00e1gios ao longo do pipeline de CD. Implantar e testar em implanta\u00e7\u00f5es Blue/Green e Canary. Use m\u00e9todos como sombreamento de tr\u00e1fego (tamb\u00e9m conhecido como Tr\u00e1fego Escuro ) para levar o tr\u00e1fego do cliente ao slot de staging. Esforce-se para alcan\u00e7ar um equil\u00edbrio entre coletar dados de resultados reais, afetando o m\u00ednimo poss\u00edvel de usu\u00e1rios de produ\u00e7\u00e3o. Use princ\u00edpios de design defensivo, como circuit breaking e os padr\u00f5es de anteparo. Acordar um or\u00e7amento (em termos de Objetivo de N\u00edvel de Servi\u00e7o (SLO)) como um investimento em caos e inje\u00e7\u00e3o de falhas. Aumente o risco de forma incremental - Comece fortalecendo o n\u00facleo e expanda em camadas. Em cada ponto, o progresso deve ser consolidado com testes de regress\u00e3o automatizados. Frameworks e Ferramentas de Teste de Inje\u00e7\u00e3o de Falhas Fuzzing OneFuzz - \u00e9 uma plataforma de fuzzing como servi\u00e7o de c\u00f3digo aberto da Microsoft que \u00e9 f\u00e1cil de integrar em pipelines de CI. AFL e WinAFL - Ferramentas de fuzz populares da equipe do projeto zero do Google, que s\u00e3o usadas localmente para direcionar bin\u00e1rios no Linux ou Windows. WebScarab - Um fuzzer focado na web de propriedade da OWASP, que pode ser encontrado nas distribui\u00e7\u00f5es Kali Linux . Caos Azure Chaos Studio - Uma ferramenta em pr\u00e9-visualiza\u00e7\u00e3o para orquestrar experimentos controlados de inje\u00e7\u00e3o de falhas em recursos do Azure. Chaos toolkit - Uma plataforma de caos declarativa e modular com muitas extens\u00f5es, incluindo o kit de a\u00e7\u00f5es e sondas do Azure . Kraken - Uma ferramenta de caos espec\u00edfica do Openshift, mantida pela Redhat. Chaos Monkey - A plataforma da Netflix que popularizou a engenharia do caos (n\u00e3o suporta Azure OOTB). Simmy - Uma biblioteca .NET para testes de caos e inje\u00e7\u00e3o de falhas integrada \u00e0 biblioteca Polly para engenharia de resili\u00eancia. Litmus - Uma ferramenta de c\u00f3digo aberto do CNCF para testes de caos e inje\u00e7\u00e3o de falhas para clusters Kubernetes. Este post no blog de desenvolvimento da ISE fornece trechos de c\u00f3digo como um exemplo de como usar Polly e Simmy para implementar uma abordagem baseada em hip\u00f3teses para resili\u00eancia e testes de caos. Conclus\u00e3o A partir dos princ\u00edpios do caos: \"Quanto mais dif\u00edcil \u00e9 perturbar o estado est\u00e1vel, mais confian\u00e7a temos no comportamento do sistema. Se uma fraqueza \u00e9 descoberta, agora temos um alvo para melhoria antes que esse comportamento se manifeste no sistema como um todo\". As t\u00e9cnicas de inje\u00e7\u00e3o de falhas aumentam a resili\u00eancia e a confian\u00e7a nos produtos que enviamos. Elas s\u00e3o usadas em toda a ind\u00fastria para validar aplica\u00e7\u00f5es e plataformas antes e enquanto s\u00e3o entregues aos clientes. A inje\u00e7\u00e3o de falhas \u00e9 uma ferramenta poderosa e deve ser usada com cautela. Casos como o apag\u00e3o global de 30 minutos da Cloudflare , que foi causado devido a uma implanta\u00e7\u00e3o de c\u00f3digo que deveria ser \"lan\u00e7ada \u00e0s escuras\", destacam a import\u00e2ncia de limitar o raio de explos\u00e3o no sistema durante experimentos. Recursos Post no blog de Mark Russinovich sobre inje\u00e7\u00e3o de falhas e engenharia do caos Post no blog de Cindy Sridharan sobre testes em produ\u00e7\u00e3o Continua\u00e7\u00e3o do post no blog de Cindy Sridharan sobre testes em produ\u00e7\u00e3o Inje\u00e7\u00e3o de falhas na Azure Search Framework de Arquitetura Azure - Engenharia do Caos Framework de Arquitetura Azure - Testando resili\u00eancia Panorama dos Modelos de Causa de Falha de Software","title":"Teste de Inje\u00e7\u00e3o de Falhas"},{"location":"automated-testing/fault-injection-testing/#teste-de-injecao-de-falhas","text":"O teste de inje\u00e7\u00e3o de falhas \u00e9 a introdu\u00e7\u00e3o deliberada de erros e falhas em um sistema para validar e fortalecer sua estabilidade e confiabilidade . O objetivo \u00e9 melhorar o design do sistema para resili\u00eancia e desempenho sob condi\u00e7\u00f5es intermitentes de falha ao longo do tempo.","title":"Teste de Inje\u00e7\u00e3o de Falhas"},{"location":"automated-testing/fault-injection-testing/#quando-usar","text":"","title":"Quando Usar"},{"location":"automated-testing/fault-injection-testing/#problema-abordado","text":"Os sistemas precisam ser resilientes \u00e0s condi\u00e7\u00f5es que causam interrup\u00e7\u00f5es inevit\u00e1veis na produ\u00e7\u00e3o. Aplica\u00e7\u00f5es modernas s\u00e3o constru\u00eddas com um n\u00famero crescente de depend\u00eancias; em infraestrutura, plataforma, rede, software de terceiros ou APIs, etc. Tais sistemas aumentam o risco de impacto de interrup\u00e7\u00f5es de depend\u00eancia. Cada componente dependente pode falhar. Al\u00e9m disso, suas intera\u00e7\u00f5es com outros componentes podem propagar a falha. M\u00e9todos de inje\u00e7\u00e3o de falhas s\u00e3o uma forma de aumentar a cobertura e validar a robustez do software e o tratamento de erros, seja no momento da constru\u00e7\u00e3o ou em tempo de execu\u00e7\u00e3o, com a inten\u00e7\u00e3o de \"abra\u00e7ar a falha\" como parte do ciclo de vida do desenvolvimento. Esses m\u00e9todos auxiliam as equipes de engenharia no projeto e na valida\u00e7\u00e3o cont\u00ednua para falhas, contabilizando condi\u00e7\u00f5es de falha conhecidas e desconhecidas, arquitetura para redund\u00e2ncia, emprego de mecanismos de repeti\u00e7\u00e3o e retrocesso, etc.","title":"Problema Abordado"},{"location":"automated-testing/fault-injection-testing/#aplicavel-a","text":"Software - Caminhos de c\u00f3digo para tratamento de erros, gerenciamento de mem\u00f3ria no processo. Exemplos de testes: Testes de unidade/integra\u00e7\u00e3o de casos extremos e/ou testes de carga (ou seja, stress e soak). Protocolo - Vulnerabilidades em interfaces de comunica\u00e7\u00e3o, como par\u00e2metros de linha de comando ou APIs. Exemplos de testes: Fuzzing fornece dados inv\u00e1lidos, inesperados ou aleat\u00f3rios como entrada, podemos avaliar o n\u00edvel de estabilidade do protocolo de um componente. Infraestrutura - Interrup\u00e7\u00f5es, problemas de rede, falhas de hardware. Exemplos de testes: Usar diferentes m\u00e9todos para causar falha na infraestrutura subjacente, como desligar inst\u00e2ncias de m\u00e1quinas virtuais (VM), travar processos, expirar certificados, introduzir lat\u00eancia de rede, etc. Esse n\u00edvel de teste depende de observa\u00e7\u00f5es de m\u00e9tricas estat\u00edsticas ao longo do tempo e da medi\u00e7\u00e3o dos desvios de seu comportamento observado durante a falha, ou de seu tempo de recupera\u00e7\u00e3o.","title":"Aplic\u00e1vel a"},{"location":"automated-testing/fault-injection-testing/#como-usar","text":"","title":"Como Usar"},{"location":"automated-testing/fault-injection-testing/#arquitetura","text":"","title":"Arquitetura"},{"location":"automated-testing/fault-injection-testing/#terminologia","text":"Falha - A causa julgada ou hipotetizada de um erro. Erro - Aquela parte do estado do sistema que pode causar uma falha subsequente. Falha - Um evento que ocorre quando o servi\u00e7o prestado se desvia do estado correto. Ciclo Falha-Erro-Falha - Um mecanismo chave em confiabilidade : Uma falha pode causar um erro. Um erro pode causar mais erros dentro do limite do sistema; portanto, cada novo erro atua como uma falha. Quando estados de erro s\u00e3o observados no limite do sistema, eles s\u00e3o denominados falhas. (Modelado por Laprie/Avizienis )","title":"Terminologia"},{"location":"automated-testing/fault-injection-testing/#fundamentos-do-teste-de-injecao-de-falhas","text":"A inje\u00e7\u00e3o de falhas \u00e9 uma forma avan\u00e7ada de teste em que o sistema \u00e9 submetido a diferentes modos de falha , e onde o engenheiro de teste pode saber antecipadamente qual \u00e9 o resultado esperado, como no caso de testes de valida\u00e7\u00e3o de lan\u00e7amento, ou em uma explora\u00e7\u00e3o para encontrar problemas potenciais no produto, que devem ser mitigados.","title":"Fundamentos do Teste de Inje\u00e7\u00e3o de Falhas"},{"location":"automated-testing/fault-injection-testing/#injecao-de-falhas-e-engenharia-do-caos","text":"O teste de inje\u00e7\u00e3o de falhas \u00e9 uma abordagem espec\u00edfica para testar uma condi\u00e7\u00e3o. Ele introduz uma falha em um sistema para validar sua robustez. A engenharia do caos, cunhada pela Netflix, \u00e9 uma pr\u00e1tica para gerar novas informa\u00e7\u00f5es. H\u00e1 uma sobreposi\u00e7\u00e3o de preocupa\u00e7\u00f5es e muitas vezes de ferramentas entre os termos, e muitas vezes a engenharia do caos usa inje\u00e7\u00e3o de falhas para introduzir os efeitos necess\u00e1rios no sistema.","title":"Inje\u00e7\u00e3o de Falhas e Engenharia do Caos"},{"location":"automated-testing/fault-injection-testing/#passos-de-alto-nivel","text":"","title":"Passos de Alto N\u00edvel"},{"location":"automated-testing/fault-injection-testing/#teste-de-injecao-de-falhas-no-ciclo-de-desenvolvimento","text":"A inje\u00e7\u00e3o de falhas \u00e9 uma forma eficaz de encontrar bugs de seguran\u00e7a no software, tanto que o Ciclo de Desenvolvimento de Seguran\u00e7a da Microsoft exige fuzzing em todas as interfaces n\u00e3o confi\u00e1veis de cada produto e teste de penetra\u00e7\u00e3o, que inclui a introdu\u00e7\u00e3o de falhas no sistema, para descobrir vulnerabilidades potenciais resultantes de erros de codifica\u00e7\u00e3o, falhas de configura\u00e7\u00e3o do sistema ou outras fraquezas operacionais de implanta\u00e7\u00e3o. A cobertura automatizada de inje\u00e7\u00e3o de falhas em um pipeline de CI promove uma abordagem Shift-Left de teste mais cedo no ciclo de vida para poss\u00edveis problemas. Exemplos de realiza\u00e7\u00e3o de inje\u00e7\u00e3o de falhas durante o ciclo de vida do desenvolvimento: Usando ferramentas de fuzzing no CI. Executar testes de cen\u00e1rio de ponta a ponta existentes (como testes de integra\u00e7\u00e3o ou de estresse), que s\u00e3o aumentados com inje\u00e7\u00e3o de falhas. Escrever testes de regress\u00e3o e aceita\u00e7\u00e3o com base em problemas que foram encontrados e corrigidos ou com base em incidentes de servi\u00e7o resolvidos. Valida\u00e7\u00f5es ad-hoc (manuais) de falha no ambiente de desenvolvimento para novos recursos.","title":"Teste de inje\u00e7\u00e3o de falhas no ciclo de desenvolvimento"},{"location":"automated-testing/fault-injection-testing/#teste-de-injecao-de-falhas-no-ciclo-de-lancamento","text":"Muito parecido com Testes de Monitoramento Sint\u00e9tico , o teste de inje\u00e7\u00e3o de falhas no ciclo de lan\u00e7amento faz parte da abordagem de teste Shift-Right , que usa m\u00e9todos seguros para realizar testes em um ambiente de produ\u00e7\u00e3o ou pr\u00e9-produ\u00e7\u00e3o. Dada a natureza das aplica\u00e7\u00f5es distribu\u00eddas baseadas em nuvem, \u00e9 muito dif\u00edcil simular o comportamento real dos servi\u00e7os fora de seu ambiente de produ\u00e7\u00e3o. Os testadores s\u00e3o incentivados a executar testes onde realmente importa, em um sistema ao vivo com tr\u00e1fego de clientes. Os testes de inje\u00e7\u00e3o de falhas dependem da observabilidade de m\u00e9tricas e geralmente s\u00e3o estat\u00edsticos; Os seguintes passos de alto n\u00edvel fornecem uma amostra de como praticar inje\u00e7\u00e3o de falhas e engenharia do caos: Medir e definir um estado est\u00e1vel (saud\u00e1vel) para a interoperabilidade do sistema. Criar hip\u00f3teses com base no comportamento previsto quando uma falha \u00e9 introduzida. Introduzir eventos de falha do mundo real no sistema. Medir o estado e compar\u00e1-lo ao estado de refer\u00eancia. Documentar o processo e as observa\u00e7\u00f5es. Identificar e agir com base no resultado.","title":"Teste de inje\u00e7\u00e3o de falhas no ciclo de lan\u00e7amento"},{"location":"automated-testing/fault-injection-testing/#teste-de-injecao-de-falhas-em-kubernetes","text":"Com o avan\u00e7o do Kubernetes (k8s) como plataforma de infraestrutura, o teste de inje\u00e7\u00e3o de falhas em Kubernetes tornou-se inevit\u00e1vel para garantir que o sistema se comporte de maneira confi\u00e1vel no caso de uma falha ou falha. Pode haver diferentes tipos de cargas de trabalho rodando dentro de um cluster k8s que s\u00e3o escritas em diferentes linguagens. Por exemplo, dentro de um cluster K8s, voc\u00ea pode executar um microservi\u00e7o, um aplicativo web e/ou um trabalho agendado. Portanto, voc\u00ea precisa ter um mecanismo para injetar falhas em qualquer tipo de carga de trabalho rodando dentro do cluster. Al\u00e9m disso, os clusters Kubernetes s\u00e3o gerenciados de forma diferente da infraestrutura tradicional. As ferramentas usadas para teste de inje\u00e7\u00e3o de falhas dentro do Kubernetes devem ter compatibilidade com a infraestrutura k8s. Estas s\u00e3o as principais caracter\u00edsticas que s\u00e3o necess\u00e1rias: Facilidade de injetar falhas em pods do Kubernetes. Suporte para instala\u00e7\u00e3o r\u00e1pida de ferramentas dentro do cluster. Suporte para configura\u00e7\u00f5es baseadas em YAML que funcionam bem com o Kubernetes. Facilidade de personaliza\u00e7\u00e3o para adicionar recursos personalizados. Suporte para fluxos de trabalho para implantar v\u00e1rias cargas de trabalho e falhas. Facilidade de manuten\u00e7\u00e3o da ferramenta. Facilidade de integra\u00e7\u00e3o com telemetria.","title":"Teste de inje\u00e7\u00e3o de falhas em Kubernetes"},{"location":"automated-testing/fault-injection-testing/#melhores-praticas-e-conselhos","text":"Experimentar na produ\u00e7\u00e3o tem o benef\u00edcio de executar testes contra um sistema ao vivo com tr\u00e1fego real de usu\u00e1rios, garantindo sua sa\u00fade ou construindo confian\u00e7a em sua capacidade de lidar com erros de forma elegante. No entanto, tem o potencial de causar dor desnecess\u00e1ria ao cliente. Um teste pode ter sucesso ou falhar. No caso de falha, \u00e9 prov\u00e1vel que haja algum impacto no ambiente de produ\u00e7\u00e3o. Pensar sobre o Raio de Explos\u00e3o do efeito, caso o teste falhe, \u00e9 um passo crucial a ser realizado previamente. As seguintes pr\u00e1ticas podem ajudar a minimizar esse risco: Execute testes em um ambiente n\u00e3o produtivo primeiro. Entenda como o sistema se comporta em um ambiente seguro, usando carga de trabalho sint\u00e9tica, antes de introduzir riscos potenciais ao tr\u00e1fego do cliente. Use inje\u00e7\u00e3o de falhas como port\u00f5es em diferentes est\u00e1gios ao longo do pipeline de CD. Implantar e testar em implanta\u00e7\u00f5es Blue/Green e Canary. Use m\u00e9todos como sombreamento de tr\u00e1fego (tamb\u00e9m conhecido como Tr\u00e1fego Escuro ) para levar o tr\u00e1fego do cliente ao slot de staging. Esforce-se para alcan\u00e7ar um equil\u00edbrio entre coletar dados de resultados reais, afetando o m\u00ednimo poss\u00edvel de usu\u00e1rios de produ\u00e7\u00e3o. Use princ\u00edpios de design defensivo, como circuit breaking e os padr\u00f5es de anteparo. Acordar um or\u00e7amento (em termos de Objetivo de N\u00edvel de Servi\u00e7o (SLO)) como um investimento em caos e inje\u00e7\u00e3o de falhas. Aumente o risco de forma incremental - Comece fortalecendo o n\u00facleo e expanda em camadas. Em cada ponto, o progresso deve ser consolidado com testes de regress\u00e3o automatizados.","title":"Melhores Pr\u00e1ticas e Conselhos"},{"location":"automated-testing/fault-injection-testing/#frameworks-e-ferramentas-de-teste-de-injecao-de-falhas","text":"","title":"Frameworks e Ferramentas de Teste de Inje\u00e7\u00e3o de Falhas"},{"location":"automated-testing/fault-injection-testing/#fuzzing","text":"OneFuzz - \u00e9 uma plataforma de fuzzing como servi\u00e7o de c\u00f3digo aberto da Microsoft que \u00e9 f\u00e1cil de integrar em pipelines de CI. AFL e WinAFL - Ferramentas de fuzz populares da equipe do projeto zero do Google, que s\u00e3o usadas localmente para direcionar bin\u00e1rios no Linux ou Windows. WebScarab - Um fuzzer focado na web de propriedade da OWASP, que pode ser encontrado nas distribui\u00e7\u00f5es Kali Linux .","title":"Fuzzing"},{"location":"automated-testing/fault-injection-testing/#caos","text":"Azure Chaos Studio - Uma ferramenta em pr\u00e9-visualiza\u00e7\u00e3o para orquestrar experimentos controlados de inje\u00e7\u00e3o de falhas em recursos do Azure. Chaos toolkit - Uma plataforma de caos declarativa e modular com muitas extens\u00f5es, incluindo o kit de a\u00e7\u00f5es e sondas do Azure . Kraken - Uma ferramenta de caos espec\u00edfica do Openshift, mantida pela Redhat. Chaos Monkey - A plataforma da Netflix que popularizou a engenharia do caos (n\u00e3o suporta Azure OOTB). Simmy - Uma biblioteca .NET para testes de caos e inje\u00e7\u00e3o de falhas integrada \u00e0 biblioteca Polly para engenharia de resili\u00eancia. Litmus - Uma ferramenta de c\u00f3digo aberto do CNCF para testes de caos e inje\u00e7\u00e3o de falhas para clusters Kubernetes. Este post no blog de desenvolvimento da ISE fornece trechos de c\u00f3digo como um exemplo de como usar Polly e Simmy para implementar uma abordagem baseada em hip\u00f3teses para resili\u00eancia e testes de caos.","title":"Caos"},{"location":"automated-testing/fault-injection-testing/#conclusao","text":"A partir dos princ\u00edpios do caos: \"Quanto mais dif\u00edcil \u00e9 perturbar o estado est\u00e1vel, mais confian\u00e7a temos no comportamento do sistema. Se uma fraqueza \u00e9 descoberta, agora temos um alvo para melhoria antes que esse comportamento se manifeste no sistema como um todo\". As t\u00e9cnicas de inje\u00e7\u00e3o de falhas aumentam a resili\u00eancia e a confian\u00e7a nos produtos que enviamos. Elas s\u00e3o usadas em toda a ind\u00fastria para validar aplica\u00e7\u00f5es e plataformas antes e enquanto s\u00e3o entregues aos clientes. A inje\u00e7\u00e3o de falhas \u00e9 uma ferramenta poderosa e deve ser usada com cautela. Casos como o apag\u00e3o global de 30 minutos da Cloudflare , que foi causado devido a uma implanta\u00e7\u00e3o de c\u00f3digo que deveria ser \"lan\u00e7ada \u00e0s escuras\", destacam a import\u00e2ncia de limitar o raio de explos\u00e3o no sistema durante experimentos.","title":"Conclus\u00e3o"},{"location":"automated-testing/fault-injection-testing/#recursos","text":"Post no blog de Mark Russinovich sobre inje\u00e7\u00e3o de falhas e engenharia do caos Post no blog de Cindy Sridharan sobre testes em produ\u00e7\u00e3o Continua\u00e7\u00e3o do post no blog de Cindy Sridharan sobre testes em produ\u00e7\u00e3o Inje\u00e7\u00e3o de falhas na Azure Search Framework de Arquitetura Azure - Engenharia do Caos Framework de Arquitetura Azure - Testando resili\u00eancia Panorama dos Modelos de Causa de Falha de Software","title":"Recursos"},{"location":"automated-testing/integration-testing/","text":"Teste de Integra\u00e7\u00e3o O teste de integra\u00e7\u00e3o \u00e9 uma metodologia de teste de software usada para determinar o qu\u00e3o bem os componentes ou m\u00f3dulos de um sistema desenvolvidos individualmente se comunicam entre si. Este m\u00e9todo de teste confirma que um agregado de um sistema, ou sub-sistema, funciona corretamente em conjunto ou, caso contr\u00e1rio, exp\u00f5e comportamentos err\u00f4neos entre duas ou mais unidades de c\u00f3digo. Por que Teste de Integra\u00e7\u00e3o Como um componente de um sistema pode ser desenvolvido de forma independente ou isolada de outro, \u00e9 importante verificar a intera\u00e7\u00e3o de alguns ou todos os componentes. Um sistema complexo pode ser composto por bancos de dados, APIs, interfaces e mais, que interagem entre si ou com sistemas externos adicionais. Os testes de integra\u00e7\u00e3o exp\u00f5em problemas no n\u00edvel do sistema, como esquemas de banco de dados quebrados ou integra\u00e7\u00e3o defeituosa de APIs de terceiros. Ele garante uma maior cobertura de teste e serve como um importante ciclo de feedback ao longo do desenvolvimento. Blocos de Design de Teste de Integra\u00e7\u00e3o Considere um aplicativo banc\u00e1rio com tr\u00eas m\u00f3dulos: login, transfer\u00eancias e saldo atual, todos desenvolvidos de forma independente. Um teste de integra\u00e7\u00e3o pode verificar quando um usu\u00e1rio faz login, ele \u00e9 redirecionado para o seu saldo atual com o valor correto para o usu\u00e1rio fict\u00edcio espec\u00edfico. Outro teste de integra\u00e7\u00e3o pode realizar uma transfer\u00eancia de uma quantia espec\u00edfica de dinheiro. O teste pode confirmar que h\u00e1 fundos suficientes na conta para realizar a transfer\u00eancia e, ap\u00f3s a transfer\u00eancia, o saldo atual \u00e9 atualizado adequadamente para o usu\u00e1rio fict\u00edcio. A p\u00e1gina de login pode ser simulada com um usu\u00e1rio de teste e credenciais fict\u00edcias se este m\u00f3dulo n\u00e3o estiver conclu\u00eddo ao testar o m\u00f3dulo de transfer\u00eancias. O teste de integra\u00e7\u00e3o \u00e9 feito pelo desenvolvedor ou pelo testador de QA. No passado, o teste de integra\u00e7\u00e3o sempre acontecia ap\u00f3s o teste de unidade e antes do teste de sistema e E2E. Em compara\u00e7\u00e3o com os testes de unidade, os testes de integra\u00e7\u00e3o s\u00e3o menores em quantidade, geralmente mais lentos e mais caros para configurar e desenvolver. Agora, se uma equipe est\u00e1 seguindo princ\u00edpios \u00e1geis, os testes de integra\u00e7\u00e3o podem ser realizados antes ou depois dos testes de unidade, cedo e frequentemente, pois n\u00e3o h\u00e1 necessidade de esperar por processos sequenciais. Al\u00e9m disso, os testes de integra\u00e7\u00e3o podem utilizar dados fict\u00edcios para simular um sistema completo. H\u00e1 uma abund\u00e2ncia de frameworks de teste espec\u00edficos para cada linguagem que podem ser usados ao longo de todo o ciclo de desenvolvimento. ** \u00c9 importante notar a diferen\u00e7a entre teste de integra\u00e7\u00e3o e teste de aceita\u00e7\u00e3o. O teste de integra\u00e7\u00e3o confirma que um grupo de componentes funciona em conjunto como pretendido do ponto de vista t\u00e9cnico, enquanto o teste de aceita\u00e7\u00e3o confirma que um grupo de componentes funciona em conjunto como pretendido a partir de um cen\u00e1rio de neg\u00f3cios. Aplicando Teste de Integra\u00e7\u00e3o Antes de escrever testes de integra\u00e7\u00e3o, os engenheiros devem identificar os diferentes componentes do sistema e seus comportamentos, entradas e sa\u00eddas pretendidos. A arquitetura do projeto deve estar totalmente documentada ou especificada em algum lugar que possa ser prontamente consultado (por exemplo, o diagrama de arquitetura). Existem duas t\u00e9cnicas principais para teste de integra\u00e7\u00e3o. Big Bang O teste de integra\u00e7\u00e3o Big Bang \u00e9 quando todos os componentes s\u00e3o testados como uma \u00fanica unidade. Isso \u00e9 melhor para sistemas pequenos, pois um sistema muito grande pode ser dif\u00edcil de localizar para poss\u00edveis erros de testes falhados. Esta abordagem tamb\u00e9m requer que todos os componentes no sistema em teste estejam conclu\u00eddos, o que pode atrasar o in\u00edcio dos testes. Teste Incremental O teste incremental \u00e9 quando dois ou mais componentes que s\u00e3o logicamente relacionados s\u00e3o testados como uma unidade. Ap\u00f3s o teste da unidade, componentes adicionais s\u00e3o combinados e testados todos juntos. Este processo se repete at\u00e9 que todos os componentes necess\u00e1rios sejam testados. Top Down O teste Top Down \u00e9 quando os componentes de n\u00edvel superior s\u00e3o testados seguindo o fluxo de controle de um sistema de software. Nesse cen\u00e1rio, o que \u00e9 comumente chamado de stubs s\u00e3o usados para emular o comportamento de m\u00f3dulos de n\u00edvel inferior ainda n\u00e3o conclu\u00eddos ou mesclados no teste de integra\u00e7\u00e3o. Bottom Up O teste Bottom Up \u00e9 quando os m\u00f3dulos de n\u00edvel inferior s\u00e3o testados juntos. Nesse cen\u00e1rio, o que \u00e9 comumente chamado de drivers s\u00e3o usados para emular o comportamento de m\u00f3dulos de n\u00edvel superior ainda n\u00e3o conclu\u00eddos ou inclu\u00eddos no teste de integra\u00e7\u00e3o. Uma terceira abordagem conhecida como o modelo sandu\u00edche ou h\u00edbrido combina as abordagens de baixo para cima e de cima para baixo para testar componentes de n\u00edvel inferior e superior ao mesmo tempo. Coisas a Evitar H\u00e1 um trade-off que o desenvolvedor deve fazer entre a cobertura de c\u00f3digo do teste de integra\u00e7\u00e3o e os ciclos de engenharia. Com depend\u00eancias fict\u00edcias, dados de teste e v\u00e1rios ambientes em teste, muitos testes de integra\u00e7\u00e3o s\u00e3o invi\u00e1veis de manter e se tornam cada vez menos significativos. Muita simula\u00e7\u00e3o vai desacelerar o conjunto de testes, tornar o dimensionamento dif\u00edcil e pode ser um sinal de que o desenvolvedor deve considerar outros testes para o cen\u00e1rio, como testes de aceita\u00e7\u00e3o ou E2E. Os testes de integra\u00e7\u00e3o de sistemas complexos requerem alta manuten\u00e7\u00e3o. Evite testar a l\u00f3gica de neg\u00f3cios em testes de integra\u00e7\u00e3o, mantendo os conjuntos de testes separados. N\u00e3o teste al\u00e9m dos crit\u00e9rios de aceita\u00e7\u00e3o da tarefa e certifique-se de limpar quaisquer recursos criados para um determinado teste. Al\u00e9m disso, evite escrever testes em um ambiente de produ\u00e7\u00e3o. Em vez disso, escreva-os em um ambiente de c\u00f3pia reduzida. Frameworks e Ferramentas de Teste de Integra\u00e7\u00e3o Muitas ferramentas e frameworks podem ser usados para escrever tanto testes de unidade quanto de integra\u00e7\u00e3o. As seguintes ferramentas s\u00e3o para automatizar testes de integra\u00e7\u00e3o. JUnit Robot Framework moq Cucumber Selenium Behave (Python) Conclus\u00e3o O teste de integra\u00e7\u00e3o demonstra como um m\u00f3dulo de um sistema, ou sistema externo, se interfaceia com outro. Isso pode ser um teste de dois componentes, um sub-sistema, um sistema inteiro ou uma cole\u00e7\u00e3o de sistemas. Os testes devem ser escritos com frequ\u00eancia e ao longo de todo o ciclo de vida do desenvolvimento, usando uma quantidade apropriada de depend\u00eancias e dados fict\u00edcios. Como os testes de integra\u00e7\u00e3o provam que os m\u00f3dulos desenvolvidos independentemente se interfaceiam conforme tecnicamente projetado, isso aumenta a confian\u00e7a no ciclo de desenvolvimento, fornecendo um caminho para um sistema que \u00e9 implantado e escal\u00e1vel. Recursos Abordagens de teste de integra\u00e7\u00e3o Pr\u00f3s e contras do teste de integra\u00e7\u00e3o Mocks e stubs em testes de integra\u00e7\u00e3o Software Testing: Principles and Practices In\u00edcio r\u00e1pido do teste Behave","title":"Teste de Integra\u00e7\u00e3o"},{"location":"automated-testing/integration-testing/#teste-de-integracao","text":"O teste de integra\u00e7\u00e3o \u00e9 uma metodologia de teste de software usada para determinar o qu\u00e3o bem os componentes ou m\u00f3dulos de um sistema desenvolvidos individualmente se comunicam entre si. Este m\u00e9todo de teste confirma que um agregado de um sistema, ou sub-sistema, funciona corretamente em conjunto ou, caso contr\u00e1rio, exp\u00f5e comportamentos err\u00f4neos entre duas ou mais unidades de c\u00f3digo.","title":"Teste de Integra\u00e7\u00e3o"},{"location":"automated-testing/integration-testing/#por-que-teste-de-integracao","text":"Como um componente de um sistema pode ser desenvolvido de forma independente ou isolada de outro, \u00e9 importante verificar a intera\u00e7\u00e3o de alguns ou todos os componentes. Um sistema complexo pode ser composto por bancos de dados, APIs, interfaces e mais, que interagem entre si ou com sistemas externos adicionais. Os testes de integra\u00e7\u00e3o exp\u00f5em problemas no n\u00edvel do sistema, como esquemas de banco de dados quebrados ou integra\u00e7\u00e3o defeituosa de APIs de terceiros. Ele garante uma maior cobertura de teste e serve como um importante ciclo de feedback ao longo do desenvolvimento.","title":"Por que Teste de Integra\u00e7\u00e3o"},{"location":"automated-testing/integration-testing/#blocos-de-design-de-teste-de-integracao","text":"Considere um aplicativo banc\u00e1rio com tr\u00eas m\u00f3dulos: login, transfer\u00eancias e saldo atual, todos desenvolvidos de forma independente. Um teste de integra\u00e7\u00e3o pode verificar quando um usu\u00e1rio faz login, ele \u00e9 redirecionado para o seu saldo atual com o valor correto para o usu\u00e1rio fict\u00edcio espec\u00edfico. Outro teste de integra\u00e7\u00e3o pode realizar uma transfer\u00eancia de uma quantia espec\u00edfica de dinheiro. O teste pode confirmar que h\u00e1 fundos suficientes na conta para realizar a transfer\u00eancia e, ap\u00f3s a transfer\u00eancia, o saldo atual \u00e9 atualizado adequadamente para o usu\u00e1rio fict\u00edcio. A p\u00e1gina de login pode ser simulada com um usu\u00e1rio de teste e credenciais fict\u00edcias se este m\u00f3dulo n\u00e3o estiver conclu\u00eddo ao testar o m\u00f3dulo de transfer\u00eancias. O teste de integra\u00e7\u00e3o \u00e9 feito pelo desenvolvedor ou pelo testador de QA. No passado, o teste de integra\u00e7\u00e3o sempre acontecia ap\u00f3s o teste de unidade e antes do teste de sistema e E2E. Em compara\u00e7\u00e3o com os testes de unidade, os testes de integra\u00e7\u00e3o s\u00e3o menores em quantidade, geralmente mais lentos e mais caros para configurar e desenvolver. Agora, se uma equipe est\u00e1 seguindo princ\u00edpios \u00e1geis, os testes de integra\u00e7\u00e3o podem ser realizados antes ou depois dos testes de unidade, cedo e frequentemente, pois n\u00e3o h\u00e1 necessidade de esperar por processos sequenciais. Al\u00e9m disso, os testes de integra\u00e7\u00e3o podem utilizar dados fict\u00edcios para simular um sistema completo. H\u00e1 uma abund\u00e2ncia de frameworks de teste espec\u00edficos para cada linguagem que podem ser usados ao longo de todo o ciclo de desenvolvimento. ** \u00c9 importante notar a diferen\u00e7a entre teste de integra\u00e7\u00e3o e teste de aceita\u00e7\u00e3o. O teste de integra\u00e7\u00e3o confirma que um grupo de componentes funciona em conjunto como pretendido do ponto de vista t\u00e9cnico, enquanto o teste de aceita\u00e7\u00e3o confirma que um grupo de componentes funciona em conjunto como pretendido a partir de um cen\u00e1rio de neg\u00f3cios.","title":"Blocos de Design de Teste de Integra\u00e7\u00e3o"},{"location":"automated-testing/integration-testing/#aplicando-teste-de-integracao","text":"Antes de escrever testes de integra\u00e7\u00e3o, os engenheiros devem identificar os diferentes componentes do sistema e seus comportamentos, entradas e sa\u00eddas pretendidos. A arquitetura do projeto deve estar totalmente documentada ou especificada em algum lugar que possa ser prontamente consultado (por exemplo, o diagrama de arquitetura). Existem duas t\u00e9cnicas principais para teste de integra\u00e7\u00e3o.","title":"Aplicando Teste de Integra\u00e7\u00e3o"},{"location":"automated-testing/integration-testing/#big-bang","text":"O teste de integra\u00e7\u00e3o Big Bang \u00e9 quando todos os componentes s\u00e3o testados como uma \u00fanica unidade. Isso \u00e9 melhor para sistemas pequenos, pois um sistema muito grande pode ser dif\u00edcil de localizar para poss\u00edveis erros de testes falhados. Esta abordagem tamb\u00e9m requer que todos os componentes no sistema em teste estejam conclu\u00eddos, o que pode atrasar o in\u00edcio dos testes.","title":"Big Bang"},{"location":"automated-testing/integration-testing/#teste-incremental","text":"O teste incremental \u00e9 quando dois ou mais componentes que s\u00e3o logicamente relacionados s\u00e3o testados como uma unidade. Ap\u00f3s o teste da unidade, componentes adicionais s\u00e3o combinados e testados todos juntos. Este processo se repete at\u00e9 que todos os componentes necess\u00e1rios sejam testados.","title":"Teste Incremental"},{"location":"automated-testing/integration-testing/#top-down","text":"O teste Top Down \u00e9 quando os componentes de n\u00edvel superior s\u00e3o testados seguindo o fluxo de controle de um sistema de software. Nesse cen\u00e1rio, o que \u00e9 comumente chamado de stubs s\u00e3o usados para emular o comportamento de m\u00f3dulos de n\u00edvel inferior ainda n\u00e3o conclu\u00eddos ou mesclados no teste de integra\u00e7\u00e3o.","title":"Top Down"},{"location":"automated-testing/integration-testing/#bottom-up","text":"O teste Bottom Up \u00e9 quando os m\u00f3dulos de n\u00edvel inferior s\u00e3o testados juntos. Nesse cen\u00e1rio, o que \u00e9 comumente chamado de drivers s\u00e3o usados para emular o comportamento de m\u00f3dulos de n\u00edvel superior ainda n\u00e3o conclu\u00eddos ou inclu\u00eddos no teste de integra\u00e7\u00e3o. Uma terceira abordagem conhecida como o modelo sandu\u00edche ou h\u00edbrido combina as abordagens de baixo para cima e de cima para baixo para testar componentes de n\u00edvel inferior e superior ao mesmo tempo.","title":"Bottom Up"},{"location":"automated-testing/integration-testing/#coisas-a-evitar","text":"H\u00e1 um trade-off que o desenvolvedor deve fazer entre a cobertura de c\u00f3digo do teste de integra\u00e7\u00e3o e os ciclos de engenharia. Com depend\u00eancias fict\u00edcias, dados de teste e v\u00e1rios ambientes em teste, muitos testes de integra\u00e7\u00e3o s\u00e3o invi\u00e1veis de manter e se tornam cada vez menos significativos. Muita simula\u00e7\u00e3o vai desacelerar o conjunto de testes, tornar o dimensionamento dif\u00edcil e pode ser um sinal de que o desenvolvedor deve considerar outros testes para o cen\u00e1rio, como testes de aceita\u00e7\u00e3o ou E2E. Os testes de integra\u00e7\u00e3o de sistemas complexos requerem alta manuten\u00e7\u00e3o. Evite testar a l\u00f3gica de neg\u00f3cios em testes de integra\u00e7\u00e3o, mantendo os conjuntos de testes separados. N\u00e3o teste al\u00e9m dos crit\u00e9rios de aceita\u00e7\u00e3o da tarefa e certifique-se de limpar quaisquer recursos criados para um determinado teste. Al\u00e9m disso, evite escrever testes em um ambiente de produ\u00e7\u00e3o. Em vez disso, escreva-os em um ambiente de c\u00f3pia reduzida.","title":"Coisas a Evitar"},{"location":"automated-testing/integration-testing/#frameworks-e-ferramentas-de-teste-de-integracao","text":"Muitas ferramentas e frameworks podem ser usados para escrever tanto testes de unidade quanto de integra\u00e7\u00e3o. As seguintes ferramentas s\u00e3o para automatizar testes de integra\u00e7\u00e3o. JUnit Robot Framework moq Cucumber Selenium Behave (Python)","title":"Frameworks e Ferramentas de Teste de Integra\u00e7\u00e3o"},{"location":"automated-testing/integration-testing/#conclusao","text":"O teste de integra\u00e7\u00e3o demonstra como um m\u00f3dulo de um sistema, ou sistema externo, se interfaceia com outro. Isso pode ser um teste de dois componentes, um sub-sistema, um sistema inteiro ou uma cole\u00e7\u00e3o de sistemas. Os testes devem ser escritos com frequ\u00eancia e ao longo de todo o ciclo de vida do desenvolvimento, usando uma quantidade apropriada de depend\u00eancias e dados fict\u00edcios. Como os testes de integra\u00e7\u00e3o provam que os m\u00f3dulos desenvolvidos independentemente se interfaceiam conforme tecnicamente projetado, isso aumenta a confian\u00e7a no ciclo de desenvolvimento, fornecendo um caminho para um sistema que \u00e9 implantado e escal\u00e1vel.","title":"Conclus\u00e3o"},{"location":"automated-testing/integration-testing/#recursos","text":"Abordagens de teste de integra\u00e7\u00e3o Pr\u00f3s e contras do teste de integra\u00e7\u00e3o Mocks e stubs em testes de integra\u00e7\u00e3o Software Testing: Principles and Practices In\u00edcio r\u00e1pido do teste Behave","title":"Recursos"},{"location":"automated-testing/performance-testing/","text":"Teste de Desempenho O Teste de Desempenho \u00e9 um termo sobrecarregado que \u00e9 usado para se referir a v\u00e1rias subcategorias de testes relacionados ao desempenho, cada uma com um prop\u00f3sito diferente. Uma boa descri\u00e7\u00e3o do teste de desempenho geral \u00e9 a seguinte: O teste de desempenho \u00e9 um tipo de teste destinado a determinar a capacidade de resposta, taxa de transfer\u00eancia, confiabilidade e/ou escalabilidade de um sistema sob uma determinada carga de trabalho. Orienta\u00e7\u00e3o para Teste de Desempenho para Aplica\u00e7\u00f5es Web . Antes de entrar nas diferentes subcategorias de testes de desempenho, vamos entender por que o teste de desempenho \u00e9 normalmente realizado. Por que Teste de Desempenho O teste de desempenho \u00e9 comumente realizado para realizar uma ou mais das seguintes a\u00e7\u00f5es: Ajustar o desempenho do sistema Identificar gargalos e problemas com o sistema em diferentes n\u00edveis de carga. Comparar as caracter\u00edsticas de desempenho do sistema para diferentes configura\u00e7\u00f5es de sistema. Elaborar uma estrat\u00e9gia de escalabilidade para o sistema. Auxiliar no planejamento de capacidade O planejamento de capacidade \u00e9 o processo de determinar que tipo de recursos de hardware e software s\u00e3o necess\u00e1rios para executar uma aplica\u00e7\u00e3o para atender a metas de desempenho predefinidas. O planejamento de capacidade envolve a identifica\u00e7\u00e3o das expectativas de neg\u00f3cios, as flutua\u00e7\u00f5es peri\u00f3dicas do uso da aplica\u00e7\u00e3o, considerando o custo de execu\u00e7\u00e3o da infraestrutura de hardware e software. Avaliar a prontid\u00e3o do sistema para o lan\u00e7amento: Avaliar as caracter\u00edsticas de desempenho do sistema (tempo de resposta, taxa de transfer\u00eancia) em um ambiente semelhante ao de produ\u00e7\u00e3o. O objetivo \u00e9 garantir que as metas de desempenho possam ser alcan\u00e7adas ap\u00f3s o lan\u00e7amento. Avaliar o impacto de desempenho das mudan\u00e7as na aplica\u00e7\u00e3o Comparar as caracter\u00edsticas de desempenho de uma aplica\u00e7\u00e3o ap\u00f3s uma mudan\u00e7a com os valores das caracter\u00edsticas de desempenho durante execu\u00e7\u00f5es anteriores (ou valores de refer\u00eancia), pode fornecer uma indica\u00e7\u00e3o de problemas de desempenho (regress\u00e3o de desempenho) ou melhorias introduzidas devido a uma mudan\u00e7a. Principais Categorias de Teste de Desempenho O teste de desempenho \u00e9 um t\u00f3pico amplo. H\u00e1 muitas \u00e1reas onde voc\u00ea pode realizar testes. De forma geral, voc\u00ea pode realizar testes no backend e na interface do usu\u00e1rio. Voc\u00ea pode testar o desempenho de componentes individuais, bem como testar a funcionalidade de ponta a ponta. Existem v\u00e1rias categorias de testes tamb\u00e9m: Teste de Carga Esta \u00e9 a subcategoria de teste de desempenho que se concentra em validar as caracter\u00edsticas de desempenho de um sistema, quando o sistema enfrenta os volumes de carga que s\u00e3o esperados durante a opera\u00e7\u00e3o de produ\u00e7\u00e3o. Um Teste de Resist\u00eancia ou um Teste de Soak \u00e9 um teste de carga realizado durante um longo per\u00edodo, variando de v\u00e1rias horas a dias. Teste de Estresse Esta \u00e9 a subcategoria de teste de desempenho que se concentra em validar as caracter\u00edsticas de desempenho de um sistema quando o sistema enfrenta carga extrema. O objetivo \u00e9 avaliar como o sistema lida com a press\u00e3o at\u00e9 seus limites, ele se recupera (ou seja, escala) ou simplesmente quebra e falha? Teste de Resist\u00eancia O objetivo do teste de resist\u00eancia \u00e9 garantir que o sistema possa manter um bom desempenho sob per\u00edodos prolongados de carga. Teste de Pico O objetivo do teste de pico \u00e9 validar que um sistema de software pode responder bem a grandes e repentinos picos. Teste de Caos O teste de caos ou engenharia do caos \u00e9 a pr\u00e1tica de experimentar em um sistema para construir confian\u00e7a de que o sistema pode resistir a condi\u00e7\u00f5es turbulentas na produ\u00e7\u00e3o. Seu objetivo \u00e9 identificar fraquezas antes que elas se manifestem em todo o sistema. Desenvolvedores frequentemente implementam procedimentos de conting\u00eancia para falhas de servi\u00e7o. O teste de caos desliga arbitrariamente diferentes partes do sistema para validar que os procedimentos de conting\u00eancia funcionam corretamente. M\u00e9tricas de Monitoramento de Desempenho Ao executar os v\u00e1rios tipos de abordagens de teste, seja estresse, resist\u00eancia, pico ou teste de caos, \u00e9 importante capturar v\u00e1rias m\u00e9tricas para ver como o sistema se comporta. No n\u00edvel b\u00e1sico de hardware, h\u00e1 quatro \u00e1reas a serem consideradas. Disco f\u00edsico Mem\u00f3ria Processador Rede Essas quatro \u00e1reas est\u00e3o inextricavelmente ligadas, o que significa que um desempenho ruim em uma \u00e1rea levar\u00e1 a um desempenho ruim em outra \u00e1rea. Engenheiros preocupados em entender o desempenho da aplica\u00e7\u00e3o devem se concentrar nessas quatro \u00e1reas principais. O exemplo cl\u00e1ssico de como o desempenho em uma \u00e1rea pode afetar o desempenho em outra \u00e9 a press\u00e3o da mem\u00f3ria. Se a mem\u00f3ria dispon\u00edvel de uma aplica\u00e7\u00e3o estiver baixa, o sistema operacional tentar\u00e1 compensar as defici\u00eancias de mem\u00f3ria transferindo p\u00e1ginas de dados da mem\u00f3ria para o disco, liberando assim mem\u00f3ria. Mas esse trabalho requer ajuda da CPU e do disco f\u00edsico. Isso significa que, quando voc\u00ea observa o desempenho quando h\u00e1 baixas quantidades de mem\u00f3ria, tamb\u00e9m notar\u00e1 picos na atividade do disco e da CPU. Disco F\u00edsico Quase todos os sistemas de software dependem do desempenho do disco f\u00edsico. Isso \u00e9 especialmente verdadeiro para o desempenho de bancos de dados. Abordagens mais modernas para o uso de SSDs para armazenamento de disco f\u00edsico podem melhorar dramaticamente o desempenho das aplica\u00e7\u00f5es. Aqui est\u00e3o algumas das m\u00e9tricas que voc\u00ea pode capturar e analisar: Contador Descri\u00e7\u00e3o M\u00e9dia do Comprimento da Fila do Disco Este valor \u00e9 derivado usando os contadores (Transfer\u00eancias de Disco/seg)*(Seg de Disco/Transfer\u00eancia). Esta m\u00e9trica descreve a fila do disco ao longo do tempo, suavizando quaisquer picos r\u00e1pidos. Ter qualquer disco f\u00edsico com um comprimento m\u00e9dio de fila acima de 2 por per\u00edodos prolongados pode ser uma indica\u00e7\u00e3o de que seu disco \u00e9 um gargalo. % de Tempo Ocioso Esta \u00e9 uma medida da porcentagem de tempo que o disco estava ocioso. Ou seja, n\u00e3o h\u00e1 solicita\u00e7\u00f5es de disco pendentes do sistema operacional esperando para serem conclu\u00eddas. Um n\u00famero baixo aqui \u00e9 um sinal positivo de que o disco tem capacidade excedente para atender ou escrever solicita\u00e7\u00f5es do sistema operacional. M\u00e9dia de Seg de Disco/Leitura e M\u00e9dia de Seg de Disco/Escrita Ambos medem a lat\u00eancia dos seus discos. A lat\u00eancia \u00e9 definida como o tempo m\u00e9dio que leva para uma transfer\u00eancia de disco ser conclu\u00edda. Voc\u00ea obviamente quer n\u00fameros t\u00e3o baixos quanto poss\u00edvel, mas precisa ter cuidado para levar em conta as diferen\u00e7as de velocidade inerentes entre SSDs e discos r\u00edgidos tradicionais. Para este contador, \u00e9 importante definir uma linha de base ap\u00f3s a instala\u00e7\u00e3o do hardware. Em seguida, use esse valor daqui para frente para determinar se voc\u00ea est\u00e1 enfrentando problemas de lat\u00eancia relacionados ao hardware. Leituras de Disco/seg e Escritas de Disco/seg Estes contadores medem o n\u00famero total de solicita\u00e7\u00f5es de E/S conclu\u00eddas por segundo. Semelhante aos contadores de lat\u00eancia, valores bons e ruins para esses contadores dependem do seu hardware de disco, mas valores mais altos do que sua linha de base inicial normalmente n\u00e3o apontam para um problema de hardware neste caso. Este contador pode ser \u00fatil para identificar picos na E/S de disco. Processador \u00c9 importante entender a quantidade de tempo gasto no modo kernel ou privilegiado. Em geral, se o c\u00f3digo estiver gastando muito tempo executando chamadas do sistema operacional, isso poder\u00e1 ser uma \u00e1rea de preocupa\u00e7\u00e3o, pois n\u00e3o permitir\u00e1 que voc\u00ea execute suas aplica\u00e7\u00f5es em modo de usu\u00e1rio, como seus bancos de dados, servidores/servi\u00e7os web, etc. A diretriz \u00e9 que a CPU deve gastar apenas cerca de 20% do tempo total do processador executando no modo kernel. Contador Descri\u00e7\u00e3o % de Tempo do Processador Esta \u00e9 a porcentagem do tempo total decorrido que o processador estava ocupado executando. Este contador pode ser muito alto ou muito baixo. Se o tempo do seu processador estiver consistentemente abaixo de 40%, ent\u00e3o h\u00e1 uma quest\u00e3o sobre se voc\u00ea superprovisionou sua CPU. 70% \u00e9 geralmente considerado um bom n\u00famero alvo e, se voc\u00ea come\u00e7ar a ir acima de 70%, pode querer explorar por que h\u00e1 alta press\u00e3o da CPU. % de Tempo Privilegiado (Modo Kernel) Este mede a porcentagem do tempo decorrido que o processador gastou executando no modo kernel. Como este contador leva em conta apenas opera\u00e7\u00f5es de kernel, uma alta porcentagem de tempo privilegiado (maior que 25%) pode indicar um problema de driver ou hardware que deve ser investigado. % de Tempo de Usu\u00e1rio A porcentagem do tempo decorrido que o processador gastou executando no modo de usu\u00e1rio (seu c\u00f3digo de aplica\u00e7\u00e3o). Uma boa diretriz \u00e9 estar consistentemente abaixo de 65%, pois voc\u00ea quer ter alguma folga tanto para as opera\u00e7\u00f5es de kernel mencionadas acima quanto para quaisquer outros picos de CPU exigidos por outras aplica\u00e7\u00f5es. Comprimento da Fila Este \u00e9 o n\u00famero de threads que est\u00e3o prontas para executar, mas esperando que um n\u00facleo fique dispon\u00edvel. Em m\u00e1quinas de n\u00facleo \u00fanico, um valor sustentado maior que 2-3 pode significar que voc\u00ea tem alguma press\u00e3o da CPU. Da mesma forma, para uma m\u00e1quina multicore, divida o comprimento da fila pelo n\u00famero de n\u00facleos e, se isso for continuamente maior que 2-3, pode haver press\u00e3o da CPU. Adaptador de Rede A velocidade da rede \u00e9 frequentemente um culpado oculto de desempenho ruim. Encontrar a causa raiz do mau desempenho da rede \u00e9 frequentemente dif\u00edcil. A fonte de problemas pode se originar de consumidores de largura de banda, como videoconfer\u00eancia, dados de transa\u00e7\u00e3o, backups de rede, v\u00eddeos recreativos. Na verdade, as tr\u00eas raz\u00f5es mais comuns para uma desacelera\u00e7\u00e3o da rede s\u00e3o: Congestionamento Corrup\u00e7\u00e3o de dados Colis\u00f5es Algumas das ferramentas que podem ajudar incluem: ifconfig netstat iperf tcpretrans tcpdump WireShark A solu\u00e7\u00e3o de problemas de desempenho da rede geralmente come\u00e7a com a verifica\u00e7\u00e3o do hardware. Coisas t\u00edpicas a serem exploradas s\u00e3o se h\u00e1 algum fio solto ou verificando que todos os roteadores est\u00e3o ligados. Nem sempre \u00e9 poss\u00edvel fazer isso, mas \u00e0s vezes um simples caso de reciclagem de energia do modem ou roteador pode resolver muitos problemas. Especialistas em rede frequentemente realizam a seguinte sequ\u00eancia de etapas para solucionar problemas: Verificar o hardware Usar IP config Usar ping e tracert Realizar verifica\u00e7\u00e3o de DNS Abordagens mais avan\u00e7adas frequentemente envolvem olhar para alguns dos contadores de desempenho de rede, conforme explicado abaixo. Contadores de Rede A tabela acima oferece alguns pontos de refer\u00eancia para entender melhor o que voc\u00ea pode esperar da sua rede. Aqui est\u00e3o alguns contadores que podem ajud\u00e1-lo a entender onde os gargalos podem existir: Contador Descri\u00e7\u00e3o Bytes Recebidos/seg A taxa na qual bytes s\u00e3o recebidos em cada adaptador de rede. Bytes Enviados/seg A taxa na qual bytes s\u00e3o enviados em cada adaptador de rede. Bytes Total/seg O n\u00famero de bytes enviados e recebidos pela rede. Segmentos Recebidos/seg A taxa na qual segmentos s\u00e3o recebidos para o protocolo. Segmentos Enviados/seg A taxa na qual segmentos s\u00e3o enviados. % de Tempo de Interrup\u00e7\u00e3o A porcentagem de tempo que o processador gasta recebendo e atendendo interrup\u00e7\u00f5es de hardware. Este valor \u00e9 um indicador indireto da atividade de dispositivos que geram interrup\u00e7\u00f5es, como adaptadores de rede. H\u00e1 uma distin\u00e7\u00e3o importante entre lat\u00eancia e vaz\u00e3o . Lat\u00eancia mede o tempo que leva para um pacote ser transferido pela rede, seja em termos de uma transmiss\u00e3o unidirecional ou de ida e volta. Vaz\u00e3o \u00e9 diferente e tenta medir a quantidade de dados sendo enviados e recebidos dentro de uma unidade de tempo. Mem\u00f3ria Contador Descri\u00e7\u00e3o MBs Dispon\u00edveis Este contador representa a quantidade de mem\u00f3ria que est\u00e1 dispon\u00edvel para aplica\u00e7\u00f5es em execu\u00e7\u00e3o. Mem\u00f3ria baixa pode acionar Falhas de P\u00e1gina, onde press\u00e3o adicional \u00e9 colocada na CPU para trocar mem\u00f3ria para dentro e fora do disco. Se a quantidade de mem\u00f3ria dispon\u00edvel cair abaixo de 10%, mais mem\u00f3ria deve ser obtida. P\u00e1ginas/seg Este \u00e9 na verdade a soma dos contadores \"P\u00e1ginas Entradas/seg\" e \"P\u00e1ginas Sa\u00eddas/seg\", que \u00e9 a taxa na qual as p\u00e1ginas est\u00e3o sendo lidas e escritas como resultado de falhas de p\u00e1gina. Pequenos picos com este valor n\u00e3o significam que h\u00e1 um problema, mas valores sustentados acima de 50 podem significar que a mem\u00f3ria do sistema \u00e9 um gargalo. Arquivo de Pagina\u00e7\u00e3o(_Total)\\% de Uso A porcentagem do arquivo de pagina\u00e7\u00e3o do sistema que est\u00e1 atualmente em uso. Isso n\u00e3o est\u00e1 diretamente relacionado ao desempenho, mas voc\u00ea pode enfrentar s\u00e9rios problemas de aplica\u00e7\u00e3o se o arquivo de pagina\u00e7\u00e3o ficar completamente cheio e mem\u00f3ria adicional ainda estiver sendo solicitada por aplica\u00e7\u00f5es. Atividades-chave de Teste de Desempenho As atividades de teste de desempenho variam dependendo da subcategoria de teste de desempenho e dos requisitos e restri\u00e7\u00f5es do sistema. Para orienta\u00e7\u00e3o espec\u00edfica, voc\u00ea pode seguir o link para a subcategoria de testes de desempenho listada acima. As seguintes atividades podem ser inclu\u00eddas dependendo da subcategoria de teste de desempenho: Identificar os Crit\u00e9rios de Aceita\u00e7\u00e3o para os Testes Isso geralmente incluir\u00e1 identificar os objetivos e restri\u00e7\u00f5es para as caracter\u00edsticas de desempenho do sistema. Planejar e Projetar os Testes Em geral, precisamos considerar os seguintes pontos: Definir a carga com a qual a aplica\u00e7\u00e3o deve ser testada Estabelecer as m\u00e9tricas a serem coletadas Estabelecer quais ferramentas ser\u00e3o usadas para os testes Estabelecer a frequ\u00eancia do teste de desempenho: os testes de desempenho ser\u00e3o feitos como parte dos sprints de desenvolvimento de recursos ou apenas antes do lan\u00e7amento para um ambiente importante? Implementa\u00e7\u00e3o Implementar os testes de desempenho de acordo com a abordagem projetada. Instrumentar o sistema e garantir que ele esteja emitindo as m\u00e9tricas de desempenho necess\u00e1rias. Execu\u00e7\u00e3o do Teste Executar os testes e coletar m\u00e9tricas de desempenho. An\u00e1lise de Resultados e Re-teste Analisar os resultados/m\u00e9tricas de desempenho dos testes. Identificar as mudan\u00e7as necess\u00e1rias para ajustar o sistema (ou seja, c\u00f3digo, infraestrutura) para melhor acomodar os objetivos do teste. Em seguida, teste novamente. Este ciclo continua at\u00e9 que o objetivo do teste seja alcan\u00e7ado. O Modelo de Teste de Desempenho Iterativo pode ser usado para capturar detalhes sobre o resultado do teste para cada itera\u00e7\u00e3o. Recursos Padr\u00f5es e Pr\u00e1ticas: Orienta\u00e7\u00e3o para Teste de Desempenho para Aplica\u00e7\u00f5es Web","title":"Teste de Desempenho"},{"location":"automated-testing/performance-testing/#teste-de-desempenho","text":"O Teste de Desempenho \u00e9 um termo sobrecarregado que \u00e9 usado para se referir a v\u00e1rias subcategorias de testes relacionados ao desempenho, cada uma com um prop\u00f3sito diferente. Uma boa descri\u00e7\u00e3o do teste de desempenho geral \u00e9 a seguinte: O teste de desempenho \u00e9 um tipo de teste destinado a determinar a capacidade de resposta, taxa de transfer\u00eancia, confiabilidade e/ou escalabilidade de um sistema sob uma determinada carga de trabalho. Orienta\u00e7\u00e3o para Teste de Desempenho para Aplica\u00e7\u00f5es Web . Antes de entrar nas diferentes subcategorias de testes de desempenho, vamos entender por que o teste de desempenho \u00e9 normalmente realizado.","title":"Teste de Desempenho"},{"location":"automated-testing/performance-testing/#por-que-teste-de-desempenho","text":"O teste de desempenho \u00e9 comumente realizado para realizar uma ou mais das seguintes a\u00e7\u00f5es: Ajustar o desempenho do sistema Identificar gargalos e problemas com o sistema em diferentes n\u00edveis de carga. Comparar as caracter\u00edsticas de desempenho do sistema para diferentes configura\u00e7\u00f5es de sistema. Elaborar uma estrat\u00e9gia de escalabilidade para o sistema. Auxiliar no planejamento de capacidade O planejamento de capacidade \u00e9 o processo de determinar que tipo de recursos de hardware e software s\u00e3o necess\u00e1rios para executar uma aplica\u00e7\u00e3o para atender a metas de desempenho predefinidas. O planejamento de capacidade envolve a identifica\u00e7\u00e3o das expectativas de neg\u00f3cios, as flutua\u00e7\u00f5es peri\u00f3dicas do uso da aplica\u00e7\u00e3o, considerando o custo de execu\u00e7\u00e3o da infraestrutura de hardware e software. Avaliar a prontid\u00e3o do sistema para o lan\u00e7amento: Avaliar as caracter\u00edsticas de desempenho do sistema (tempo de resposta, taxa de transfer\u00eancia) em um ambiente semelhante ao de produ\u00e7\u00e3o. O objetivo \u00e9 garantir que as metas de desempenho possam ser alcan\u00e7adas ap\u00f3s o lan\u00e7amento. Avaliar o impacto de desempenho das mudan\u00e7as na aplica\u00e7\u00e3o Comparar as caracter\u00edsticas de desempenho de uma aplica\u00e7\u00e3o ap\u00f3s uma mudan\u00e7a com os valores das caracter\u00edsticas de desempenho durante execu\u00e7\u00f5es anteriores (ou valores de refer\u00eancia), pode fornecer uma indica\u00e7\u00e3o de problemas de desempenho (regress\u00e3o de desempenho) ou melhorias introduzidas devido a uma mudan\u00e7a.","title":"Por que Teste de Desempenho"},{"location":"automated-testing/performance-testing/#principais-categorias-de-teste-de-desempenho","text":"O teste de desempenho \u00e9 um t\u00f3pico amplo. H\u00e1 muitas \u00e1reas onde voc\u00ea pode realizar testes. De forma geral, voc\u00ea pode realizar testes no backend e na interface do usu\u00e1rio. Voc\u00ea pode testar o desempenho de componentes individuais, bem como testar a funcionalidade de ponta a ponta. Existem v\u00e1rias categorias de testes tamb\u00e9m:","title":"Principais Categorias de Teste de Desempenho"},{"location":"automated-testing/performance-testing/#teste-de-carga","text":"Esta \u00e9 a subcategoria de teste de desempenho que se concentra em validar as caracter\u00edsticas de desempenho de um sistema, quando o sistema enfrenta os volumes de carga que s\u00e3o esperados durante a opera\u00e7\u00e3o de produ\u00e7\u00e3o. Um Teste de Resist\u00eancia ou um Teste de Soak \u00e9 um teste de carga realizado durante um longo per\u00edodo, variando de v\u00e1rias horas a dias.","title":"Teste de Carga"},{"location":"automated-testing/performance-testing/#teste-de-estresse","text":"Esta \u00e9 a subcategoria de teste de desempenho que se concentra em validar as caracter\u00edsticas de desempenho de um sistema quando o sistema enfrenta carga extrema. O objetivo \u00e9 avaliar como o sistema lida com a press\u00e3o at\u00e9 seus limites, ele se recupera (ou seja, escala) ou simplesmente quebra e falha?","title":"Teste de Estresse"},{"location":"automated-testing/performance-testing/#teste-de-resistencia","text":"O objetivo do teste de resist\u00eancia \u00e9 garantir que o sistema possa manter um bom desempenho sob per\u00edodos prolongados de carga.","title":"Teste de Resist\u00eancia"},{"location":"automated-testing/performance-testing/#teste-de-pico","text":"O objetivo do teste de pico \u00e9 validar que um sistema de software pode responder bem a grandes e repentinos picos.","title":"Teste de Pico"},{"location":"automated-testing/performance-testing/#teste-de-caos","text":"O teste de caos ou engenharia do caos \u00e9 a pr\u00e1tica de experimentar em um sistema para construir confian\u00e7a de que o sistema pode resistir a condi\u00e7\u00f5es turbulentas na produ\u00e7\u00e3o. Seu objetivo \u00e9 identificar fraquezas antes que elas se manifestem em todo o sistema. Desenvolvedores frequentemente implementam procedimentos de conting\u00eancia para falhas de servi\u00e7o. O teste de caos desliga arbitrariamente diferentes partes do sistema para validar que os procedimentos de conting\u00eancia funcionam corretamente.","title":"Teste de Caos"},{"location":"automated-testing/performance-testing/#metricas-de-monitoramento-de-desempenho","text":"Ao executar os v\u00e1rios tipos de abordagens de teste, seja estresse, resist\u00eancia, pico ou teste de caos, \u00e9 importante capturar v\u00e1rias m\u00e9tricas para ver como o sistema se comporta. No n\u00edvel b\u00e1sico de hardware, h\u00e1 quatro \u00e1reas a serem consideradas. Disco f\u00edsico Mem\u00f3ria Processador Rede Essas quatro \u00e1reas est\u00e3o inextricavelmente ligadas, o que significa que um desempenho ruim em uma \u00e1rea levar\u00e1 a um desempenho ruim em outra \u00e1rea. Engenheiros preocupados em entender o desempenho da aplica\u00e7\u00e3o devem se concentrar nessas quatro \u00e1reas principais. O exemplo cl\u00e1ssico de como o desempenho em uma \u00e1rea pode afetar o desempenho em outra \u00e9 a press\u00e3o da mem\u00f3ria. Se a mem\u00f3ria dispon\u00edvel de uma aplica\u00e7\u00e3o estiver baixa, o sistema operacional tentar\u00e1 compensar as defici\u00eancias de mem\u00f3ria transferindo p\u00e1ginas de dados da mem\u00f3ria para o disco, liberando assim mem\u00f3ria. Mas esse trabalho requer ajuda da CPU e do disco f\u00edsico. Isso significa que, quando voc\u00ea observa o desempenho quando h\u00e1 baixas quantidades de mem\u00f3ria, tamb\u00e9m notar\u00e1 picos na atividade do disco e da CPU.","title":"M\u00e9tricas de Monitoramento de Desempenho"},{"location":"automated-testing/performance-testing/#disco-fisico","text":"Quase todos os sistemas de software dependem do desempenho do disco f\u00edsico. Isso \u00e9 especialmente verdadeiro para o desempenho de bancos de dados. Abordagens mais modernas para o uso de SSDs para armazenamento de disco f\u00edsico podem melhorar dramaticamente o desempenho das aplica\u00e7\u00f5es. Aqui est\u00e3o algumas das m\u00e9tricas que voc\u00ea pode capturar e analisar: Contador Descri\u00e7\u00e3o M\u00e9dia do Comprimento da Fila do Disco Este valor \u00e9 derivado usando os contadores (Transfer\u00eancias de Disco/seg)*(Seg de Disco/Transfer\u00eancia). Esta m\u00e9trica descreve a fila do disco ao longo do tempo, suavizando quaisquer picos r\u00e1pidos. Ter qualquer disco f\u00edsico com um comprimento m\u00e9dio de fila acima de 2 por per\u00edodos prolongados pode ser uma indica\u00e7\u00e3o de que seu disco \u00e9 um gargalo. % de Tempo Ocioso Esta \u00e9 uma medida da porcentagem de tempo que o disco estava ocioso. Ou seja, n\u00e3o h\u00e1 solicita\u00e7\u00f5es de disco pendentes do sistema operacional esperando para serem conclu\u00eddas. Um n\u00famero baixo aqui \u00e9 um sinal positivo de que o disco tem capacidade excedente para atender ou escrever solicita\u00e7\u00f5es do sistema operacional. M\u00e9dia de Seg de Disco/Leitura e M\u00e9dia de Seg de Disco/Escrita Ambos medem a lat\u00eancia dos seus discos. A lat\u00eancia \u00e9 definida como o tempo m\u00e9dio que leva para uma transfer\u00eancia de disco ser conclu\u00edda. Voc\u00ea obviamente quer n\u00fameros t\u00e3o baixos quanto poss\u00edvel, mas precisa ter cuidado para levar em conta as diferen\u00e7as de velocidade inerentes entre SSDs e discos r\u00edgidos tradicionais. Para este contador, \u00e9 importante definir uma linha de base ap\u00f3s a instala\u00e7\u00e3o do hardware. Em seguida, use esse valor daqui para frente para determinar se voc\u00ea est\u00e1 enfrentando problemas de lat\u00eancia relacionados ao hardware. Leituras de Disco/seg e Escritas de Disco/seg Estes contadores medem o n\u00famero total de solicita\u00e7\u00f5es de E/S conclu\u00eddas por segundo. Semelhante aos contadores de lat\u00eancia, valores bons e ruins para esses contadores dependem do seu hardware de disco, mas valores mais altos do que sua linha de base inicial normalmente n\u00e3o apontam para um problema de hardware neste caso. Este contador pode ser \u00fatil para identificar picos na E/S de disco.","title":"Disco F\u00edsico"},{"location":"automated-testing/performance-testing/#processador","text":"\u00c9 importante entender a quantidade de tempo gasto no modo kernel ou privilegiado. Em geral, se o c\u00f3digo estiver gastando muito tempo executando chamadas do sistema operacional, isso poder\u00e1 ser uma \u00e1rea de preocupa\u00e7\u00e3o, pois n\u00e3o permitir\u00e1 que voc\u00ea execute suas aplica\u00e7\u00f5es em modo de usu\u00e1rio, como seus bancos de dados, servidores/servi\u00e7os web, etc. A diretriz \u00e9 que a CPU deve gastar apenas cerca de 20% do tempo total do processador executando no modo kernel. Contador Descri\u00e7\u00e3o % de Tempo do Processador Esta \u00e9 a porcentagem do tempo total decorrido que o processador estava ocupado executando. Este contador pode ser muito alto ou muito baixo. Se o tempo do seu processador estiver consistentemente abaixo de 40%, ent\u00e3o h\u00e1 uma quest\u00e3o sobre se voc\u00ea superprovisionou sua CPU. 70% \u00e9 geralmente considerado um bom n\u00famero alvo e, se voc\u00ea come\u00e7ar a ir acima de 70%, pode querer explorar por que h\u00e1 alta press\u00e3o da CPU. % de Tempo Privilegiado (Modo Kernel) Este mede a porcentagem do tempo decorrido que o processador gastou executando no modo kernel. Como este contador leva em conta apenas opera\u00e7\u00f5es de kernel, uma alta porcentagem de tempo privilegiado (maior que 25%) pode indicar um problema de driver ou hardware que deve ser investigado. % de Tempo de Usu\u00e1rio A porcentagem do tempo decorrido que o processador gastou executando no modo de usu\u00e1rio (seu c\u00f3digo de aplica\u00e7\u00e3o). Uma boa diretriz \u00e9 estar consistentemente abaixo de 65%, pois voc\u00ea quer ter alguma folga tanto para as opera\u00e7\u00f5es de kernel mencionadas acima quanto para quaisquer outros picos de CPU exigidos por outras aplica\u00e7\u00f5es. Comprimento da Fila Este \u00e9 o n\u00famero de threads que est\u00e3o prontas para executar, mas esperando que um n\u00facleo fique dispon\u00edvel. Em m\u00e1quinas de n\u00facleo \u00fanico, um valor sustentado maior que 2-3 pode significar que voc\u00ea tem alguma press\u00e3o da CPU. Da mesma forma, para uma m\u00e1quina multicore, divida o comprimento da fila pelo n\u00famero de n\u00facleos e, se isso for continuamente maior que 2-3, pode haver press\u00e3o da CPU.","title":"Processador"},{"location":"automated-testing/performance-testing/#adaptador-de-rede","text":"A velocidade da rede \u00e9 frequentemente um culpado oculto de desempenho ruim. Encontrar a causa raiz do mau desempenho da rede \u00e9 frequentemente dif\u00edcil. A fonte de problemas pode se originar de consumidores de largura de banda, como videoconfer\u00eancia, dados de transa\u00e7\u00e3o, backups de rede, v\u00eddeos recreativos. Na verdade, as tr\u00eas raz\u00f5es mais comuns para uma desacelera\u00e7\u00e3o da rede s\u00e3o: Congestionamento Corrup\u00e7\u00e3o de dados Colis\u00f5es Algumas das ferramentas que podem ajudar incluem: ifconfig netstat iperf tcpretrans tcpdump WireShark A solu\u00e7\u00e3o de problemas de desempenho da rede geralmente come\u00e7a com a verifica\u00e7\u00e3o do hardware. Coisas t\u00edpicas a serem exploradas s\u00e3o se h\u00e1 algum fio solto ou verificando que todos os roteadores est\u00e3o ligados. Nem sempre \u00e9 poss\u00edvel fazer isso, mas \u00e0s vezes um simples caso de reciclagem de energia do modem ou roteador pode resolver muitos problemas. Especialistas em rede frequentemente realizam a seguinte sequ\u00eancia de etapas para solucionar problemas: Verificar o hardware Usar IP config Usar ping e tracert Realizar verifica\u00e7\u00e3o de DNS Abordagens mais avan\u00e7adas frequentemente envolvem olhar para alguns dos contadores de desempenho de rede, conforme explicado abaixo.","title":"Adaptador de Rede"},{"location":"automated-testing/performance-testing/#contadores-de-rede","text":"A tabela acima oferece alguns pontos de refer\u00eancia para entender melhor o que voc\u00ea pode esperar da sua rede. Aqui est\u00e3o alguns contadores que podem ajud\u00e1-lo a entender onde os gargalos podem existir: Contador Descri\u00e7\u00e3o Bytes Recebidos/seg A taxa na qual bytes s\u00e3o recebidos em cada adaptador de rede. Bytes Enviados/seg A taxa na qual bytes s\u00e3o enviados em cada adaptador de rede. Bytes Total/seg O n\u00famero de bytes enviados e recebidos pela rede. Segmentos Recebidos/seg A taxa na qual segmentos s\u00e3o recebidos para o protocolo. Segmentos Enviados/seg A taxa na qual segmentos s\u00e3o enviados. % de Tempo de Interrup\u00e7\u00e3o A porcentagem de tempo que o processador gasta recebendo e atendendo interrup\u00e7\u00f5es de hardware. Este valor \u00e9 um indicador indireto da atividade de dispositivos que geram interrup\u00e7\u00f5es, como adaptadores de rede. H\u00e1 uma distin\u00e7\u00e3o importante entre lat\u00eancia e vaz\u00e3o . Lat\u00eancia mede o tempo que leva para um pacote ser transferido pela rede, seja em termos de uma transmiss\u00e3o unidirecional ou de ida e volta. Vaz\u00e3o \u00e9 diferente e tenta medir a quantidade de dados sendo enviados e recebidos dentro de uma unidade de tempo.","title":"Contadores de Rede"},{"location":"automated-testing/performance-testing/#memoria","text":"Contador Descri\u00e7\u00e3o MBs Dispon\u00edveis Este contador representa a quantidade de mem\u00f3ria que est\u00e1 dispon\u00edvel para aplica\u00e7\u00f5es em execu\u00e7\u00e3o. Mem\u00f3ria baixa pode acionar Falhas de P\u00e1gina, onde press\u00e3o adicional \u00e9 colocada na CPU para trocar mem\u00f3ria para dentro e fora do disco. Se a quantidade de mem\u00f3ria dispon\u00edvel cair abaixo de 10%, mais mem\u00f3ria deve ser obtida. P\u00e1ginas/seg Este \u00e9 na verdade a soma dos contadores \"P\u00e1ginas Entradas/seg\" e \"P\u00e1ginas Sa\u00eddas/seg\", que \u00e9 a taxa na qual as p\u00e1ginas est\u00e3o sendo lidas e escritas como resultado de falhas de p\u00e1gina. Pequenos picos com este valor n\u00e3o significam que h\u00e1 um problema, mas valores sustentados acima de 50 podem significar que a mem\u00f3ria do sistema \u00e9 um gargalo. Arquivo de Pagina\u00e7\u00e3o(_Total)\\% de Uso A porcentagem do arquivo de pagina\u00e7\u00e3o do sistema que est\u00e1 atualmente em uso. Isso n\u00e3o est\u00e1 diretamente relacionado ao desempenho, mas voc\u00ea pode enfrentar s\u00e9rios problemas de aplica\u00e7\u00e3o se o arquivo de pagina\u00e7\u00e3o ficar completamente cheio e mem\u00f3ria adicional ainda estiver sendo solicitada por aplica\u00e7\u00f5es.","title":"Mem\u00f3ria"},{"location":"automated-testing/performance-testing/#atividades-chave-de-teste-de-desempenho","text":"As atividades de teste de desempenho variam dependendo da subcategoria de teste de desempenho e dos requisitos e restri\u00e7\u00f5es do sistema. Para orienta\u00e7\u00e3o espec\u00edfica, voc\u00ea pode seguir o link para a subcategoria de testes de desempenho listada acima. As seguintes atividades podem ser inclu\u00eddas dependendo da subcategoria de teste de desempenho:","title":"Atividades-chave de Teste de Desempenho"},{"location":"automated-testing/performance-testing/#identificar-os-criterios-de-aceitacao-para-os-testes","text":"Isso geralmente incluir\u00e1 identificar os objetivos e restri\u00e7\u00f5es para as caracter\u00edsticas de desempenho do sistema.","title":"Identificar os Crit\u00e9rios de Aceita\u00e7\u00e3o para os Testes"},{"location":"automated-testing/performance-testing/#planejar-e-projetar-os-testes","text":"Em geral, precisamos considerar os seguintes pontos: Definir a carga com a qual a aplica\u00e7\u00e3o deve ser testada Estabelecer as m\u00e9tricas a serem coletadas Estabelecer quais ferramentas ser\u00e3o usadas para os testes Estabelecer a frequ\u00eancia do teste de desempenho: os testes de desempenho ser\u00e3o feitos como parte dos sprints de desenvolvimento de recursos ou apenas antes do lan\u00e7amento para um ambiente importante?","title":"Planejar e Projetar os Testes"},{"location":"automated-testing/performance-testing/#implementacao","text":"Implementar os testes de desempenho de acordo com a abordagem projetada. Instrumentar o sistema e garantir que ele esteja emitindo as m\u00e9tricas de desempenho necess\u00e1rias.","title":"Implementa\u00e7\u00e3o"},{"location":"automated-testing/performance-testing/#execucao-do-teste","text":"Executar os testes e coletar m\u00e9tricas de desempenho.","title":"Execu\u00e7\u00e3o do Teste"},{"location":"automated-testing/performance-testing/#analise-de-resultados-e-re-teste","text":"Analisar os resultados/m\u00e9tricas de desempenho dos testes. Identificar as mudan\u00e7as necess\u00e1rias para ajustar o sistema (ou seja, c\u00f3digo, infraestrutura) para melhor acomodar os objetivos do teste. Em seguida, teste novamente. Este ciclo continua at\u00e9 que o objetivo do teste seja alcan\u00e7ado. O Modelo de Teste de Desempenho Iterativo pode ser usado para capturar detalhes sobre o resultado do teste para cada itera\u00e7\u00e3o.","title":"An\u00e1lise de Resultados e Re-teste"},{"location":"automated-testing/performance-testing/#recursos","text":"Padr\u00f5es e Pr\u00e1ticas: Orienta\u00e7\u00e3o para Teste de Desempenho para Aplica\u00e7\u00f5es Web","title":"Recursos"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/","text":"Modelo de Itera\u00e7\u00e3o de Teste de Desempenho Este documento fornece um modelo para capturar os resultados de testes de desempenho. Os testes de desempenho s\u00e3o feitos em itera\u00e7\u00f5es e cada itera\u00e7\u00e3o deve ter um objetivo claro. Os resultados de qualquer itera\u00e7\u00e3o s\u00e3o imut\u00e1veis, independentemente de o objetivo ter sido alcan\u00e7ado ou n\u00e3o. Se a itera\u00e7\u00e3o falhou ou o objetivo n\u00e3o foi alcan\u00e7ado, ent\u00e3o uma nova itera\u00e7\u00e3o de teste \u00e9 realizada com as corre\u00e7\u00f5es apropriadas. \u00c9 recomend\u00e1vel manter o registro das itera\u00e7\u00f5es gravadas para manter uma linha do tempo de como o sistema evoluiu e quais mudan\u00e7as afetaram o desempenho de que maneira. Sinta-se \u00e0 vontade para modificar este modelo conforme necess\u00e1rio. Modelo de Itera\u00e7\u00e3o Objetivo Mencione em t\u00f3picos o objetivo para esta itera\u00e7\u00e3o de teste. O objetivo deve ser pequeno e mensur\u00e1vel dentro desta itera\u00e7\u00e3o. Detalhes do Teste Data : Data e hora em que esta itera\u00e7\u00e3o come\u00e7ou e terminou Dura\u00e7\u00e3o : Tempo que levou para concluir esta itera\u00e7\u00e3o. C\u00f3digo da Aplica\u00e7\u00e3o : ID do commit e link para o commit dos c\u00f3digos que est\u00e3o sendo testados nesta itera\u00e7\u00e3o Configura\u00e7\u00e3o de Refer\u00eancia: Configura\u00e7\u00e3o da Aplica\u00e7\u00e3o : Em t\u00f3picos, mencione a configura\u00e7\u00e3o da aplica\u00e7\u00e3o que deve ser registrada Configura\u00e7\u00e3o do Sistema : Em t\u00f3picos, mencione a configura\u00e7\u00e3o da infraestrutura Registre diferentes tipos de configura\u00e7\u00f5es. Geralmente, as mudan\u00e7as de configura\u00e7\u00e3o espec\u00edficas da aplica\u00e7\u00e3o entre itera\u00e7\u00f5es, enquanto as configura\u00e7\u00f5es do sistema ou infraestrutura raramente mudam. Itens de Trabalho Lista de links para itens de trabalho relevantes (tarefa, hist\u00f3ria, bug) sendo testados nesta itera\u00e7\u00e3o. Resultados Em t\u00f3picos, documente os resultados do teste. - Anexe quaisquer documentos que apoiem os resultados do teste. - Adicione links para o painel de m\u00e9tricas e logs, como Application Insights. - Capture capturas de tela para m\u00e9tricas e inclua-as nos resultados. Um bom candidato para isso \u00e9 o uso de CPU/Mem\u00f3ria/Disco. Observa\u00e7\u00f5es As observa\u00e7\u00f5es s\u00e3o percep\u00e7\u00f5es derivadas dos resultados dos testes. Mantenha as observa\u00e7\u00f5es breves e em forma de t\u00f3picos. Mencione resultados que apoiem o objetivo da itera\u00e7\u00e3o. Se alguma das observa\u00e7\u00f5es resultar em um item de trabalho (tarefa, hist\u00f3ria, bug), adicione o link para o item de trabalho junto com a observa\u00e7\u00e3o.","title":"Modelo de Itera\u00e7\u00e3o de Teste de Desempenho"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#modelo-de-iteracao-de-teste-de-desempenho","text":"Este documento fornece um modelo para capturar os resultados de testes de desempenho. Os testes de desempenho s\u00e3o feitos em itera\u00e7\u00f5es e cada itera\u00e7\u00e3o deve ter um objetivo claro. Os resultados de qualquer itera\u00e7\u00e3o s\u00e3o imut\u00e1veis, independentemente de o objetivo ter sido alcan\u00e7ado ou n\u00e3o. Se a itera\u00e7\u00e3o falhou ou o objetivo n\u00e3o foi alcan\u00e7ado, ent\u00e3o uma nova itera\u00e7\u00e3o de teste \u00e9 realizada com as corre\u00e7\u00f5es apropriadas. \u00c9 recomend\u00e1vel manter o registro das itera\u00e7\u00f5es gravadas para manter uma linha do tempo de como o sistema evoluiu e quais mudan\u00e7as afetaram o desempenho de que maneira. Sinta-se \u00e0 vontade para modificar este modelo conforme necess\u00e1rio.","title":"Modelo de Itera\u00e7\u00e3o de Teste de Desempenho"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#modelo-de-iteracao","text":"","title":"Modelo de Itera\u00e7\u00e3o"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#objetivo","text":"Mencione em t\u00f3picos o objetivo para esta itera\u00e7\u00e3o de teste. O objetivo deve ser pequeno e mensur\u00e1vel dentro desta itera\u00e7\u00e3o.","title":"Objetivo"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#detalhes-do-teste","text":"Data : Data e hora em que esta itera\u00e7\u00e3o come\u00e7ou e terminou Dura\u00e7\u00e3o : Tempo que levou para concluir esta itera\u00e7\u00e3o. C\u00f3digo da Aplica\u00e7\u00e3o : ID do commit e link para o commit dos c\u00f3digos que est\u00e3o sendo testados nesta itera\u00e7\u00e3o Configura\u00e7\u00e3o de Refer\u00eancia: Configura\u00e7\u00e3o da Aplica\u00e7\u00e3o : Em t\u00f3picos, mencione a configura\u00e7\u00e3o da aplica\u00e7\u00e3o que deve ser registrada Configura\u00e7\u00e3o do Sistema : Em t\u00f3picos, mencione a configura\u00e7\u00e3o da infraestrutura Registre diferentes tipos de configura\u00e7\u00f5es. Geralmente, as mudan\u00e7as de configura\u00e7\u00e3o espec\u00edficas da aplica\u00e7\u00e3o entre itera\u00e7\u00f5es, enquanto as configura\u00e7\u00f5es do sistema ou infraestrutura raramente mudam.","title":"Detalhes do Teste"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#itens-de-trabalho","text":"Lista de links para itens de trabalho relevantes (tarefa, hist\u00f3ria, bug) sendo testados nesta itera\u00e7\u00e3o.","title":"Itens de Trabalho"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#resultados","text":"Em t\u00f3picos, documente os resultados do teste. - Anexe quaisquer documentos que apoiem os resultados do teste. - Adicione links para o painel de m\u00e9tricas e logs, como Application Insights. - Capture capturas de tela para m\u00e9tricas e inclua-as nos resultados. Um bom candidato para isso \u00e9 o uso de CPU/Mem\u00f3ria/Disco.","title":"Resultados"},{"location":"automated-testing/performance-testing/iterative-perf-test-template/#observacoes","text":"As observa\u00e7\u00f5es s\u00e3o percep\u00e7\u00f5es derivadas dos resultados dos testes. Mantenha as observa\u00e7\u00f5es breves e em forma de t\u00f3picos. Mencione resultados que apoiem o objetivo da itera\u00e7\u00e3o. Se alguma das observa\u00e7\u00f5es resultar em um item de trabalho (tarefa, hist\u00f3ria, bug), adicione o link para o item de trabalho junto com a observa\u00e7\u00e3o.","title":"Observa\u00e7\u00f5es"},{"location":"automated-testing/performance-testing/load-testing/","text":"Teste de Carga \" O teste de carga \u00e9 realizado para determinar o comportamento de um sistema sob condi\u00e7\u00f5es normais e de pico de carga antecipadas. \" - Teste de carga - Wikipedia Um teste de carga \u00e9 projetado para determinar como um sistema se comporta sob cargas de trabalho normais e de pico esperadas. Especificamente, seu principal objetivo \u00e9 confirmar se um sistema pode lidar com o n\u00edvel de carga esperado. Dependendo do sistema-alvo, isso pode ser usu\u00e1rios simult\u00e2neos, solicita\u00e7\u00f5es por segundo ou tamanho de dados. Por que Teste de Carga O principal objetivo \u00e9 provar que o sistema pode se comportar normalmente sob a carga normal esperada antes de liber\u00e1-lo para produ\u00e7\u00e3o. Os crit\u00e9rios que definem \"comportar-se normalmente\" depender\u00e3o do seu alvo; isso pode ser t\u00e3o simples quanto \"o sistema permanece dispon\u00edvel\", mas tamb\u00e9m pode incluir o cumprimento de um SLA de tempo de resposta ou taxa de erro. Al\u00e9m disso, os resultados de um teste de carga tamb\u00e9m podem ser usados como dados para ajudar no planejamento de capacidade e no c\u00e1lculo da escalabilidade. Blocos de Design do Teste de Carga Existem v\u00e1rios componentes b\u00e1sicos necess\u00e1rios para realizar um teste de carga. Para ter resultados significativos, o sistema precisa ser testado em um ambiente semelhante \u00e0 produ\u00e7\u00e3o, com uma rede e hardware que se assemelhem ao ambiente de implanta\u00e7\u00e3o esperado. O teste de carga consistir\u00e1 em um m\u00f3dulo que simula a atividade do usu\u00e1rio. Claro, a composi\u00e7\u00e3o dessa \"atividade do usu\u00e1rio\" variar\u00e1 com base no tipo de aplica\u00e7\u00e3o que est\u00e1 sendo testada. Por exemplo, um site de com\u00e9rcio eletr\u00f4nico pode simular a navega\u00e7\u00e3o e compra de itens do usu\u00e1rio, mas um pipeline de ingest\u00e3o de dados de IoT simularia um fluxo de leituras de dispositivos. Certifique-se de que a simula\u00e7\u00e3o seja o mais pr\u00f3xima poss\u00edvel da atividade real e considere n\u00e3o apenas o volume, mas tamb\u00e9m os padr\u00f5es e a variabilidade. Por exemplo, se os dados do simulador forem muito uniformes ou previs\u00edveis, as propor\u00e7\u00f5es de acerto/erro do cache podem afetar seus resultados. O teste de carga ser\u00e1 iniciado a partir de um componente externo ao sistema-alvo, que pode controlar a quantidade de carga aplicada. Isso pode ser um \u00fanico agente, mas pode precisar ser dimensionado para v\u00e1rios agentes para alcan\u00e7ar n\u00edveis mais altos de atividade. Embora n\u00e3o seja necess\u00e1rio para executar um teste de carga, \u00e9 aconselh\u00e1vel ter monitoramento e/ou registro em vigor para poder medir o impacto do teste e descobrir gargalos potenciais. Aplicando o Teste de Carga Planejamento Identificar cen\u00e1rios-chave para medir - Re\u00fana esses cen\u00e1rios do Product Owner; eles devem fornecer uma amostra representativa do tr\u00e1fego do mundo real. Determinar carga normal e de pico esperadas para os cen\u00e1rios - Determine um n\u00edvel de carga, como usu\u00e1rios simult\u00e2neos ou solicita\u00e7\u00f5es por segundo, para encontrar o tamanho do teste de carga que voc\u00ea executar\u00e1. Identificar m\u00e9tricas de crit\u00e9rios de sucesso - Essas podem estar no lado do teste, como tempo de resposta e taxa de erro, ou podem estar no lado do sistema, como uso de CPU e mem\u00f3ria. Selecionar a ferramenta certa - Existem muitos frameworks para teste de carga, ent\u00e3o considere se os recursos e limita\u00e7\u00f5es s\u00e3o adequados para suas necessidades. (Algumas ferramentas populares est\u00e3o listadas abaixo). Observabilidade - Determine quais m\u00e9tricas precisam ser coletadas para obter informa\u00e7\u00f5es sobre taxa de transfer\u00eancia, lat\u00eancia, utiliza\u00e7\u00e3o de recursos, etc. Escalabilidade - Determine a quantidade de escala necess\u00e1ria pelo gerador de carga, aplica\u00e7\u00e3o de carga de trabalho, CPU, Mem\u00f3ria e componentes de rede necess\u00e1rios para alcan\u00e7ar os objetivos de teste. O uso de Kubernetes na nuvem pode ser usado para tornar o teste infinitamente escal\u00e1vel. Execu\u00e7\u00e3o \u00c9 recomendado o uso de um framework de teste existente (veja abaixo). Essas ferramentas fornecer\u00e3o um m\u00e9todo para especificar os cen\u00e1rios de atividade do usu\u00e1rio e como execut\u00e1-los sob carga. \u00c9 comum aumentar lentamente a carga desejada para replicar melhor o comportamento do mundo real. Depois de atingir sua carga de trabalho definida, mantenha esse n\u00edvel o tempo suficiente para ver se seu sistema se estabiliza. Para finalizar o teste, voc\u00ea tamb\u00e9m deve aumentar a carga para ver como o sistema desacelera. Voc\u00ea tamb\u00e9m deve considerar a origem do tr\u00e1fego do seu teste de carga. Dependendo do escopo do sistema-alvo, voc\u00ea pode querer iniciar de um local diferente para replicar melhor o tr\u00e1fego do mundo real, como de uma regi\u00e3o diferente. Nota: Antes de come\u00e7ar, esteja ciente de quaisquer restri\u00e7\u00f5es em sua rede, como prote\u00e7\u00e3o DDOS, onde voc\u00ea pode precisar notificar um administrador de rede ou solicitar uma isen\u00e7\u00e3o. Testes Adicionais Ap\u00f3s concluir seu teste de carga, voc\u00ea deve estar preparado para continuar com testes adicionais relacionados, como: Teste de Soak - Tamb\u00e9m conhecido como Teste de Resist\u00eancia . Realizar um teste de carga por um per\u00edodo prolongado para garantir a estabilidade a longo prazo. Teste de Estresse - Aumentar gradualmente a carga para encontrar os limites do sistema e identificar a capacidade m\u00e1xima. Teste de Pico - Introduzir um aumento acentuado de curto prazo nos cen\u00e1rios de carga. Teste de Escalabilidade - Re-teste de um sistema \u00e0 medida que voc\u00ea expande horizontal ou verticalmente para medir como ele escala. Teste Distribu\u00eddo - O teste distribu\u00eddo permite que voc\u00ea aproveite o poder de v\u00e1rias m\u00e1quinas para realizar testes maiores ou mais aprofundados mais rapidamente. \u00c9 necess\u00e1rio quando um n\u00f3 totalmente otimizado n\u00e3o pode produzir a carga exigida pelo seu teste extremamente grande. Frameworks e Ferramentas de Gera\u00e7\u00e3o de Carga de Teste Aqui est\u00e3o alguns frameworks de teste de carga populares que voc\u00ea pode considerar, e as linguagens usadas para definir seus cen\u00e1rios. Azure Load Testing ( https://learn.microsoft.com/en-us/azure/load-testing/ ) - Plataforma gerenciada para executar testes de carga no Azure. Permite executar e monitorar testes automaticamente, obter segredos do KeyVault, gerar tr\u00e1fego em escala e testar endpoints privados do Azure. No caso simples, executa testes de carga com tr\u00e1fego HTTP GET para um determinado endpoint. Para os casos mais complexos, voc\u00ea pode fazer upload de seus pr\u00f3prios cen\u00e1rios JMeter . - JMeter ( https://github.com/apache/jmeter ) - Possui padr\u00f5es integrados para testar sem codifica\u00e7\u00e3o, mas pode ser estendido com Java. - Artillery ( https://artillery.io/ ) - Escreva seus cen\u00e1rios em Javascript, executa uma aplica\u00e7\u00e3o node. - Gatling ( https://gatling.io/ ) - Escreva seus cen\u00e1rios em Scala com seu DSL. - Locust ( https://locust.io/ ) - Escreva seus cen\u00e1rios em Python usando o conceito de atividade de usu\u00e1rio simult\u00e2neo. - K6 ( https://k6.io/ ) - Escreva seus cen\u00e1rios de teste em Javascript, dispon\u00edvel como operador Kubernetes de c\u00f3digo aberto, imagem Docker de c\u00f3digo aberto ou como SaaS. Particularmente \u00fatil para teste de carga distribu\u00eddo. Integra-se facilmente com o Prometheus. - NBomber ( https://nbomber.com/ ) - Escreva seus cen\u00e1rios de teste em C# ou F#, integra\u00e7\u00e3o dispon\u00edvel com test runners (NUnit/xUnit). - WebValidate ( https://github.com/microsoft/webvalidate ) - Ferramenta de valida\u00e7\u00e3o de solicita\u00e7\u00e3o web usada para executar testes de ponta a ponta e testes de desempenho e disponibilidade de longa dura\u00e7\u00e3o. Aplica\u00e7\u00f5es de Carga de Trabalho de Amostra No caso em que uma aplica\u00e7\u00e3o de carga de trabalho espec\u00edfica n\u00e3o est\u00e1 sendo fornecida e o foco est\u00e1, em vez disso, no sistema, aqui est\u00e3o algumas aplica\u00e7\u00f5es de carga de trabalho de amostra populares que voc\u00ea pode considerar. HttpBin ( Python , GoLang ) - Suporta v\u00e1rios tipos de endpoints e implementa\u00e7\u00f5es de linguagem. Pode ecoar dados usados na solicita\u00e7\u00e3o. NGSA ( Java , C# ) - Destinado ao teste de plataforma e monitoramento do Kubernetes. Constru\u00eddo em cima da loja de dados IMDB com muitos endpoints CRUD dispon\u00edveis. N\u00e3o precisa ter uma conex\u00e3o de banco de dados ao vivo. MockBin ( https://github.com/Kong/mockbin ) - Permite que voc\u00ea gere endpoints personalizados para testar, simular e rastrear solicita\u00e7\u00f5es e respostas HTTP entre bibliotecas, sockets e APIs. Conclus\u00e3o Um teste de carga \u00e9 uma etapa cr\u00edtica para entender se um sistema-alvo ser\u00e1 confi\u00e1vel sob o tr\u00e1fego real esperado. Claro, ele s\u00f3 \u00e9 t\u00e3o bom quanto sua capacidade de prever a carga esperada, ent\u00e3o \u00e9 importante seguir com outros testes adicionais para realmente entender como seu sistema se comporta em diferentes situa\u00e7\u00f5es. Recursos Lista de leituras adicionais sobre este tipo de teste para aqueles que gostariam de se aprofundar. Microsoft Azure Well-Architected Framework > Teste de Carga","title":"Teste de Carga"},{"location":"automated-testing/performance-testing/load-testing/#teste-de-carga","text":"\" O teste de carga \u00e9 realizado para determinar o comportamento de um sistema sob condi\u00e7\u00f5es normais e de pico de carga antecipadas. \" - Teste de carga - Wikipedia Um teste de carga \u00e9 projetado para determinar como um sistema se comporta sob cargas de trabalho normais e de pico esperadas. Especificamente, seu principal objetivo \u00e9 confirmar se um sistema pode lidar com o n\u00edvel de carga esperado. Dependendo do sistema-alvo, isso pode ser usu\u00e1rios simult\u00e2neos, solicita\u00e7\u00f5es por segundo ou tamanho de dados.","title":"Teste de Carga"},{"location":"automated-testing/performance-testing/load-testing/#por-que-teste-de-carga","text":"O principal objetivo \u00e9 provar que o sistema pode se comportar normalmente sob a carga normal esperada antes de liber\u00e1-lo para produ\u00e7\u00e3o. Os crit\u00e9rios que definem \"comportar-se normalmente\" depender\u00e3o do seu alvo; isso pode ser t\u00e3o simples quanto \"o sistema permanece dispon\u00edvel\", mas tamb\u00e9m pode incluir o cumprimento de um SLA de tempo de resposta ou taxa de erro. Al\u00e9m disso, os resultados de um teste de carga tamb\u00e9m podem ser usados como dados para ajudar no planejamento de capacidade e no c\u00e1lculo da escalabilidade.","title":"Por que Teste de Carga"},{"location":"automated-testing/performance-testing/load-testing/#blocos-de-design-do-teste-de-carga","text":"Existem v\u00e1rios componentes b\u00e1sicos necess\u00e1rios para realizar um teste de carga. Para ter resultados significativos, o sistema precisa ser testado em um ambiente semelhante \u00e0 produ\u00e7\u00e3o, com uma rede e hardware que se assemelhem ao ambiente de implanta\u00e7\u00e3o esperado. O teste de carga consistir\u00e1 em um m\u00f3dulo que simula a atividade do usu\u00e1rio. Claro, a composi\u00e7\u00e3o dessa \"atividade do usu\u00e1rio\" variar\u00e1 com base no tipo de aplica\u00e7\u00e3o que est\u00e1 sendo testada. Por exemplo, um site de com\u00e9rcio eletr\u00f4nico pode simular a navega\u00e7\u00e3o e compra de itens do usu\u00e1rio, mas um pipeline de ingest\u00e3o de dados de IoT simularia um fluxo de leituras de dispositivos. Certifique-se de que a simula\u00e7\u00e3o seja o mais pr\u00f3xima poss\u00edvel da atividade real e considere n\u00e3o apenas o volume, mas tamb\u00e9m os padr\u00f5es e a variabilidade. Por exemplo, se os dados do simulador forem muito uniformes ou previs\u00edveis, as propor\u00e7\u00f5es de acerto/erro do cache podem afetar seus resultados. O teste de carga ser\u00e1 iniciado a partir de um componente externo ao sistema-alvo, que pode controlar a quantidade de carga aplicada. Isso pode ser um \u00fanico agente, mas pode precisar ser dimensionado para v\u00e1rios agentes para alcan\u00e7ar n\u00edveis mais altos de atividade. Embora n\u00e3o seja necess\u00e1rio para executar um teste de carga, \u00e9 aconselh\u00e1vel ter monitoramento e/ou registro em vigor para poder medir o impacto do teste e descobrir gargalos potenciais.","title":"Blocos de Design do Teste de Carga"},{"location":"automated-testing/performance-testing/load-testing/#aplicando-o-teste-de-carga","text":"","title":"Aplicando o Teste de Carga"},{"location":"automated-testing/performance-testing/load-testing/#planejamento","text":"Identificar cen\u00e1rios-chave para medir - Re\u00fana esses cen\u00e1rios do Product Owner; eles devem fornecer uma amostra representativa do tr\u00e1fego do mundo real. Determinar carga normal e de pico esperadas para os cen\u00e1rios - Determine um n\u00edvel de carga, como usu\u00e1rios simult\u00e2neos ou solicita\u00e7\u00f5es por segundo, para encontrar o tamanho do teste de carga que voc\u00ea executar\u00e1. Identificar m\u00e9tricas de crit\u00e9rios de sucesso - Essas podem estar no lado do teste, como tempo de resposta e taxa de erro, ou podem estar no lado do sistema, como uso de CPU e mem\u00f3ria. Selecionar a ferramenta certa - Existem muitos frameworks para teste de carga, ent\u00e3o considere se os recursos e limita\u00e7\u00f5es s\u00e3o adequados para suas necessidades. (Algumas ferramentas populares est\u00e3o listadas abaixo). Observabilidade - Determine quais m\u00e9tricas precisam ser coletadas para obter informa\u00e7\u00f5es sobre taxa de transfer\u00eancia, lat\u00eancia, utiliza\u00e7\u00e3o de recursos, etc. Escalabilidade - Determine a quantidade de escala necess\u00e1ria pelo gerador de carga, aplica\u00e7\u00e3o de carga de trabalho, CPU, Mem\u00f3ria e componentes de rede necess\u00e1rios para alcan\u00e7ar os objetivos de teste. O uso de Kubernetes na nuvem pode ser usado para tornar o teste infinitamente escal\u00e1vel.","title":"Planejamento"},{"location":"automated-testing/performance-testing/load-testing/#execucao","text":"\u00c9 recomendado o uso de um framework de teste existente (veja abaixo). Essas ferramentas fornecer\u00e3o um m\u00e9todo para especificar os cen\u00e1rios de atividade do usu\u00e1rio e como execut\u00e1-los sob carga. \u00c9 comum aumentar lentamente a carga desejada para replicar melhor o comportamento do mundo real. Depois de atingir sua carga de trabalho definida, mantenha esse n\u00edvel o tempo suficiente para ver se seu sistema se estabiliza. Para finalizar o teste, voc\u00ea tamb\u00e9m deve aumentar a carga para ver como o sistema desacelera. Voc\u00ea tamb\u00e9m deve considerar a origem do tr\u00e1fego do seu teste de carga. Dependendo do escopo do sistema-alvo, voc\u00ea pode querer iniciar de um local diferente para replicar melhor o tr\u00e1fego do mundo real, como de uma regi\u00e3o diferente. Nota: Antes de come\u00e7ar, esteja ciente de quaisquer restri\u00e7\u00f5es em sua rede, como prote\u00e7\u00e3o DDOS, onde voc\u00ea pode precisar notificar um administrador de rede ou solicitar uma isen\u00e7\u00e3o.","title":"Execu\u00e7\u00e3o"},{"location":"automated-testing/performance-testing/load-testing/#testes-adicionais","text":"Ap\u00f3s concluir seu teste de carga, voc\u00ea deve estar preparado para continuar com testes adicionais relacionados, como: Teste de Soak - Tamb\u00e9m conhecido como Teste de Resist\u00eancia . Realizar um teste de carga por um per\u00edodo prolongado para garantir a estabilidade a longo prazo. Teste de Estresse - Aumentar gradualmente a carga para encontrar os limites do sistema e identificar a capacidade m\u00e1xima. Teste de Pico - Introduzir um aumento acentuado de curto prazo nos cen\u00e1rios de carga. Teste de Escalabilidade - Re-teste de um sistema \u00e0 medida que voc\u00ea expande horizontal ou verticalmente para medir como ele escala. Teste Distribu\u00eddo - O teste distribu\u00eddo permite que voc\u00ea aproveite o poder de v\u00e1rias m\u00e1quinas para realizar testes maiores ou mais aprofundados mais rapidamente. \u00c9 necess\u00e1rio quando um n\u00f3 totalmente otimizado n\u00e3o pode produzir a carga exigida pelo seu teste extremamente grande.","title":"Testes Adicionais"},{"location":"automated-testing/performance-testing/load-testing/#frameworks-e-ferramentas-de-geracao-de-carga-de-teste","text":"Aqui est\u00e3o alguns frameworks de teste de carga populares que voc\u00ea pode considerar, e as linguagens usadas para definir seus cen\u00e1rios. Azure Load Testing ( https://learn.microsoft.com/en-us/azure/load-testing/ ) - Plataforma gerenciada para executar testes de carga no Azure. Permite executar e monitorar testes automaticamente, obter segredos do KeyVault, gerar tr\u00e1fego em escala e testar endpoints privados do Azure. No caso simples, executa testes de carga com tr\u00e1fego HTTP GET para um determinado endpoint. Para os casos mais complexos, voc\u00ea pode fazer upload de seus pr\u00f3prios cen\u00e1rios JMeter . - JMeter ( https://github.com/apache/jmeter ) - Possui padr\u00f5es integrados para testar sem codifica\u00e7\u00e3o, mas pode ser estendido com Java. - Artillery ( https://artillery.io/ ) - Escreva seus cen\u00e1rios em Javascript, executa uma aplica\u00e7\u00e3o node. - Gatling ( https://gatling.io/ ) - Escreva seus cen\u00e1rios em Scala com seu DSL. - Locust ( https://locust.io/ ) - Escreva seus cen\u00e1rios em Python usando o conceito de atividade de usu\u00e1rio simult\u00e2neo. - K6 ( https://k6.io/ ) - Escreva seus cen\u00e1rios de teste em Javascript, dispon\u00edvel como operador Kubernetes de c\u00f3digo aberto, imagem Docker de c\u00f3digo aberto ou como SaaS. Particularmente \u00fatil para teste de carga distribu\u00eddo. Integra-se facilmente com o Prometheus. - NBomber ( https://nbomber.com/ ) - Escreva seus cen\u00e1rios de teste em C# ou F#, integra\u00e7\u00e3o dispon\u00edvel com test runners (NUnit/xUnit). - WebValidate ( https://github.com/microsoft/webvalidate ) - Ferramenta de valida\u00e7\u00e3o de solicita\u00e7\u00e3o web usada para executar testes de ponta a ponta e testes de desempenho e disponibilidade de longa dura\u00e7\u00e3o.","title":"Frameworks e Ferramentas de Gera\u00e7\u00e3o de Carga de Teste"},{"location":"automated-testing/performance-testing/load-testing/#aplicacoes-de-carga-de-trabalho-de-amostra","text":"No caso em que uma aplica\u00e7\u00e3o de carga de trabalho espec\u00edfica n\u00e3o est\u00e1 sendo fornecida e o foco est\u00e1, em vez disso, no sistema, aqui est\u00e3o algumas aplica\u00e7\u00f5es de carga de trabalho de amostra populares que voc\u00ea pode considerar. HttpBin ( Python , GoLang ) - Suporta v\u00e1rios tipos de endpoints e implementa\u00e7\u00f5es de linguagem. Pode ecoar dados usados na solicita\u00e7\u00e3o. NGSA ( Java , C# ) - Destinado ao teste de plataforma e monitoramento do Kubernetes. Constru\u00eddo em cima da loja de dados IMDB com muitos endpoints CRUD dispon\u00edveis. N\u00e3o precisa ter uma conex\u00e3o de banco de dados ao vivo. MockBin ( https://github.com/Kong/mockbin ) - Permite que voc\u00ea gere endpoints personalizados para testar, simular e rastrear solicita\u00e7\u00f5es e respostas HTTP entre bibliotecas, sockets e APIs.","title":"Aplica\u00e7\u00f5es de Carga de Trabalho de Amostra"},{"location":"automated-testing/performance-testing/load-testing/#conclusao","text":"Um teste de carga \u00e9 uma etapa cr\u00edtica para entender se um sistema-alvo ser\u00e1 confi\u00e1vel sob o tr\u00e1fego real esperado. Claro, ele s\u00f3 \u00e9 t\u00e3o bom quanto sua capacidade de prever a carga esperada, ent\u00e3o \u00e9 importante seguir com outros testes adicionais para realmente entender como seu sistema se comporta em diferentes situa\u00e7\u00f5es.","title":"Conclus\u00e3o"},{"location":"automated-testing/performance-testing/load-testing/#recursos","text":"Lista de leituras adicionais sobre este tipo de teste para aqueles que gostariam de se aprofundar. Microsoft Azure Well-Architected Framework > Teste de Carga","title":"Recursos"},{"location":"automated-testing/shadow-testing/","text":"Teste de Sombra (Shadow Testing) O Teste de Sombra \u00e9 uma abordagem para reduzir riscos antes de ir para a produ\u00e7\u00e3o. Tamb\u00e9m conhecido como \"Implanta\u00e7\u00e3o Sombra\" ou \"Sombreamento de Tr\u00e1fego\", tem semelhan\u00e7as com o \"Lan\u00e7amento Escuro\" (Dark Launching). Quando Usar O Teste de Sombra reduz riscos quando voc\u00ea considera substituir o ambiente atual (V-Atual) por um ambiente candidato com um novo recurso (V-Pr\u00f3ximo). Essa abordagem envolve monitorar e capturar diferen\u00e7as entre os dois ambientes e, em seguida, compar\u00e1-los para reduzir todos os riscos antes de introduzir um novo recurso/lan\u00e7amento. Aplic\u00e1vel a Implanta\u00e7\u00f5es de Produ\u00e7\u00e3o : O V-Pr\u00f3ximo no Teste de Sombra sempre funciona separadamente e n\u00e3o afeta a produ\u00e7\u00e3o. Os usu\u00e1rios n\u00e3o s\u00e3o afetados por esse teste. Infraestrutura : O Teste de Sombra replica o mesmo tr\u00e1fego, ent\u00e3o no ambiente de teste voc\u00ea pode ter o mesmo tr\u00e1fego que na produ\u00e7\u00e3o. Isso ajuda a produzir cen\u00e1rios de teste da vida real. Manuseio de Escala : Todo o tr\u00e1fego \u00e9 replicado, e voc\u00ea tem a chance de ver como seu sistema est\u00e1 escalando. Frameworks e Ferramentas de Teste de Sombra Existem algumas ferramentas para implementar o teste de sombra. O principal objetivo dessas ferramentas \u00e9 comparar as respostas do V-Atual e do V-Pr\u00f3ximo e encontrar as diferen\u00e7as. Diffy Envoy McRouter Scientist Um dos mais populares \u00e9 o Diffy . Ele foi criado e usado no Twitter. Hoje, o autor original e um ex-funcion\u00e1rio do Twitter mant\u00eam sua pr\u00f3pria vers\u00e3o deste projeto, chamada Opendiffy . Conclus\u00e3o O Teste de Sombra \u00e9 uma abordagem \u00fatil para reduzir riscos quando voc\u00ea considera substituir o ambiente atual com um ambiente candidato usando novos recursos. Algumas vantagens do teste de sombra incluem: Impacto zero no ambiente de produ\u00e7\u00e3o. N\u00e3o \u00e9 necess\u00e1rio gerar cen\u00e1rios de teste e dados de teste. Podemos testar cen\u00e1rios da vida real com dados da vida real. Podemos simular a escala com tr\u00e1fego de produ\u00e7\u00e3o replicado. Refer\u00eancias Martin Fowler - Dark Launching Martin Fowler - Feature Toggle Traffic Shadowing/Mirroring","title":"Teste de Sombra (Shadow Testing)"},{"location":"automated-testing/shadow-testing/#teste-de-sombra-shadow-testing","text":"O Teste de Sombra \u00e9 uma abordagem para reduzir riscos antes de ir para a produ\u00e7\u00e3o. Tamb\u00e9m conhecido como \"Implanta\u00e7\u00e3o Sombra\" ou \"Sombreamento de Tr\u00e1fego\", tem semelhan\u00e7as com o \"Lan\u00e7amento Escuro\" (Dark Launching).","title":"Teste de Sombra (Shadow Testing)"},{"location":"automated-testing/shadow-testing/#quando-usar","text":"O Teste de Sombra reduz riscos quando voc\u00ea considera substituir o ambiente atual (V-Atual) por um ambiente candidato com um novo recurso (V-Pr\u00f3ximo). Essa abordagem envolve monitorar e capturar diferen\u00e7as entre os dois ambientes e, em seguida, compar\u00e1-los para reduzir todos os riscos antes de introduzir um novo recurso/lan\u00e7amento.","title":"Quando Usar"},{"location":"automated-testing/shadow-testing/#aplicavel-a","text":"Implanta\u00e7\u00f5es de Produ\u00e7\u00e3o : O V-Pr\u00f3ximo no Teste de Sombra sempre funciona separadamente e n\u00e3o afeta a produ\u00e7\u00e3o. Os usu\u00e1rios n\u00e3o s\u00e3o afetados por esse teste. Infraestrutura : O Teste de Sombra replica o mesmo tr\u00e1fego, ent\u00e3o no ambiente de teste voc\u00ea pode ter o mesmo tr\u00e1fego que na produ\u00e7\u00e3o. Isso ajuda a produzir cen\u00e1rios de teste da vida real. Manuseio de Escala : Todo o tr\u00e1fego \u00e9 replicado, e voc\u00ea tem a chance de ver como seu sistema est\u00e1 escalando.","title":"Aplic\u00e1vel a"},{"location":"automated-testing/shadow-testing/#frameworks-e-ferramentas-de-teste-de-sombra","text":"Existem algumas ferramentas para implementar o teste de sombra. O principal objetivo dessas ferramentas \u00e9 comparar as respostas do V-Atual e do V-Pr\u00f3ximo e encontrar as diferen\u00e7as. Diffy Envoy McRouter Scientist Um dos mais populares \u00e9 o Diffy . Ele foi criado e usado no Twitter. Hoje, o autor original e um ex-funcion\u00e1rio do Twitter mant\u00eam sua pr\u00f3pria vers\u00e3o deste projeto, chamada Opendiffy .","title":"Frameworks e Ferramentas de Teste de Sombra"},{"location":"automated-testing/shadow-testing/#conclusao","text":"O Teste de Sombra \u00e9 uma abordagem \u00fatil para reduzir riscos quando voc\u00ea considera substituir o ambiente atual com um ambiente candidato usando novos recursos. Algumas vantagens do teste de sombra incluem: Impacto zero no ambiente de produ\u00e7\u00e3o. N\u00e3o \u00e9 necess\u00e1rio gerar cen\u00e1rios de teste e dados de teste. Podemos testar cen\u00e1rios da vida real com dados da vida real. Podemos simular a escala com tr\u00e1fego de produ\u00e7\u00e3o replicado.","title":"Conclus\u00e3o"},{"location":"automated-testing/shadow-testing/#referencias","text":"Martin Fowler - Dark Launching Martin Fowler - Feature Toggle Traffic Shadowing/Mirroring","title":"Refer\u00eancias"},{"location":"automated-testing/smoke-testing/","text":"Teste de Fuma\u00e7a (Smoke Testing) Testes de fuma\u00e7a, \u00e0s vezes chamados de testes de Sanidade , Aceita\u00e7\u00e3o ou Verifica\u00e7\u00e3o de Build/Lan\u00e7amento , s\u00e3o um subtipo de testes de sistema/funcionais geralmente usados como port\u00f5es que verificam a prontid\u00e3o da aplica\u00e7\u00e3o como um passo preliminar. Se uma aplica\u00e7\u00e3o passa nos testes de fuma\u00e7a, ela \u00e9 aceit\u00e1vel ou est\u00e1 em um estado est\u00e1vel o suficiente para as pr\u00f3ximas etapas de teste ou implanta\u00e7\u00e3o. Quando Usar Problema Abordado Os testes de fuma\u00e7a t\u00eam como objetivo descobrir, o mais cedo poss\u00edvel, se uma aplica\u00e7\u00e3o est\u00e1 funcionando ou n\u00e3o. O objetivo dos testes de fuma\u00e7a \u00e9 economizar tempo; se a vers\u00e3o atual da aplica\u00e7\u00e3o n\u00e3o passar nos testes de fuma\u00e7a, ent\u00e3o o resto da cadeia de integra\u00e7\u00e3o ou implanta\u00e7\u00e3o para ela pode ser abandonado. Os testes de fuma\u00e7a n\u00e3o visam fornecer cobertura total de funcionalidade, mas sim focar em algumas invoca\u00e7\u00f5es de aceita\u00e7\u00e3o r\u00e1pidas para as quais a aplica\u00e7\u00e3o deve, em todos os momentos, responder corretamente. Ponto de Inflex\u00e3o do ROI Os testes de fuma\u00e7a cobrem apenas o caminho cr\u00edtico da aplica\u00e7\u00e3o e n\u00e3o devem ser usados para realmente testar o comportamento da aplica\u00e7\u00e3o, mantendo o tempo de execu\u00e7\u00e3o e a complexidade no m\u00ednimo. Os testes podem ser formados por um subconjunto dos testes de integra\u00e7\u00e3o ou e2e da aplica\u00e7\u00e3o, e eles cobrem tanto da funcionalidade com a menor profundidade poss\u00edvel. A regra de ouro de um bom teste de fuma\u00e7a \u00e9 que ele economiza tempo na valida\u00e7\u00e3o de que a aplica\u00e7\u00e3o \u00e9 aceit\u00e1vel para um est\u00e1gio onde testes melhores e mais completos come\u00e7ar\u00e3o. Aplic\u00e1vel a Desktop de desenvolvimento local - Exemplo: Aplica\u00e7\u00e3o de teste de fuma\u00e7a manual para verificar se a aplica\u00e7\u00e3o est\u00e1 OK. Pipelines de Build - Exemplo: Execu\u00e7\u00e3o de um pequeno conjunto da su\u00edte de teste de integra\u00e7\u00e3o antes de executar a cobertura total de testes, que pode levar muito tempo. Implanta\u00e7\u00f5es em ambientes n\u00e3o-produtivos e produtivos - Exemplo: Execu\u00e7\u00e3o de um comando curl para a API do produto e afirmando que a resposta \u00e9 200 antes de executar testes de carga que consomem recursos. Valida\u00e7\u00e3o de PR - Exemplo: Implanta\u00e7\u00e3o do gr\u00e1fico da aplica\u00e7\u00e3o em um namespace de teste e valida\u00e7\u00e3o de que o lan\u00e7amento \u00e9 bem-sucedido e que nenhuma regress\u00e3o imediata \u00e9 mesclada. Conclus\u00e3o O teste de fuma\u00e7a \u00e9 uma etapa de baixo esfor\u00e7o e alto impacto para enviar software mais confi\u00e1vel. Ele deve ser considerado entre as primeiras etapas a serem implementadas ao planejar sistemas continuamente integrados e entregues. Recursos Wikipedia - Teste de Fuma\u00e7a Livro SRE do Google - Testes de Sistema","title":"Teste de Fuma\u00e7a (Smoke Testing)"},{"location":"automated-testing/smoke-testing/#teste-de-fumaca-smoke-testing","text":"Testes de fuma\u00e7a, \u00e0s vezes chamados de testes de Sanidade , Aceita\u00e7\u00e3o ou Verifica\u00e7\u00e3o de Build/Lan\u00e7amento , s\u00e3o um subtipo de testes de sistema/funcionais geralmente usados como port\u00f5es que verificam a prontid\u00e3o da aplica\u00e7\u00e3o como um passo preliminar. Se uma aplica\u00e7\u00e3o passa nos testes de fuma\u00e7a, ela \u00e9 aceit\u00e1vel ou est\u00e1 em um estado est\u00e1vel o suficiente para as pr\u00f3ximas etapas de teste ou implanta\u00e7\u00e3o.","title":"Teste de Fuma\u00e7a (Smoke Testing)"},{"location":"automated-testing/smoke-testing/#quando-usar","text":"","title":"Quando Usar"},{"location":"automated-testing/smoke-testing/#problema-abordado","text":"Os testes de fuma\u00e7a t\u00eam como objetivo descobrir, o mais cedo poss\u00edvel, se uma aplica\u00e7\u00e3o est\u00e1 funcionando ou n\u00e3o. O objetivo dos testes de fuma\u00e7a \u00e9 economizar tempo; se a vers\u00e3o atual da aplica\u00e7\u00e3o n\u00e3o passar nos testes de fuma\u00e7a, ent\u00e3o o resto da cadeia de integra\u00e7\u00e3o ou implanta\u00e7\u00e3o para ela pode ser abandonado. Os testes de fuma\u00e7a n\u00e3o visam fornecer cobertura total de funcionalidade, mas sim focar em algumas invoca\u00e7\u00f5es de aceita\u00e7\u00e3o r\u00e1pidas para as quais a aplica\u00e7\u00e3o deve, em todos os momentos, responder corretamente.","title":"Problema Abordado"},{"location":"automated-testing/smoke-testing/#ponto-de-inflexao-do-roi","text":"Os testes de fuma\u00e7a cobrem apenas o caminho cr\u00edtico da aplica\u00e7\u00e3o e n\u00e3o devem ser usados para realmente testar o comportamento da aplica\u00e7\u00e3o, mantendo o tempo de execu\u00e7\u00e3o e a complexidade no m\u00ednimo. Os testes podem ser formados por um subconjunto dos testes de integra\u00e7\u00e3o ou e2e da aplica\u00e7\u00e3o, e eles cobrem tanto da funcionalidade com a menor profundidade poss\u00edvel. A regra de ouro de um bom teste de fuma\u00e7a \u00e9 que ele economiza tempo na valida\u00e7\u00e3o de que a aplica\u00e7\u00e3o \u00e9 aceit\u00e1vel para um est\u00e1gio onde testes melhores e mais completos come\u00e7ar\u00e3o.","title":"Ponto de Inflex\u00e3o do ROI"},{"location":"automated-testing/smoke-testing/#aplicavel-a","text":"Desktop de desenvolvimento local - Exemplo: Aplica\u00e7\u00e3o de teste de fuma\u00e7a manual para verificar se a aplica\u00e7\u00e3o est\u00e1 OK. Pipelines de Build - Exemplo: Execu\u00e7\u00e3o de um pequeno conjunto da su\u00edte de teste de integra\u00e7\u00e3o antes de executar a cobertura total de testes, que pode levar muito tempo. Implanta\u00e7\u00f5es em ambientes n\u00e3o-produtivos e produtivos - Exemplo: Execu\u00e7\u00e3o de um comando curl para a API do produto e afirmando que a resposta \u00e9 200 antes de executar testes de carga que consomem recursos. Valida\u00e7\u00e3o de PR - Exemplo: Implanta\u00e7\u00e3o do gr\u00e1fico da aplica\u00e7\u00e3o em um namespace de teste e valida\u00e7\u00e3o de que o lan\u00e7amento \u00e9 bem-sucedido e que nenhuma regress\u00e3o imediata \u00e9 mesclada.","title":"Aplic\u00e1vel a"},{"location":"automated-testing/smoke-testing/#conclusao","text":"O teste de fuma\u00e7a \u00e9 uma etapa de baixo esfor\u00e7o e alto impacto para enviar software mais confi\u00e1vel. Ele deve ser considerado entre as primeiras etapas a serem implementadas ao planejar sistemas continuamente integrados e entregues.","title":"Conclus\u00e3o"},{"location":"automated-testing/smoke-testing/#recursos","text":"Wikipedia - Teste de Fuma\u00e7a Livro SRE do Google - Testes de Sistema","title":"Recursos"},{"location":"automated-testing/synthetic-monitoring-tests/","text":"Testes de Monitoramento Sint\u00e9tico Testes de Monitoramento Sint\u00e9tico s\u00e3o um conjunto de testes funcionais que t\u00eam como alvo um sistema ativo em produ\u00e7\u00e3o. O foco desses testes, \u00e0s vezes chamados de \"watchdog\", \"monitoramento ativo\" ou \"transa\u00e7\u00f5es sint\u00e9ticas\", \u00e9 verificar continuamente a sa\u00fade e a resili\u00eancia do produto. Por que Testes de Monitoramento Sint\u00e9tico Tradicionalmente, os provedores de software confiam em testes por meio de etapas de CI/CD na conhecida pir\u00e2mide de testes (unit\u00e1rios, integra\u00e7\u00e3o, e2e) para validar que o produto est\u00e1 saud\u00e1vel e sem regress\u00f5es. No entanto, \u00e0 medida que mais organiza\u00e7\u00f5es hoje fornecem produtos altamente dispon\u00edveis (SLA de 99,9+), elas descobrem que a natureza de aplica\u00e7\u00f5es distribu\u00eddas de longa dura\u00e7\u00e3o, que normalmente dependem de v\u00e1rios componentes de hardware e software, \u00e9 falhar. Para tais sistemas, a ambi\u00e7\u00e3o das equipes de engenharia de servi\u00e7o \u00e9 reduzir ao m\u00ednimo o tempo necess\u00e1rio para corrigir erros, ou o MTTR - Tempo M\u00e9dio para Reparo . \u00c9 um esfor\u00e7o cont\u00ednuo, realizado no sistema ativo/produ\u00e7\u00e3o. Monitores Sint\u00e9ticos podem ser usados para detectar os seguintes problemas: Disponibilidade - Se o sistema ou regi\u00e3o espec\u00edfica est\u00e1 dispon\u00edvel. Transa\u00e7\u00f5es e jornadas do cliente - Requisi\u00e7\u00f5es conhecidas como boas devem funcionar, enquanto requisi\u00e7\u00f5es conhecidas como ruins devem gerar erro. Desempenho - Qu\u00e3o r\u00e1pido s\u00e3o as a\u00e7\u00f5es e se esse desempenho \u00e9 mantido sob cargas elevadas e atrav\u00e9s de lan\u00e7amentos de vers\u00e3o. Componentes de Terceiros - Componentes de nuvem ou software usados pelo sistema podem falhar. Testes Shift-Right Testes de Monitoramento Sint\u00e9tico s\u00e3o um subconjunto de testes que s\u00e3o executados em produ\u00e7\u00e3o, \u00e0s vezes chamados de Test-in-Production ou testes Shift-Right. Com paradigmas de Shift-Left que s\u00e3o t\u00e3o populares, a abordagem \u00e9 realizar testes o mais cedo poss\u00edvel no ciclo de desenvolvimento da aplica\u00e7\u00e3o. Shift-Right complementa e adiciona ao Shift-Left, referindo-se \u00e0 execu\u00e7\u00e3o de testes tarde no ciclo, durante e ap\u00f3s o lan\u00e7amento, quando o produto est\u00e1 atendendo ao tr\u00e1fego de produ\u00e7\u00e3o. Blocos de Design de Testes de Monitoramento Sint\u00e9tico Um teste de monitoramento sint\u00e9tico \u00e9 um teste que usa dados sint\u00e9ticos e contas de teste reais para injetar comportamentos de usu\u00e1rio no sistema e validar seu efeito. Os componentes dos testes de monitoramento sint\u00e9tico incluem Sondas , c\u00f3digo de teste/contas que geram dados, e Ferramentas de Monitoramento colocadas para validar tanto o comportamento do sistema sob teste quanto a sa\u00fade das pr\u00f3prias sondas. Sondas Sondas s\u00e3o a fonte de a\u00e7\u00f5es de usu\u00e1rio sint\u00e9ticas que conduzem os testes. Elas t\u00eam como alvo a interface do usu\u00e1rio do produto ou APIs voltadas para o p\u00fablico e est\u00e3o executando em seu pr\u00f3prio ambiente de produ\u00e7\u00e3o. Um teste de monitoramento sint\u00e9tico est\u00e1, de fato, muito relacionado a testes de caixa-preta e normalmente se concentra em cen\u00e1rios de ponta a ponta do ponto de vista de um usu\u00e1rio. Monitoramento Dado que os testes de monitoramento sint\u00e9tico est\u00e3o sendo executados continuamente, em intervalos, em um ambiente de produ\u00e7\u00e3o, a afirma\u00e7\u00e3o do comportamento do sistema por meio da an\u00e1lise depende dos pilares de monitoramento existentes usados no sistema ativo (Logging, M\u00e9tricas, Rastreamento Distribu\u00eddo). Aplicando Testes de Monitoramento Sint\u00e9tico Afirmando o sistema sob testes Testes de monitoramento sint\u00e9tico s\u00e3o geralmente estat\u00edsticos. As m\u00e9tricas de teste s\u00e3o comparadas com alguma m\u00e9dia hist\u00f3rica ou em execu\u00e7\u00e3o com uma dimens\u00e3o de tempo. Construindo uma Solu\u00e7\u00e3o de Monitoramento Sint\u00e9tico Em um n\u00edvel alto, a constru\u00e7\u00e3o de monitores sint\u00e9ticos geralmente consiste nas seguintes etapas: Determinar a m\u00e9trica a ser validada (resultado funcional, lat\u00eancia, etc.) Construir uma automa\u00e7\u00e3o que me\u00e7a essa m\u00e9trica contra o sistema e colete telemetria na infraestrutura de monitoramento existente do sistema. Configurar alarmes/a\u00e7\u00f5es/respostas de monitoramento que detectem a falha do sistema em atender ao objetivo desejado da m\u00e9trica. Executar a automa\u00e7\u00e3o de casos de teste continuamente em um intervalo apropriado. Monitorando a sa\u00fade dos testes O tempo de execu\u00e7\u00e3o das sondas \u00e9 um ambiente de produ\u00e7\u00e3o por si s\u00f3, e a sa\u00fade dos testes \u00e9 cr\u00edtica. Muitos provedores oferecem sistemas baseados em nuvem que hospedam esses tempos de execu\u00e7\u00e3o, enquanto algumas organiza\u00e7\u00f5es usam ambientes de produ\u00e7\u00e3o existentes para executar esses testes. De qualquer forma, uma estrat\u00e9gia de monitorar o monitor deve ser uma parte essencial dos sistemas de alerta do ambiente de produ\u00e7\u00e3o. Monitoramento Sint\u00e9tico e Monitoramento de Usu\u00e1rios Reais O monitoramento sint\u00e9tico n\u00e3o substitui a necessidade de RUM. Sondas s\u00e3o c\u00f3digos previs\u00edveis que verificam cen\u00e1rios espec\u00edficos, e elas n\u00e3o representam 100% completamente e verdadeiramente como uma sess\u00e3o de usu\u00e1rio \u00e9 tratada. Riscos Testar em produ\u00e7\u00e3o, em geral, tem um fator de risco associado a ele, que n\u00e3o existe em testes executados durante as etapas de CI/CD. Especificamente, em testes de monitoramento sint\u00e9tico, o seguinte pode afetar o ambiente de produ\u00e7\u00e3o: Dados corrompidos ou inv\u00e1lidos - Testes injetam dados de teste que podem ser de alguma forma corrompidos. Vazamento de dados protegidos - Testes s\u00e3o executados em um ambiente de produ\u00e7\u00e3o e emitem logs ou rastreamentos que podem conter dados protegidos. - Sistemas sobrecarregados - Testes sint\u00e9ticos podem causar erros ou sobrecarregar o sistema. Frameworks e Ferramentas de Testes de Monitoramento Sint\u00e9tico A maioria dos principais players de monitoramento/APM tem um produto empresarial que suporta monitoramento sint\u00e9tico integrado aos seus sistemas. No entanto, tais solu\u00e7\u00f5es s\u00e3o tipicamente caras. Algumas organiza\u00e7\u00f5es preferem executar sondas em infraestrutura existente usando ferramentas conhecidas como Postman , Wrk , JMeter , Selenium ou at\u00e9 mesmo c\u00f3digo personalizado para gerar os dados sint\u00e9ticos. Application Insights availability DataDog Synthetics Dynatrace Synthetic Monitoring New Relic Synthetics Checkly Conclus\u00e3o O valor dos testes em produ\u00e7\u00e3o, em geral, e especificamente do monitoramento sint\u00e9tico, s\u00f3 existe para tipos espec\u00edficos de engajamento, e h\u00e1 riscos e custos associados a eles. No entanto, quando aplic\u00e1veis, eles fornecem garantia cont\u00ednua de que n\u00e3o h\u00e1 falhas no sistema do ponto de vista do usu\u00e1rio. Recursos Livro SRE do Google - Testando Confiabilidade Arquiteturas DevOps da Microsoft - Shift Right para Testar em Produ\u00e7\u00e3o Martin Fowler - Monitoramento Sint\u00e9tico","title":"Testes de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#testes-de-monitoramento-sintetico","text":"Testes de Monitoramento Sint\u00e9tico s\u00e3o um conjunto de testes funcionais que t\u00eam como alvo um sistema ativo em produ\u00e7\u00e3o. O foco desses testes, \u00e0s vezes chamados de \"watchdog\", \"monitoramento ativo\" ou \"transa\u00e7\u00f5es sint\u00e9ticas\", \u00e9 verificar continuamente a sa\u00fade e a resili\u00eancia do produto.","title":"Testes de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#por-que-testes-de-monitoramento-sintetico","text":"Tradicionalmente, os provedores de software confiam em testes por meio de etapas de CI/CD na conhecida pir\u00e2mide de testes (unit\u00e1rios, integra\u00e7\u00e3o, e2e) para validar que o produto est\u00e1 saud\u00e1vel e sem regress\u00f5es. No entanto, \u00e0 medida que mais organiza\u00e7\u00f5es hoje fornecem produtos altamente dispon\u00edveis (SLA de 99,9+), elas descobrem que a natureza de aplica\u00e7\u00f5es distribu\u00eddas de longa dura\u00e7\u00e3o, que normalmente dependem de v\u00e1rios componentes de hardware e software, \u00e9 falhar. Para tais sistemas, a ambi\u00e7\u00e3o das equipes de engenharia de servi\u00e7o \u00e9 reduzir ao m\u00ednimo o tempo necess\u00e1rio para corrigir erros, ou o MTTR - Tempo M\u00e9dio para Reparo . \u00c9 um esfor\u00e7o cont\u00ednuo, realizado no sistema ativo/produ\u00e7\u00e3o. Monitores Sint\u00e9ticos podem ser usados para detectar os seguintes problemas: Disponibilidade - Se o sistema ou regi\u00e3o espec\u00edfica est\u00e1 dispon\u00edvel. Transa\u00e7\u00f5es e jornadas do cliente - Requisi\u00e7\u00f5es conhecidas como boas devem funcionar, enquanto requisi\u00e7\u00f5es conhecidas como ruins devem gerar erro. Desempenho - Qu\u00e3o r\u00e1pido s\u00e3o as a\u00e7\u00f5es e se esse desempenho \u00e9 mantido sob cargas elevadas e atrav\u00e9s de lan\u00e7amentos de vers\u00e3o. Componentes de Terceiros - Componentes de nuvem ou software usados pelo sistema podem falhar.","title":"Por que Testes de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#testes-shift-right","text":"Testes de Monitoramento Sint\u00e9tico s\u00e3o um subconjunto de testes que s\u00e3o executados em produ\u00e7\u00e3o, \u00e0s vezes chamados de Test-in-Production ou testes Shift-Right. Com paradigmas de Shift-Left que s\u00e3o t\u00e3o populares, a abordagem \u00e9 realizar testes o mais cedo poss\u00edvel no ciclo de desenvolvimento da aplica\u00e7\u00e3o. Shift-Right complementa e adiciona ao Shift-Left, referindo-se \u00e0 execu\u00e7\u00e3o de testes tarde no ciclo, durante e ap\u00f3s o lan\u00e7amento, quando o produto est\u00e1 atendendo ao tr\u00e1fego de produ\u00e7\u00e3o.","title":"Testes Shift-Right"},{"location":"automated-testing/synthetic-monitoring-tests/#blocos-de-design-de-testes-de-monitoramento-sintetico","text":"Um teste de monitoramento sint\u00e9tico \u00e9 um teste que usa dados sint\u00e9ticos e contas de teste reais para injetar comportamentos de usu\u00e1rio no sistema e validar seu efeito. Os componentes dos testes de monitoramento sint\u00e9tico incluem Sondas , c\u00f3digo de teste/contas que geram dados, e Ferramentas de Monitoramento colocadas para validar tanto o comportamento do sistema sob teste quanto a sa\u00fade das pr\u00f3prias sondas.","title":"Blocos de Design de Testes de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#sondas","text":"Sondas s\u00e3o a fonte de a\u00e7\u00f5es de usu\u00e1rio sint\u00e9ticas que conduzem os testes. Elas t\u00eam como alvo a interface do usu\u00e1rio do produto ou APIs voltadas para o p\u00fablico e est\u00e3o executando em seu pr\u00f3prio ambiente de produ\u00e7\u00e3o. Um teste de monitoramento sint\u00e9tico est\u00e1, de fato, muito relacionado a testes de caixa-preta e normalmente se concentra em cen\u00e1rios de ponta a ponta do ponto de vista de um usu\u00e1rio.","title":"Sondas"},{"location":"automated-testing/synthetic-monitoring-tests/#monitoramento","text":"Dado que os testes de monitoramento sint\u00e9tico est\u00e3o sendo executados continuamente, em intervalos, em um ambiente de produ\u00e7\u00e3o, a afirma\u00e7\u00e3o do comportamento do sistema por meio da an\u00e1lise depende dos pilares de monitoramento existentes usados no sistema ativo (Logging, M\u00e9tricas, Rastreamento Distribu\u00eddo).","title":"Monitoramento"},{"location":"automated-testing/synthetic-monitoring-tests/#aplicando-testes-de-monitoramento-sintetico","text":"","title":"Aplicando Testes de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#afirmando-o-sistema-sob-testes","text":"Testes de monitoramento sint\u00e9tico s\u00e3o geralmente estat\u00edsticos. As m\u00e9tricas de teste s\u00e3o comparadas com alguma m\u00e9dia hist\u00f3rica ou em execu\u00e7\u00e3o com uma dimens\u00e3o de tempo.","title":"Afirmando o sistema sob testes"},{"location":"automated-testing/synthetic-monitoring-tests/#construindo-uma-solucao-de-monitoramento-sintetico","text":"Em um n\u00edvel alto, a constru\u00e7\u00e3o de monitores sint\u00e9ticos geralmente consiste nas seguintes etapas: Determinar a m\u00e9trica a ser validada (resultado funcional, lat\u00eancia, etc.) Construir uma automa\u00e7\u00e3o que me\u00e7a essa m\u00e9trica contra o sistema e colete telemetria na infraestrutura de monitoramento existente do sistema. Configurar alarmes/a\u00e7\u00f5es/respostas de monitoramento que detectem a falha do sistema em atender ao objetivo desejado da m\u00e9trica. Executar a automa\u00e7\u00e3o de casos de teste continuamente em um intervalo apropriado.","title":"Construindo uma Solu\u00e7\u00e3o de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#monitorando-a-saude-dos-testes","text":"O tempo de execu\u00e7\u00e3o das sondas \u00e9 um ambiente de produ\u00e7\u00e3o por si s\u00f3, e a sa\u00fade dos testes \u00e9 cr\u00edtica. Muitos provedores oferecem sistemas baseados em nuvem que hospedam esses tempos de execu\u00e7\u00e3o, enquanto algumas organiza\u00e7\u00f5es usam ambientes de produ\u00e7\u00e3o existentes para executar esses testes. De qualquer forma, uma estrat\u00e9gia de monitorar o monitor deve ser uma parte essencial dos sistemas de alerta do ambiente de produ\u00e7\u00e3o.","title":"Monitorando a sa\u00fade dos testes"},{"location":"automated-testing/synthetic-monitoring-tests/#monitoramento-sintetico-e-monitoramento-de-usuarios-reais","text":"O monitoramento sint\u00e9tico n\u00e3o substitui a necessidade de RUM. Sondas s\u00e3o c\u00f3digos previs\u00edveis que verificam cen\u00e1rios espec\u00edficos, e elas n\u00e3o representam 100% completamente e verdadeiramente como uma sess\u00e3o de usu\u00e1rio \u00e9 tratada.","title":"Monitoramento Sint\u00e9tico e Monitoramento de Usu\u00e1rios Reais"},{"location":"automated-testing/synthetic-monitoring-tests/#riscos","text":"Testar em produ\u00e7\u00e3o, em geral, tem um fator de risco associado a ele, que n\u00e3o existe em testes executados durante as etapas de CI/CD. Especificamente, em testes de monitoramento sint\u00e9tico, o seguinte pode afetar o ambiente de produ\u00e7\u00e3o: Dados corrompidos ou inv\u00e1lidos - Testes injetam dados de teste que podem ser de alguma forma corrompidos. Vazamento de dados protegidos - Testes s\u00e3o executados em um ambiente de produ\u00e7\u00e3o e emitem logs ou rastreamentos que podem conter dados protegidos. - Sistemas sobrecarregados - Testes sint\u00e9ticos podem causar erros ou sobrecarregar o sistema.","title":"Riscos"},{"location":"automated-testing/synthetic-monitoring-tests/#frameworks-e-ferramentas-de-testes-de-monitoramento-sintetico","text":"A maioria dos principais players de monitoramento/APM tem um produto empresarial que suporta monitoramento sint\u00e9tico integrado aos seus sistemas. No entanto, tais solu\u00e7\u00f5es s\u00e3o tipicamente caras. Algumas organiza\u00e7\u00f5es preferem executar sondas em infraestrutura existente usando ferramentas conhecidas como Postman , Wrk , JMeter , Selenium ou at\u00e9 mesmo c\u00f3digo personalizado para gerar os dados sint\u00e9ticos. Application Insights availability DataDog Synthetics Dynatrace Synthetic Monitoring New Relic Synthetics Checkly","title":"Frameworks e Ferramentas de Testes de Monitoramento Sint\u00e9tico"},{"location":"automated-testing/synthetic-monitoring-tests/#conclusao","text":"O valor dos testes em produ\u00e7\u00e3o, em geral, e especificamente do monitoramento sint\u00e9tico, s\u00f3 existe para tipos espec\u00edficos de engajamento, e h\u00e1 riscos e custos associados a eles. No entanto, quando aplic\u00e1veis, eles fornecem garantia cont\u00ednua de que n\u00e3o h\u00e1 falhas no sistema do ponto de vista do usu\u00e1rio.","title":"Conclus\u00e3o"},{"location":"automated-testing/synthetic-monitoring-tests/#recursos","text":"Livro SRE do Google - Testando Confiabilidade Arquiteturas DevOps da Microsoft - Shift Right para Testar em Produ\u00e7\u00e3o Martin Fowler - Monitoramento Sint\u00e9tico","title":"Recursos"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/","text":"Construindo Containers com Azure DevOps usando o Padr\u00e3o DevTest Neste documento, destacamos os aprendizados obtidos ao aplicar o padr\u00e3o DevTest ao desenvolvimento de containers no Azure DevOps por meio de pipelines. O padr\u00e3o nos permitiu construir containers para desenvolvimento, teste e libera\u00e7\u00e3o do container para reutiliza\u00e7\u00e3o posterior (pronto para produ\u00e7\u00e3o). Vamos explorar as ferramentas necess\u00e1rias para construir, testar e enviar um container, nosso ambiente e passar por cada etapa separadamente. Siga este link para aprofundar ou revisitar o padr\u00e3o DevTest . \u00cdndice Construir o Container Testar o Container Enviar Container Refer\u00eancias Construir o Container O primeiro passo no desenvolvimento de containers, ap\u00f3s criar os Dockerfiles e o c\u00f3digo-fonte necess\u00e1rios, \u00e9 construir o container. At\u00e9 mesmo o pr\u00f3prio Dockerfile pode incluir alguns testes b\u00e1sicos. Os testes de c\u00f3digo s\u00e3o realizados ao enviar o c\u00f3digo para o reposit\u00f3rio de origem, onde ele \u00e9 ent\u00e3o usado para construir o container. A primeira etapa em nosso pipeline \u00e9 executar o comando docker build com uma tag tempor\u00e1ria e os argumentos de constru\u00e7\u00e3o necess\u00e1rios: # ... c\u00f3digo omitido para brevidade Essa tarefa inclui os par\u00e2metros buildDirectory , imageName e dockerfileName , que devem ser definidos previamente. Essa tarefa pode, por exemplo, ser usada em um modelo para v\u00e1rios containers para melhorar a reutiliza\u00e7\u00e3o de c\u00f3digo. Tamb\u00e9m \u00e9 poss\u00edvel passar vari\u00e1veis de ambiente diretamente para o Dockerfile por meio da se\u00e7\u00e3o env da tarefa. Se essa tarefa for bem-sucedida, o Dockerfile foi constru\u00eddo sem erros e podemos continuar testando o pr\u00f3prio container. Testar o Container Para testar o container, estamos usando o ambiente tox. Para mais detalhes sobre o tox, visite a se\u00e7\u00e3o tox deste reposit\u00f3rio ou visite a p\u00e1gina oficial de documenta\u00e7\u00e3o do tox . Antes de testarmos o container, estamos verificando se h\u00e1 credenciais expostas no hist\u00f3rico da imagem docker. Se senhas conhecidas, usadas para acessar nossos recursos internos, estiverem expostas aqui, a etapa de constru\u00e7\u00e3o falhar\u00e1: # ... c\u00f3digo omitido para brevidade Ap\u00f3s o teste de credencial, o container \u00e9 testado por meio da extens\u00e3o pytest testinfra . Testinfra \u00e9 uma ferramenta baseada em Python que pode ser usada para iniciar um container, reunir pr\u00e9-requisitos, testar o container e deslig\u00e1-lo novamente, sem nenhum esfor\u00e7o al\u00e9m de escrever os testes. Esses testes podem, por exemplo, incluir: se arquivos existem se vari\u00e1veis de ambiente est\u00e3o configuradas corretamente se certos processos est\u00e3o em execu\u00e7\u00e3o se o ambiente host correto est\u00e1 sendo usado Para uma cole\u00e7\u00e3o completa de capacidades e requisitos, visite o projeto testinfra no GitHub . Alguns m\u00e9todos de um teste de container baseado em Linux podem parecer assim: # ... c\u00f3digo omitido para brevidade Para iniciar o teste, um comando pytest \u00e9 executado por meio do tox. Uma tarefa contendo o comando tox pode parecer assim: # ... c\u00f3digo omitido para brevidade O que poderia acionar o seguinte c\u00f3digo pytest, que est\u00e1 contido no arquivo tox.ini: # ... c\u00f3digo omitido para brevidade Como \u00faltima tarefa deste pipeline para construir e testar o container, definimos uma vari\u00e1vel chamada testsPassed , que \u00e9 apenas true , se as tarefas anteriores tiverem sido bem-sucedidas: # ... c\u00f3digo omitido para brevidade Enviar Container Ap\u00f3s construir e testar, se nosso container funcionar conforme o esperado, queremos liber\u00e1-lo para nosso Azure Container Registry (ACR) para ser usado por nossa aplica\u00e7\u00e3o maior. Antes disso, queremos automatizar o comportamento de envio e definir uma tag significativa. Como desenvolvedor, muitas vezes \u00e9 \u00fatil ter containers enviados para o ACR, mesmo que estejam falhando. Isso pode ser feito verificando a vari\u00e1vel testsPassed que introduzimos no final de nossos testes. Se o teste falhou, queremos adicionar um sufixo de falha no final da tag: # ... c\u00f3digo omitido para brevidade A condi\u00e7\u00e3o verifica se o valor de testsPassed \u00e9 false e tamb\u00e9m se n\u00e3o estamos na main branch , pois n\u00e3o queremos enviar containers falhos da main. Isso nos ajuda a manter nosso ambiente de produ\u00e7\u00e3o limpo. O valor para imageRepository foi definido em outro modelo, junto com o failedSuffix e testsPassed : # ... c\u00f3digo omitido para brevidade A imageTag est\u00e1 aberta para discuss\u00e3o, pois depende muito de como sua equipe deseja usar o container. Optamos por Build.SourceVersion , que \u00e9 o ID do commit da branch em que o container foi desenvolvido. Isso permite que voc\u00ea rastreie facilmente a origem do container e auxilie na depura\u00e7\u00e3o. Um link para as vari\u00e1veis predefinidas do Azure DevOps pode ser encontrado na Documenta\u00e7\u00e3o do Azure sobre Azure DevOps . Ap\u00f3s adicionar uma tag ao container, a imagem deve ser enviada. Isso pode ser feito com a seguinte tarefa: # ... c\u00f3digo omitido para brevidade `` ` Da mesma forma, estas s\u00e3o as etapas para publicar o container no ACR, se os testes forem bem-sucedidos: ```yml # ... c\u00f3digo omitido para brevidade Se voc\u00ea n\u00e3o quiser incluir a tag latest , tamb\u00e9m pode remover as etapas envolvendo latest (SetLatestSuffixTag & pushSuccessfulDockerImageLatest). Refer\u00eancias Padr\u00e3o DevTest Documenta\u00e7\u00e3o do Azure sobre Azure DevOps P\u00e1gina oficial de documenta\u00e7\u00e3o do tox Testinfra Projeto Testinfra no GitHub pytest","title":"Construindo Containers com Azure DevOps usando o Padr\u00e3o DevTest"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/#construindo-containers-com-azure-devops-usando-o-padrao-devtest","text":"Neste documento, destacamos os aprendizados obtidos ao aplicar o padr\u00e3o DevTest ao desenvolvimento de containers no Azure DevOps por meio de pipelines. O padr\u00e3o nos permitiu construir containers para desenvolvimento, teste e libera\u00e7\u00e3o do container para reutiliza\u00e7\u00e3o posterior (pronto para produ\u00e7\u00e3o). Vamos explorar as ferramentas necess\u00e1rias para construir, testar e enviar um container, nosso ambiente e passar por cada etapa separadamente. Siga este link para aprofundar ou revisitar o padr\u00e3o DevTest .","title":"Construindo Containers com Azure DevOps usando o Padr\u00e3o DevTest"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/#indice","text":"Construir o Container Testar o Container Enviar Container Refer\u00eancias","title":"\u00cdndice"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/#construir-o-container","text":"O primeiro passo no desenvolvimento de containers, ap\u00f3s criar os Dockerfiles e o c\u00f3digo-fonte necess\u00e1rios, \u00e9 construir o container. At\u00e9 mesmo o pr\u00f3prio Dockerfile pode incluir alguns testes b\u00e1sicos. Os testes de c\u00f3digo s\u00e3o realizados ao enviar o c\u00f3digo para o reposit\u00f3rio de origem, onde ele \u00e9 ent\u00e3o usado para construir o container. A primeira etapa em nosso pipeline \u00e9 executar o comando docker build com uma tag tempor\u00e1ria e os argumentos de constru\u00e7\u00e3o necess\u00e1rios: # ... c\u00f3digo omitido para brevidade Essa tarefa inclui os par\u00e2metros buildDirectory , imageName e dockerfileName , que devem ser definidos previamente. Essa tarefa pode, por exemplo, ser usada em um modelo para v\u00e1rios containers para melhorar a reutiliza\u00e7\u00e3o de c\u00f3digo. Tamb\u00e9m \u00e9 poss\u00edvel passar vari\u00e1veis de ambiente diretamente para o Dockerfile por meio da se\u00e7\u00e3o env da tarefa. Se essa tarefa for bem-sucedida, o Dockerfile foi constru\u00eddo sem erros e podemos continuar testando o pr\u00f3prio container.","title":"Construir o Container"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/#testar-o-container","text":"Para testar o container, estamos usando o ambiente tox. Para mais detalhes sobre o tox, visite a se\u00e7\u00e3o tox deste reposit\u00f3rio ou visite a p\u00e1gina oficial de documenta\u00e7\u00e3o do tox . Antes de testarmos o container, estamos verificando se h\u00e1 credenciais expostas no hist\u00f3rico da imagem docker. Se senhas conhecidas, usadas para acessar nossos recursos internos, estiverem expostas aqui, a etapa de constru\u00e7\u00e3o falhar\u00e1: # ... c\u00f3digo omitido para brevidade Ap\u00f3s o teste de credencial, o container \u00e9 testado por meio da extens\u00e3o pytest testinfra . Testinfra \u00e9 uma ferramenta baseada em Python que pode ser usada para iniciar um container, reunir pr\u00e9-requisitos, testar o container e deslig\u00e1-lo novamente, sem nenhum esfor\u00e7o al\u00e9m de escrever os testes. Esses testes podem, por exemplo, incluir: se arquivos existem se vari\u00e1veis de ambiente est\u00e3o configuradas corretamente se certos processos est\u00e3o em execu\u00e7\u00e3o se o ambiente host correto est\u00e1 sendo usado Para uma cole\u00e7\u00e3o completa de capacidades e requisitos, visite o projeto testinfra no GitHub . Alguns m\u00e9todos de um teste de container baseado em Linux podem parecer assim: # ... c\u00f3digo omitido para brevidade Para iniciar o teste, um comando pytest \u00e9 executado por meio do tox. Uma tarefa contendo o comando tox pode parecer assim: # ... c\u00f3digo omitido para brevidade O que poderia acionar o seguinte c\u00f3digo pytest, que est\u00e1 contido no arquivo tox.ini: # ... c\u00f3digo omitido para brevidade Como \u00faltima tarefa deste pipeline para construir e testar o container, definimos uma vari\u00e1vel chamada testsPassed , que \u00e9 apenas true , se as tarefas anteriores tiverem sido bem-sucedidas: # ... c\u00f3digo omitido para brevidade","title":"Testar o Container"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/#enviar-container","text":"Ap\u00f3s construir e testar, se nosso container funcionar conforme o esperado, queremos liber\u00e1-lo para nosso Azure Container Registry (ACR) para ser usado por nossa aplica\u00e7\u00e3o maior. Antes disso, queremos automatizar o comportamento de envio e definir uma tag significativa. Como desenvolvedor, muitas vezes \u00e9 \u00fatil ter containers enviados para o ACR, mesmo que estejam falhando. Isso pode ser feito verificando a vari\u00e1vel testsPassed que introduzimos no final de nossos testes. Se o teste falhou, queremos adicionar um sufixo de falha no final da tag: # ... c\u00f3digo omitido para brevidade A condi\u00e7\u00e3o verifica se o valor de testsPassed \u00e9 false e tamb\u00e9m se n\u00e3o estamos na main branch , pois n\u00e3o queremos enviar containers falhos da main. Isso nos ajuda a manter nosso ambiente de produ\u00e7\u00e3o limpo. O valor para imageRepository foi definido em outro modelo, junto com o failedSuffix e testsPassed : # ... c\u00f3digo omitido para brevidade A imageTag est\u00e1 aberta para discuss\u00e3o, pois depende muito de como sua equipe deseja usar o container. Optamos por Build.SourceVersion , que \u00e9 o ID do commit da branch em que o container foi desenvolvido. Isso permite que voc\u00ea rastreie facilmente a origem do container e auxilie na depura\u00e7\u00e3o. Um link para as vari\u00e1veis predefinidas do Azure DevOps pode ser encontrado na Documenta\u00e7\u00e3o do Azure sobre Azure DevOps . Ap\u00f3s adicionar uma tag ao container, a imagem deve ser enviada. Isso pode ser feito com a seguinte tarefa: # ... c\u00f3digo omitido para brevidade `` ` Da mesma forma, estas s\u00e3o as etapas para publicar o container no ACR, se os testes forem bem-sucedidos: ```yml # ... c\u00f3digo omitido para brevidade Se voc\u00ea n\u00e3o quiser incluir a tag latest , tamb\u00e9m pode remover as etapas envolvendo latest (SetLatestSuffixTag & pushSuccessfulDockerImageLatest).","title":"Enviar Container"},{"location":"automated-testing/tech-specific-samples/azdo-container-dev-test-release/#referencias","text":"Padr\u00e3o DevTest Documenta\u00e7\u00e3o do Azure sobre Azure DevOps P\u00e1gina oficial de documenta\u00e7\u00e3o do tox Testinfra Projeto Testinfra no GitHub pytest","title":"Refer\u00eancias"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/","text":"Utilizando Azurite para Executar Testes de Armazenamento Blob em um Pipeline Este documento determina a abordagem para escrever testes automatizados com um ciclo de feedback curto (ou seja, testes unit\u00e1rios) contra considera\u00e7\u00f5es de seguran\u00e7a (endpoints privados) para a funcionalidade do Azure Blob Storage. Uma vez que os endpoints privados s\u00e3o ativados para as contas de armazenamento do Azure, os testes atuais falhar\u00e3o quando executados localmente ou como parte de um pipeline, pois essa conex\u00e3o ser\u00e1 bloqueada. Utilize um emulador de armazenamento Azure - Azurite Para emular um Azure Blob Storage local, podemos usar o Azure Storage Emulator . O Storage Emulator atualmente roda apenas no Windows. Se voc\u00ea precisar de um Storage Emulator para Linux, uma op\u00e7\u00e3o \u00e9 o emulador de armazenamento de c\u00f3digo aberto mantido pela comunidade Azurite . O Azure Storage Emulator n\u00e3o est\u00e1 mais sendo ativamente desenvolvido. Azurite \u00e9 a plataforma de emulador de armazenamento daqui para frente. Azurite substitui o Azure Storage Emulator. Azurite continuar\u00e1 a ser atualizado para suportar as vers\u00f5es mais recentes das APIs de armazenamento Azure. Para mais informa\u00e7\u00f5es, veja Use o emulador Azurite para desenvolvimento local de armazenamento Azure . Existem algumas diferen\u00e7as de funcionalidade entre o Storage Emulator e os servi\u00e7os de armazenamento Azure. Para mais informa\u00e7\u00f5es sobre essas diferen\u00e7as, consulte Diferen\u00e7as entre o Storage Emulator e o armazenamento Azure . H\u00e1 v\u00e1rias maneiras de instalar e executar o Azurite em seu sistema local, conforme listado aqui . Neste documento, abordaremos Instalar e executar o Azurite usando NPM e Instalar e executar a imagem Docker do Azurite . 1. Instalar e executar o Azurite a. Usando NPM Para executar o Azurite V3, voc\u00ea precisa ter o Node.js >= 8.0 instalado em seu sistema. O Azurite funciona de forma multiplataforma no Windows, Linux e OS X. Ap\u00f3s a instala\u00e7\u00e3o do Node.js, voc\u00ea pode instalar o Azurite simplesmente com npm, que \u00e9 a ferramenta de gerenciamento de pacotes Node.js inclu\u00edda em cada instala\u00e7\u00e3o do Node.js. # Instalar o Azurite npm install -g azurite # Criar o diret\u00f3rio azurite mkdir c:/azurite # Iniciar o Azurite para Windows azurite --silent --location c: \\a zurite --debug c: \\a zurite \\d ebug.log A sa\u00edda ser\u00e1: O servi\u00e7o Blob do Azurite est\u00e1 iniciando em http://127.0.0.1:10000 O servi\u00e7o Blob do Azurite est\u00e1 ouvindo com sucesso em http://127.0.0.1:10000 O servi\u00e7o de fila do Azurite est\u00e1 iniciando em http://127.0.0.1:10001 O servi\u00e7o de fila do Azurite est\u00e1 ouvindo com sucesso em http://127.0.0.1:10001 b. Usando uma imagem docker Outra forma de executar o Azurite \u00e9 usando o docker, usando o endpoint HTTP padr\u00e3o. docker run -p 10000 :10000 mcr.microsoft.com/azure-storage/azurite azurite-blob --blobHost 0 .0.0.0 O Docker Compose \u00e9 outra op\u00e7\u00e3o e pode executar a mesma imagem docker usando o arquivo docker-compose.yml abaixo. version : '3.4' services : azurite : image : mcr.microsoft.com/azure-storage/azurite hostname : azurite volumes : - ./cert/azurite:/data command : \"azurite-blob --blobHost 0.0.0.0 -l /data --cert /data/127.0.0.1.pem --key /data/127.0.0.1-key.pem --oauth basic\" ports : - \"10000:10000\" - \"10001:10001\" 2. Executar testes em sua m\u00e1quina local O Python 3.8.7 \u00e9 usado para isso, mas deve funcionar bem em outras vers\u00f5es 3.x tamb\u00e9m. Instale e execute o Azurite para testes locais: Op\u00e7\u00e3o 1: usando npm: # Instalar o Azurite npm install -g azurite # Criar o diret\u00f3rio azurite mkdir c:/azurite # Iniciar o Azurite para Windows azurite --silent --location c: \\a zurite --debug c: \\a zurite \\d ebug.log Op\u00e7\u00e3o 2: usando docker docker run -p 10000 :10000 mcr.microsoft.com/azure-storage/azurite azurite-blob --blobHost 0 .0.0.0 No Azure Storage Explorer, selecione Anexar a um emulador local Forne\u00e7a um nome para exibi\u00e7\u00e3o e n\u00famero da porta, ent\u00e3o sua conex\u00e3o estar\u00e1 pronta, e voc\u00ea poder\u00e1 usar o Storage Explorer para gerenciar seu armazenamento blob local. Para testar e ver como esses endpoints est\u00e3o funcionando, voc\u00ea pode anexar seu armazenamento blob local ao Azure Storage Explorer . Crie um ambiente virtual python python -m venv .venv Nome do cont\u00eainer e inicialize as vari\u00e1veis de ambiente: Use conftest.py para integra\u00e7\u00e3o de teste. ```python from azure.storage.blob import BlobServiceClient import os def pytest_generate_tests(metafunc): os.environ['STORAGE_CONNECTION_STRING'] = 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02x NOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;' os.environ['STORAGE_CONTAINER'] = 'test-container' # Criar cont\u00eainer para Azurite na primeira execu\u00e7\u00e3o blob_service_client = BlobServiceClient.from_connection_string(os.environ.get(\"STORAGE_CONNECTION_STRING\")) try: blob_service_client.create_container(os.environ.get(\"STORAGE_CONTAINER\")) except Exception as e: print(e) ``` * Nota: o valor para STORAGE_CONNECTION_STRING \u00e9 o valor padr\u00e3o para o Azurite, n\u00e3o \u00e9 uma chave privada Instale as depend\u00eancias pip install -r requirements_tests.txt Execute os testes: python -m pytest ./tests Ap\u00f3s executar os testes, voc\u00ea pode ver os arquivos em seu armazenamento blob local 3. Executar testes no Azure Pipelines Ap\u00f3s executar os testes localmente, precisamos garantir que esses testes tamb\u00e9m passem no Azure Pipelines. Temos 2 op\u00e7\u00f5es aqui, podemos usar a imagem docker como agente hospedado no Azure ou instalar um pacote npm nas etapas do Pipeline. trigger: - master steps: - task: UsePythonVersion@0 displayName: 'Usar Python 3.7' inputs: versionSpec: 3 .7 - bash: | pip install -r requirements_tests.txt displayName: 'Configurar requisitos para testes' - bash: | sudo npm install -g azurite sudo mkdir azurite sudo azurite --silent --location azurite --debug azurite \\d ebug.log & displayName: 'Instalar e Executar o Azurite' - bash: | python -m pytest --junit-xml = unit_tests_report.xml --cov = tests --cov-report = html --cov-report = xml ./tests displayName: 'Executar Testes' - task: PublishCodeCoverageResults@1 inputs: codeCoverageTool: Cobertura summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml' reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov' - task: PublishTestResults@2 inputs: testResultsFormat: 'JUnit' testResultsFiles: '**/*_tests_report.xml' failTaskOnFailedTests: true Uma vez que configuramos nosso pipeline no Azure Pipelines, o resultado ser\u00e1 como abaixo Refer\u00eancias Azure Storage Emulator Azurite no GitHub Use o emulador Azurite para desenvolvimento local de armazenamento Azure Azure Storage Explorer","title":"Utilizando Azurite para Executar Testes de Armazenamento Blob em um Pipeline"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#utilizando-azurite-para-executar-testes-de-armazenamento-blob-em-um-pipeline","text":"Este documento determina a abordagem para escrever testes automatizados com um ciclo de feedback curto (ou seja, testes unit\u00e1rios) contra considera\u00e7\u00f5es de seguran\u00e7a (endpoints privados) para a funcionalidade do Azure Blob Storage. Uma vez que os endpoints privados s\u00e3o ativados para as contas de armazenamento do Azure, os testes atuais falhar\u00e3o quando executados localmente ou como parte de um pipeline, pois essa conex\u00e3o ser\u00e1 bloqueada.","title":"Utilizando Azurite para Executar Testes de Armazenamento Blob em um Pipeline"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#utilize-um-emulador-de-armazenamento-azure-azurite","text":"Para emular um Azure Blob Storage local, podemos usar o Azure Storage Emulator . O Storage Emulator atualmente roda apenas no Windows. Se voc\u00ea precisar de um Storage Emulator para Linux, uma op\u00e7\u00e3o \u00e9 o emulador de armazenamento de c\u00f3digo aberto mantido pela comunidade Azurite . O Azure Storage Emulator n\u00e3o est\u00e1 mais sendo ativamente desenvolvido. Azurite \u00e9 a plataforma de emulador de armazenamento daqui para frente. Azurite substitui o Azure Storage Emulator. Azurite continuar\u00e1 a ser atualizado para suportar as vers\u00f5es mais recentes das APIs de armazenamento Azure. Para mais informa\u00e7\u00f5es, veja Use o emulador Azurite para desenvolvimento local de armazenamento Azure . Existem algumas diferen\u00e7as de funcionalidade entre o Storage Emulator e os servi\u00e7os de armazenamento Azure. Para mais informa\u00e7\u00f5es sobre essas diferen\u00e7as, consulte Diferen\u00e7as entre o Storage Emulator e o armazenamento Azure . H\u00e1 v\u00e1rias maneiras de instalar e executar o Azurite em seu sistema local, conforme listado aqui . Neste documento, abordaremos Instalar e executar o Azurite usando NPM e Instalar e executar a imagem Docker do Azurite .","title":"Utilize um emulador de armazenamento Azure - Azurite"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#1-instalar-e-executar-o-azurite","text":"","title":"1. Instalar e executar o Azurite"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#a-usando-npm","text":"Para executar o Azurite V3, voc\u00ea precisa ter o Node.js >= 8.0 instalado em seu sistema. O Azurite funciona de forma multiplataforma no Windows, Linux e OS X. Ap\u00f3s a instala\u00e7\u00e3o do Node.js, voc\u00ea pode instalar o Azurite simplesmente com npm, que \u00e9 a ferramenta de gerenciamento de pacotes Node.js inclu\u00edda em cada instala\u00e7\u00e3o do Node.js. # Instalar o Azurite npm install -g azurite # Criar o diret\u00f3rio azurite mkdir c:/azurite # Iniciar o Azurite para Windows azurite --silent --location c: \\a zurite --debug c: \\a zurite \\d ebug.log A sa\u00edda ser\u00e1: O servi\u00e7o Blob do Azurite est\u00e1 iniciando em http://127.0.0.1:10000 O servi\u00e7o Blob do Azurite est\u00e1 ouvindo com sucesso em http://127.0.0.1:10000 O servi\u00e7o de fila do Azurite est\u00e1 iniciando em http://127.0.0.1:10001 O servi\u00e7o de fila do Azurite est\u00e1 ouvindo com sucesso em http://127.0.0.1:10001","title":"a. Usando NPM"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#b-usando-uma-imagem-docker","text":"Outra forma de executar o Azurite \u00e9 usando o docker, usando o endpoint HTTP padr\u00e3o. docker run -p 10000 :10000 mcr.microsoft.com/azure-storage/azurite azurite-blob --blobHost 0 .0.0.0 O Docker Compose \u00e9 outra op\u00e7\u00e3o e pode executar a mesma imagem docker usando o arquivo docker-compose.yml abaixo. version : '3.4' services : azurite : image : mcr.microsoft.com/azure-storage/azurite hostname : azurite volumes : - ./cert/azurite:/data command : \"azurite-blob --blobHost 0.0.0.0 -l /data --cert /data/127.0.0.1.pem --key /data/127.0.0.1-key.pem --oauth basic\" ports : - \"10000:10000\" - \"10001:10001\"","title":"b. Usando uma imagem docker"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#2-executar-testes-em-sua-maquina-local","text":"O Python 3.8.7 \u00e9 usado para isso, mas deve funcionar bem em outras vers\u00f5es 3.x tamb\u00e9m. Instale e execute o Azurite para testes locais: Op\u00e7\u00e3o 1: usando npm: # Instalar o Azurite npm install -g azurite # Criar o diret\u00f3rio azurite mkdir c:/azurite # Iniciar o Azurite para Windows azurite --silent --location c: \\a zurite --debug c: \\a zurite \\d ebug.log Op\u00e7\u00e3o 2: usando docker docker run -p 10000 :10000 mcr.microsoft.com/azure-storage/azurite azurite-blob --blobHost 0 .0.0.0 No Azure Storage Explorer, selecione Anexar a um emulador local Forne\u00e7a um nome para exibi\u00e7\u00e3o e n\u00famero da porta, ent\u00e3o sua conex\u00e3o estar\u00e1 pronta, e voc\u00ea poder\u00e1 usar o Storage Explorer para gerenciar seu armazenamento blob local. Para testar e ver como esses endpoints est\u00e3o funcionando, voc\u00ea pode anexar seu armazenamento blob local ao Azure Storage Explorer . Crie um ambiente virtual python python -m venv .venv Nome do cont\u00eainer e inicialize as vari\u00e1veis de ambiente: Use conftest.py para integra\u00e7\u00e3o de teste. ```python from azure.storage.blob import BlobServiceClient import os def pytest_generate_tests(metafunc): os.environ['STORAGE_CONNECTION_STRING'] = 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02x NOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;' os.environ['STORAGE_CONTAINER'] = 'test-container' # Criar cont\u00eainer para Azurite na primeira execu\u00e7\u00e3o blob_service_client = BlobServiceClient.from_connection_string(os.environ.get(\"STORAGE_CONNECTION_STRING\")) try: blob_service_client.create_container(os.environ.get(\"STORAGE_CONTAINER\")) except Exception as e: print(e) ``` * Nota: o valor para STORAGE_CONNECTION_STRING \u00e9 o valor padr\u00e3o para o Azurite, n\u00e3o \u00e9 uma chave privada Instale as depend\u00eancias pip install -r requirements_tests.txt Execute os testes: python -m pytest ./tests Ap\u00f3s executar os testes, voc\u00ea pode ver os arquivos em seu armazenamento blob local","title":"2. Executar testes em sua m\u00e1quina local"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#3-executar-testes-no-azure-pipelines","text":"Ap\u00f3s executar os testes localmente, precisamos garantir que esses testes tamb\u00e9m passem no Azure Pipelines. Temos 2 op\u00e7\u00f5es aqui, podemos usar a imagem docker como agente hospedado no Azure ou instalar um pacote npm nas etapas do Pipeline. trigger: - master steps: - task: UsePythonVersion@0 displayName: 'Usar Python 3.7' inputs: versionSpec: 3 .7 - bash: | pip install -r requirements_tests.txt displayName: 'Configurar requisitos para testes' - bash: | sudo npm install -g azurite sudo mkdir azurite sudo azurite --silent --location azurite --debug azurite \\d ebug.log & displayName: 'Instalar e Executar o Azurite' - bash: | python -m pytest --junit-xml = unit_tests_report.xml --cov = tests --cov-report = html --cov-report = xml ./tests displayName: 'Executar Testes' - task: PublishCodeCoverageResults@1 inputs: codeCoverageTool: Cobertura summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml' reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov' - task: PublishTestResults@2 inputs: testResultsFormat: 'JUnit' testResultsFiles: '**/*_tests_report.xml' failTaskOnFailedTests: true Uma vez que configuramos nosso pipeline no Azure Pipelines, o resultado ser\u00e1 como abaixo","title":"3. Executar testes no Azure Pipelines"},{"location":"automated-testing/tech-specific-samples/blobstorage-unit-tests/#referencias","text":"Azure Storage Emulator Azurite no GitHub Use o emulador Azurite para desenvolvimento local de armazenamento Azure Azure Storage Explorer","title":"Refer\u00eancias"},{"location":"automated-testing/templates/case-study-template/","text":"~Projeto do Cliente~ Estudo de Caso Contexto Descreva o cliente e os requisitos de neg\u00f3cios com a declara\u00e7\u00e3o expl\u00edcita do problema. Sistema Sob Teste (SST) Inclua a arquitetura conceitual do sistema e destaque os componentes da arquitetura que foram inclu\u00eddos nos testes de ponta a ponta (E2E). Problemas e Limita\u00e7\u00f5es Descreva os problemas da solu\u00e7\u00e3o geral do SST que impediram o teste de uma parte espec\u00edfica (ou qualquer parte) da solu\u00e7\u00e3o. Descreva as limita\u00e7\u00f5es das ferramentas e frameworks de teste usados nesta implementa\u00e7\u00e3o. Framework e Ferramentas de Teste E2E Descreva qual framework e/ou ferramentas foram usadas para implementar testes E2E no SST. Casos de Teste Descreva os casos de teste E2E que foram criados para testar o SST. M\u00e9tricas de Teste Descreva qualquer solu\u00e7\u00e3o de arquitetura que foi usada para monitorar, observar e rastrear os v\u00e1rios estados de servi\u00e7o que foram usados como m\u00e9tricas de teste E2E. Al\u00e9m disso, inclua a lista de casos de teste que foram constru\u00eddos para medir o progresso dos testes E2E. Arquitetura de Teste E2E Descreva qualquer arquitetura de teste que foi constru\u00edda para executar testes E2E. Implementa\u00e7\u00e3o de Teste E2E (Exemplos de C\u00f3digo) Inclua exemplos de casos de teste e sua implementa\u00e7\u00e3o na linguagem de programa\u00e7\u00e3o de sua escolha. Inclua quaisquer blocos de implementa\u00e7\u00e3o de c\u00f3digo reutiliz\u00e1vel comuns que possam ser aproveitados em futuras implementa\u00e7\u00f5es de testes E2E do projeto. Relat\u00f3rios e Resultados de Teste E2E Inclua exemplos de relat\u00f3rios e resultados obtidos nas execu\u00e7\u00f5es de testes E2E neste projeto.","title":"~Projeto do Cliente~ Estudo de Caso"},{"location":"automated-testing/templates/case-study-template/#projeto-do-cliente-estudo-de-caso","text":"","title":"~Projeto do Cliente~ Estudo de Caso"},{"location":"automated-testing/templates/case-study-template/#contexto","text":"Descreva o cliente e os requisitos de neg\u00f3cios com a declara\u00e7\u00e3o expl\u00edcita do problema.","title":"Contexto"},{"location":"automated-testing/templates/case-study-template/#sistema-sob-teste-sst","text":"Inclua a arquitetura conceitual do sistema e destaque os componentes da arquitetura que foram inclu\u00eddos nos testes de ponta a ponta (E2E).","title":"Sistema Sob Teste (SST)"},{"location":"automated-testing/templates/case-study-template/#problemas-e-limitacoes","text":"Descreva os problemas da solu\u00e7\u00e3o geral do SST que impediram o teste de uma parte espec\u00edfica (ou qualquer parte) da solu\u00e7\u00e3o. Descreva as limita\u00e7\u00f5es das ferramentas e frameworks de teste usados nesta implementa\u00e7\u00e3o.","title":"Problemas e Limita\u00e7\u00f5es"},{"location":"automated-testing/templates/case-study-template/#framework-e-ferramentas-de-teste-e2e","text":"Descreva qual framework e/ou ferramentas foram usadas para implementar testes E2E no SST.","title":"Framework e Ferramentas de Teste E2E"},{"location":"automated-testing/templates/case-study-template/#casos-de-teste","text":"Descreva os casos de teste E2E que foram criados para testar o SST.","title":"Casos de Teste"},{"location":"automated-testing/templates/case-study-template/#metricas-de-teste","text":"Descreva qualquer solu\u00e7\u00e3o de arquitetura que foi usada para monitorar, observar e rastrear os v\u00e1rios estados de servi\u00e7o que foram usados como m\u00e9tricas de teste E2E. Al\u00e9m disso, inclua a lista de casos de teste que foram constru\u00eddos para medir o progresso dos testes E2E.","title":"M\u00e9tricas de Teste"},{"location":"automated-testing/templates/case-study-template/#arquitetura-de-teste-e2e","text":"Descreva qualquer arquitetura de teste que foi constru\u00edda para executar testes E2E.","title":"Arquitetura de Teste E2E"},{"location":"automated-testing/templates/case-study-template/#implementacao-de-teste-e2e-exemplos-de-codigo","text":"Inclua exemplos de casos de teste e sua implementa\u00e7\u00e3o na linguagem de programa\u00e7\u00e3o de sua escolha. Inclua quaisquer blocos de implementa\u00e7\u00e3o de c\u00f3digo reutiliz\u00e1vel comuns que possam ser aproveitados em futuras implementa\u00e7\u00f5es de testes E2E do projeto.","title":"Implementa\u00e7\u00e3o de Teste E2E (Exemplos de C\u00f3digo)"},{"location":"automated-testing/templates/case-study-template/#relatorios-e-resultados-de-teste-e2e","text":"Inclua exemplos de relat\u00f3rios e resultados obtidos nas execu\u00e7\u00f5es de testes E2E neste projeto.","title":"Relat\u00f3rios e Resultados de Teste E2E"},{"location":"automated-testing/templates/test_type_template/","text":"Nome da T\u00e9cnica de Teste Aqui Insira uma vis\u00e3o geral de 2-3 frases sobre a t\u00e9cnica de teste aqui. Quando Usar Problema Abordado Descrevendo o problema que este tipo de teste aborda, isso deve focar na motiva\u00e7\u00e3o por tr\u00e1s do tipo/t\u00e9cnica de teste para ajudar o leitor a correlacionar esta t\u00e9cnica ao seu problema. Quando Evitar Descreva quando N\u00c3O usar, se aplic\u00e1vel. Ponto de Inflex\u00e3o do ROI Quanto \u00e9 suficiente? Por exemplo, alguns opinam que o ROI do teste unit\u00e1rio cai significativamente com 80% de cobertura de bloco e quando a base de c\u00f3digo \u00e9 bem exercitada por tr\u00e1fego real em produ\u00e7\u00e3o. Aplic\u00e1vel a Desenvolvimento local 'desktop' Pipelines de constru\u00e7\u00e3o Implanta\u00e7\u00f5es n\u00e3o produtivas Implanta\u00e7\u00f5es em produ\u00e7\u00e3o NOTA: Se houver uma \u00f3tima documenta\u00e7\u00e3o (clara, sucinta) para a t\u00e9cnica na web, forne\u00e7a um ponteiro e pule o resto deste modelo. N\u00e3o h\u00e1 necessidade de reescrever o conte\u00fado. Como Usar Arquitetura Descreva os componentes da t\u00e9cnica e como eles interagem entre si e com o assunto da t\u00e9cnica de teste. Adicione um diagrama simples de como as partes da t\u00e9cnica est\u00e3o organizadas, se isso ajudar a ilustrar. Pr\u00e9-requisitos Alguma coisa \u00e9 necess\u00e1ria antecipadamente? Passo a Passo de Alto N\u00edvel 1. 1. 1. Melhores Pr\u00e1ticas e Conselhos Descreva como \u00e9 um bom teste para esta t\u00e9cnica, melhores pr\u00e1ticas, armadilhas. Antipadr\u00f5es Por exemplo, testes unit\u00e1rios nunca devem exigir depend\u00eancias fora da caixa ou mesmo fora do processo. Existem coisas semelhantes a evitar ao aplicar esta t\u00e9cnica? Frameworks, Ferramentas, Modelos Descreva frameworks, ferramentas e modelos conhecidos como bons (ou seja, realmente usados e conhecidos por fornecer bons resultados), seus pr\u00f3s e contras, com links. Recursos Forne\u00e7a links para leituras adicionais sobre esta t\u00e9cnica para aprofundar o conhecimento.","title":"Nome da T\u00e9cnica de Teste Aqui"},{"location":"automated-testing/templates/test_type_template/#nome-da-tecnica-de-teste-aqui","text":"Insira uma vis\u00e3o geral de 2-3 frases sobre a t\u00e9cnica de teste aqui.","title":"Nome da T\u00e9cnica de Teste Aqui"},{"location":"automated-testing/templates/test_type_template/#quando-usar","text":"","title":"Quando Usar"},{"location":"automated-testing/templates/test_type_template/#problema-abordado","text":"Descrevendo o problema que este tipo de teste aborda, isso deve focar na motiva\u00e7\u00e3o por tr\u00e1s do tipo/t\u00e9cnica de teste para ajudar o leitor a correlacionar esta t\u00e9cnica ao seu problema.","title":"Problema Abordado"},{"location":"automated-testing/templates/test_type_template/#quando-evitar","text":"Descreva quando N\u00c3O usar, se aplic\u00e1vel.","title":"Quando Evitar"},{"location":"automated-testing/templates/test_type_template/#ponto-de-inflexao-do-roi","text":"Quanto \u00e9 suficiente? Por exemplo, alguns opinam que o ROI do teste unit\u00e1rio cai significativamente com 80% de cobertura de bloco e quando a base de c\u00f3digo \u00e9 bem exercitada por tr\u00e1fego real em produ\u00e7\u00e3o.","title":"Ponto de Inflex\u00e3o do ROI"},{"location":"automated-testing/templates/test_type_template/#aplicavel-a","text":"Desenvolvimento local 'desktop' Pipelines de constru\u00e7\u00e3o Implanta\u00e7\u00f5es n\u00e3o produtivas Implanta\u00e7\u00f5es em produ\u00e7\u00e3o","title":"Aplic\u00e1vel a"},{"location":"automated-testing/templates/test_type_template/#nota-se-houver-uma-otima-documentacao-clara-sucinta-para-a-tecnica-na-web-forneca-um-ponteiro-e-pule-o-resto-deste-modelo-nao-ha-necessidade-de-reescrever-o-conteudo","text":"","title":"NOTA: Se houver uma \u00f3tima documenta\u00e7\u00e3o (clara, sucinta) para a t\u00e9cnica na web, forne\u00e7a um ponteiro e pule o resto deste modelo. N\u00e3o h\u00e1 necessidade de reescrever o conte\u00fado."},{"location":"automated-testing/templates/test_type_template/#como-usar","text":"","title":"Como Usar"},{"location":"automated-testing/templates/test_type_template/#arquitetura","text":"Descreva os componentes da t\u00e9cnica e como eles interagem entre si e com o assunto da t\u00e9cnica de teste. Adicione um diagrama simples de como as partes da t\u00e9cnica est\u00e3o organizadas, se isso ajudar a ilustrar.","title":"Arquitetura"},{"location":"automated-testing/templates/test_type_template/#pre-requisitos","text":"Alguma coisa \u00e9 necess\u00e1ria antecipadamente?","title":"Pr\u00e9-requisitos"},{"location":"automated-testing/templates/test_type_template/#passo-a-passo-de-alto-nivel","text":"1. 1. 1.","title":"Passo a Passo de Alto N\u00edvel"},{"location":"automated-testing/templates/test_type_template/#melhores-praticas-e-conselhos","text":"Descreva como \u00e9 um bom teste para esta t\u00e9cnica, melhores pr\u00e1ticas, armadilhas.","title":"Melhores Pr\u00e1ticas e Conselhos"},{"location":"automated-testing/templates/test_type_template/#antipadroes","text":"Por exemplo, testes unit\u00e1rios nunca devem exigir depend\u00eancias fora da caixa ou mesmo fora do processo. Existem coisas semelhantes a evitar ao aplicar esta t\u00e9cnica?","title":"Antipadr\u00f5es"},{"location":"automated-testing/templates/test_type_template/#frameworks-ferramentas-modelos","text":"Descreva frameworks, ferramentas e modelos conhecidos como bons (ou seja, realmente usados e conhecidos por fornecer bons resultados), seus pr\u00f3s e contras, com links.","title":"Frameworks, Ferramentas, Modelos"},{"location":"automated-testing/templates/test_type_template/#recursos","text":"Forne\u00e7a links para leituras adicionais sobre esta t\u00e9cnica para aprofundar o conhecimento.","title":"Recursos"},{"location":"automated-testing/ui-testing/","text":"Teste de Interface do Usu\u00e1rio (UI) Esta se\u00e7\u00e3o \u00e9 voltada principalmente para UIs baseadas na web, mas as orienta\u00e7\u00f5es s\u00e3o semelhantes para aplicativos m\u00f3veis e baseados em sistemas operacionais. Aplicabilidade O teste de UI nem sempre ser\u00e1 aplic\u00e1vel, por exemplo, em aplica\u00e7\u00f5es sem uma UI ou partes de uma aplica\u00e7\u00e3o que n\u00e3o requerem intera\u00e7\u00e3o humana. Nesses casos, os testes unit\u00e1rios, funcionais e de integra\u00e7\u00e3o/e2e seriam os principais meios. O teste de UI ser\u00e1 principalmente aplic\u00e1vel ao lidar com uma UI voltada para o p\u00fablico que \u00e9 usada em um ambiente diversificado ou em uma UI cr\u00edtica que requer maior fidelidade. Com algo como uma UI de administra\u00e7\u00e3o que \u00e9 usada por apenas algumas pessoas, o teste de UI ainda \u00e9 valioso, mas n\u00e3o t\u00e3o priorit\u00e1rio. Objetivos O teste de UI fornece a capacidade de garantir que os usu\u00e1rios tenham uma experi\u00eancia visual consistente em uma variedade de meios de acesso e que a intera\u00e7\u00e3o do usu\u00e1rio seja consistente com os requisitos funcionais. Garantir que a apar\u00eancia e intera\u00e7\u00e3o da UI satisfa\u00e7am os requisitos funcionais e n\u00e3o funcionais Detectar mudan\u00e7as na UI tanto entre dispositivos e plataformas de entrega quanto entre mudan\u00e7as de c\u00f3digo Dar confian\u00e7a a designers e desenvolvedores de que a experi\u00eancia do usu\u00e1rio \u00e9 consistente Apoiar a r\u00e1pida evolu\u00e7\u00e3o do c\u00f3digo e refatora\u00e7\u00e3o, reduzindo o risco de regress\u00f5es Evid\u00eancias e Medidas Integrar testes de UI no seu CI/CD \u00e9 necess\u00e1rio, mas mais desafiador do que testes unit\u00e1rios. O desafio aumentado \u00e9 que os testes de UI precisam ser executados em modo headless com algo como Puppeteer ou precisa haver uma orquestra\u00e7\u00e3o mais extensa com Azure DevOps ou GitHub que cuidaria da integra\u00e7\u00e3o completa de testes para voc\u00ea, como BrowserStack . Integra\u00e7\u00f5es como BrowserStack s\u00e3o interessantes, pois fornecem relat\u00f3rios do Azure DevOps como parte da execu\u00e7\u00e3o do teste. Dito isso, o Azure DevOps suporta uma variedade de adaptadores de teste, ent\u00e3o voc\u00ea pode usar qualquer framework de teste de UI que suporte a sa\u00edda dos resultados do teste para um dos formatos de sa\u00edda listados em Publish Test Results task . Se voc\u00ea estiver usando um pipeline do Azure DevOps para executar testes de UI, considere usar um agente auto-hospedado para gerenciar as vers\u00f5es do framework e evitar atualiza\u00e7\u00f5es inesperadas. Orienta\u00e7\u00e3o Geral O escopo do teste de UI deve ser estrat\u00e9gico. Os testes de UI podem levar uma quantidade significativa de tempo tanto para implementar quanto para executar, e \u00e9 desafiador testar todos os tipos de intera\u00e7\u00e3o do usu\u00e1rio em um aplicativo de produ\u00e7\u00e3o devido ao grande n\u00famero de intera\u00e7\u00f5es poss\u00edveis. Projetar os testes de UI em torno dos testes funcionais faz sentido. Por exemplo, dado um formul\u00e1rio de entrada, um teste de UI garantiria que a representa\u00e7\u00e3o visual seja consistente entre dispositivos, seja acess\u00edvel e f\u00e1cil de interagir, e seja consistente entre mudan\u00e7as de c\u00f3digo. Os testes de UI pegar\u00e3o bugs de 'tempo de execu\u00e7\u00e3o' que os testes unit\u00e1rios e funcionais n\u00e3o pegar\u00e3o. Por exemplo, se o bot\u00e3o de envio de um formul\u00e1rio de entrada for renderizado, mas n\u00e3o for clic\u00e1vel devido a um bug de posicionamento na UI, ent\u00e3o isso poderia ser considerado um bug de tempo de execu\u00e7\u00e3o que n\u00e3o teria sido pego por testes unit\u00e1rios ou funcionais. Os testes de UI podem ser executados em dados fict\u00edcios ou em instant\u00e2neos de dados de produ\u00e7\u00e3o, como em QA ou staging. Escrevendo Testes Bons testes de UI seguem alguns princ\u00edpios gerais: Escolha um framework de teste de UI que permita um feedback r\u00e1pido e seja f\u00e1cil de usar Projete a UI para ser facilmente test\u00e1vel. Por exemplo, adicione seletores CSS ou defina o id em elementos de uma p\u00e1gina da web para permitir uma sele\u00e7\u00e3o mais f\u00e1cil. Teste em todos os dispositivos prim\u00e1rios que o usu\u00e1rio usa, n\u00e3o teste apenas em um \u00fanico dispositivo ou sistema operacional. Quando um teste altera dados, garanta que os dados sejam criados sob demanda e limpos posteriormente. A consequ\u00eancia de n\u00e3o fazer isso seria testes inconsistentes. Problemas Comuns O teste de UI pode se tornar muito desafiador no n\u00edvel mais baixo, especialmente com um framework de teste como o Selenium. Se voc\u00ea optar por seguir esse caminho, provavelmente encontrar\u00e1 timeouts, elementos ausentes e ter\u00e1 atrito significativo com o pr\u00f3prio framework de teste. Devido a muitos problemas com o teste de UI, surgiram v\u00e1rias solu\u00e7\u00f5es gratuitas e pagas que ajudam a aliviar certos problemas com frameworks como o Selenium. \u00c9 por isso que voc\u00ea encontrar\u00e1 o Cypress nos frameworks recomendados, pois ele resolve muitos dos problemas conhecidos com o Selenium. Este \u00e9 um ponto importante. Dependendo do framework de teste de UI que voc\u00ea escolher, o resultado ser\u00e1 uma experi\u00eancia de cria\u00e7\u00e3o de teste mais suave ou uma muito frustrante e demorada. Se voc\u00ea optar apenas pelo Selenium, os custos de desenvolvimento e os custos de tempo provavelmente ser\u00e3o muito altos. \u00c9 melhor usar um framework constru\u00eddo em cima do Selenium ou um que tente resolver muitos dos problemas com algo como o Selenium. Note que h\u00e1 outras considera\u00e7\u00f5es, como quando executado em modo headless, a UI pode renderizar de forma diferente do que voc\u00ea pode ver na sua m\u00e1quina de desenvolvimento, particularmente com aplica\u00e7\u00f5es web. Al\u00e9m disso, note que ao renderizar em diferentes dimens\u00f5es de p\u00e1gina, elementos podem desaparecer na p\u00e1gina devido a regras de CSS, portanto, n\u00e3o seriam selecion\u00e1veis por certos frameworks com op\u00e7\u00f5es padr\u00e3o fora da caixa. Todos esses problemas podem ser resolvidos e contornados, mas a renderiza\u00e7\u00e3o demonstra outro desafio particular do teste de UI. Orienta\u00e7\u00e3o Espec\u00edfica Frameworks de teste recomendados: Web BrowserStack Cypress Jest Selenium OS/Aplica\u00e7\u00f5es M\u00f3veis Coded UI tests (CUITs) Xamarin.UITest Note que o framework listado acima que \u00e9 pago \u00e9 o BrowserStack, ele est\u00e1 listado porque \u00e9 um padr\u00e3o da ind\u00fastria, o resto s\u00e3o de c\u00f3digo aberto e gratuitos.","title":"Teste de Interface do Usu\u00e1rio (UI)"},{"location":"automated-testing/ui-testing/#teste-de-interface-do-usuario-ui","text":"Esta se\u00e7\u00e3o \u00e9 voltada principalmente para UIs baseadas na web, mas as orienta\u00e7\u00f5es s\u00e3o semelhantes para aplicativos m\u00f3veis e baseados em sistemas operacionais.","title":"Teste de Interface do Usu\u00e1rio (UI)"},{"location":"automated-testing/ui-testing/#aplicabilidade","text":"O teste de UI nem sempre ser\u00e1 aplic\u00e1vel, por exemplo, em aplica\u00e7\u00f5es sem uma UI ou partes de uma aplica\u00e7\u00e3o que n\u00e3o requerem intera\u00e7\u00e3o humana. Nesses casos, os testes unit\u00e1rios, funcionais e de integra\u00e7\u00e3o/e2e seriam os principais meios. O teste de UI ser\u00e1 principalmente aplic\u00e1vel ao lidar com uma UI voltada para o p\u00fablico que \u00e9 usada em um ambiente diversificado ou em uma UI cr\u00edtica que requer maior fidelidade. Com algo como uma UI de administra\u00e7\u00e3o que \u00e9 usada por apenas algumas pessoas, o teste de UI ainda \u00e9 valioso, mas n\u00e3o t\u00e3o priorit\u00e1rio.","title":"Aplicabilidade"},{"location":"automated-testing/ui-testing/#objetivos","text":"O teste de UI fornece a capacidade de garantir que os usu\u00e1rios tenham uma experi\u00eancia visual consistente em uma variedade de meios de acesso e que a intera\u00e7\u00e3o do usu\u00e1rio seja consistente com os requisitos funcionais. Garantir que a apar\u00eancia e intera\u00e7\u00e3o da UI satisfa\u00e7am os requisitos funcionais e n\u00e3o funcionais Detectar mudan\u00e7as na UI tanto entre dispositivos e plataformas de entrega quanto entre mudan\u00e7as de c\u00f3digo Dar confian\u00e7a a designers e desenvolvedores de que a experi\u00eancia do usu\u00e1rio \u00e9 consistente Apoiar a r\u00e1pida evolu\u00e7\u00e3o do c\u00f3digo e refatora\u00e7\u00e3o, reduzindo o risco de regress\u00f5es","title":"Objetivos"},{"location":"automated-testing/ui-testing/#evidencias-e-medidas","text":"Integrar testes de UI no seu CI/CD \u00e9 necess\u00e1rio, mas mais desafiador do que testes unit\u00e1rios. O desafio aumentado \u00e9 que os testes de UI precisam ser executados em modo headless com algo como Puppeteer ou precisa haver uma orquestra\u00e7\u00e3o mais extensa com Azure DevOps ou GitHub que cuidaria da integra\u00e7\u00e3o completa de testes para voc\u00ea, como BrowserStack . Integra\u00e7\u00f5es como BrowserStack s\u00e3o interessantes, pois fornecem relat\u00f3rios do Azure DevOps como parte da execu\u00e7\u00e3o do teste. Dito isso, o Azure DevOps suporta uma variedade de adaptadores de teste, ent\u00e3o voc\u00ea pode usar qualquer framework de teste de UI que suporte a sa\u00edda dos resultados do teste para um dos formatos de sa\u00edda listados em Publish Test Results task . Se voc\u00ea estiver usando um pipeline do Azure DevOps para executar testes de UI, considere usar um agente auto-hospedado para gerenciar as vers\u00f5es do framework e evitar atualiza\u00e7\u00f5es inesperadas.","title":"Evid\u00eancias e Medidas"},{"location":"automated-testing/ui-testing/#orientacao-geral","text":"O escopo do teste de UI deve ser estrat\u00e9gico. Os testes de UI podem levar uma quantidade significativa de tempo tanto para implementar quanto para executar, e \u00e9 desafiador testar todos os tipos de intera\u00e7\u00e3o do usu\u00e1rio em um aplicativo de produ\u00e7\u00e3o devido ao grande n\u00famero de intera\u00e7\u00f5es poss\u00edveis. Projetar os testes de UI em torno dos testes funcionais faz sentido. Por exemplo, dado um formul\u00e1rio de entrada, um teste de UI garantiria que a representa\u00e7\u00e3o visual seja consistente entre dispositivos, seja acess\u00edvel e f\u00e1cil de interagir, e seja consistente entre mudan\u00e7as de c\u00f3digo. Os testes de UI pegar\u00e3o bugs de 'tempo de execu\u00e7\u00e3o' que os testes unit\u00e1rios e funcionais n\u00e3o pegar\u00e3o. Por exemplo, se o bot\u00e3o de envio de um formul\u00e1rio de entrada for renderizado, mas n\u00e3o for clic\u00e1vel devido a um bug de posicionamento na UI, ent\u00e3o isso poderia ser considerado um bug de tempo de execu\u00e7\u00e3o que n\u00e3o teria sido pego por testes unit\u00e1rios ou funcionais. Os testes de UI podem ser executados em dados fict\u00edcios ou em instant\u00e2neos de dados de produ\u00e7\u00e3o, como em QA ou staging.","title":"Orienta\u00e7\u00e3o Geral"},{"location":"automated-testing/ui-testing/#escrevendo-testes","text":"Bons testes de UI seguem alguns princ\u00edpios gerais: Escolha um framework de teste de UI que permita um feedback r\u00e1pido e seja f\u00e1cil de usar Projete a UI para ser facilmente test\u00e1vel. Por exemplo, adicione seletores CSS ou defina o id em elementos de uma p\u00e1gina da web para permitir uma sele\u00e7\u00e3o mais f\u00e1cil. Teste em todos os dispositivos prim\u00e1rios que o usu\u00e1rio usa, n\u00e3o teste apenas em um \u00fanico dispositivo ou sistema operacional. Quando um teste altera dados, garanta que os dados sejam criados sob demanda e limpos posteriormente. A consequ\u00eancia de n\u00e3o fazer isso seria testes inconsistentes.","title":"Escrevendo Testes"},{"location":"automated-testing/ui-testing/#problemas-comuns","text":"O teste de UI pode se tornar muito desafiador no n\u00edvel mais baixo, especialmente com um framework de teste como o Selenium. Se voc\u00ea optar por seguir esse caminho, provavelmente encontrar\u00e1 timeouts, elementos ausentes e ter\u00e1 atrito significativo com o pr\u00f3prio framework de teste. Devido a muitos problemas com o teste de UI, surgiram v\u00e1rias solu\u00e7\u00f5es gratuitas e pagas que ajudam a aliviar certos problemas com frameworks como o Selenium. \u00c9 por isso que voc\u00ea encontrar\u00e1 o Cypress nos frameworks recomendados, pois ele resolve muitos dos problemas conhecidos com o Selenium. Este \u00e9 um ponto importante. Dependendo do framework de teste de UI que voc\u00ea escolher, o resultado ser\u00e1 uma experi\u00eancia de cria\u00e7\u00e3o de teste mais suave ou uma muito frustrante e demorada. Se voc\u00ea optar apenas pelo Selenium, os custos de desenvolvimento e os custos de tempo provavelmente ser\u00e3o muito altos. \u00c9 melhor usar um framework constru\u00eddo em cima do Selenium ou um que tente resolver muitos dos problemas com algo como o Selenium. Note que h\u00e1 outras considera\u00e7\u00f5es, como quando executado em modo headless, a UI pode renderizar de forma diferente do que voc\u00ea pode ver na sua m\u00e1quina de desenvolvimento, particularmente com aplica\u00e7\u00f5es web. Al\u00e9m disso, note que ao renderizar em diferentes dimens\u00f5es de p\u00e1gina, elementos podem desaparecer na p\u00e1gina devido a regras de CSS, portanto, n\u00e3o seriam selecion\u00e1veis por certos frameworks com op\u00e7\u00f5es padr\u00e3o fora da caixa. Todos esses problemas podem ser resolvidos e contornados, mas a renderiza\u00e7\u00e3o demonstra outro desafio particular do teste de UI.","title":"Problemas Comuns"},{"location":"automated-testing/ui-testing/#orientacao-especifica","text":"Frameworks de teste recomendados: Web BrowserStack Cypress Jest Selenium OS/Aplica\u00e7\u00f5es M\u00f3veis Coded UI tests (CUITs) Xamarin.UITest Note que o framework listado acima que \u00e9 pago \u00e9 o BrowserStack, ele est\u00e1 listado porque \u00e9 um padr\u00e3o da ind\u00fastria, o resto s\u00e3o de c\u00f3digo aberto e gratuitos.","title":"Orienta\u00e7\u00e3o Espec\u00edfica"},{"location":"automated-testing/unit-testing/","text":"Teste de Unidade O teste de unidade \u00e9 uma ferramenta fundamental no conjunto de ferramentas de todo desenvolvedor. Testes de unidade n\u00e3o apenas nos ajudam a testar nosso c\u00f3digo, mas tamb\u00e9m incentivam boas pr\u00e1ticas de design, reduzem as chances de bugs chegarem \u00e0 produ\u00e7\u00e3o e podem at\u00e9 servir como exemplos ou documenta\u00e7\u00e3o sobre como o c\u00f3digo funciona. Testes de unidade bem escritos tamb\u00e9m podem melhorar a efici\u00eancia do desenvolvedor. O teste de unidade tamb\u00e9m \u00e9 uma das formas mais comumente mal compreendidas de teste. Teste de unidade se refere a um tipo muito espec\u00edfico de teste; um teste de unidade deve ser: Comprovadamente confi\u00e1vel - deve ser 100% confi\u00e1vel para que falhas indiquem um bug no c\u00f3digo R\u00e1pido - deve ser executado em milissegundos, uma su\u00edte completa de teste de unidade n\u00e3o deve demorar mais do que alguns segundos Isolado - remover todas as depend\u00eancias externas garante confiabilidade e velocidade Por que Teste de Unidade N\u00e3o \u00e9 segredo que escrever testes de unidade \u00e9 dif\u00edcil e ainda mais dif\u00edcil escrev\u00ea-los bem. Escrever testes de unidade tamb\u00e9m aumenta o tempo de desenvolvimento para cada funcionalidade. Ent\u00e3o, por que devemos escrev\u00ea-los? Testes de unidade: reduzem custos ao detectar bugs mais cedo e evitar regress\u00f5es aumentam a confian\u00e7a do desenvolvedor nas mudan\u00e7as aceleram o ciclo interno do desenvolvedor atuam como documenta\u00e7\u00e3o como c\u00f3digo Para mais detalhes, veja todas as descri\u00e7\u00f5es detalhadas dos pontos acima . Blocos de Design de Teste de Unidade O teste de unidade \u00e9 o n\u00edvel mais baixo de teste e, como tal, geralmente tem poucos componentes e depend\u00eancias. O sistema sob teste (abreviado como SUT) \u00e9 a \"unidade\" que estamos testando. Geralmente, s\u00e3o m\u00e9todos ou fun\u00e7\u00f5es, mas dependendo da linguagem, esses podem ser diferentes. Em geral, voc\u00ea quer que a unidade seja o menor poss\u00edvel. A maioria das linguagens tamb\u00e9m possui uma ampla su\u00edte de frameworks de teste de unidade e executores de teste. Esses frameworks de teste t\u00eam uma ampla gama de funcionalidades, mas a funcionalidade b\u00e1sica deve ser uma forma de organizar seus testes e execut\u00e1-los rapidamente. Finalmente, h\u00e1 o seu c\u00f3digo de teste de unidade ; o c\u00f3digo de teste de unidade geralmente \u00e9 curto e simples, preferindo repeti\u00e7\u00e3o a adicionar camadas e complexidade ao c\u00f3digo. Aplicando o Teste de Unidade Come\u00e7ar a escrever um teste de unidade \u00e9 muito mais f\u00e1cil do que alguns outros tipos de teste, j\u00e1 que deve exigir quase nenhuma configura\u00e7\u00e3o e \u00e9 apenas c\u00f3digo. Cada framework de teste \u00e9 diferente na forma como voc\u00ea organiza e escreve seus testes, mas as t\u00e9cnicas gerais e melhores pr\u00e1ticas de escrita de um teste de unidade s\u00e3o universais. T\u00e9cnicas Essas s\u00e3o algumas t\u00e9cnicas comumente usadas que ajudar\u00e3o na autoria de testes de unidade. Para alguns exemplos, veja as p\u00e1ginas sobre o uso de abstra\u00e7\u00e3o e inje\u00e7\u00e3o de depend\u00eancia para criar um teste de unidade ou como fazer desenvolvimento orientado por testes . Observe que algumas dessas t\u00e9cnicas s\u00e3o mais espec\u00edficas para linguagens fortemente tipadas e orientadas a objetos. Linguagens funcionais e linguagens de script t\u00eam t\u00e9cnicas semelhantes que podem parecer diferentes, mas esses termos s\u00e3o comumente usados em todos os exemplos de teste de unidade. Abstra\u00e7\u00e3o A abstra\u00e7\u00e3o \u00e9 quando pegamos um detalhe de implementa\u00e7\u00e3o exato e o generalizamos em um conceito. Essa t\u00e9cnica pode ser usada na cria\u00e7\u00e3o de design test\u00e1vel e \u00e9 usada com frequ\u00eancia, especialmente em linguagens orientadas a objetos. Para testes de unidade, a abstra\u00e7\u00e3o \u00e9 comumente usada para quebrar uma depend\u00eancia r\u00edgida e substitu\u00ed-la por uma abstra\u00e7\u00e3o. Essa abstra\u00e7\u00e3o permite ent\u00e3o maior flexibilidade no c\u00f3digo e permite que um mock ou simulador seja usado em seu lugar. Um dos efeitos colaterais da abstra\u00e7\u00e3o de depend\u00eancias \u00e9 que voc\u00ea pode ter uma abstra\u00e7\u00e3o que n\u00e3o tem cobertura de teste. Este \u00e9 um caso em que o teste de unidade n\u00e3o \u00e9 bem adequado, voc\u00ea n\u00e3o pode esperar testar tudo em unidade, coisas como depend\u00eancias sempre ser\u00e3o um caso n\u00e3o coberto. \u00c9 por isso que mesmo se voc\u00ea tiver uma su\u00edte robusta de teste de unidade, teste de integra\u00e7\u00e3o ou teste funcional ainda deve ser usado - sem isso, uma mudan\u00e7a na forma como a depend\u00eancia funciona nunca seria detectada. Ao criar wrappers em torno de depend\u00eancias de terceiros, \u00e9 melhor manter as implementa\u00e7\u00f5es com o m\u00ednimo de l\u00f3gica poss\u00edvel, usando uma fachada muito simples que chama a depend\u00eancia. Um exemplo de uso de abstra\u00e7\u00e3o pode ser encontrado aqui . Inje\u00e7\u00e3o de Depend\u00eancia A inje\u00e7\u00e3o de depend\u00eancia \u00e9 uma t\u00e9cnica que nos permite extrair depend\u00eancias do nosso c\u00f3digo. Em um caso de uso normal de uma classe dependente, a depend\u00eancia \u00e9 constru\u00edda e usada dentro do sistema sob teste. Isso cria uma depend\u00eancia r\u00edgida entre as duas classes, o que pode torn\u00e1-la particularmente dif\u00edcil de testar isoladamente. Depend\u00eancias podem ser coisas como classes que envolvem uma API REST ou at\u00e9 mesmo algo t\u00e3o simples quanto o acesso a arquivos. Ao injetar as depend\u00eancias em nosso sistema em vez de constru\u00ed-las, \"invertemos o controle\" da depend\u00eancia. Voc\u00ea pode ver \"Invers\u00e3o de Controle\" e \"Inje\u00e7\u00e3o de Depend\u00eancia\" usados como termos separados, mas \u00e9 muito dif\u00edcil ter um e n\u00e3o o outro, com alguns argumentando que Inje\u00e7\u00e3o de Depend\u00eancia \u00e9 uma forma mais espec\u00edfica de dizer invers\u00e3o de controle . Em certas linguagens como C#, n\u00e3o usar inje\u00e7\u00e3o de depend\u00eancia pode levar a um c\u00f3digo que n\u00e3o \u00e9 test\u00e1vel em unidade, j\u00e1 que n\u00e3o h\u00e1 como injetar objetos simulados. Manter a testabilidade em mente desde o in\u00edcio e avaliar o uso da inje\u00e7\u00e3o de depend\u00eancia pode poupar voc\u00ea de um refatoramento demorado mais tarde. Uma das desvantagens da inje\u00e7\u00e3o de depend\u00eancia \u00e9 que ela pode facilmente sair do controle. Embora n\u00e3o haja mais depend\u00eancias r\u00edgidas, ainda h\u00e1 acoplamento entre as interfaces, e passar todas as implementa\u00e7\u00f5es de interface para todas as classes apresenta tantas desvantagens quanto n\u00e3o usar Inje\u00e7\u00e3o de Depend\u00eancia. Ser intencional com quais depend\u00eancias s\u00e3o injetadas em quais classes \u00e9 a chave para desenvolver um sistema sustent\u00e1vel. Muitas linguagens incluem frameworks especiais de Inje\u00e7\u00e3o de Depend\u00eancia que cuidam do c\u00f3digo de inicializa\u00e7\u00e3o e constru\u00e7\u00e3o dos objetos. Exemplos disso s\u00e3o Spring em Java ou embutido em ASP.NET Core . Um exemplo de uso de inje\u00e7\u00e3o de depend\u00eancia pode ser encontrado aqui . Desenvolvimento Orientado por Testes O Desenvolvimento Orientado por Testes (TDD) \u00e9 menos uma t\u00e9cnica em como seu c\u00f3digo \u00e9 projetado, mas uma t\u00e9cnica para escrever seu c\u00f3digo que o levar\u00e1 a um design test\u00e1vel desde o in\u00edcio. A premissa b\u00e1sica do desenvolvimento orientado por testes \u00e9 que voc\u00ea escreve seu c\u00f3digo de teste primeiro e depois escreve o sistema sob teste para corresponder ao teste que voc\u00ea acabou de escrever. Dessa forma, todo o design do teste \u00e9 feito antecipadamente e, quando voc\u00ea termina de escrever seu c\u00f3digo do sistema, j\u00e1 est\u00e1 com 100% de taxa de aprova\u00e7\u00e3o e cobertura de teste. Tamb\u00e9m garante que o design test\u00e1vel seja incorporado ao sistema, j\u00e1 que o teste foi escrito primeiro! Para mais informa\u00e7\u00f5es sobre TDD e um exemplo, veja a p\u00e1gina sobre Desenvolvimento Orientado por Testes . Melhores Pr\u00e1ticas Organizar/Agir/Afirmar Uma forma comum de organizar seu c\u00f3digo de teste de unidade \u00e9 chamada de Organizar/Agir/Afirmar. Isso divide seu teste de unidade em 3 se\u00e7\u00f5es diferentes e discretas: Organizar - Configure todas as vari\u00e1veis, mocks, interfaces e estados de que voc\u00ea precisar\u00e1 para executar o teste Agir - Execute o sistema sob teste, passando qualquer um dos objetos acima que foram criados Afirmar - Verifique que, com o estado dado, o sistema agiu adequadamente. Usar esse padr\u00e3o para escrever testes torna-os muito leg\u00edveis e tamb\u00e9m familiares para futuros desenvolvedores que precisariam ler seus testes de unidade. Exemplo Vamos supor que temos uma classe MeuObjeto com um m\u00e9todo TentarAlgo que interage com uma matriz de strings, mas se a matriz n\u00e3o tiver elementos, ele retornar\u00e1 falso. Queremos escrever um teste que verifica o caso em que a matriz n\u00e3o tem elementos: [Fact] public void TentarAlgo_SemElementos_RetornaFalso () { // Organizar var elementos = Array . Empty < string > (); var meuObjeto = new MeuObjeto (); // Agir var meuRetorno = meuObjeto . TentarAlgo ( elementos ); // Afirmar Assert . False ( meuRetorno ); } Mantenha os testes pequenos e teste apenas uma coisa Os testes de unidade devem ser curtos e testar apenas uma coisa. Isso facilita o diagn\u00f3stico quando houve uma falha sem precisar de algo como o n\u00famero da linha em que o teste falhou. Ao usar Organizar/Agir/Afirmar , pense nisso como testar apenas uma coisa na fase \"Agir\". H\u00e1 algum desacordo sobre se testar uma coisa significa \"afirmar uma coisa\" ou \"testar um estado, com v\u00e1rias afirma\u00e7\u00f5es, se necess\u00e1rio\". Ambos t\u00eam suas vantagens e desvantagens, mas como na maioria dos desacordos t\u00e9cnicos, n\u00e3o h\u00e1 uma \"resposta certa\". A consist\u00eancia ao escrever seus testes de uma forma ou de outra \u00e9 mais importante! Usando uma conven\u00e7\u00e3o de nomenclatura padr\u00e3o para todos os testes de unidade Sem ter uma conven\u00e7\u00e3o padr\u00e3o estabelecida para os nomes dos testes de unidade, os nomes dos testes de unidade acabam sendo ou n\u00e3o descritivos o suficiente ou duplicados em v\u00e1rias classes de teste diferentes. Estabelecer um padr\u00e3o n\u00e3o \u00e9 apenas importante para manter seu c\u00f3digo consistente, mas um bom padr\u00e3o tamb\u00e9m melhora a legibilidade e a capacidade de depura\u00e7\u00e3o de um teste. Neste artigo, a conven\u00e7\u00e3o usada para todos os testes de unidade foi NomeDaUnidade_EstadoSobTeste_ResultadoEsperado , mas h\u00e1 muitas outras conven\u00e7\u00f5es poss\u00edveis tamb\u00e9m, o importante \u00e9 ser consistente e descritivo. Ter nomes descritivos como o acima torna trivial encontrar o teste quando h\u00e1 uma falha e tamb\u00e9m j\u00e1 explica qual era a expectativa do teste e qual estado fez com que ele falhasse. Isso pode ser especialmente \u00fatil ao olhar para falhas em um sistema de CI/CD onde tudo o que voc\u00ea sabe \u00e9 o nome do teste que falhou - em vez disso, agora voc\u00ea sabe o nome do teste e exatamente por que ele falhou (especialmente acoplado com um framework de teste que registra sa\u00eddas \u00fateis em falhas). Coisas a Evitar Alguns problemas comuns ao escrever um teste de unidade que s\u00e3o importantes de evitar: Sleeps - Um sleep pode ser um indicador de que talvez algo esteja fazendo uma solicita\u00e7\u00e3o a uma depend\u00eancia que n\u00e3o deveria. Em geral, se seu c\u00f3digo \u00e9 inst\u00e1vel sem o sleep, considere por que ele est\u00e1 falhando e se voc\u00ea pode remover a instabilidade introduzindo uma forma mais confi\u00e1vel de comunicar poss\u00edveis mudan\u00e7as de estado. Adicionar sleeps aos seus testes de unidade tamb\u00e9m quebra um dos nossos princ\u00edpios originais de teste de unidade: os testes devem ser r\u00e1pidos, na ordem de milissegundos. Se os testes est\u00e3o demorando na ordem de segundos, eles se tornam mais dif\u00edceis de executar. Leitura do disco - Pode ser realmente tentador colocar o valor esperado de um retorno de fun\u00e7\u00e3o em um arquivo e ler esse arquivo para comparar os resultados. Isso cria uma depend\u00eancia com o sistema de arquivos e quebra nosso princ\u00edpio de manter nossos testes de unidade isolados e 100% confi\u00e1veis . Qualquer depend\u00eancia externa, como acesso ao sistema de arquivos, pode potencialmente causar falhas intermitentes. Al\u00e9m disso, isso pode ser um sinal de que talvez o teste ou a unidade sob teste seja muito complexa e deva ser simplificada. - Chamadas de APIs de terceiros - Quando voc\u00ea n\u00e3o controla uma biblioteca de terceiros que est\u00e1 chamando, \u00e9 imposs\u00edvel saber com certeza o que ela est\u00e1 fazendo, e \u00e9 melhor abstrai-la. Caso contr\u00e1rio, voc\u00ea pode estar fazendo chamadas REST ou outras \u00e1reas potenciais de falha sem escrever diretamente o c\u00f3digo para isso. Isso tamb\u00e9m \u00e9 geralmente um sinal de que o design do sistema n\u00e3o \u00e9 totalmente test\u00e1vel. \u00c9 melhor envolver chamadas de API de terceiros em interfaces ou outras estruturas para que elas n\u00e3o sejam invocadas em testes de unidade. Para mais informa\u00e7\u00f5es, consulte a p\u00e1gina sobre mocking . Frameworks e Ferramentas de Teste de Unidade Frameworks de Teste Os frameworks de teste de unidade est\u00e3o em constante mudan\u00e7a. Para uma lista completa de todos os frameworks de teste de unidade veja a p\u00e1gina na Wikipedia . Os frameworks t\u00eam muitos recursos e devem ser escolhidos com base em qual conjunto de recursos se encaixa melhor para o projeto em particular. Frameworks de Mock Muitos projetos come\u00e7am com um framework de teste de unidade e tamb\u00e9m adicionam um framework de mock. Embora os frameworks de mock tenham seus usos e \u00e0s vezes possam ser um requisito, n\u00e3o deve ser algo que \u00e9 adicionado sem considerar as implica\u00e7\u00f5es e riscos mais amplos associados ao uso pesado de mocks. Para ver se o uso de mocks \u00e9 adequado para o seu projeto, ou se uma abordagem sem mocks \u00e9 mais apropriada, consulte a p\u00e1gina sobre mocking . Ferramentas Essas ferramentas permitem a execu\u00e7\u00e3o constante de seus testes de unidade com cobertura de c\u00f3digo em linha, tornando o ciclo interno de desenvolvimento extremamente r\u00e1pido e permitindo um f\u00e1cil TDD: Visual Studio Live Unit Testing Wallaby.js Infinitest para Java PyCrunch para Python Coisas a Considerar Transferindo a responsabilidade para testes de integra\u00e7\u00e3o Em algumas situa\u00e7\u00f5es, vale a pena considerar incluir os testes de integra\u00e7\u00e3o no ciclo interno de desenvolvimento para fornecer uma cobertura de c\u00f3digo suficiente para garantir que o sistema est\u00e1 funcionando corretamente. O pr\u00e9-requisito para que essa abordagem seja bem-sucedida \u00e9 ter testes de integra\u00e7\u00e3o capazes de serem executados a uma velocidade compar\u00e1vel \u00e0 dos testes de unidade, tanto localmente quanto em um ambiente de CI. Frameworks de aplica\u00e7\u00e3o modernos como .NET ou Spring Boot, combinados com a abordagem de mocking ou stubbing correta para depend\u00eancias externas, oferecem excelentes capacidades para habilitar tais cen\u00e1rios para testes. Normalmente, os testes de integra\u00e7\u00e3o apenas provam que os m\u00f3dulos desenvolvidos independentemente se conectam conforme projetado. A cobertura de teste dos testes de integra\u00e7\u00e3o pode ser estendida para verificar o comportamento correto do sistema tamb\u00e9m. A responsabilidade de fornecer uma cobertura de c\u00f3digo de ramo e linha suficiente pode ser transferida dos testes de unidade para os testes de integra\u00e7\u00e3o. Em vez de v\u00e1rios testes de unidade necess\u00e1rios para testar um caso espec\u00edfico de funcionalidade do sistema, um cen\u00e1rio de integra\u00e7\u00e3o \u00e9 criado que cobre todo o fluxo. Por exemplo, no caso de uma API, as respostas HTTP recebidas e seu conte\u00fado s\u00e3o verificados para cada solicita\u00e7\u00e3o no teste. Isso cobre tanto a integra\u00e7\u00e3o entre os componentes da API quanto a corre\u00e7\u00e3o de sua l\u00f3gica de neg\u00f3cios. Com essa abordagem, testes de integra\u00e7\u00e3o eficientes podem ser tratados como uma extens\u00e3o do teste de unidade, assumindo a responsabilidade de validar cen\u00e1rios de caminho feliz/falha. Ele tem a vantagem de testar o sistema como uma caixa preta, sem qualquer conhecimento de seus componentes internos. A refatora\u00e7\u00e3o de c\u00f3digo n\u00e3o tem impacto nos testes. T\u00e9cnicas comuns de teste como TDD podem ser aplicadas em um n\u00edvel mais alto, resultando em um processo de desenvolvimento orientado por testes de aceita\u00e7\u00e3o. Dependendo das especificidades do projeto, os testes de unidade ainda desempenham um papel importante. Eles podem ser usados para ajudar a ditar um design test\u00e1vel em um n\u00edvel mais baixo ou para testar l\u00f3gica de neg\u00f3cios complexa e casos extremos, se necess\u00e1rio. Conclus\u00e3o O teste de unidade \u00e9 extremamente importante, mas tamb\u00e9m n\u00e3o \u00e9 a bala de prata; ter testes de unidade adequados \u00e9 apenas uma parte de um sistema bem testado. No entanto, escrever testes de unidade adequados ajudar\u00e1 no design do seu sistema, bem como ajudar\u00e1 a capturar regress\u00f5es, bugs e aumentar a velocidade do desenvolvedor. Recursos Melhores Pr\u00e1ticas de Teste de Unidade","title":"Teste de Unidade"},{"location":"automated-testing/unit-testing/#teste-de-unidade","text":"O teste de unidade \u00e9 uma ferramenta fundamental no conjunto de ferramentas de todo desenvolvedor. Testes de unidade n\u00e3o apenas nos ajudam a testar nosso c\u00f3digo, mas tamb\u00e9m incentivam boas pr\u00e1ticas de design, reduzem as chances de bugs chegarem \u00e0 produ\u00e7\u00e3o e podem at\u00e9 servir como exemplos ou documenta\u00e7\u00e3o sobre como o c\u00f3digo funciona. Testes de unidade bem escritos tamb\u00e9m podem melhorar a efici\u00eancia do desenvolvedor. O teste de unidade tamb\u00e9m \u00e9 uma das formas mais comumente mal compreendidas de teste. Teste de unidade se refere a um tipo muito espec\u00edfico de teste; um teste de unidade deve ser: Comprovadamente confi\u00e1vel - deve ser 100% confi\u00e1vel para que falhas indiquem um bug no c\u00f3digo R\u00e1pido - deve ser executado em milissegundos, uma su\u00edte completa de teste de unidade n\u00e3o deve demorar mais do que alguns segundos Isolado - remover todas as depend\u00eancias externas garante confiabilidade e velocidade","title":"Teste de Unidade"},{"location":"automated-testing/unit-testing/#por-que-teste-de-unidade","text":"N\u00e3o \u00e9 segredo que escrever testes de unidade \u00e9 dif\u00edcil e ainda mais dif\u00edcil escrev\u00ea-los bem. Escrever testes de unidade tamb\u00e9m aumenta o tempo de desenvolvimento para cada funcionalidade. Ent\u00e3o, por que devemos escrev\u00ea-los? Testes de unidade: reduzem custos ao detectar bugs mais cedo e evitar regress\u00f5es aumentam a confian\u00e7a do desenvolvedor nas mudan\u00e7as aceleram o ciclo interno do desenvolvedor atuam como documenta\u00e7\u00e3o como c\u00f3digo Para mais detalhes, veja todas as descri\u00e7\u00f5es detalhadas dos pontos acima .","title":"Por que Teste de Unidade"},{"location":"automated-testing/unit-testing/#blocos-de-design-de-teste-de-unidade","text":"O teste de unidade \u00e9 o n\u00edvel mais baixo de teste e, como tal, geralmente tem poucos componentes e depend\u00eancias. O sistema sob teste (abreviado como SUT) \u00e9 a \"unidade\" que estamos testando. Geralmente, s\u00e3o m\u00e9todos ou fun\u00e7\u00f5es, mas dependendo da linguagem, esses podem ser diferentes. Em geral, voc\u00ea quer que a unidade seja o menor poss\u00edvel. A maioria das linguagens tamb\u00e9m possui uma ampla su\u00edte de frameworks de teste de unidade e executores de teste. Esses frameworks de teste t\u00eam uma ampla gama de funcionalidades, mas a funcionalidade b\u00e1sica deve ser uma forma de organizar seus testes e execut\u00e1-los rapidamente. Finalmente, h\u00e1 o seu c\u00f3digo de teste de unidade ; o c\u00f3digo de teste de unidade geralmente \u00e9 curto e simples, preferindo repeti\u00e7\u00e3o a adicionar camadas e complexidade ao c\u00f3digo.","title":"Blocos de Design de Teste de Unidade"},{"location":"automated-testing/unit-testing/#aplicando-o-teste-de-unidade","text":"Come\u00e7ar a escrever um teste de unidade \u00e9 muito mais f\u00e1cil do que alguns outros tipos de teste, j\u00e1 que deve exigir quase nenhuma configura\u00e7\u00e3o e \u00e9 apenas c\u00f3digo. Cada framework de teste \u00e9 diferente na forma como voc\u00ea organiza e escreve seus testes, mas as t\u00e9cnicas gerais e melhores pr\u00e1ticas de escrita de um teste de unidade s\u00e3o universais.","title":"Aplicando o Teste de Unidade"},{"location":"automated-testing/unit-testing/#tecnicas","text":"Essas s\u00e3o algumas t\u00e9cnicas comumente usadas que ajudar\u00e3o na autoria de testes de unidade. Para alguns exemplos, veja as p\u00e1ginas sobre o uso de abstra\u00e7\u00e3o e inje\u00e7\u00e3o de depend\u00eancia para criar um teste de unidade ou como fazer desenvolvimento orientado por testes . Observe que algumas dessas t\u00e9cnicas s\u00e3o mais espec\u00edficas para linguagens fortemente tipadas e orientadas a objetos. Linguagens funcionais e linguagens de script t\u00eam t\u00e9cnicas semelhantes que podem parecer diferentes, mas esses termos s\u00e3o comumente usados em todos os exemplos de teste de unidade.","title":"T\u00e9cnicas"},{"location":"automated-testing/unit-testing/#abstracao","text":"A abstra\u00e7\u00e3o \u00e9 quando pegamos um detalhe de implementa\u00e7\u00e3o exato e o generalizamos em um conceito. Essa t\u00e9cnica pode ser usada na cria\u00e7\u00e3o de design test\u00e1vel e \u00e9 usada com frequ\u00eancia, especialmente em linguagens orientadas a objetos. Para testes de unidade, a abstra\u00e7\u00e3o \u00e9 comumente usada para quebrar uma depend\u00eancia r\u00edgida e substitu\u00ed-la por uma abstra\u00e7\u00e3o. Essa abstra\u00e7\u00e3o permite ent\u00e3o maior flexibilidade no c\u00f3digo e permite que um mock ou simulador seja usado em seu lugar. Um dos efeitos colaterais da abstra\u00e7\u00e3o de depend\u00eancias \u00e9 que voc\u00ea pode ter uma abstra\u00e7\u00e3o que n\u00e3o tem cobertura de teste. Este \u00e9 um caso em que o teste de unidade n\u00e3o \u00e9 bem adequado, voc\u00ea n\u00e3o pode esperar testar tudo em unidade, coisas como depend\u00eancias sempre ser\u00e3o um caso n\u00e3o coberto. \u00c9 por isso que mesmo se voc\u00ea tiver uma su\u00edte robusta de teste de unidade, teste de integra\u00e7\u00e3o ou teste funcional ainda deve ser usado - sem isso, uma mudan\u00e7a na forma como a depend\u00eancia funciona nunca seria detectada. Ao criar wrappers em torno de depend\u00eancias de terceiros, \u00e9 melhor manter as implementa\u00e7\u00f5es com o m\u00ednimo de l\u00f3gica poss\u00edvel, usando uma fachada muito simples que chama a depend\u00eancia. Um exemplo de uso de abstra\u00e7\u00e3o pode ser encontrado aqui .","title":"Abstra\u00e7\u00e3o"},{"location":"automated-testing/unit-testing/#injecao-de-dependencia","text":"A inje\u00e7\u00e3o de depend\u00eancia \u00e9 uma t\u00e9cnica que nos permite extrair depend\u00eancias do nosso c\u00f3digo. Em um caso de uso normal de uma classe dependente, a depend\u00eancia \u00e9 constru\u00edda e usada dentro do sistema sob teste. Isso cria uma depend\u00eancia r\u00edgida entre as duas classes, o que pode torn\u00e1-la particularmente dif\u00edcil de testar isoladamente. Depend\u00eancias podem ser coisas como classes que envolvem uma API REST ou at\u00e9 mesmo algo t\u00e3o simples quanto o acesso a arquivos. Ao injetar as depend\u00eancias em nosso sistema em vez de constru\u00ed-las, \"invertemos o controle\" da depend\u00eancia. Voc\u00ea pode ver \"Invers\u00e3o de Controle\" e \"Inje\u00e7\u00e3o de Depend\u00eancia\" usados como termos separados, mas \u00e9 muito dif\u00edcil ter um e n\u00e3o o outro, com alguns argumentando que Inje\u00e7\u00e3o de Depend\u00eancia \u00e9 uma forma mais espec\u00edfica de dizer invers\u00e3o de controle . Em certas linguagens como C#, n\u00e3o usar inje\u00e7\u00e3o de depend\u00eancia pode levar a um c\u00f3digo que n\u00e3o \u00e9 test\u00e1vel em unidade, j\u00e1 que n\u00e3o h\u00e1 como injetar objetos simulados. Manter a testabilidade em mente desde o in\u00edcio e avaliar o uso da inje\u00e7\u00e3o de depend\u00eancia pode poupar voc\u00ea de um refatoramento demorado mais tarde. Uma das desvantagens da inje\u00e7\u00e3o de depend\u00eancia \u00e9 que ela pode facilmente sair do controle. Embora n\u00e3o haja mais depend\u00eancias r\u00edgidas, ainda h\u00e1 acoplamento entre as interfaces, e passar todas as implementa\u00e7\u00f5es de interface para todas as classes apresenta tantas desvantagens quanto n\u00e3o usar Inje\u00e7\u00e3o de Depend\u00eancia. Ser intencional com quais depend\u00eancias s\u00e3o injetadas em quais classes \u00e9 a chave para desenvolver um sistema sustent\u00e1vel. Muitas linguagens incluem frameworks especiais de Inje\u00e7\u00e3o de Depend\u00eancia que cuidam do c\u00f3digo de inicializa\u00e7\u00e3o e constru\u00e7\u00e3o dos objetos. Exemplos disso s\u00e3o Spring em Java ou embutido em ASP.NET Core . Um exemplo de uso de inje\u00e7\u00e3o de depend\u00eancia pode ser encontrado aqui .","title":"Inje\u00e7\u00e3o de Depend\u00eancia"},{"location":"automated-testing/unit-testing/#desenvolvimento-orientado-por-testes","text":"O Desenvolvimento Orientado por Testes (TDD) \u00e9 menos uma t\u00e9cnica em como seu c\u00f3digo \u00e9 projetado, mas uma t\u00e9cnica para escrever seu c\u00f3digo que o levar\u00e1 a um design test\u00e1vel desde o in\u00edcio. A premissa b\u00e1sica do desenvolvimento orientado por testes \u00e9 que voc\u00ea escreve seu c\u00f3digo de teste primeiro e depois escreve o sistema sob teste para corresponder ao teste que voc\u00ea acabou de escrever. Dessa forma, todo o design do teste \u00e9 feito antecipadamente e, quando voc\u00ea termina de escrever seu c\u00f3digo do sistema, j\u00e1 est\u00e1 com 100% de taxa de aprova\u00e7\u00e3o e cobertura de teste. Tamb\u00e9m garante que o design test\u00e1vel seja incorporado ao sistema, j\u00e1 que o teste foi escrito primeiro! Para mais informa\u00e7\u00f5es sobre TDD e um exemplo, veja a p\u00e1gina sobre Desenvolvimento Orientado por Testes .","title":"Desenvolvimento Orientado por Testes"},{"location":"automated-testing/unit-testing/#melhores-praticas","text":"","title":"Melhores Pr\u00e1ticas"},{"location":"automated-testing/unit-testing/#organizaragirafirmar","text":"Uma forma comum de organizar seu c\u00f3digo de teste de unidade \u00e9 chamada de Organizar/Agir/Afirmar. Isso divide seu teste de unidade em 3 se\u00e7\u00f5es diferentes e discretas: Organizar - Configure todas as vari\u00e1veis, mocks, interfaces e estados de que voc\u00ea precisar\u00e1 para executar o teste Agir - Execute o sistema sob teste, passando qualquer um dos objetos acima que foram criados Afirmar - Verifique que, com o estado dado, o sistema agiu adequadamente. Usar esse padr\u00e3o para escrever testes torna-os muito leg\u00edveis e tamb\u00e9m familiares para futuros desenvolvedores que precisariam ler seus testes de unidade.","title":"Organizar/Agir/Afirmar"},{"location":"automated-testing/unit-testing/#exemplo","text":"Vamos supor que temos uma classe MeuObjeto com um m\u00e9todo TentarAlgo que interage com uma matriz de strings, mas se a matriz n\u00e3o tiver elementos, ele retornar\u00e1 falso. Queremos escrever um teste que verifica o caso em que a matriz n\u00e3o tem elementos: [Fact] public void TentarAlgo_SemElementos_RetornaFalso () { // Organizar var elementos = Array . Empty < string > (); var meuObjeto = new MeuObjeto (); // Agir var meuRetorno = meuObjeto . TentarAlgo ( elementos ); // Afirmar Assert . False ( meuRetorno ); }","title":"Exemplo"},{"location":"automated-testing/unit-testing/#mantenha-os-testes-pequenos-e-teste-apenas-uma-coisa","text":"Os testes de unidade devem ser curtos e testar apenas uma coisa. Isso facilita o diagn\u00f3stico quando houve uma falha sem precisar de algo como o n\u00famero da linha em que o teste falhou. Ao usar Organizar/Agir/Afirmar , pense nisso como testar apenas uma coisa na fase \"Agir\". H\u00e1 algum desacordo sobre se testar uma coisa significa \"afirmar uma coisa\" ou \"testar um estado, com v\u00e1rias afirma\u00e7\u00f5es, se necess\u00e1rio\". Ambos t\u00eam suas vantagens e desvantagens, mas como na maioria dos desacordos t\u00e9cnicos, n\u00e3o h\u00e1 uma \"resposta certa\". A consist\u00eancia ao escrever seus testes de uma forma ou de outra \u00e9 mais importante!","title":"Mantenha os testes pequenos e teste apenas uma coisa"},{"location":"automated-testing/unit-testing/#usando-uma-convencao-de-nomenclatura-padrao-para-todos-os-testes-de-unidade","text":"Sem ter uma conven\u00e7\u00e3o padr\u00e3o estabelecida para os nomes dos testes de unidade, os nomes dos testes de unidade acabam sendo ou n\u00e3o descritivos o suficiente ou duplicados em v\u00e1rias classes de teste diferentes. Estabelecer um padr\u00e3o n\u00e3o \u00e9 apenas importante para manter seu c\u00f3digo consistente, mas um bom padr\u00e3o tamb\u00e9m melhora a legibilidade e a capacidade de depura\u00e7\u00e3o de um teste. Neste artigo, a conven\u00e7\u00e3o usada para todos os testes de unidade foi NomeDaUnidade_EstadoSobTeste_ResultadoEsperado , mas h\u00e1 muitas outras conven\u00e7\u00f5es poss\u00edveis tamb\u00e9m, o importante \u00e9 ser consistente e descritivo. Ter nomes descritivos como o acima torna trivial encontrar o teste quando h\u00e1 uma falha e tamb\u00e9m j\u00e1 explica qual era a expectativa do teste e qual estado fez com que ele falhasse. Isso pode ser especialmente \u00fatil ao olhar para falhas em um sistema de CI/CD onde tudo o que voc\u00ea sabe \u00e9 o nome do teste que falhou - em vez disso, agora voc\u00ea sabe o nome do teste e exatamente por que ele falhou (especialmente acoplado com um framework de teste que registra sa\u00eddas \u00fateis em falhas).","title":"Usando uma conven\u00e7\u00e3o de nomenclatura padr\u00e3o para todos os testes de unidade"},{"location":"automated-testing/unit-testing/#coisas-a-evitar","text":"Alguns problemas comuns ao escrever um teste de unidade que s\u00e3o importantes de evitar: Sleeps - Um sleep pode ser um indicador de que talvez algo esteja fazendo uma solicita\u00e7\u00e3o a uma depend\u00eancia que n\u00e3o deveria. Em geral, se seu c\u00f3digo \u00e9 inst\u00e1vel sem o sleep, considere por que ele est\u00e1 falhando e se voc\u00ea pode remover a instabilidade introduzindo uma forma mais confi\u00e1vel de comunicar poss\u00edveis mudan\u00e7as de estado. Adicionar sleeps aos seus testes de unidade tamb\u00e9m quebra um dos nossos princ\u00edpios originais de teste de unidade: os testes devem ser r\u00e1pidos, na ordem de milissegundos. Se os testes est\u00e3o demorando na ordem de segundos, eles se tornam mais dif\u00edceis de executar. Leitura do disco - Pode ser realmente tentador colocar o valor esperado de um retorno de fun\u00e7\u00e3o em um arquivo e ler esse arquivo para comparar os resultados. Isso cria uma depend\u00eancia com o sistema de arquivos e quebra nosso princ\u00edpio de manter nossos testes de unidade isolados e 100% confi\u00e1veis . Qualquer depend\u00eancia externa, como acesso ao sistema de arquivos, pode potencialmente causar falhas intermitentes. Al\u00e9m disso, isso pode ser um sinal de que talvez o teste ou a unidade sob teste seja muito complexa e deva ser simplificada. - Chamadas de APIs de terceiros - Quando voc\u00ea n\u00e3o controla uma biblioteca de terceiros que est\u00e1 chamando, \u00e9 imposs\u00edvel saber com certeza o que ela est\u00e1 fazendo, e \u00e9 melhor abstrai-la. Caso contr\u00e1rio, voc\u00ea pode estar fazendo chamadas REST ou outras \u00e1reas potenciais de falha sem escrever diretamente o c\u00f3digo para isso. Isso tamb\u00e9m \u00e9 geralmente um sinal de que o design do sistema n\u00e3o \u00e9 totalmente test\u00e1vel. \u00c9 melhor envolver chamadas de API de terceiros em interfaces ou outras estruturas para que elas n\u00e3o sejam invocadas em testes de unidade. Para mais informa\u00e7\u00f5es, consulte a p\u00e1gina sobre mocking .","title":"Coisas a Evitar"},{"location":"automated-testing/unit-testing/#frameworks-e-ferramentas-de-teste-de-unidade","text":"","title":"Frameworks e Ferramentas de Teste de Unidade"},{"location":"automated-testing/unit-testing/#frameworks-de-teste","text":"Os frameworks de teste de unidade est\u00e3o em constante mudan\u00e7a. Para uma lista completa de todos os frameworks de teste de unidade veja a p\u00e1gina na Wikipedia . Os frameworks t\u00eam muitos recursos e devem ser escolhidos com base em qual conjunto de recursos se encaixa melhor para o projeto em particular.","title":"Frameworks de Teste"},{"location":"automated-testing/unit-testing/#frameworks-de-mock","text":"Muitos projetos come\u00e7am com um framework de teste de unidade e tamb\u00e9m adicionam um framework de mock. Embora os frameworks de mock tenham seus usos e \u00e0s vezes possam ser um requisito, n\u00e3o deve ser algo que \u00e9 adicionado sem considerar as implica\u00e7\u00f5es e riscos mais amplos associados ao uso pesado de mocks. Para ver se o uso de mocks \u00e9 adequado para o seu projeto, ou se uma abordagem sem mocks \u00e9 mais apropriada, consulte a p\u00e1gina sobre mocking .","title":"Frameworks de Mock"},{"location":"automated-testing/unit-testing/#ferramentas","text":"Essas ferramentas permitem a execu\u00e7\u00e3o constante de seus testes de unidade com cobertura de c\u00f3digo em linha, tornando o ciclo interno de desenvolvimento extremamente r\u00e1pido e permitindo um f\u00e1cil TDD: Visual Studio Live Unit Testing Wallaby.js Infinitest para Java PyCrunch para Python","title":"Ferramentas"},{"location":"automated-testing/unit-testing/#coisas-a-considerar","text":"","title":"Coisas a Considerar"},{"location":"automated-testing/unit-testing/#transferindo-a-responsabilidade-para-testes-de-integracao","text":"Em algumas situa\u00e7\u00f5es, vale a pena considerar incluir os testes de integra\u00e7\u00e3o no ciclo interno de desenvolvimento para fornecer uma cobertura de c\u00f3digo suficiente para garantir que o sistema est\u00e1 funcionando corretamente. O pr\u00e9-requisito para que essa abordagem seja bem-sucedida \u00e9 ter testes de integra\u00e7\u00e3o capazes de serem executados a uma velocidade compar\u00e1vel \u00e0 dos testes de unidade, tanto localmente quanto em um ambiente de CI. Frameworks de aplica\u00e7\u00e3o modernos como .NET ou Spring Boot, combinados com a abordagem de mocking ou stubbing correta para depend\u00eancias externas, oferecem excelentes capacidades para habilitar tais cen\u00e1rios para testes. Normalmente, os testes de integra\u00e7\u00e3o apenas provam que os m\u00f3dulos desenvolvidos independentemente se conectam conforme projetado. A cobertura de teste dos testes de integra\u00e7\u00e3o pode ser estendida para verificar o comportamento correto do sistema tamb\u00e9m. A responsabilidade de fornecer uma cobertura de c\u00f3digo de ramo e linha suficiente pode ser transferida dos testes de unidade para os testes de integra\u00e7\u00e3o. Em vez de v\u00e1rios testes de unidade necess\u00e1rios para testar um caso espec\u00edfico de funcionalidade do sistema, um cen\u00e1rio de integra\u00e7\u00e3o \u00e9 criado que cobre todo o fluxo. Por exemplo, no caso de uma API, as respostas HTTP recebidas e seu conte\u00fado s\u00e3o verificados para cada solicita\u00e7\u00e3o no teste. Isso cobre tanto a integra\u00e7\u00e3o entre os componentes da API quanto a corre\u00e7\u00e3o de sua l\u00f3gica de neg\u00f3cios. Com essa abordagem, testes de integra\u00e7\u00e3o eficientes podem ser tratados como uma extens\u00e3o do teste de unidade, assumindo a responsabilidade de validar cen\u00e1rios de caminho feliz/falha. Ele tem a vantagem de testar o sistema como uma caixa preta, sem qualquer conhecimento de seus componentes internos. A refatora\u00e7\u00e3o de c\u00f3digo n\u00e3o tem impacto nos testes. T\u00e9cnicas comuns de teste como TDD podem ser aplicadas em um n\u00edvel mais alto, resultando em um processo de desenvolvimento orientado por testes de aceita\u00e7\u00e3o. Dependendo das especificidades do projeto, os testes de unidade ainda desempenham um papel importante. Eles podem ser usados para ajudar a ditar um design test\u00e1vel em um n\u00edvel mais baixo ou para testar l\u00f3gica de neg\u00f3cios complexa e casos extremos, se necess\u00e1rio.","title":"Transferindo a responsabilidade para testes de integra\u00e7\u00e3o"},{"location":"automated-testing/unit-testing/#conclusao","text":"O teste de unidade \u00e9 extremamente importante, mas tamb\u00e9m n\u00e3o \u00e9 a bala de prata; ter testes de unidade adequados \u00e9 apenas uma parte de um sistema bem testado. No entanto, escrever testes de unidade adequados ajudar\u00e1 no design do seu sistema, bem como ajudar\u00e1 a capturar regress\u00f5es, bugs e aumentar a velocidade do desenvolvedor.","title":"Conclus\u00e3o"},{"location":"automated-testing/unit-testing/#recursos","text":"Melhores Pr\u00e1ticas de Teste de Unidade","title":"Recursos"},{"location":"automated-testing/unit-testing/authoring_example/","text":"Exemplo: Criando um teste de unidade Para ilustrar algumas t\u00e9cnicas de teste de unidade para uma linguagem orientada a objetos, vamos come\u00e7ar com um exemplo de algum c\u00f3digo para o qual desejamos adicionar testes de unidade. Neste exemplo, temos uma classe de configura\u00e7\u00e3o que cont\u00e9m todas as op\u00e7\u00f5es de inicializa\u00e7\u00e3o para um aplicativo que estamos desenvolvendo. Normalmente, ela l\u00ea de um arquivo .config , mas estamos enfrentando tr\u00eas problemas com a implementa\u00e7\u00e3o atual: H\u00e1 um erro na classe Configuration, e n\u00e3o temos testes de unidade, pois ela depende da leitura de um arquivo de configura\u00e7\u00e3o. N\u00e3o podemos testar nenhuma parte do c\u00f3digo que depende da classe Configuration lendo um arquivo de configura\u00e7\u00e3o. No futuro, queremos permitir que a configura\u00e7\u00e3o seja salva na nuvem e acessada via API REST. O erro que estamos tentando corrigir \u00e9 que, se houver v\u00e1rias linhas vazias no arquivo de configura\u00e7\u00e3o, uma exce\u00e7\u00e3o IndexOutOfRangeException \u00e9 lan\u00e7ada. Nossa classe atualmente se parece com isto: using System.IO ; using System.Linq ; public class Configuration { // Propriedades p\u00fablicas de getter do objeto de configura\u00e7\u00e3o public string MyProperty { get ; private set ; } public void Initialize () { var configContents = File . ReadAllLines ( \".config\" ); // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Select ( l => l . Split ( '=' )) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } } Abstra\u00e7\u00e3o Em nosso exemplo, temos uma \u00fanica depend\u00eancia: o sistema de arquivos. Em vez de apenas abstrair completamente o sistema de arquivos, vamos pensar sobre por que precisamos do sistema de arquivos e abstrair o conceito em vez da implementa\u00e7\u00e3o. Neste caso, estamos usando a classe File para ler o arquivo de configura\u00e7\u00e3o e o conte\u00fado da configura\u00e7\u00e3o. O conceito de abstra\u00e7\u00e3o aqui \u00e9 alguma forma de leitor de configura\u00e7\u00e3o que retorna cada linha da configura\u00e7\u00e3o em uma matriz de strings. Poder\u00edamos cham\u00e1-lo de ConfigurationReader , e ele tem um \u00fanico m\u00e9todo, Read , que retorna o conte\u00fado. Ao criar abstra\u00e7\u00f5es, pode ser uma boa pr\u00e1tica criar uma interface para essa abstra\u00e7\u00e3o, em linguagens que a suportam. No exemplo com C#, podemos criar uma interface IConfigurationReader , e em vez de apenas termos uma classe ConfigurationReader , podemos ser mais espec\u00edficos e nome\u00e1-la FileConfigurationReader para indicar que ela l\u00ea do sistema de arquivos: // IConfigurationReader.cs public interface IConfigurationReader { string [] Read (); } // FileConfigurationReader.cs public class FileConfigurationReader : IConfigurationReader { public string [] Read () { return File . ReadAllLines ( \".config\" ); } } Agora que a depend\u00eancia do arquivo foi abstra\u00edda, precisamos atualizar o m\u00e9todo Initialize da nossa classe Configuration para usar a nova abstra\u00e7\u00e3o em vez de chamar File.ReadAllLines diretamente: public void Initialize () { var configContents = new FileConfigurationReader (). Read (); // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Select ( l => l . Split ( '=' )) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } Como voc\u00ea pode ver, ainda temos uma depend\u00eancia no sistema de arquivos, mas essa depend\u00eancia foi abstra\u00edda. Precisaremos usar outras t\u00e9cnicas para quebrar completamente a depend\u00eancia. Inje\u00e7\u00e3o de Depend\u00eancia Na se\u00e7\u00e3o anterior, abstra\u00edmos o acesso ao arquivo em um FileConfigurationReader , mas ainda t\u00ednhamos uma depend\u00eancia no sistema de arquivos em nossa fun\u00e7\u00e3o. Podemos usar a inje\u00e7\u00e3o de depend\u00eancia para injetar o leitor certo em nossa classe Configuration : using System.IO ; using System.Linq ; public class Configuration { private readonly IConfigurationReader configReader ; // Propriedades p\u00fablicas de getter do objeto de configura\u00e7\u00e3o public string MyProperty { get ; private set ; } public Configuration ( IConfigurationReader reader ) { this . configReader = reader ; } public void Initialize () { var configContents = configReader . Read (); // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Select ( l => l . Split ( '=' )) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } } Acima, foi usada uma t\u00e9cnica chamada Inje\u00e7\u00e3o de Construtor . Isso usa o construtor do objeto para definir quais ser\u00e3o nossas depend\u00eancias, o que significa que qualquer objeto que cria o objeto Configuration controlar\u00e1 qual leitor precisa ser passado. Este \u00e9 um exemplo de \"invers\u00e3o de controle\", anteriormente o objeto Configuration controlava a depend\u00eancia, mas em vez disso, empurramos o controle para qualquer componente que cria este objeto. Note que injetamos a interface IConfigurationReader e n\u00e3o a classe concreta. Isso \u00e9 o que nos permite quebrar a depend\u00eancia; enquanto originalmente t\u00ednhamos uma depend\u00eancia codificada na classe File , agora dependemos apenas de um objeto que implementa IConfigurationReader . Escrevendo nossos primeiros testes de unidade Come\u00e7amos essa aventura porque temos um erro na classe Configuration que n\u00e3o foi detectado porque n\u00e3o temos testes de unidade. Vamos escrever alguns testes de unidade que nos d\u00e3o cobertura total da classe Configuration , incluindo um teste que testa o cen\u00e1rio descrito pelo erro (se houver v\u00e1rias linhas vazias no arquivo de configura\u00e7\u00e3o, uma exce\u00e7\u00e3o IndexOutOfRangeException est\u00e1 sendo lan\u00e7ada). No entanto, ainda temos um problema, temos apenas uma \u00fanica implementa\u00e7\u00e3o de IConfigurationReader , e ela usa o sistema de arquivos, o que significa que qualquer teste de unidade que escrevermos ainda ter\u00e1 uma depend\u00eancia no sistema de arquivos! Felizmente, como usamos a inje\u00e7\u00e3o de depend\u00eancia, tudo o que precisamos fazer \u00e9 criar uma implementa\u00e7\u00e3o de IConfigurationReader que n\u00e3o dependa do sistema de arquivos. Poder\u00edamos criar um mock aqui, mas em vez disso, vamos criar uma implementa\u00e7\u00e3o concreta da interface que simplesmente retorna a matriz de strings passada podemos cham\u00e1-la de PassThroughConfigurationReader (para mais detalhes sobre por que essa abordagem pode ser melhor do que a cria\u00e7\u00e3o de mocks, consulte a p\u00e1gina sobre mocking ) public class PassThroughConfigurationReader : IConfigurationReader { private readonly string [] contents ; public PassThroughConfigurationReader ( string [] contents ) { this . contents = contents ; } public string [] Read () { return this . contents ; } } Esta simples classe ser\u00e1 usada em nossos testes de unidade, para que possamos criar diferentes estados sem exigir muito acesso ao arquivo. Agora que temos isso no lugar, podemos prosseguir e escrever nossos testes de unidade, come\u00e7ando com os testes que descrevem o comportamento atual: public class ConfigurationTests { [Fact] public void Initialize_EmptyConfig_Throws () { var reader = new PassThroughConfigurationReader ( Array . Empty < string > ()); var config = new Configuration ( reader ); Assert . Throws < KeyNotFoundException > (() => config . Initialize ()); } [Fact] public void Initialize_CorrectFormat_SetsProperty () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myvalue\" }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myvalue\" , config . MyProperty ); } } Corrigindo o erro Todos os nossos testes atuais passam e nos d\u00e3o 100% de cobertura, no entanto, como evidenciado pelo erro, devemos n\u00e3o estar cobrindo todas as entradas e sa\u00eddas poss\u00edveis. No caso do erro, v\u00e1rias linhas vazias causariam um problema. Al\u00e9m disso, KeyNotFoundException n\u00e3o \u00e9 uma exce\u00e7\u00e3o muito amig\u00e1vel e \u00e9 um detalhe de implementa\u00e7\u00e3o, n\u00e3o algo que faz sentido ao projetar a API de Configura\u00e7\u00e3o. Vamos adicionar mais alguns testes e alinhar os testes com o que pensamos que a classe Configuration deve se comportar: public class ConfigurationTests { [Fact] public void Initialize_EmptyConfig_Throws () { var reader = new PassThroughConfigurationReader ( Array . Empty < string > ()); var config = new Configuration ( reader ); Assert . Throws < InvalidOperationException > (() => config . Initialize ()); } [Fact] public void Initialize_MalformedLine_Throws () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty\" , }); var config = new Configuration ( reader ); Assert . Throws < InvalidOperationException > (() => config . Initialize ()); } [Fact] public void Initialize_MultipleEqualSigns_PropertyContainsNoEquals () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myval1=myval2\" , }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myval1=myval2\" , config . MyProperty ); } [Fact] public void Initialize_WithBlankLines_Ignores () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myvalue\" , string . Empty , }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myvalue\" , config . MyProperty ); } [Fact] public void Initialize_CorrectFormat_SetsProperty () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myvalue\" }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myvalue\" , config . MyProperty ); } } Agora temos 4 testes falhando e 1 teste passando, mas estabelecemos firmemente atrav\u00e9s do uso desses testes como esperamos que os chamadores usem a classe Configuration e o que \u00e9 e n\u00e3o \u00e9 permitido como entradas. Agora s\u00f3 precisamos corrigir a classe Configuration para que nossos testes passem: public void Initialize () { var configContents = configReader . Read (); if ( configContents . Length == 0 ) { throw new InvalidOperationException ( \"Configura\u00e7\u00e3o vazia\" ); } // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Where ( l => ! string . IsNullOrWhiteSpace ( l )) . Select ( l => { var splitLine = l . Split ( '=' , 2 ); if ( splitLine . Length < 2 ) { throw new InvalidOperationException ( \"Linha malformada\" ); } return splitLine ; }) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } Agora todos os nossos testes passam! Corrigimos nosso erro, adicionamos testes de unidade \u00e0 classe Configuration e temos muito mais confian\u00e7a em mudan\u00e7as futuras. C\u00f3digo N\u00e3o Test\u00e1vel Como descrito na se\u00e7\u00e3o de abstra\u00e7\u00e3o , nem todo c\u00f3digo pode ser devidamente testado por unidade. Em nosso caso, temos uma \u00fanica classe que tem 0% de cobertura de teste: FileConfigurationReader . Isso \u00e9 esperado; neste caso, mantivemos o FileConfigurationReader o mais leve poss\u00edvel, sem l\u00f3gica adicional al\u00e9m de chamar a depend\u00eancia de terceiros. FileConfigurationReader \u00e9 um exemplo do padr\u00e3o de design de fachada . Design Test\u00e1vel e Melhorias Futuras Um dos nossos problemas originais descritos neste exemplo \u00e9 que, no futuro, esperamos carregar a configura\u00e7\u00e3o a partir de uma API web. Ao fazer todo o trabalho de abstrair a forma como carregamos o texto de configura\u00e7\u00e3o e quebrar a depend\u00eancia no sistema de arquivos, j\u00e1 fizemos todo o trabalho \u00e1rduo para habilitar esse cen\u00e1rio futuro! Tudo o que precisa ser feito a seguir \u00e9 criar uma implementa\u00e7\u00e3o WebApiConfigurationReader e us\u00e1-la para construir o objeto Configuration , e ele deve funcionar. Esse \u00e9 um dos benef\u00edcios do design test\u00e1vel, no processo de escrever nossos testes de forma segura, um efeito colateral disso \u00e9 que j\u00e1 temos nossas depend\u00eancias que podem mudar abstra\u00eddas e exigir\u00e3o mudan\u00e7as m\u00ednimas para implementar. Outro benef\u00edcio adicional \u00e9 que temos v\u00e1rias possibilidades abertas por esse design test\u00e1vel. Por exemplo, agora podemos ter uma configura\u00e7\u00e3o em cascata usando todas as 3 implementa\u00e7\u00f5es IConfigurationReader , incluindo a que escrevemos apenas para nossos testes! Podemos primeiro verificar se o acesso \u00e0 Internet est\u00e1 dispon\u00edvel e, se estiver, usar WebApiConfigurationReader . Se n\u00e3o houver internet dispon\u00edvel, podemos recorrer ao arquivo de configura\u00e7\u00e3o local no sistema atual usando FileConfigurationReader . Se por algum motivo o arquivo de configura\u00e7\u00e3o n\u00e3o existir, podemos usar o `PassThrough ConfigurationReader` para fornecer um conjunto de configura\u00e7\u00f5es padr\u00e3o. Conclus\u00e3o Espero que este exemplo tenha demonstrado como o design test\u00e1vel pode ser ben\u00e9fico para o desenvolvimento de software. N\u00e3o apenas nos d\u00e1 a capacidade de escrever testes de unidade, mas tamb\u00e9m nos d\u00e1 a capacidade de escrever c\u00f3digo mais modular e flex\u00edvel.","title":"Authoring example"},{"location":"automated-testing/unit-testing/authoring_example/#exemplo-criando-um-teste-de-unidade","text":"Para ilustrar algumas t\u00e9cnicas de teste de unidade para uma linguagem orientada a objetos, vamos come\u00e7ar com um exemplo de algum c\u00f3digo para o qual desejamos adicionar testes de unidade. Neste exemplo, temos uma classe de configura\u00e7\u00e3o que cont\u00e9m todas as op\u00e7\u00f5es de inicializa\u00e7\u00e3o para um aplicativo que estamos desenvolvendo. Normalmente, ela l\u00ea de um arquivo .config , mas estamos enfrentando tr\u00eas problemas com a implementa\u00e7\u00e3o atual: H\u00e1 um erro na classe Configuration, e n\u00e3o temos testes de unidade, pois ela depende da leitura de um arquivo de configura\u00e7\u00e3o. N\u00e3o podemos testar nenhuma parte do c\u00f3digo que depende da classe Configuration lendo um arquivo de configura\u00e7\u00e3o. No futuro, queremos permitir que a configura\u00e7\u00e3o seja salva na nuvem e acessada via API REST. O erro que estamos tentando corrigir \u00e9 que, se houver v\u00e1rias linhas vazias no arquivo de configura\u00e7\u00e3o, uma exce\u00e7\u00e3o IndexOutOfRangeException \u00e9 lan\u00e7ada. Nossa classe atualmente se parece com isto: using System.IO ; using System.Linq ; public class Configuration { // Propriedades p\u00fablicas de getter do objeto de configura\u00e7\u00e3o public string MyProperty { get ; private set ; } public void Initialize () { var configContents = File . ReadAllLines ( \".config\" ); // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Select ( l => l . Split ( '=' )) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } }","title":"Exemplo: Criando um teste de unidade"},{"location":"automated-testing/unit-testing/authoring_example/#abstracao","text":"Em nosso exemplo, temos uma \u00fanica depend\u00eancia: o sistema de arquivos. Em vez de apenas abstrair completamente o sistema de arquivos, vamos pensar sobre por que precisamos do sistema de arquivos e abstrair o conceito em vez da implementa\u00e7\u00e3o. Neste caso, estamos usando a classe File para ler o arquivo de configura\u00e7\u00e3o e o conte\u00fado da configura\u00e7\u00e3o. O conceito de abstra\u00e7\u00e3o aqui \u00e9 alguma forma de leitor de configura\u00e7\u00e3o que retorna cada linha da configura\u00e7\u00e3o em uma matriz de strings. Poder\u00edamos cham\u00e1-lo de ConfigurationReader , e ele tem um \u00fanico m\u00e9todo, Read , que retorna o conte\u00fado. Ao criar abstra\u00e7\u00f5es, pode ser uma boa pr\u00e1tica criar uma interface para essa abstra\u00e7\u00e3o, em linguagens que a suportam. No exemplo com C#, podemos criar uma interface IConfigurationReader , e em vez de apenas termos uma classe ConfigurationReader , podemos ser mais espec\u00edficos e nome\u00e1-la FileConfigurationReader para indicar que ela l\u00ea do sistema de arquivos: // IConfigurationReader.cs public interface IConfigurationReader { string [] Read (); } // FileConfigurationReader.cs public class FileConfigurationReader : IConfigurationReader { public string [] Read () { return File . ReadAllLines ( \".config\" ); } } Agora que a depend\u00eancia do arquivo foi abstra\u00edda, precisamos atualizar o m\u00e9todo Initialize da nossa classe Configuration para usar a nova abstra\u00e7\u00e3o em vez de chamar File.ReadAllLines diretamente: public void Initialize () { var configContents = new FileConfigurationReader (). Read (); // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Select ( l => l . Split ( '=' )) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } Como voc\u00ea pode ver, ainda temos uma depend\u00eancia no sistema de arquivos, mas essa depend\u00eancia foi abstra\u00edda. Precisaremos usar outras t\u00e9cnicas para quebrar completamente a depend\u00eancia.","title":"Abstra\u00e7\u00e3o"},{"location":"automated-testing/unit-testing/authoring_example/#injecao-de-dependencia","text":"Na se\u00e7\u00e3o anterior, abstra\u00edmos o acesso ao arquivo em um FileConfigurationReader , mas ainda t\u00ednhamos uma depend\u00eancia no sistema de arquivos em nossa fun\u00e7\u00e3o. Podemos usar a inje\u00e7\u00e3o de depend\u00eancia para injetar o leitor certo em nossa classe Configuration : using System.IO ; using System.Linq ; public class Configuration { private readonly IConfigurationReader configReader ; // Propriedades p\u00fablicas de getter do objeto de configura\u00e7\u00e3o public string MyProperty { get ; private set ; } public Configuration ( IConfigurationReader reader ) { this . configReader = reader ; } public void Initialize () { var configContents = configReader . Read (); // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Select ( l => l . Split ( '=' )) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } } Acima, foi usada uma t\u00e9cnica chamada Inje\u00e7\u00e3o de Construtor . Isso usa o construtor do objeto para definir quais ser\u00e3o nossas depend\u00eancias, o que significa que qualquer objeto que cria o objeto Configuration controlar\u00e1 qual leitor precisa ser passado. Este \u00e9 um exemplo de \"invers\u00e3o de controle\", anteriormente o objeto Configuration controlava a depend\u00eancia, mas em vez disso, empurramos o controle para qualquer componente que cria este objeto. Note que injetamos a interface IConfigurationReader e n\u00e3o a classe concreta. Isso \u00e9 o que nos permite quebrar a depend\u00eancia; enquanto originalmente t\u00ednhamos uma depend\u00eancia codificada na classe File , agora dependemos apenas de um objeto que implementa IConfigurationReader .","title":"Inje\u00e7\u00e3o de Depend\u00eancia"},{"location":"automated-testing/unit-testing/authoring_example/#escrevendo-nossos-primeiros-testes-de-unidade","text":"Come\u00e7amos essa aventura porque temos um erro na classe Configuration que n\u00e3o foi detectado porque n\u00e3o temos testes de unidade. Vamos escrever alguns testes de unidade que nos d\u00e3o cobertura total da classe Configuration , incluindo um teste que testa o cen\u00e1rio descrito pelo erro (se houver v\u00e1rias linhas vazias no arquivo de configura\u00e7\u00e3o, uma exce\u00e7\u00e3o IndexOutOfRangeException est\u00e1 sendo lan\u00e7ada). No entanto, ainda temos um problema, temos apenas uma \u00fanica implementa\u00e7\u00e3o de IConfigurationReader , e ela usa o sistema de arquivos, o que significa que qualquer teste de unidade que escrevermos ainda ter\u00e1 uma depend\u00eancia no sistema de arquivos! Felizmente, como usamos a inje\u00e7\u00e3o de depend\u00eancia, tudo o que precisamos fazer \u00e9 criar uma implementa\u00e7\u00e3o de IConfigurationReader que n\u00e3o dependa do sistema de arquivos. Poder\u00edamos criar um mock aqui, mas em vez disso, vamos criar uma implementa\u00e7\u00e3o concreta da interface que simplesmente retorna a matriz de strings passada podemos cham\u00e1-la de PassThroughConfigurationReader (para mais detalhes sobre por que essa abordagem pode ser melhor do que a cria\u00e7\u00e3o de mocks, consulte a p\u00e1gina sobre mocking ) public class PassThroughConfigurationReader : IConfigurationReader { private readonly string [] contents ; public PassThroughConfigurationReader ( string [] contents ) { this . contents = contents ; } public string [] Read () { return this . contents ; } } Esta simples classe ser\u00e1 usada em nossos testes de unidade, para que possamos criar diferentes estados sem exigir muito acesso ao arquivo. Agora que temos isso no lugar, podemos prosseguir e escrever nossos testes de unidade, come\u00e7ando com os testes que descrevem o comportamento atual: public class ConfigurationTests { [Fact] public void Initialize_EmptyConfig_Throws () { var reader = new PassThroughConfigurationReader ( Array . Empty < string > ()); var config = new Configuration ( reader ); Assert . Throws < KeyNotFoundException > (() => config . Initialize ()); } [Fact] public void Initialize_CorrectFormat_SetsProperty () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myvalue\" }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myvalue\" , config . MyProperty ); } }","title":"Escrevendo nossos primeiros testes de unidade"},{"location":"automated-testing/unit-testing/authoring_example/#corrigindo-o-erro","text":"Todos os nossos testes atuais passam e nos d\u00e3o 100% de cobertura, no entanto, como evidenciado pelo erro, devemos n\u00e3o estar cobrindo todas as entradas e sa\u00eddas poss\u00edveis. No caso do erro, v\u00e1rias linhas vazias causariam um problema. Al\u00e9m disso, KeyNotFoundException n\u00e3o \u00e9 uma exce\u00e7\u00e3o muito amig\u00e1vel e \u00e9 um detalhe de implementa\u00e7\u00e3o, n\u00e3o algo que faz sentido ao projetar a API de Configura\u00e7\u00e3o. Vamos adicionar mais alguns testes e alinhar os testes com o que pensamos que a classe Configuration deve se comportar: public class ConfigurationTests { [Fact] public void Initialize_EmptyConfig_Throws () { var reader = new PassThroughConfigurationReader ( Array . Empty < string > ()); var config = new Configuration ( reader ); Assert . Throws < InvalidOperationException > (() => config . Initialize ()); } [Fact] public void Initialize_MalformedLine_Throws () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty\" , }); var config = new Configuration ( reader ); Assert . Throws < InvalidOperationException > (() => config . Initialize ()); } [Fact] public void Initialize_MultipleEqualSigns_PropertyContainsNoEquals () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myval1=myval2\" , }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myval1=myval2\" , config . MyProperty ); } [Fact] public void Initialize_WithBlankLines_Ignores () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myvalue\" , string . Empty , }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myvalue\" , config . MyProperty ); } [Fact] public void Initialize_CorrectFormat_SetsProperty () { var reader = new PassThroughConfigurationReader ( new [] { \"myproperty=myvalue\" }); var config = new Configuration ( reader ); config . Initialize (); Assert . Equal ( \"myvalue\" , config . MyProperty ); } } Agora temos 4 testes falhando e 1 teste passando, mas estabelecemos firmemente atrav\u00e9s do uso desses testes como esperamos que os chamadores usem a classe Configuration e o que \u00e9 e n\u00e3o \u00e9 permitido como entradas. Agora s\u00f3 precisamos corrigir a classe Configuration para que nossos testes passem: public void Initialize () { var configContents = configReader . Read (); if ( configContents . Length == 0 ) { throw new InvalidOperationException ( \"Configura\u00e7\u00e3o vazia\" ); } // A configura\u00e7\u00e3o est\u00e1 no formato: chave=valor var config = configContents . Where ( l => ! string . IsNullOrWhiteSpace ( l )) . Select ( l => { var splitLine = l . Split ( '=' , 2 ); if ( splitLine . Length < 2 ) { throw new InvalidOperationException ( \"Linha malformada\" ); } return splitLine ; }) . ToDictionary ( kv => kv [ 0 ], kv => kv [ 1 ]); // Atribuir todas as propriedades aqui this . MyProperty = config [ \"myproperty\" ]; } Agora todos os nossos testes passam! Corrigimos nosso erro, adicionamos testes de unidade \u00e0 classe Configuration e temos muito mais confian\u00e7a em mudan\u00e7as futuras.","title":"Corrigindo o erro"},{"location":"automated-testing/unit-testing/authoring_example/#codigo-nao-testavel","text":"Como descrito na se\u00e7\u00e3o de abstra\u00e7\u00e3o , nem todo c\u00f3digo pode ser devidamente testado por unidade. Em nosso caso, temos uma \u00fanica classe que tem 0% de cobertura de teste: FileConfigurationReader . Isso \u00e9 esperado; neste caso, mantivemos o FileConfigurationReader o mais leve poss\u00edvel, sem l\u00f3gica adicional al\u00e9m de chamar a depend\u00eancia de terceiros. FileConfigurationReader \u00e9 um exemplo do padr\u00e3o de design de fachada .","title":"C\u00f3digo N\u00e3o Test\u00e1vel"},{"location":"automated-testing/unit-testing/authoring_example/#design-testavel-e-melhorias-futuras","text":"Um dos nossos problemas originais descritos neste exemplo \u00e9 que, no futuro, esperamos carregar a configura\u00e7\u00e3o a partir de uma API web. Ao fazer todo o trabalho de abstrair a forma como carregamos o texto de configura\u00e7\u00e3o e quebrar a depend\u00eancia no sistema de arquivos, j\u00e1 fizemos todo o trabalho \u00e1rduo para habilitar esse cen\u00e1rio futuro! Tudo o que precisa ser feito a seguir \u00e9 criar uma implementa\u00e7\u00e3o WebApiConfigurationReader e us\u00e1-la para construir o objeto Configuration , e ele deve funcionar. Esse \u00e9 um dos benef\u00edcios do design test\u00e1vel, no processo de escrever nossos testes de forma segura, um efeito colateral disso \u00e9 que j\u00e1 temos nossas depend\u00eancias que podem mudar abstra\u00eddas e exigir\u00e3o mudan\u00e7as m\u00ednimas para implementar. Outro benef\u00edcio adicional \u00e9 que temos v\u00e1rias possibilidades abertas por esse design test\u00e1vel. Por exemplo, agora podemos ter uma configura\u00e7\u00e3o em cascata usando todas as 3 implementa\u00e7\u00f5es IConfigurationReader , incluindo a que escrevemos apenas para nossos testes! Podemos primeiro verificar se o acesso \u00e0 Internet est\u00e1 dispon\u00edvel e, se estiver, usar WebApiConfigurationReader . Se n\u00e3o houver internet dispon\u00edvel, podemos recorrer ao arquivo de configura\u00e7\u00e3o local no sistema atual usando FileConfigurationReader . Se por algum motivo o arquivo de configura\u00e7\u00e3o n\u00e3o existir, podemos usar o `PassThrough ConfigurationReader` para fornecer um conjunto de configura\u00e7\u00f5es padr\u00e3o.","title":"Design Test\u00e1vel e Melhorias Futuras"},{"location":"automated-testing/unit-testing/authoring_example/#conclusao","text":"Espero que este exemplo tenha demonstrado como o design test\u00e1vel pode ser ben\u00e9fico para o desenvolvimento de software. N\u00e3o apenas nos d\u00e1 a capacidade de escrever testes de unidade, mas tamb\u00e9m nos d\u00e1 a capacidade de escrever c\u00f3digo mais modular e flex\u00edvel.","title":"Conclus\u00e3o"},{"location":"automated-testing/unit-testing/custom-connector/","text":"Teste de Conector Personalizado Ao desenvolver Conectores Personalizados para inserir dados na Power Platform, existem algumas estrat\u00e9gias que voc\u00ea pode seguir: Teste de Unidade H\u00e1 v\u00e1rias verifica\u00e7\u00f5es que podem ser feitas durante o desenvolvimento de conectores personalizados para ter certeza de que o c\u00f3digo est\u00e1 funcionando corretamente. Existem duas principais: Validar o esquema OpenAPI no qual o conector \u00e9 definido. Validar se o esquema tamb\u00e9m possui todas as informa\u00e7\u00f5es necess\u00e1rias para o processo de conector certificado. (o \u00faltimo \u00e9 opcional, mas necess\u00e1rio caso voc\u00ea queira public\u00e1-lo como um conector certificado). Existem v\u00e1rias ferramentas para ajudar a validar o esquema OpenAPI, uma lista delas est\u00e1 dispon\u00edvel neste link . Uma ferramenta sugerida seria o swagger-cli . Por outro lado, para validar se o conector personalizado que voc\u00ea est\u00e1 construindo est\u00e1 correto para se tornar um conector certificado, use o paconn-cli , uma vez que ele possui um comando de valida\u00e7\u00e3o que mostra informa\u00e7\u00f5es ausentes na defini\u00e7\u00e3o do conector personalizado.","title":"Teste de Conector Personalizado"},{"location":"automated-testing/unit-testing/custom-connector/#teste-de-conector-personalizado","text":"Ao desenvolver Conectores Personalizados para inserir dados na Power Platform, existem algumas estrat\u00e9gias que voc\u00ea pode seguir:","title":"Teste de Conector Personalizado"},{"location":"automated-testing/unit-testing/custom-connector/#teste-de-unidade","text":"H\u00e1 v\u00e1rias verifica\u00e7\u00f5es que podem ser feitas durante o desenvolvimento de conectores personalizados para ter certeza de que o c\u00f3digo est\u00e1 funcionando corretamente. Existem duas principais: Validar o esquema OpenAPI no qual o conector \u00e9 definido. Validar se o esquema tamb\u00e9m possui todas as informa\u00e7\u00f5es necess\u00e1rias para o processo de conector certificado. (o \u00faltimo \u00e9 opcional, mas necess\u00e1rio caso voc\u00ea queira public\u00e1-lo como um conector certificado). Existem v\u00e1rias ferramentas para ajudar a validar o esquema OpenAPI, uma lista delas est\u00e1 dispon\u00edvel neste link . Uma ferramenta sugerida seria o swagger-cli . Por outro lado, para validar se o conector personalizado que voc\u00ea est\u00e1 construindo est\u00e1 correto para se tornar um conector certificado, use o paconn-cli , uma vez que ele possui um comando de valida\u00e7\u00e3o que mostra informa\u00e7\u00f5es ausentes na defini\u00e7\u00e3o do conector personalizado.","title":"Teste de Unidade"},{"location":"automated-testing/unit-testing/mocking/","text":"Simula\u00e7\u00e3o em Testes de Unidade Um dos componentes-chave para escrever testes de unidade \u00e9 remover as depend\u00eancias que seu sistema possui e substitu\u00ed-las por uma implementa\u00e7\u00e3o que voc\u00ea controla. O m\u00e9todo mais comum que as pessoas usam como substituto para a depend\u00eancia \u00e9 um mock, e existem frameworks de simula\u00e7\u00e3o para tornar esse processo mais f\u00e1cil. Muitos frameworks e artigos usam diferentes significados para as diferen\u00e7as entre test doubles. Um test double \u00e9 um termo gen\u00e9rico para qualquer objeto \"fingido\" usado no lugar de um real. Este termo, bem como outros usados nesta p\u00e1gina, s\u00e3o as defini\u00e7\u00f5es fornecidas por Martin Fowler . A forma mais comumente usada de test double s\u00e3o os Mocks, mas h\u00e1 muitos casos em que Mocks talvez n\u00e3o sejam a melhor escolha e Fakes devem ser considerados em vez disso. Stubs Stub permite que voc\u00ea tenha um comportamento predeterminado que substitui o comportamento real. A depend\u00eancia (classe abstrata ou interface) \u00e9 implementada como um stub com uma l\u00f3gica conforme esperado pelo cliente. Stubs podem ser \u00fateis quando os clientes dos stubs esperam o mesmo conjunto de respostas, por exemplo, voc\u00ea usa um servi\u00e7o de terceiros. O conceito-chave aqui \u00e9 que os stubs nunca devem falhar em um teste de unidade ou integra\u00e7\u00e3o onde um mock pode falhar. Stubs n\u00e3o requerem nenhum tipo de framework para serem executados, mas geralmente s\u00e3o suportados por frameworks de simula\u00e7\u00e3o para construir rapidamente os stubs. Stubs s\u00e3o comumente usados em combina\u00e7\u00e3o com frameworks ou bibliotecas de inje\u00e7\u00e3o de depend\u00eancia, onde o objeto real \u00e9 substitu\u00eddo por uma implementa\u00e7\u00e3o de stub. Stubs podem ser especialmente \u00fateis durante o desenvolvimento inicial de um sistema, mas como quase todo teste requer seus pr\u00f3prios stubs (para testar os diferentes estados), isso rapidamente se torna repetitivo e envolve muito c\u00f3digo boilerplate. Raramente voc\u00ea encontrar\u00e1 um c\u00f3digo-fonte que usa apenas stubs para simula\u00e7\u00e3o, eles geralmente s\u00e3o emparelhados com outros test doubles. Vantagens N\u00e3o requerem nenhum framework, f\u00e1cil de configurar. Desvantagens Pode envolver a reescrita do mesmo c\u00f3digo muitas vezes, muito c\u00f3digo boilerplate. Mocks Fowler descreve mocks como objetos pr\u00e9-programados com expectativas que formam uma especifica\u00e7\u00e3o das chamadas que se espera receber. Em outras palavras, mocks s\u00e3o um objeto de substitui\u00e7\u00e3o para a depend\u00eancia que tem certas expectativas que s\u00e3o colocadas nele; essas expectativas podem ser coisas como validar que um subm\u00e9todo foi chamado um determinado n\u00famero de vezes ou que argumentos s\u00e3o passados de uma determinada maneira. Frameworks de simula\u00e7\u00e3o s\u00e3o abundantes para cada linguagem, com algumas linguagens tendo mocks incorporados nos pacotes de teste de unidade. Eles tornam a escrita de testes de unidade f\u00e1cil e ainda incentivam boas pr\u00e1ticas de teste de unidade. A principal diferen\u00e7a entre um mock e a maioria dos outros test doubles \u00e9 que mocks fazem verifica\u00e7\u00e3o comportamental , enquanto outros test doubles fazem verifica\u00e7\u00e3o de estado . Com a verifica\u00e7\u00e3o comportamental, voc\u00ea acaba testando que a implementa\u00e7\u00e3o do sistema sob teste \u00e9 como voc\u00ea espera, enquanto com a verifica\u00e7\u00e3o de estado a implementa\u00e7\u00e3o n\u00e3o \u00e9 testada, apenas as entradas e sa\u00eddas para o sistema s\u00e3o validadas. A maior desvantagem da verifica\u00e7\u00e3o comportamental \u00e9 que ela est\u00e1 atrelada \u00e0 implementa\u00e7\u00e3o. Uma das maiores vantagens de escrever testes de unidade \u00e9 que, quando voc\u00ea faz altera\u00e7\u00f5es no c\u00f3digo, tem confian\u00e7a de que, se seus testes de unidade continuarem a passar, voc\u00ea est\u00e1 fazendo uma mudan\u00e7a relativamente segura. Se os testes precisam ser atualizados toda vez porque o comportamento do m\u00e9todo mudou, ent\u00e3o voc\u00ea perde essa confian\u00e7a porque bugs tamb\u00e9m podem ser introduzidos no c\u00f3digo do teste. Isso tamb\u00e9m aumenta o tempo de desenvolvimento e pode ser uma fonte de frustra\u00e7\u00e3o. Vantagens da Simula\u00e7\u00e3o F\u00e1cil de escrever. Incentiva o design test\u00e1vel. Desvantagens da Simula\u00e7\u00e3o Testes comportamentais podem apresentar problemas com a manutenibilidade no c\u00f3digo do teste de unidade. Geralmente requer um framework para ser instalado (ou, se nenhum framework, muito c\u00f3digo boilerplate) Fakes Objetos Fake realmente t\u00eam implementa\u00e7\u00f5es funcionais, mas geralmente usam algum atalho que pode torn\u00e1-los inadequados para produ\u00e7\u00e3o. Um dos exemplos comuns de uso de um Fake \u00e9 um banco de dados em mem\u00f3ria - normalmente voc\u00ea quer que seu banco de dados seja capaz de salvar dados em algum lugar entre as execu\u00e7\u00f5es do aplicativo, mas ao escrever testes de unidade, se voc\u00ea tem uma implementa\u00e7\u00e3o fake de suas APIs de banco de dados que armazenam todos os dados na mem\u00f3ria, voc\u00ea pode usar esses para testes de unidade e n\u00e3o quebrar a abstra\u00e7\u00e3o, bem como ainda manter seus testes r\u00e1pidos. Escrever um fake leva mais tempo do que outros test doubles, porque eles s\u00e3o implementa\u00e7\u00f5es completas e podem ter seu pr\u00f3prio conjunto de testes de unidade. Nesse sentido, por\u00e9m, eles aumentam a confian\u00e7a em seu c\u00f3digo ainda mais porque seu test double foi minuciosamente testado para bugs antes de voc\u00ea mesmo us\u00e1-lo como uma depend\u00eancia downstream. Vantagens dos Fakes Nenhum framework necess\u00e1rio, \u00e9 como qualquer outra implementa\u00e7\u00e3o. Incentiva o design test\u00e1vel. O c\u00f3digo pode ser \"promovido\" para o c\u00f3digo do produto, ent\u00e3o n\u00e3o \u00e9 um esfor\u00e7o desperdi\u00e7ado. Desvantagens dos Fakes Leva mais tempo para implementar. Melhores Pr\u00e1ticas Para manter sua simula\u00e7\u00e3o eficiente, considere essas melhores pr\u00e1ticas para tornar seu c\u00f3digo test\u00e1vel, economizar tempo e tornar suas asser\u00e7\u00f5es de teste mais significativas. Inje\u00e7\u00e3o de Depend\u00eancia Se voc\u00ea n\u00e3o mantiver a testabilidade em mente desde o in\u00edcio, uma vez que voc\u00ea come\u00e7ar a escrever seus testes, poder\u00e1 perceber que precisa fazer uma refatora\u00e7\u00e3o demorada para tornar o c\u00f3digo test\u00e1vel em unidade. Um problema comum que pode levar a c\u00f3digo n\u00e3o test\u00e1vel em certas linguagens, como C#, \u00e9 n\u00e3o usar inje\u00e7\u00e3o de depend\u00eancia. Considere usar inje\u00e7\u00e3o de depend\u00eancia para que um mock possa ser facilmente injetado em seu Subject Under Test (SUT) durante um teste de unidade. Conclus\u00e3o Usar test doubles em testes de unidade \u00e9 uma parte essencial de ter um conjunto de testes saud\u00e1vel. Ao olhar para frameworks de simula\u00e7\u00e3o e usar test doubles, \u00e9 importante considerar as implica\u00e7\u00f5es futuras de integrar com um framework de simula\u00e7\u00e3o desde o in\u00edcio. \u00c0s vezes, certos recursos de frameworks de simula\u00e7\u00e3o parecem essenciais, mas geralmente isso \u00e9 um sinal de que o c\u00f3digo em si n\u00e3o \u00e9 abstrato o suficiente se requer um framework. Se poss\u00edvel, come\u00e7ar sem um framework de simula\u00e7\u00e3o e tentar criar implementa\u00e7\u00f5es fake levar\u00e1 a uma base de c\u00f3digo mais saud\u00e1vel, mas quando isso n\u00e3o for poss\u00edvel, a responsabilidade est\u00e1 nos l\u00edderes t\u00e9cnicos da equipe para encontrar casos em que mocks podem ser excessivamente usados, depender muito de detalhes de implementa\u00e7\u00e3o ou acabar n\u00e3o testando as coisas certas.","title":"Simula\u00e7\u00e3o em Testes de Unidade"},{"location":"automated-testing/unit-testing/mocking/#simulacao-em-testes-de-unidade","text":"Um dos componentes-chave para escrever testes de unidade \u00e9 remover as depend\u00eancias que seu sistema possui e substitu\u00ed-las por uma implementa\u00e7\u00e3o que voc\u00ea controla. O m\u00e9todo mais comum que as pessoas usam como substituto para a depend\u00eancia \u00e9 um mock, e existem frameworks de simula\u00e7\u00e3o para tornar esse processo mais f\u00e1cil. Muitos frameworks e artigos usam diferentes significados para as diferen\u00e7as entre test doubles. Um test double \u00e9 um termo gen\u00e9rico para qualquer objeto \"fingido\" usado no lugar de um real. Este termo, bem como outros usados nesta p\u00e1gina, s\u00e3o as defini\u00e7\u00f5es fornecidas por Martin Fowler . A forma mais comumente usada de test double s\u00e3o os Mocks, mas h\u00e1 muitos casos em que Mocks talvez n\u00e3o sejam a melhor escolha e Fakes devem ser considerados em vez disso.","title":"Simula\u00e7\u00e3o em Testes de Unidade"},{"location":"automated-testing/unit-testing/mocking/#stubs","text":"Stub permite que voc\u00ea tenha um comportamento predeterminado que substitui o comportamento real. A depend\u00eancia (classe abstrata ou interface) \u00e9 implementada como um stub com uma l\u00f3gica conforme esperado pelo cliente. Stubs podem ser \u00fateis quando os clientes dos stubs esperam o mesmo conjunto de respostas, por exemplo, voc\u00ea usa um servi\u00e7o de terceiros. O conceito-chave aqui \u00e9 que os stubs nunca devem falhar em um teste de unidade ou integra\u00e7\u00e3o onde um mock pode falhar. Stubs n\u00e3o requerem nenhum tipo de framework para serem executados, mas geralmente s\u00e3o suportados por frameworks de simula\u00e7\u00e3o para construir rapidamente os stubs. Stubs s\u00e3o comumente usados em combina\u00e7\u00e3o com frameworks ou bibliotecas de inje\u00e7\u00e3o de depend\u00eancia, onde o objeto real \u00e9 substitu\u00eddo por uma implementa\u00e7\u00e3o de stub. Stubs podem ser especialmente \u00fateis durante o desenvolvimento inicial de um sistema, mas como quase todo teste requer seus pr\u00f3prios stubs (para testar os diferentes estados), isso rapidamente se torna repetitivo e envolve muito c\u00f3digo boilerplate. Raramente voc\u00ea encontrar\u00e1 um c\u00f3digo-fonte que usa apenas stubs para simula\u00e7\u00e3o, eles geralmente s\u00e3o emparelhados com outros test doubles.","title":"Stubs"},{"location":"automated-testing/unit-testing/mocking/#vantagens","text":"N\u00e3o requerem nenhum framework, f\u00e1cil de configurar.","title":"Vantagens"},{"location":"automated-testing/unit-testing/mocking/#desvantagens","text":"Pode envolver a reescrita do mesmo c\u00f3digo muitas vezes, muito c\u00f3digo boilerplate.","title":"Desvantagens"},{"location":"automated-testing/unit-testing/mocking/#mocks","text":"Fowler descreve mocks como objetos pr\u00e9-programados com expectativas que formam uma especifica\u00e7\u00e3o das chamadas que se espera receber. Em outras palavras, mocks s\u00e3o um objeto de substitui\u00e7\u00e3o para a depend\u00eancia que tem certas expectativas que s\u00e3o colocadas nele; essas expectativas podem ser coisas como validar que um subm\u00e9todo foi chamado um determinado n\u00famero de vezes ou que argumentos s\u00e3o passados de uma determinada maneira. Frameworks de simula\u00e7\u00e3o s\u00e3o abundantes para cada linguagem, com algumas linguagens tendo mocks incorporados nos pacotes de teste de unidade. Eles tornam a escrita de testes de unidade f\u00e1cil e ainda incentivam boas pr\u00e1ticas de teste de unidade. A principal diferen\u00e7a entre um mock e a maioria dos outros test doubles \u00e9 que mocks fazem verifica\u00e7\u00e3o comportamental , enquanto outros test doubles fazem verifica\u00e7\u00e3o de estado . Com a verifica\u00e7\u00e3o comportamental, voc\u00ea acaba testando que a implementa\u00e7\u00e3o do sistema sob teste \u00e9 como voc\u00ea espera, enquanto com a verifica\u00e7\u00e3o de estado a implementa\u00e7\u00e3o n\u00e3o \u00e9 testada, apenas as entradas e sa\u00eddas para o sistema s\u00e3o validadas. A maior desvantagem da verifica\u00e7\u00e3o comportamental \u00e9 que ela est\u00e1 atrelada \u00e0 implementa\u00e7\u00e3o. Uma das maiores vantagens de escrever testes de unidade \u00e9 que, quando voc\u00ea faz altera\u00e7\u00f5es no c\u00f3digo, tem confian\u00e7a de que, se seus testes de unidade continuarem a passar, voc\u00ea est\u00e1 fazendo uma mudan\u00e7a relativamente segura. Se os testes precisam ser atualizados toda vez porque o comportamento do m\u00e9todo mudou, ent\u00e3o voc\u00ea perde essa confian\u00e7a porque bugs tamb\u00e9m podem ser introduzidos no c\u00f3digo do teste. Isso tamb\u00e9m aumenta o tempo de desenvolvimento e pode ser uma fonte de frustra\u00e7\u00e3o.","title":"Mocks"},{"location":"automated-testing/unit-testing/mocking/#vantagens-da-simulacao","text":"F\u00e1cil de escrever. Incentiva o design test\u00e1vel.","title":"Vantagens da Simula\u00e7\u00e3o"},{"location":"automated-testing/unit-testing/mocking/#desvantagens-da-simulacao","text":"Testes comportamentais podem apresentar problemas com a manutenibilidade no c\u00f3digo do teste de unidade. Geralmente requer um framework para ser instalado (ou, se nenhum framework, muito c\u00f3digo boilerplate)","title":"Desvantagens da Simula\u00e7\u00e3o"},{"location":"automated-testing/unit-testing/mocking/#fakes","text":"Objetos Fake realmente t\u00eam implementa\u00e7\u00f5es funcionais, mas geralmente usam algum atalho que pode torn\u00e1-los inadequados para produ\u00e7\u00e3o. Um dos exemplos comuns de uso de um Fake \u00e9 um banco de dados em mem\u00f3ria - normalmente voc\u00ea quer que seu banco de dados seja capaz de salvar dados em algum lugar entre as execu\u00e7\u00f5es do aplicativo, mas ao escrever testes de unidade, se voc\u00ea tem uma implementa\u00e7\u00e3o fake de suas APIs de banco de dados que armazenam todos os dados na mem\u00f3ria, voc\u00ea pode usar esses para testes de unidade e n\u00e3o quebrar a abstra\u00e7\u00e3o, bem como ainda manter seus testes r\u00e1pidos. Escrever um fake leva mais tempo do que outros test doubles, porque eles s\u00e3o implementa\u00e7\u00f5es completas e podem ter seu pr\u00f3prio conjunto de testes de unidade. Nesse sentido, por\u00e9m, eles aumentam a confian\u00e7a em seu c\u00f3digo ainda mais porque seu test double foi minuciosamente testado para bugs antes de voc\u00ea mesmo us\u00e1-lo como uma depend\u00eancia downstream.","title":"Fakes"},{"location":"automated-testing/unit-testing/mocking/#vantagens-dos-fakes","text":"Nenhum framework necess\u00e1rio, \u00e9 como qualquer outra implementa\u00e7\u00e3o. Incentiva o design test\u00e1vel. O c\u00f3digo pode ser \"promovido\" para o c\u00f3digo do produto, ent\u00e3o n\u00e3o \u00e9 um esfor\u00e7o desperdi\u00e7ado.","title":"Vantagens dos Fakes"},{"location":"automated-testing/unit-testing/mocking/#desvantagens-dos-fakes","text":"Leva mais tempo para implementar.","title":"Desvantagens dos Fakes"},{"location":"automated-testing/unit-testing/mocking/#melhores-praticas","text":"Para manter sua simula\u00e7\u00e3o eficiente, considere essas melhores pr\u00e1ticas para tornar seu c\u00f3digo test\u00e1vel, economizar tempo e tornar suas asser\u00e7\u00f5es de teste mais significativas.","title":"Melhores Pr\u00e1ticas"},{"location":"automated-testing/unit-testing/mocking/#injecao-de-dependencia","text":"Se voc\u00ea n\u00e3o mantiver a testabilidade em mente desde o in\u00edcio, uma vez que voc\u00ea come\u00e7ar a escrever seus testes, poder\u00e1 perceber que precisa fazer uma refatora\u00e7\u00e3o demorada para tornar o c\u00f3digo test\u00e1vel em unidade. Um problema comum que pode levar a c\u00f3digo n\u00e3o test\u00e1vel em certas linguagens, como C#, \u00e9 n\u00e3o usar inje\u00e7\u00e3o de depend\u00eancia. Considere usar inje\u00e7\u00e3o de depend\u00eancia para que um mock possa ser facilmente injetado em seu Subject Under Test (SUT) durante um teste de unidade.","title":"Inje\u00e7\u00e3o de Depend\u00eancia"},{"location":"automated-testing/unit-testing/mocking/#conclusao","text":"Usar test doubles em testes de unidade \u00e9 uma parte essencial de ter um conjunto de testes saud\u00e1vel. Ao olhar para frameworks de simula\u00e7\u00e3o e usar test doubles, \u00e9 importante considerar as implica\u00e7\u00f5es futuras de integrar com um framework de simula\u00e7\u00e3o desde o in\u00edcio. \u00c0s vezes, certos recursos de frameworks de simula\u00e7\u00e3o parecem essenciais, mas geralmente isso \u00e9 um sinal de que o c\u00f3digo em si n\u00e3o \u00e9 abstrato o suficiente se requer um framework. Se poss\u00edvel, come\u00e7ar sem um framework de simula\u00e7\u00e3o e tentar criar implementa\u00e7\u00f5es fake levar\u00e1 a uma base de c\u00f3digo mais saud\u00e1vel, mas quando isso n\u00e3o for poss\u00edvel, a responsabilidade est\u00e1 nos l\u00edderes t\u00e9cnicos da equipe para encontrar casos em que mocks podem ser excessivamente usados, depender muito de detalhes de implementa\u00e7\u00e3o ou acabar n\u00e3o testando as coisas certas.","title":"Conclus\u00e3o"},{"location":"automated-testing/unit-testing/tdd_example/","text":"Exemplo de Desenvolvimento Orientado por Testes (TDD) Com este m\u00e9todo, em vez de escrever todos os seus testes de uma vez, voc\u00ea escreve um teste de cada vez e, em seguida, muda para escrever o c\u00f3digo do sistema que faria esse teste passar. \u00c9 importante escrever o m\u00ednimo de c\u00f3digo necess\u00e1rio, mesmo que ele n\u00e3o seja tecnicamente \"correto\". Uma vez que o teste passa, voc\u00ea pode refatorar o c\u00f3digo para talvez torn\u00e1-lo mais sensato, mas novamente a l\u00f3gica deve ser simples. \u00c0 medida que voc\u00ea escreve mais testes, a l\u00f3gica fica cada vez mais complexa, mas voc\u00ea pode continuar a fazer as mudan\u00e7as m\u00ednimas no c\u00f3digo do sistema com confian\u00e7a, porque todo o c\u00f3digo que foi escrito est\u00e1 coberto. Como exemplo, vamos supor que estamos tentando escrever uma nova fun\u00e7\u00e3o que valida se uma string \u00e9 um formato de senha v\u00e1lido. O formato da senha deve ser uma string maior que 8 caracteres contendo pelo menos um n\u00famero. Come\u00e7amos com o teste mais simples poss\u00edvel; uma das maneiras mais f\u00e1ceis de fazer isso \u00e9 escrever primeiro testes que validem as entradas na fun\u00e7\u00e3o: // Tests.cs public class Tests { [Fact] public void ValidatePassword_NullInput_Throws () { var s = new MyClass (); Assert . Throws < ArgumentNullException > (() => s . ValidatePassword ( null )); } } // MyClass.cs public class MyClass { public bool ValidatePassword ( string input ) { return false ; } } Se executarmos este c\u00f3digo, o teste falhar\u00e1, pois nenhuma exce\u00e7\u00e3o foi lan\u00e7ada, j\u00e1 que nosso c\u00f3digo em ValidateString \u00e9 apenas um stub. Isso est\u00e1 ok! Esta \u00e9 a parte \"Vermelha\" do ciclo Vermelho-Verde-Refatorar. Agora queremos passar para a parte \"Verde\" - fazer a mudan\u00e7a m\u00ednima necess\u00e1ria para fazer este teste passar: // MyClass.cs public class MyClass { public bool ValidatePassword ( string input ) { throw new ArgumentNullException ( nameof ( input )); } } Nossos testes passam, mas esta fun\u00e7\u00e3o realmente n\u00e3o funciona, ela sempre lan\u00e7ar\u00e1 a exce\u00e7\u00e3o. Tudo bem! \u00c0 medida que continuamos a escrever testes, vamos adicionando lentamente a l\u00f3gica para esta fun\u00e7\u00e3o, e ela se construir\u00e1 sobre si mesma, garantindo que nossos testes continuem a passar. Vamos pular a etapa \"Refatorar\" neste momento porque n\u00e3o h\u00e1 nada para refatorar. Em seguida, vamos adicionar um teste que verifica se a fun\u00e7\u00e3o retorna falso se a senha tiver menos de 8 caracteres: [Fact] public void ValidatePassword_SmallSize_ReturnsFalse () { var s = new MyClass (); Assert . False ( s . ValidatePassword ( \"abc\" )); } Este teste passar\u00e1, pois ainda s\u00f3 lan\u00e7a uma ArgumentNullException , mas novamente, isso \u00e9 uma falha esperada. Corrigindo nossa fun\u00e7\u00e3o, ela dever\u00e1 passar: public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } return false ; } Finalmente, algum c\u00f3digo que parece real! Note como n\u00e3o foi o teste que verificou o valor nulo que nos fez adicionar a instru\u00e7\u00e3o if para a verifica\u00e7\u00e3o de nulo, mas sim o teste subsequente que desbloqueou um novo ramo. Ao adicionar essa instru\u00e7\u00e3o if , fizemos a mudan\u00e7a m\u00ednima necess\u00e1ria para fazer ambos os testes passarem, mas ainda temos trabalho a fazer. Em geral, trabalhar na ordem de adicionar um teste negativo primeiro antes de adicionar um teste positivo garantir\u00e1 que ambos os casos sejam cobertos pelo c\u00f3digo de uma forma que possa ser testada. O ciclo Vermelho-Verde-Refatorar torna esse processo super f\u00e1cil, exigindo a mudan\u00e7a m\u00ednima - j\u00e1 que s\u00f3 queremos fazer as mudan\u00e7as m\u00ednimas, simplesmente retornamos falso aqui, sabendo muito bem que estaremos adicionando l\u00f3gica mais tarde que se expandir\u00e1 sobre isso. Falando nisso, vamos adicionar o teste positivo agora: [Fact] public void ValidatePassword_RightSize_ReturnsTrue () { var s = new MyClass (); Assert . True ( s . ValidatePassword ( \"abcdefgh1\" )); } Novamente, este teste falhar\u00e1 no in\u00edcio. Uma coisa a notar aqui \u00e9 que \u00e9 importante tentarmos tornar nossos testes resilientes a mudan\u00e7as futuras. Quando escrevemos o c\u00f3digo sob teste, agimos de forma muito ing\u00eanua, apenas tentando fazer os testes atuais que temos passar; quando voc\u00ea escreve testes, voc\u00ea quer garantir que tudo o que est\u00e1 fazendo \u00e9 um caso v\u00e1lido no futuro. Neste caso, poder\u00edamos ter escrito a string de entrada como abcdefgh e, quando eventualmente escrev\u00eassemos a fun\u00e7\u00e3o, ela passaria, mas mais tarde, quando adicion\u00e1ssemos testes que validassem que a fun\u00e7\u00e3o tem o resto das entradas adequadas, ela falharia incorretamente. De qualquer forma, a pr\u00f3xima mudan\u00e7a de c\u00f3digo \u00e9: public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if ( input . Length > 8 ) { return true ; } return false ; } Aqui agora temos um teste que passa! No entanto, a l\u00f3gica realmente n\u00e3o faz muito sentido. Fizemos a mudan\u00e7a m\u00ednima, que foi adicionar uma nova condi\u00e7\u00e3o que passou para strings mais longas, mas pensando para frente, sabemos que isso n\u00e3o funcionar\u00e1 assim que adicionarmos valida\u00e7\u00f5es adicionais. Ent\u00e3o, vamos usar nosso primeiro passo de \"Refatorar\" no fluxo Vermelho-Verde-Refatorar! public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if ( input . Length < 8 ) { return false ; } return true ; } Isso parece melhor. Note como, do ponto de vista funcional, inverter a instru\u00e7\u00e3o if n\u00e3o muda o que a fun\u00e7\u00e3o retorna. Esta \u00e9 uma parte importante do fluxo de refatora\u00e7\u00e3o, mantendo a l\u00f3gica fazendo refatora\u00e7\u00f5es comprovadamente seguras, geralmente atrav\u00e9s do uso de ferramentas e refatora\u00e7\u00f5es automatizadas do seu IDE. Finalmente, temos um \u00faltimo requisito para o nosso m\u00e9todo ValidatePassword e \u00e9 que ele precisa verificar se h\u00e1 um n\u00famero na senha. Vamos come\u00e7ar novamente com o teste negativo e validar que, com uma string com o comprimento v\u00e1lido, a fun\u00e7\u00e3o retorna false se n\u00e3o passarmos um n\u00famero: [Fact] public void ValidatePassword_ValidLength_ReturnsFalse () { var s = new MyClass (); Assert . False ( s . ValidatePassword ( \"abcdefghij\" )); } Claro que o teste falha, pois ele est\u00e1 apenas verificando os requisitos de comprimento. Vamos corrigir o m\u00e9todo para verificar os n\u00fameros: public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if ( input . Length < 8 ) { return false ; } if ( ! input . Any ( char . IsDigit )) { return false ; } return true ; } Aqui usamos um m\u00e9todo LINQ \u00fatil para verificar se algum dos char s na string \u00e9 um d\u00edgito, e se n\u00e3o for, retornamos falso. Os testes agora passam, e podemos refatorar. Para melhorar a legibilidade, por que n\u00e3o combinar as instru\u00e7\u00f5es if : public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if (( input . Length < 8 ) || ( ! input . Any ( char . IsDigit ))) { return false ; } return true ; } Ao refatorar esse c\u00f3digo, nos sentimos 100% confiantes nas mudan\u00e7as que fizemos, pois temos 100% de cobertura de testes que testam tanto cen\u00e1rios positivos quanto negativos. Neste caso, j\u00e1 temos um m\u00e9todo que testa o caso positivo, ent\u00e3o nossa fun\u00e7\u00e3o est\u00e1 pronta! Agora que nosso c\u00f3digo est\u00e1 completamente testado, podemos fazer todo tipo de mudan\u00e7as e ainda ter confian\u00e7a de que ele funciona. Por exemplo, se quis\u00e9ssemos mudar a implementa\u00e7\u00e3o do m\u00e9todo para usar regex, todos os nossos testes ainda passariam e ainda seriam v\u00e1lidos. \u00c9 isso a\u00ed! Terminamos de escrever nossa fun\u00e7\u00e3o, temos 100% de cobertura de testes e, se tiv\u00e9ssemos feito algo um pouco mais complexo, ter\u00edamos a garantia de que o que projetamos j\u00e1 \u00e9 test\u00e1vel, pois os testes foram escritos primeiro!","title":"Exemplo de Desenvolvimento Orientado por Testes (TDD)"},{"location":"automated-testing/unit-testing/tdd_example/#exemplo-de-desenvolvimento-orientado-por-testes-tdd","text":"Com este m\u00e9todo, em vez de escrever todos os seus testes de uma vez, voc\u00ea escreve um teste de cada vez e, em seguida, muda para escrever o c\u00f3digo do sistema que faria esse teste passar. \u00c9 importante escrever o m\u00ednimo de c\u00f3digo necess\u00e1rio, mesmo que ele n\u00e3o seja tecnicamente \"correto\". Uma vez que o teste passa, voc\u00ea pode refatorar o c\u00f3digo para talvez torn\u00e1-lo mais sensato, mas novamente a l\u00f3gica deve ser simples. \u00c0 medida que voc\u00ea escreve mais testes, a l\u00f3gica fica cada vez mais complexa, mas voc\u00ea pode continuar a fazer as mudan\u00e7as m\u00ednimas no c\u00f3digo do sistema com confian\u00e7a, porque todo o c\u00f3digo que foi escrito est\u00e1 coberto. Como exemplo, vamos supor que estamos tentando escrever uma nova fun\u00e7\u00e3o que valida se uma string \u00e9 um formato de senha v\u00e1lido. O formato da senha deve ser uma string maior que 8 caracteres contendo pelo menos um n\u00famero. Come\u00e7amos com o teste mais simples poss\u00edvel; uma das maneiras mais f\u00e1ceis de fazer isso \u00e9 escrever primeiro testes que validem as entradas na fun\u00e7\u00e3o: // Tests.cs public class Tests { [Fact] public void ValidatePassword_NullInput_Throws () { var s = new MyClass (); Assert . Throws < ArgumentNullException > (() => s . ValidatePassword ( null )); } } // MyClass.cs public class MyClass { public bool ValidatePassword ( string input ) { return false ; } } Se executarmos este c\u00f3digo, o teste falhar\u00e1, pois nenhuma exce\u00e7\u00e3o foi lan\u00e7ada, j\u00e1 que nosso c\u00f3digo em ValidateString \u00e9 apenas um stub. Isso est\u00e1 ok! Esta \u00e9 a parte \"Vermelha\" do ciclo Vermelho-Verde-Refatorar. Agora queremos passar para a parte \"Verde\" - fazer a mudan\u00e7a m\u00ednima necess\u00e1ria para fazer este teste passar: // MyClass.cs public class MyClass { public bool ValidatePassword ( string input ) { throw new ArgumentNullException ( nameof ( input )); } } Nossos testes passam, mas esta fun\u00e7\u00e3o realmente n\u00e3o funciona, ela sempre lan\u00e7ar\u00e1 a exce\u00e7\u00e3o. Tudo bem! \u00c0 medida que continuamos a escrever testes, vamos adicionando lentamente a l\u00f3gica para esta fun\u00e7\u00e3o, e ela se construir\u00e1 sobre si mesma, garantindo que nossos testes continuem a passar. Vamos pular a etapa \"Refatorar\" neste momento porque n\u00e3o h\u00e1 nada para refatorar. Em seguida, vamos adicionar um teste que verifica se a fun\u00e7\u00e3o retorna falso se a senha tiver menos de 8 caracteres: [Fact] public void ValidatePassword_SmallSize_ReturnsFalse () { var s = new MyClass (); Assert . False ( s . ValidatePassword ( \"abc\" )); } Este teste passar\u00e1, pois ainda s\u00f3 lan\u00e7a uma ArgumentNullException , mas novamente, isso \u00e9 uma falha esperada. Corrigindo nossa fun\u00e7\u00e3o, ela dever\u00e1 passar: public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } return false ; } Finalmente, algum c\u00f3digo que parece real! Note como n\u00e3o foi o teste que verificou o valor nulo que nos fez adicionar a instru\u00e7\u00e3o if para a verifica\u00e7\u00e3o de nulo, mas sim o teste subsequente que desbloqueou um novo ramo. Ao adicionar essa instru\u00e7\u00e3o if , fizemos a mudan\u00e7a m\u00ednima necess\u00e1ria para fazer ambos os testes passarem, mas ainda temos trabalho a fazer. Em geral, trabalhar na ordem de adicionar um teste negativo primeiro antes de adicionar um teste positivo garantir\u00e1 que ambos os casos sejam cobertos pelo c\u00f3digo de uma forma que possa ser testada. O ciclo Vermelho-Verde-Refatorar torna esse processo super f\u00e1cil, exigindo a mudan\u00e7a m\u00ednima - j\u00e1 que s\u00f3 queremos fazer as mudan\u00e7as m\u00ednimas, simplesmente retornamos falso aqui, sabendo muito bem que estaremos adicionando l\u00f3gica mais tarde que se expandir\u00e1 sobre isso. Falando nisso, vamos adicionar o teste positivo agora: [Fact] public void ValidatePassword_RightSize_ReturnsTrue () { var s = new MyClass (); Assert . True ( s . ValidatePassword ( \"abcdefgh1\" )); } Novamente, este teste falhar\u00e1 no in\u00edcio. Uma coisa a notar aqui \u00e9 que \u00e9 importante tentarmos tornar nossos testes resilientes a mudan\u00e7as futuras. Quando escrevemos o c\u00f3digo sob teste, agimos de forma muito ing\u00eanua, apenas tentando fazer os testes atuais que temos passar; quando voc\u00ea escreve testes, voc\u00ea quer garantir que tudo o que est\u00e1 fazendo \u00e9 um caso v\u00e1lido no futuro. Neste caso, poder\u00edamos ter escrito a string de entrada como abcdefgh e, quando eventualmente escrev\u00eassemos a fun\u00e7\u00e3o, ela passaria, mas mais tarde, quando adicion\u00e1ssemos testes que validassem que a fun\u00e7\u00e3o tem o resto das entradas adequadas, ela falharia incorretamente. De qualquer forma, a pr\u00f3xima mudan\u00e7a de c\u00f3digo \u00e9: public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if ( input . Length > 8 ) { return true ; } return false ; } Aqui agora temos um teste que passa! No entanto, a l\u00f3gica realmente n\u00e3o faz muito sentido. Fizemos a mudan\u00e7a m\u00ednima, que foi adicionar uma nova condi\u00e7\u00e3o que passou para strings mais longas, mas pensando para frente, sabemos que isso n\u00e3o funcionar\u00e1 assim que adicionarmos valida\u00e7\u00f5es adicionais. Ent\u00e3o, vamos usar nosso primeiro passo de \"Refatorar\" no fluxo Vermelho-Verde-Refatorar! public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if ( input . Length < 8 ) { return false ; } return true ; } Isso parece melhor. Note como, do ponto de vista funcional, inverter a instru\u00e7\u00e3o if n\u00e3o muda o que a fun\u00e7\u00e3o retorna. Esta \u00e9 uma parte importante do fluxo de refatora\u00e7\u00e3o, mantendo a l\u00f3gica fazendo refatora\u00e7\u00f5es comprovadamente seguras, geralmente atrav\u00e9s do uso de ferramentas e refatora\u00e7\u00f5es automatizadas do seu IDE. Finalmente, temos um \u00faltimo requisito para o nosso m\u00e9todo ValidatePassword e \u00e9 que ele precisa verificar se h\u00e1 um n\u00famero na senha. Vamos come\u00e7ar novamente com o teste negativo e validar que, com uma string com o comprimento v\u00e1lido, a fun\u00e7\u00e3o retorna false se n\u00e3o passarmos um n\u00famero: [Fact] public void ValidatePassword_ValidLength_ReturnsFalse () { var s = new MyClass (); Assert . False ( s . ValidatePassword ( \"abcdefghij\" )); } Claro que o teste falha, pois ele est\u00e1 apenas verificando os requisitos de comprimento. Vamos corrigir o m\u00e9todo para verificar os n\u00fameros: public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if ( input . Length < 8 ) { return false ; } if ( ! input . Any ( char . IsDigit )) { return false ; } return true ; } Aqui usamos um m\u00e9todo LINQ \u00fatil para verificar se algum dos char s na string \u00e9 um d\u00edgito, e se n\u00e3o for, retornamos falso. Os testes agora passam, e podemos refatorar. Para melhorar a legibilidade, por que n\u00e3o combinar as instru\u00e7\u00f5es if : public bool ValidatePassword ( string input ) { if ( input == null ) { throw new ArgumentNullException ( nameof ( input )); } if (( input . Length < 8 ) || ( ! input . Any ( char . IsDigit ))) { return false ; } return true ; } Ao refatorar esse c\u00f3digo, nos sentimos 100% confiantes nas mudan\u00e7as que fizemos, pois temos 100% de cobertura de testes que testam tanto cen\u00e1rios positivos quanto negativos. Neste caso, j\u00e1 temos um m\u00e9todo que testa o caso positivo, ent\u00e3o nossa fun\u00e7\u00e3o est\u00e1 pronta! Agora que nosso c\u00f3digo est\u00e1 completamente testado, podemos fazer todo tipo de mudan\u00e7as e ainda ter confian\u00e7a de que ele funciona. Por exemplo, se quis\u00e9ssemos mudar a implementa\u00e7\u00e3o do m\u00e9todo para usar regex, todos os nossos testes ainda passariam e ainda seriam v\u00e1lidos. \u00c9 isso a\u00ed! Terminamos de escrever nossa fun\u00e7\u00e3o, temos 100% de cobertura de testes e, se tiv\u00e9ssemos feito algo um pouco mais complexo, ter\u00edamos a garantia de que o que projetamos j\u00e1 \u00e9 test\u00e1vel, pois os testes foram escritos primeiro!","title":"Exemplo de Desenvolvimento Orientado por Testes (TDD)"},{"location":"automated-testing/unit-testing/why-unit-tests/","text":"Por que Testes Unit\u00e1rios N\u00e3o \u00e9 segredo que escrever testes unit\u00e1rios \u00e9 dif\u00edcil e ainda mais dif\u00edcil escrev\u00ea-los bem. Escrever testes unit\u00e1rios tamb\u00e9m aumenta o tempo de desenvolvimento para cada funcionalidade. Ent\u00e3o, por que dever\u00edamos nos dar ao trabalho de escrev\u00ea-los? Reduzir Custos N\u00e3o h\u00e1 d\u00favida de que quanto mais tarde um bug \u00e9 encontrado, mais caro \u00e9 para corrigi-lo; especialmente se o bug chegar \u00e0 produ\u00e7\u00e3o. Um estudo de pesquisa de 2008 da IBM estima que um bug capturado em produ\u00e7\u00e3o pode custar 6 vezes mais do que se fosse capturado durante a implementa\u00e7\u00e3o. Aumentar a Confian\u00e7a do Desenvolvedor Muitas mudan\u00e7as que os desenvolvedores fazem n\u00e3o s\u00e3o grandes funcionalidades ou algo que requer uma su\u00edte de testes inteira. Uma su\u00edte de testes unit\u00e1rios robusta ajuda a aumentar a confian\u00e7a do desenvolvedor de que sua mudan\u00e7a n\u00e3o causar\u00e1 bugs a jusante. Ter testes unit\u00e1rios tamb\u00e9m ajuda a fazer refatora\u00e7\u00f5es seguras e mec\u00e2nicas que s\u00e3o comprovadamente seguras; usando coisas como ferramentas de refatora\u00e7\u00e3o para fazer refatora\u00e7\u00e3o mec\u00e2nica e executar testes unit\u00e1rios que cobrem o c\u00f3digo refatorado deve ser suficiente para aumentar a confian\u00e7a no commit. Acelerar o Desenvolvimento Testes unit\u00e1rios levam tempo para escrever, mas tamb\u00e9m aceleram o desenvolvimento? Embora isso possa parecer um paradoxo, \u00e9 uma das for\u00e7as de uma su\u00edte de testes unit\u00e1rios - com o tempo ela continua a crescer e evoluir at\u00e9 que os testes se tornem uma parte essencial do fluxo de trabalho do desenvolvedor. Se o \u00fanico teste dispon\u00edvel para um desenvolvedor \u00e9 um teste de sistema de longa dura\u00e7\u00e3o, testes de integra\u00e7\u00e3o que requerem uma implanta\u00e7\u00e3o ou testes manuais, isso aumentar\u00e1 a quantidade de tempo necess\u00e1ria para escrever uma funcionalidade. Esses tipos de testes devem fazer parte do \"Loop Externo\"; testes que podem levar algum tempo para serem executados e validar mais do que apenas o c\u00f3digo que voc\u00ea est\u00e1 escrevendo. Geralmente, esses tipos de testes de loop externo s\u00e3o executados na etapa de PR ou at\u00e9 mesmo mais tarde durante as mesclagens em branches. O Loop Interno do Desenvolvedor \u00e9 o processo pelo qual os desenvolvedores passam enquanto est\u00e3o escrevendo c\u00f3digo. Isso varia de desenvolvedor para desenvolvedor e de linguagem para linguagem, mas normalmente \u00e9 algo como c\u00f3digo -> construir -> executar -> repetir. Quando testes unit\u00e1rios s\u00e3o inseridos no loop interno, os desenvolvedores podem obter feedback e resultados antecipados do c\u00f3digo que est\u00e3o escrevendo. Como os testes unit\u00e1rios s\u00e3o executados muito rapidamente, executar testes n\u00e3o deve ser visto como uma barreira de entrada para este loop. Ferramentas como Visual Studio Live Unit Testing tamb\u00e9m ajudam a encurtar ainda mais o loop interno. Documenta\u00e7\u00e3o como C\u00f3digo Escrever testes unit\u00e1rios \u00e9 uma \u00f3tima maneira de mostrar como as unidades de c\u00f3digo que voc\u00ea est\u00e1 escrevendo devem ser usadas. De certa forma, os testes unit\u00e1rios s\u00e3o melhores do que qualquer documenta\u00e7\u00e3o ou amostras porque eles s\u00e3o (ou pelo menos deveriam ser) executados a cada constru\u00e7\u00e3o, ent\u00e3o h\u00e1 confian\u00e7a de que eles n\u00e3o est\u00e3o desatualizados. Testes unit\u00e1rios tamb\u00e9m devem ser t\u00e3o simples que sejam f\u00e1ceis de seguir.","title":"Por que Testes Unit\u00e1rios"},{"location":"automated-testing/unit-testing/why-unit-tests/#por-que-testes-unitarios","text":"N\u00e3o \u00e9 segredo que escrever testes unit\u00e1rios \u00e9 dif\u00edcil e ainda mais dif\u00edcil escrev\u00ea-los bem. Escrever testes unit\u00e1rios tamb\u00e9m aumenta o tempo de desenvolvimento para cada funcionalidade. Ent\u00e3o, por que dever\u00edamos nos dar ao trabalho de escrev\u00ea-los?","title":"Por que Testes Unit\u00e1rios"},{"location":"automated-testing/unit-testing/why-unit-tests/#reduzir-custos","text":"N\u00e3o h\u00e1 d\u00favida de que quanto mais tarde um bug \u00e9 encontrado, mais caro \u00e9 para corrigi-lo; especialmente se o bug chegar \u00e0 produ\u00e7\u00e3o. Um estudo de pesquisa de 2008 da IBM estima que um bug capturado em produ\u00e7\u00e3o pode custar 6 vezes mais do que se fosse capturado durante a implementa\u00e7\u00e3o.","title":"Reduzir Custos"},{"location":"automated-testing/unit-testing/why-unit-tests/#aumentar-a-confianca-do-desenvolvedor","text":"Muitas mudan\u00e7as que os desenvolvedores fazem n\u00e3o s\u00e3o grandes funcionalidades ou algo que requer uma su\u00edte de testes inteira. Uma su\u00edte de testes unit\u00e1rios robusta ajuda a aumentar a confian\u00e7a do desenvolvedor de que sua mudan\u00e7a n\u00e3o causar\u00e1 bugs a jusante. Ter testes unit\u00e1rios tamb\u00e9m ajuda a fazer refatora\u00e7\u00f5es seguras e mec\u00e2nicas que s\u00e3o comprovadamente seguras; usando coisas como ferramentas de refatora\u00e7\u00e3o para fazer refatora\u00e7\u00e3o mec\u00e2nica e executar testes unit\u00e1rios que cobrem o c\u00f3digo refatorado deve ser suficiente para aumentar a confian\u00e7a no commit.","title":"Aumentar a Confian\u00e7a do Desenvolvedor"},{"location":"automated-testing/unit-testing/why-unit-tests/#acelerar-o-desenvolvimento","text":"Testes unit\u00e1rios levam tempo para escrever, mas tamb\u00e9m aceleram o desenvolvimento? Embora isso possa parecer um paradoxo, \u00e9 uma das for\u00e7as de uma su\u00edte de testes unit\u00e1rios - com o tempo ela continua a crescer e evoluir at\u00e9 que os testes se tornem uma parte essencial do fluxo de trabalho do desenvolvedor. Se o \u00fanico teste dispon\u00edvel para um desenvolvedor \u00e9 um teste de sistema de longa dura\u00e7\u00e3o, testes de integra\u00e7\u00e3o que requerem uma implanta\u00e7\u00e3o ou testes manuais, isso aumentar\u00e1 a quantidade de tempo necess\u00e1ria para escrever uma funcionalidade. Esses tipos de testes devem fazer parte do \"Loop Externo\"; testes que podem levar algum tempo para serem executados e validar mais do que apenas o c\u00f3digo que voc\u00ea est\u00e1 escrevendo. Geralmente, esses tipos de testes de loop externo s\u00e3o executados na etapa de PR ou at\u00e9 mesmo mais tarde durante as mesclagens em branches. O Loop Interno do Desenvolvedor \u00e9 o processo pelo qual os desenvolvedores passam enquanto est\u00e3o escrevendo c\u00f3digo. Isso varia de desenvolvedor para desenvolvedor e de linguagem para linguagem, mas normalmente \u00e9 algo como c\u00f3digo -> construir -> executar -> repetir. Quando testes unit\u00e1rios s\u00e3o inseridos no loop interno, os desenvolvedores podem obter feedback e resultados antecipados do c\u00f3digo que est\u00e3o escrevendo. Como os testes unit\u00e1rios s\u00e3o executados muito rapidamente, executar testes n\u00e3o deve ser visto como uma barreira de entrada para este loop. Ferramentas como Visual Studio Live Unit Testing tamb\u00e9m ajudam a encurtar ainda mais o loop interno.","title":"Acelerar o Desenvolvimento"},{"location":"automated-testing/unit-testing/why-unit-tests/#documentacao-como-codigo","text":"Escrever testes unit\u00e1rios \u00e9 uma \u00f3tima maneira de mostrar como as unidades de c\u00f3digo que voc\u00ea est\u00e1 escrevendo devem ser usadas. De certa forma, os testes unit\u00e1rios s\u00e3o melhores do que qualquer documenta\u00e7\u00e3o ou amostras porque eles s\u00e3o (ou pelo menos deveriam ser) executados a cada constru\u00e7\u00e3o, ent\u00e3o h\u00e1 confian\u00e7a de que eles n\u00e3o est\u00e3o desatualizados. Testes unit\u00e1rios tamb\u00e9m devem ser t\u00e3o simples que sejam f\u00e1ceis de seguir.","title":"Documenta\u00e7\u00e3o como C\u00f3digo"},{"location":"code-reviews/","text":"Revis\u00f5es de C\u00f3digo Desenvolvedores trabalhando em projetos devem realizar revis\u00f5es de c\u00f3digo entre pares em cada pull request (ou check-in em um branch compartilhado). Objetivos A revis\u00e3o de c\u00f3digo \u00e9 uma forma de ter uma conversa sobre o c\u00f3digo onde os participantes ir\u00e3o: Melhorar a qualidade do c\u00f3digo identificando e removendo defeitos antes que eles possam ser introduzidos em branches de c\u00f3digo compartilhados. Aprender e crescer ao ter outras pessoas revisando o c\u00f3digo, somos expostos a padr\u00f5es de design ou linguagens desconhecidas, entre outros t\u00f3picos, e at\u00e9 mesmo quebramos alguns maus h\u00e1bitos. Entendimento compartilhado entre os desenvolvedores sobre o c\u00f3digo do projeto. Recursos Ferramentas de revis\u00e3o de c\u00f3digo Documenta\u00e7\u00e3o de Pr\u00e1ticas de Engenharia do Google: Como fazer uma revis\u00e3o de c\u00f3digo Segredos Melhor Guardados da Revis\u00e3o de C\u00f3digo entre Pares","title":"Revis\u00f5es de C\u00f3digo"},{"location":"code-reviews/#revisoes-de-codigo","text":"Desenvolvedores trabalhando em projetos devem realizar revis\u00f5es de c\u00f3digo entre pares em cada pull request (ou check-in em um branch compartilhado).","title":"Revis\u00f5es de C\u00f3digo"},{"location":"code-reviews/#objetivos","text":"A revis\u00e3o de c\u00f3digo \u00e9 uma forma de ter uma conversa sobre o c\u00f3digo onde os participantes ir\u00e3o: Melhorar a qualidade do c\u00f3digo identificando e removendo defeitos antes que eles possam ser introduzidos em branches de c\u00f3digo compartilhados. Aprender e crescer ao ter outras pessoas revisando o c\u00f3digo, somos expostos a padr\u00f5es de design ou linguagens desconhecidas, entre outros t\u00f3picos, e at\u00e9 mesmo quebramos alguns maus h\u00e1bitos. Entendimento compartilhado entre os desenvolvedores sobre o c\u00f3digo do projeto.","title":"Objetivos"},{"location":"code-reviews/#recursos","text":"Ferramentas de revis\u00e3o de c\u00f3digo Documenta\u00e7\u00e3o de Pr\u00e1ticas de Engenharia do Google: Como fazer uma revis\u00e3o de c\u00f3digo Segredos Melhor Guardados da Revis\u00e3o de C\u00f3digo entre Pares","title":"Recursos"},{"location":"code-reviews/faq/","text":"Perguntas Frequentes (FAQ) Esta \u00e9 uma lista de perguntas / problemas frequentemente encontrados ao trabalhar com revis\u00f5es de c\u00f3digo e respostas sobre como voc\u00ea pode possivelmente abord\u00e1-los. O que torna uma revis\u00e3o de c\u00f3digo diferente de um PR? Um pull request (PR) \u00e9 uma forma de notificar que uma tarefa est\u00e1 conclu\u00edda e pronta para ser mesclada no branch principal de trabalho (fonte da verdade). Uma revis\u00e3o de c\u00f3digo \u00e9 ter algu\u00e9m examinando o c\u00f3digo em um PR e validando-o antes de ser mesclado, mas, em geral, revis\u00f5es de c\u00f3digo tamb\u00e9m podem ocorrer fora dos PRs. Revis\u00e3o de C\u00f3digo Pull Request Focado no c\u00f3digo-fonte Destinado a aprimorar e habilitar revis\u00f5es de c\u00f3digo. Inclui tanto o c\u00f3digo-fonte quanto pode ter um escopo mais amplo (por exemplo, documenta\u00e7\u00e3o, testes de integra\u00e7\u00e3o, compila\u00e7\u00f5es) Destinado para feedback antecipado antes de enviar um PR N\u00e3o destinado para feedback antecipado . Criado quando o autor est\u00e1 pronto para mesclar Geralmente uma revis\u00e3o s\u00edncrona com ciclos de feedback mais r\u00e1pidos (PRs em rascunho como exce\u00e7\u00e3o). Exemplos: reuni\u00f5es agendadas, revis\u00e3o presencial, programa\u00e7\u00e3o em pares Geralmente uma revis\u00e3o ass\u00edncrona auxiliada por ferramentas, mas pode ser elevada para uma reuni\u00e3o s\u00edncrona quando necess\u00e1rio Por que precisamos de revis\u00f5es de c\u00f3digo? Nossas revis\u00f5es de c\u00f3digo entre pares s\u00e3o estruturadas em torno das melhores pr\u00e1ticas, para encontrar tipos espec\u00edficos de erros. Assim como voc\u00ea ainda executaria um linter em c\u00f3digo mobado, voc\u00ea ainda pediria a algu\u00e9m para fazer a \u00faltima verifica\u00e7\u00e3o para garantir que o c\u00f3digo esteja em conformidade com os padr\u00f5es esperados e evite armadilhas comuns. Os PRs s\u00e3o muito grandes, como podemos corrigir isso? Certifique-se de dimensionar os itens de trabalho em peda\u00e7os pequenos e claros, para que a pessoa revisora possa entender o c\u00f3digo por conta pr\u00f3pria. A equipe \u00e9 instru\u00edda a fazer commits antecipadamente, antes que o item completo do backlog do produto / hist\u00f3ria do usu\u00e1rio esteja completo, mas sim quando um item individual est\u00e1 conclu\u00eddo. Se o trabalho resultaria em um recurso incompleto, certifique-se de que ele possa ser desativado at\u00e9 que o recurso completo seja entregue. Mais informa\u00e7\u00f5es podem ser encontradas em Pull Requests - Orienta\u00e7\u00f5es de Tamanho . Como podemos acelerar as revis\u00f5es de c\u00f3digo? Revis\u00f5es de c\u00f3digo lentas podem causar atrasos na entrega de recursos e causar frustra\u00e7\u00e3o entre os membros da equipe. A\u00e7\u00f5es poss\u00edveis que voc\u00ea pode tomar Adicione uma regra para o tempo de resposta do PR ao seu acordo de trabalho. Reserve um espa\u00e7o ap\u00f3s o standup para analisar os PRs pendentes e atribuir aqueles que est\u00e3o inativos. Dedique um gerente de revis\u00e3o de PR que ser\u00e1 respons\u00e1vel por manter as coisas fluindo, atribuindo ou notificando pessoas quando o PR ficou obsoleto. Use ferramentas para indicar melhor revis\u00f5es obsoletas - Personalizar ADO - Quadros de Tarefas . Quais ferramentas posso usar para revisar um PR complexo? Consulte a se\u00e7\u00e3o Ferramentas para obter ajuda sobre como realizar revis\u00f5es fora do Visual Studio ou Visual Studio Code. Como podemos impor pol\u00edticas de revis\u00e3o de c\u00f3digo? Ao configurar Pol\u00edticas de Branch , voc\u00ea pode facilmente impor regras de revis\u00f5es de c\u00f3digo. N\u00f3s fazemos programa\u00e7\u00e3o em pares ou em grupo. Como isso deve se refletir em nossas revis\u00f5es de c\u00f3digo? Existem duas formas de realizar uma revis\u00e3o de c\u00f3digo: Par - Algu\u00e9m de fora do par deve realizar a revis\u00e3o de c\u00f3digo. Um dos outros grandes benef\u00edcios das revis\u00f5es de c\u00f3digo \u00e9 disseminar o conhecimento sobre a base de c\u00f3digo para outros membros da equipe que normalmente n\u00e3o trabalham na parte da base de c\u00f3digo em revis\u00e3o. Grupo - Um membro do grupo que passou menos (ou nenhum) tempo no teclado deve realizar a revis\u00e3o de c\u00f3digo.","title":"Perguntas Frequentes (FAQ)"},{"location":"code-reviews/faq/#perguntas-frequentes-faq","text":"Esta \u00e9 uma lista de perguntas / problemas frequentemente encontrados ao trabalhar com revis\u00f5es de c\u00f3digo e respostas sobre como voc\u00ea pode possivelmente abord\u00e1-los.","title":"Perguntas Frequentes (FAQ)"},{"location":"code-reviews/faq/#o-que-torna-uma-revisao-de-codigo-diferente-de-um-pr","text":"Um pull request (PR) \u00e9 uma forma de notificar que uma tarefa est\u00e1 conclu\u00edda e pronta para ser mesclada no branch principal de trabalho (fonte da verdade). Uma revis\u00e3o de c\u00f3digo \u00e9 ter algu\u00e9m examinando o c\u00f3digo em um PR e validando-o antes de ser mesclado, mas, em geral, revis\u00f5es de c\u00f3digo tamb\u00e9m podem ocorrer fora dos PRs. Revis\u00e3o de C\u00f3digo Pull Request Focado no c\u00f3digo-fonte Destinado a aprimorar e habilitar revis\u00f5es de c\u00f3digo. Inclui tanto o c\u00f3digo-fonte quanto pode ter um escopo mais amplo (por exemplo, documenta\u00e7\u00e3o, testes de integra\u00e7\u00e3o, compila\u00e7\u00f5es) Destinado para feedback antecipado antes de enviar um PR N\u00e3o destinado para feedback antecipado . Criado quando o autor est\u00e1 pronto para mesclar Geralmente uma revis\u00e3o s\u00edncrona com ciclos de feedback mais r\u00e1pidos (PRs em rascunho como exce\u00e7\u00e3o). Exemplos: reuni\u00f5es agendadas, revis\u00e3o presencial, programa\u00e7\u00e3o em pares Geralmente uma revis\u00e3o ass\u00edncrona auxiliada por ferramentas, mas pode ser elevada para uma reuni\u00e3o s\u00edncrona quando necess\u00e1rio","title":"O que torna uma revis\u00e3o de c\u00f3digo diferente de um PR?"},{"location":"code-reviews/faq/#por-que-precisamos-de-revisoes-de-codigo","text":"Nossas revis\u00f5es de c\u00f3digo entre pares s\u00e3o estruturadas em torno das melhores pr\u00e1ticas, para encontrar tipos espec\u00edficos de erros. Assim como voc\u00ea ainda executaria um linter em c\u00f3digo mobado, voc\u00ea ainda pediria a algu\u00e9m para fazer a \u00faltima verifica\u00e7\u00e3o para garantir que o c\u00f3digo esteja em conformidade com os padr\u00f5es esperados e evite armadilhas comuns.","title":"Por que precisamos de revis\u00f5es de c\u00f3digo?"},{"location":"code-reviews/faq/#os-prs-sao-muito-grandes-como-podemos-corrigir-isso","text":"Certifique-se de dimensionar os itens de trabalho em peda\u00e7os pequenos e claros, para que a pessoa revisora possa entender o c\u00f3digo por conta pr\u00f3pria. A equipe \u00e9 instru\u00edda a fazer commits antecipadamente, antes que o item completo do backlog do produto / hist\u00f3ria do usu\u00e1rio esteja completo, mas sim quando um item individual est\u00e1 conclu\u00eddo. Se o trabalho resultaria em um recurso incompleto, certifique-se de que ele possa ser desativado at\u00e9 que o recurso completo seja entregue. Mais informa\u00e7\u00f5es podem ser encontradas em Pull Requests - Orienta\u00e7\u00f5es de Tamanho .","title":"Os PRs s\u00e3o muito grandes, como podemos corrigir isso?"},{"location":"code-reviews/faq/#como-podemos-acelerar-as-revisoes-de-codigo","text":"Revis\u00f5es de c\u00f3digo lentas podem causar atrasos na entrega de recursos e causar frustra\u00e7\u00e3o entre os membros da equipe.","title":"Como podemos acelerar as revis\u00f5es de c\u00f3digo?"},{"location":"code-reviews/faq/#acoes-possiveis-que-voce-pode-tomar","text":"Adicione uma regra para o tempo de resposta do PR ao seu acordo de trabalho. Reserve um espa\u00e7o ap\u00f3s o standup para analisar os PRs pendentes e atribuir aqueles que est\u00e3o inativos. Dedique um gerente de revis\u00e3o de PR que ser\u00e1 respons\u00e1vel por manter as coisas fluindo, atribuindo ou notificando pessoas quando o PR ficou obsoleto. Use ferramentas para indicar melhor revis\u00f5es obsoletas - Personalizar ADO - Quadros de Tarefas .","title":"A\u00e7\u00f5es poss\u00edveis que voc\u00ea pode tomar"},{"location":"code-reviews/faq/#quais-ferramentas-posso-usar-para-revisar-um-pr-complexo","text":"Consulte a se\u00e7\u00e3o Ferramentas para obter ajuda sobre como realizar revis\u00f5es fora do Visual Studio ou Visual Studio Code.","title":"Quais ferramentas posso usar para revisar um PR complexo?"},{"location":"code-reviews/faq/#como-podemos-impor-politicas-de-revisao-de-codigo","text":"Ao configurar Pol\u00edticas de Branch , voc\u00ea pode facilmente impor regras de revis\u00f5es de c\u00f3digo.","title":"Como podemos impor pol\u00edticas de revis\u00e3o de c\u00f3digo?"},{"location":"code-reviews/faq/#nos-fazemos-programacao-em-pares-ou-em-grupo-como-isso-deve-se-refletir-em-nossas-revisoes-de-codigo","text":"Existem duas formas de realizar uma revis\u00e3o de c\u00f3digo: Par - Algu\u00e9m de fora do par deve realizar a revis\u00e3o de c\u00f3digo. Um dos outros grandes benef\u00edcios das revis\u00f5es de c\u00f3digo \u00e9 disseminar o conhecimento sobre a base de c\u00f3digo para outros membros da equipe que normalmente n\u00e3o trabalham na parte da base de c\u00f3digo em revis\u00e3o. Grupo - Um membro do grupo que passou menos (ou nenhum) tempo no teclado deve realizar a revis\u00e3o de c\u00f3digo.","title":"N\u00f3s fazemos programa\u00e7\u00e3o em pares ou em grupo. Como isso deve se refletir em nossas revis\u00f5es de c\u00f3digo?"},{"location":"code-reviews/inclusion-in-code-review/","text":"Inclus\u00e3o na Revis\u00e3o de C\u00f3digo A seguir est\u00e3o alguns pontos que enfatizam por que a inclusividade nas revis\u00f5es de c\u00f3digo \u00e9 importante: Revis\u00f5es de c\u00f3digo s\u00e3o uma parte importante do nosso trabalho como profissionais de software. Na ISE, trabalhamos com equipes interculturais de todo o mundo. Como nos comunicamos afeta o moral da equipe. Revis\u00f5es de c\u00f3digo inclusivas acolhem novos desenvolvedores e os tornam confort\u00e1veis com a equipe. Ataques rudes ou pessoais durante revis\u00f5es de c\u00f3digo alienam - as pessoas podem, sem saber, fazer coment\u00e1rios rudes ao revisar pull requests (PRs). Tipos e Exemplos de Comportamento N\u00e3o Inclusivo na Revis\u00e3o de C\u00f3digo Atribui\u00e7\u00f5es de revis\u00e3o injustas. Exemplo: Atribuir a maioria das revis\u00f5es a poucas pessoas e desconsiderar alguns membros da equipe. Intera\u00e7\u00f5es interpessoais negativas. Exemplo: Longas discuss\u00f5es sobre t\u00f3picos subjetivos, como estilo de c\u00f3digo. Tomada de decis\u00e3o tendenciosa. Exemplo: Coment\u00e1rios sobre o desenvolvedor e n\u00e3o sobre o c\u00f3digo. Supor que o c\u00f3digo do desenvolvedor X sempre ser\u00e1 bom e, portanto, n\u00e3o revis\u00e1-lo adequadamente e vice-versa. Exemplos de Revis\u00f5es de C\u00f3digo Inclusivas Qualquer pessoa da equipe deve ser designada para revisar PRs. O revisor deve ser claro sobre o que \u00e9 uma opini\u00e3o, prefer\u00eancia pessoal, melhor pr\u00e1tica ou um fato. Discuss\u00f5es sobre prefer\u00eancias pessoais e opini\u00f5es s\u00e3o na maioria das vezes evit\u00e1veis. Usar linguagem e tom inclusivos nos coment\u00e1rios da revis\u00e3o de c\u00f3digo. Por exemplo, ser sugestivo em vez de prescritivo nos coment\u00e1rios da revis\u00e3o \u00e9 uma boa maneira de passar o ponto de vista. \u00c9 uma boa pr\u00e1tica para o autor de um PR agradecer ao revisor pela revis\u00e3o, quando eles contribu\u00edram para melhorar o c\u00f3digo ou voc\u00ea aprendeu algo novo. Usar o m\u00e9todo sandu\u00edche para recomendar uma mudan\u00e7a de c\u00f3digo para um novo desenvolvedor ou um novo cliente: coloque a sugest\u00e3o entre dois elogios. Por exemplo: \"\u00d3timo trabalho at\u00e9 agora, mas eu recomendaria algumas mudan\u00e7as aqui. A prop\u00f3sito, adorei o uso de XYZ aqui, bom trabalho!\" Diretrizes para o Autor O objetivo \u00e9 escrever um c\u00f3digo que seja f\u00e1cil de ler, revisar e manter. \u00c9 importante garantir que quem estiver olhando para o c\u00f3digo, seja o revisor ou um futuro engenheiro, possa entender as motiva\u00e7\u00f5es e como seu c\u00f3digo atinge seus objetivos. Pedir proativamente ajuda ou feedback direcionado. Responder claramente \u00e0s perguntas feitas pelos revisores. Evitar commits grandes, enviando mudan\u00e7as incrementais. Commits grandes e que cont\u00eam mudan\u00e7as em v\u00e1rios arquivos levar\u00e3o a uma revis\u00e3o injusta do c\u00f3digo. O comportamento tendencioso dos revisores pode surgir ao revisar tais PRs. Por exemplo, um commit grande de um desenvolvedor s\u00eanior pode ser aprovado sem uma revis\u00e3o completa, enquanto um commit grande de um desenvolvedor j\u00fanior pode nunca ser revisado e aprovado. Diretrizes para o Revisor Presuma inten\u00e7\u00f5es positivas do autor. Escreva coment\u00e1rios claros e elaborados. Identifique subjetividade, escolha de codifica\u00e7\u00e3o e melhores pr\u00e1ticas. \u00c9 bom discutir estilo de codifica\u00e7\u00e3o e escolhas de codifica\u00e7\u00e3o subjetivas em algum outro f\u00f3rum e n\u00e3o no PR. Um PR n\u00e3o deve se tornar um terreno para discutir escolhas de codifica\u00e7\u00e3o subjetivas e ter longas discuss\u00f5es sobre isso. Se voc\u00ea n\u00e3o entender o c\u00f3digo adequadamente, evite comentar, por exemplo, \"Este c\u00f3digo \u00e9 incompreens\u00edvel\". \u00c9 melhor ter uma liga\u00e7\u00e3o com o autor e obter um entendimento b\u00e1sico do trabalho deles. Seja sugestivo e n\u00e3o prescritivo. Um revisor deve sugerir mudan\u00e7as e n\u00e3o prescrever mudan\u00e7as, deixe o autor decidir se realmente deseja aceitar as mudan\u00e7as propostas. Cultura e Revis\u00f5es de C\u00f3digo N\u00f3s, na ISE, podemos nos deparar com situa\u00e7\u00f5es em que as revis\u00f5es de c\u00f3digo n\u00e3o s\u00e3o ideais e frequentemente observamos comportamentos de revis\u00e3o de c\u00f3digo n\u00e3o inclusivos. \u00c9 importante estar ciente do fato de que a cultura e o estilo de comunica\u00e7\u00e3o de uma geografia espec\u00edfica tamb\u00e9m influenciam como as pessoas interagem em pull requests. Nesses casos, presumir a inten\u00e7\u00e3o positiva do autor e do revisor \u00e9 um bom ponto de partida para come\u00e7ar a analisar a qualidade das revis\u00f5es de c\u00f3digo. Lidando com o Fen\u00f4meno do Impostor O fen\u00f4meno do impostor \u00e9 um padr\u00e3o psicol\u00f3gico em que um indiv\u00edduo duvida de suas habilidades, talentos ou realiza\u00e7\u00f5es e tem um medo interno persistente de ser exposto como uma \"fraude\" - Wikipedia . Algu\u00e9m que experimenta o fen\u00f4meno do impostor pode achar particularmente estressante enviar c\u00f3digo para revis\u00e3o. \u00c9 importante perceber que todos podem ter contribui\u00e7\u00f5es significativas e n\u00e3o deixar que as fraquezas percebidas impe\u00e7am as contribui\u00e7\u00f5es. Algumas dicas para superar o fen\u00f4meno do impostor para autores: Revise as diretrizes destacadas acima e certifique-se de que sua mudan\u00e7a de c\u00f3digo esteja em conformidade com elas. Pe\u00e7a ajuda a um colega - programe em par com um colega experiente de quem voc\u00ea possa aprender. Algumas dicas para superar o fen\u00f4meno do impostor para revisores: Qualquer pessoa pode ter percep\u00e7\u00f5es valiosas. Um novo par de olhos \u00e9 sempre bem-vindo. Estude a revis\u00e3o at\u00e9 que voc\u00ea a tenha entendido claramente, verifique os casos extremos e procure maneiras de melhor\u00e1-la. Se algo n\u00e3o estiver claro, uma pergunta espec\u00edfica simples deve ser feita. Se voc\u00ea aprendeu algo, sempre pode elogiar o autor. Se poss\u00edvel, fa\u00e7a parceria com algu\u00e9m para revisar o c\u00f3digo, para que voc\u00ea possa estabelecer uma conex\u00e3o pessoal e ter uma discuss\u00e3o mais profunda sobre o c\u00f3digo. Ferramentas A seguir est\u00e3o algumas ferramentas que podem ajudar a estabelecer uma cultura de revis\u00e3o de c\u00f3digo inclusiva dentro de nossas equipes. Anonymous GitHub Blind Code Reviews Gitmask inclusivelint","title":"Inclus\u00e3o na Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/inclusion-in-code-review/#inclusao-na-revisao-de-codigo","text":"A seguir est\u00e3o alguns pontos que enfatizam por que a inclusividade nas revis\u00f5es de c\u00f3digo \u00e9 importante: Revis\u00f5es de c\u00f3digo s\u00e3o uma parte importante do nosso trabalho como profissionais de software. Na ISE, trabalhamos com equipes interculturais de todo o mundo. Como nos comunicamos afeta o moral da equipe. Revis\u00f5es de c\u00f3digo inclusivas acolhem novos desenvolvedores e os tornam confort\u00e1veis com a equipe. Ataques rudes ou pessoais durante revis\u00f5es de c\u00f3digo alienam - as pessoas podem, sem saber, fazer coment\u00e1rios rudes ao revisar pull requests (PRs).","title":"Inclus\u00e3o na Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/inclusion-in-code-review/#tipos-e-exemplos-de-comportamento-nao-inclusivo-na-revisao-de-codigo","text":"Atribui\u00e7\u00f5es de revis\u00e3o injustas. Exemplo: Atribuir a maioria das revis\u00f5es a poucas pessoas e desconsiderar alguns membros da equipe. Intera\u00e7\u00f5es interpessoais negativas. Exemplo: Longas discuss\u00f5es sobre t\u00f3picos subjetivos, como estilo de c\u00f3digo. Tomada de decis\u00e3o tendenciosa. Exemplo: Coment\u00e1rios sobre o desenvolvedor e n\u00e3o sobre o c\u00f3digo. Supor que o c\u00f3digo do desenvolvedor X sempre ser\u00e1 bom e, portanto, n\u00e3o revis\u00e1-lo adequadamente e vice-versa.","title":"Tipos e Exemplos de Comportamento N\u00e3o Inclusivo na Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/inclusion-in-code-review/#exemplos-de-revisoes-de-codigo-inclusivas","text":"Qualquer pessoa da equipe deve ser designada para revisar PRs. O revisor deve ser claro sobre o que \u00e9 uma opini\u00e3o, prefer\u00eancia pessoal, melhor pr\u00e1tica ou um fato. Discuss\u00f5es sobre prefer\u00eancias pessoais e opini\u00f5es s\u00e3o na maioria das vezes evit\u00e1veis. Usar linguagem e tom inclusivos nos coment\u00e1rios da revis\u00e3o de c\u00f3digo. Por exemplo, ser sugestivo em vez de prescritivo nos coment\u00e1rios da revis\u00e3o \u00e9 uma boa maneira de passar o ponto de vista. \u00c9 uma boa pr\u00e1tica para o autor de um PR agradecer ao revisor pela revis\u00e3o, quando eles contribu\u00edram para melhorar o c\u00f3digo ou voc\u00ea aprendeu algo novo. Usar o m\u00e9todo sandu\u00edche para recomendar uma mudan\u00e7a de c\u00f3digo para um novo desenvolvedor ou um novo cliente: coloque a sugest\u00e3o entre dois elogios. Por exemplo: \"\u00d3timo trabalho at\u00e9 agora, mas eu recomendaria algumas mudan\u00e7as aqui. A prop\u00f3sito, adorei o uso de XYZ aqui, bom trabalho!\"","title":"Exemplos de Revis\u00f5es de C\u00f3digo Inclusivas"},{"location":"code-reviews/inclusion-in-code-review/#diretrizes-para-o-autor","text":"O objetivo \u00e9 escrever um c\u00f3digo que seja f\u00e1cil de ler, revisar e manter. \u00c9 importante garantir que quem estiver olhando para o c\u00f3digo, seja o revisor ou um futuro engenheiro, possa entender as motiva\u00e7\u00f5es e como seu c\u00f3digo atinge seus objetivos. Pedir proativamente ajuda ou feedback direcionado. Responder claramente \u00e0s perguntas feitas pelos revisores. Evitar commits grandes, enviando mudan\u00e7as incrementais. Commits grandes e que cont\u00eam mudan\u00e7as em v\u00e1rios arquivos levar\u00e3o a uma revis\u00e3o injusta do c\u00f3digo. O comportamento tendencioso dos revisores pode surgir ao revisar tais PRs. Por exemplo, um commit grande de um desenvolvedor s\u00eanior pode ser aprovado sem uma revis\u00e3o completa, enquanto um commit grande de um desenvolvedor j\u00fanior pode nunca ser revisado e aprovado.","title":"Diretrizes para o Autor"},{"location":"code-reviews/inclusion-in-code-review/#diretrizes-para-o-revisor","text":"Presuma inten\u00e7\u00f5es positivas do autor. Escreva coment\u00e1rios claros e elaborados. Identifique subjetividade, escolha de codifica\u00e7\u00e3o e melhores pr\u00e1ticas. \u00c9 bom discutir estilo de codifica\u00e7\u00e3o e escolhas de codifica\u00e7\u00e3o subjetivas em algum outro f\u00f3rum e n\u00e3o no PR. Um PR n\u00e3o deve se tornar um terreno para discutir escolhas de codifica\u00e7\u00e3o subjetivas e ter longas discuss\u00f5es sobre isso. Se voc\u00ea n\u00e3o entender o c\u00f3digo adequadamente, evite comentar, por exemplo, \"Este c\u00f3digo \u00e9 incompreens\u00edvel\". \u00c9 melhor ter uma liga\u00e7\u00e3o com o autor e obter um entendimento b\u00e1sico do trabalho deles. Seja sugestivo e n\u00e3o prescritivo. Um revisor deve sugerir mudan\u00e7as e n\u00e3o prescrever mudan\u00e7as, deixe o autor decidir se realmente deseja aceitar as mudan\u00e7as propostas.","title":"Diretrizes para o Revisor"},{"location":"code-reviews/inclusion-in-code-review/#cultura-e-revisoes-de-codigo","text":"N\u00f3s, na ISE, podemos nos deparar com situa\u00e7\u00f5es em que as revis\u00f5es de c\u00f3digo n\u00e3o s\u00e3o ideais e frequentemente observamos comportamentos de revis\u00e3o de c\u00f3digo n\u00e3o inclusivos. \u00c9 importante estar ciente do fato de que a cultura e o estilo de comunica\u00e7\u00e3o de uma geografia espec\u00edfica tamb\u00e9m influenciam como as pessoas interagem em pull requests. Nesses casos, presumir a inten\u00e7\u00e3o positiva do autor e do revisor \u00e9 um bom ponto de partida para come\u00e7ar a analisar a qualidade das revis\u00f5es de c\u00f3digo.","title":"Cultura e Revis\u00f5es de C\u00f3digo"},{"location":"code-reviews/inclusion-in-code-review/#lidando-com-o-fenomeno-do-impostor","text":"O fen\u00f4meno do impostor \u00e9 um padr\u00e3o psicol\u00f3gico em que um indiv\u00edduo duvida de suas habilidades, talentos ou realiza\u00e7\u00f5es e tem um medo interno persistente de ser exposto como uma \"fraude\" - Wikipedia . Algu\u00e9m que experimenta o fen\u00f4meno do impostor pode achar particularmente estressante enviar c\u00f3digo para revis\u00e3o. \u00c9 importante perceber que todos podem ter contribui\u00e7\u00f5es significativas e n\u00e3o deixar que as fraquezas percebidas impe\u00e7am as contribui\u00e7\u00f5es. Algumas dicas para superar o fen\u00f4meno do impostor para autores: Revise as diretrizes destacadas acima e certifique-se de que sua mudan\u00e7a de c\u00f3digo esteja em conformidade com elas. Pe\u00e7a ajuda a um colega - programe em par com um colega experiente de quem voc\u00ea possa aprender. Algumas dicas para superar o fen\u00f4meno do impostor para revisores: Qualquer pessoa pode ter percep\u00e7\u00f5es valiosas. Um novo par de olhos \u00e9 sempre bem-vindo. Estude a revis\u00e3o at\u00e9 que voc\u00ea a tenha entendido claramente, verifique os casos extremos e procure maneiras de melhor\u00e1-la. Se algo n\u00e3o estiver claro, uma pergunta espec\u00edfica simples deve ser feita. Se voc\u00ea aprendeu algo, sempre pode elogiar o autor. Se poss\u00edvel, fa\u00e7a parceria com algu\u00e9m para revisar o c\u00f3digo, para que voc\u00ea possa estabelecer uma conex\u00e3o pessoal e ter uma discuss\u00e3o mais profunda sobre o c\u00f3digo.","title":"Lidando com o Fen\u00f4meno do Impostor"},{"location":"code-reviews/inclusion-in-code-review/#ferramentas","text":"A seguir est\u00e3o algumas ferramentas que podem ajudar a estabelecer uma cultura de revis\u00e3o de c\u00f3digo inclusiva dentro de nossas equipes. Anonymous GitHub Blind Code Reviews Gitmask inclusivelint","title":"Ferramentas"},{"location":"code-reviews/pull-requests/","text":"Pull Requests As altera\u00e7\u00f5es em qualquer c\u00f3digo principal - como o ramo principal em um reposit\u00f3rio Git, por exemplo - devem ser feitas usando pull requests (PR). As pull requests possibilitam: Inspe\u00e7\u00e3o de c\u00f3digo - veja Revis\u00f5es de C\u00f3digo Execu\u00e7\u00e3o de qualifica\u00e7\u00e3o automatizada do c\u00f3digo Linters (verificadores de c\u00f3digo) Compila\u00e7\u00e3o Testes unit\u00e1rios Testes de integra\u00e7\u00e3o, etc. Os requisitos das pull requests podem e devem ser aplicados por pol\u00edticas, que podem ser configuradas nos sistemas mais modernos de controle de vers\u00e3o e rastreamento de itens de trabalho. Consulte a se\u00e7\u00e3o Evid\u00eancia e Medidas para mais informa\u00e7\u00f5es. Processo Geral Implemente as altera\u00e7\u00f5es com base na descri\u00e7\u00e3o bem definida e nos crit\u00e9rios de aceita\u00e7\u00e3o da tarefa em quest\u00e3o. Em seguida, antes de criar uma nova pull request: * Certifique-se de que o c\u00f3digo esteja em conformidade com as conven\u00e7\u00f5es de codifica\u00e7\u00e3o acordadas * Isso pode ser parcialmente automatizado usando linters (verificadores de c\u00f3digo) * Garanta que o c\u00f3digo compile e execute sem erros ou avisos * Escreva e/ou atualize os testes para abranger as altera\u00e7\u00f5es e certifique-se de que todos os testes novos e existentes passem * Escreva e/ou atualize a documenta\u00e7\u00e3o para corresponder \u00e0s altera\u00e7\u00f5es Uma vez convencido de que os crit\u00e9rios acima est\u00e3o atendidos, crie e envie uma nova pull request seguindo o modelo de pull request Siga o processo de revis\u00e3o de c\u00f3digo para mesclar as altera\u00e7\u00f5es no c\u00f3digo principal O diagrama a seguir ilustra essa abordagem. sequenceDiagram New branch->>+Pull request: Cria\u00e7\u00e3o de nova PR Pull request->>+Code review: Processo de revis\u00e3o Code review->>+Pull request: Atualiza\u00e7\u00f5es de c\u00f3digo Pull request->>+New branch: Mesclar Pull Request Pull request-->>-New branch: Excluir ramo Pull request ->>+ Main branch: Mesclar ap\u00f3s a conclus\u00e3o New branch->>+Main branch: Objetivo da Pull request Orienta\u00e7\u00e3o de Tamanho Devemos sempre procurar manter as pull requests pequenas. PRs pequenas t\u00eam v\u00e1rias vantagens: S\u00e3o mais f\u00e1ceis de revisar; um benef\u00edcio claro para os revisores. S\u00e3o mais f\u00e1ceis de implantar; isso est\u00e1 alinhado com a estrat\u00e9gia de lan\u00e7ar r\u00e1pido e lan\u00e7ar com frequ\u00eancia. Minimiza poss\u00edveis conflitos e PRs n\u00e3o atualizadas. No entanto, devemos manter as PRs focadas - por exemplo, em torno de uma funcionalidade funcional, otimiza\u00e7\u00e3o ou legibilidade de c\u00f3digo, e evitar PRs que incluam c\u00f3digo sem contexto ou frouxamente acoplado. N\u00e3o h\u00e1 um tamanho certo, mas tenha em mente que uma revis\u00e3o de c\u00f3digo \u00e9 um processo colaborativo, e PRs grandes podem ser dif\u00edceis e, portanto, mais lentas de revisar. Devemos sempre nos esfor\u00e7ar para ter PRs o mais pequenas poss\u00edvel que ainda agreguem valor. Melhores Pr\u00e1ticas Al\u00e9m do tamanho, lembre-se de que toda PR deve: ser consistente, n\u00e3o quebrar a compila\u00e7\u00e3o e incluir testes relacionados como parte da PR. Ser consistente significa que todas as altera\u00e7\u00f5es inclu\u00eddas na PR devem visar resolver um objetivo (por exemplo, uma hist\u00f3ria de usu\u00e1rio) e estar intrinsecamente relacionadas. Pense nisso como o princ\u00edpio de \u00fanica responsabilidade em termos do projeto como um todo, a PR deve ter apenas uma raz\u00e3o para alterar o projeto. Comece pequeno, \u00e9 mais f\u00e1cil criar uma PR pequena desde o in\u00edcio do que dividir uma maior. Aqui est\u00e3o algumas estrat\u00e9gias para manter as PRs pequenas, dependendo da \"causa\" da inevitabilidade: voc\u00ea pode dividir a PR em altera\u00e7\u00f5es autocontidas que ainda agreguem valor, lan\u00e7ar recursos ocultos (consulte feature flag, feature toggling ou lan\u00e7amentos can\u00e1rios) ou dividir a PR em diferentes camadas (por exemplo, usando padr\u00f5es de design como MVC ou Observer/Subject). N\u00e3o importa a estrat\u00e9gia. Descri\u00e7\u00e3o da Pull Request Descri\u00e7\u00f5es de PR bem escritas ajudam a manter um hist\u00f3rico de altera\u00e7\u00f5es limpo e bem estruturado. Embora cada equipe n\u00e3o precise aderir \u00e0 mesma especifica\u00e7\u00e3o, \u00e9 importante que a conven\u00e7\u00e3o seja acordada no in\u00edcio do projeto. Uma especifica\u00e7\u00e3o popular para projetos de c\u00f3digo aberto e outros \u00e9 a Conventional Commits specification , que \u00e9 estruturada como: <tipo>[escopo opcional]: <descri\u00e7\u00e3o> [corpo opcional] [rodap\u00e9 opcional] O <tipo> nesta mensagem pode ser selecionado em uma lista de tipos definidos pela equipe, mas muitos projetos usam a lista de tipos de commit do projeto open-source Angular . Deve ficar claro que os elementos escopo , corpo e rodap\u00e9 s\u00e3o opcionais , mas ter um tipo obrigat\u00f3rio e uma breve descri\u00e7\u00e3o permite as funcionalidades mencionadas acima. Veja tamb\u00e9m Modelo de Pull Request Recursos Escrevendo uma \u00f3tima descri\u00e7\u00e3o de pull request Revisando c\u00f3digo com pull requests (Azure DevOps) Colabora\u00e7\u00e3o com problemas e pull requests (GitHub) Abordagem do Google para o tamanho de PR Feature Flags Abordagem do Facebook para recursos ocultos Abordagem da Azure para lan\u00e7amentos can\u00e1rios [Especifica\u00e7\u00e3o Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0-beta.2/) * Tipos de Commit do Angular","title":"Pull Requests"},{"location":"code-reviews/pull-requests/#pull-requests","text":"As altera\u00e7\u00f5es em qualquer c\u00f3digo principal - como o ramo principal em um reposit\u00f3rio Git, por exemplo - devem ser feitas usando pull requests (PR). As pull requests possibilitam: Inspe\u00e7\u00e3o de c\u00f3digo - veja Revis\u00f5es de C\u00f3digo Execu\u00e7\u00e3o de qualifica\u00e7\u00e3o automatizada do c\u00f3digo Linters (verificadores de c\u00f3digo) Compila\u00e7\u00e3o Testes unit\u00e1rios Testes de integra\u00e7\u00e3o, etc. Os requisitos das pull requests podem e devem ser aplicados por pol\u00edticas, que podem ser configuradas nos sistemas mais modernos de controle de vers\u00e3o e rastreamento de itens de trabalho. Consulte a se\u00e7\u00e3o Evid\u00eancia e Medidas para mais informa\u00e7\u00f5es.","title":"Pull Requests"},{"location":"code-reviews/pull-requests/#processo-geral","text":"Implemente as altera\u00e7\u00f5es com base na descri\u00e7\u00e3o bem definida e nos crit\u00e9rios de aceita\u00e7\u00e3o da tarefa em quest\u00e3o. Em seguida, antes de criar uma nova pull request: * Certifique-se de que o c\u00f3digo esteja em conformidade com as conven\u00e7\u00f5es de codifica\u00e7\u00e3o acordadas * Isso pode ser parcialmente automatizado usando linters (verificadores de c\u00f3digo) * Garanta que o c\u00f3digo compile e execute sem erros ou avisos * Escreva e/ou atualize os testes para abranger as altera\u00e7\u00f5es e certifique-se de que todos os testes novos e existentes passem * Escreva e/ou atualize a documenta\u00e7\u00e3o para corresponder \u00e0s altera\u00e7\u00f5es Uma vez convencido de que os crit\u00e9rios acima est\u00e3o atendidos, crie e envie uma nova pull request seguindo o modelo de pull request Siga o processo de revis\u00e3o de c\u00f3digo para mesclar as altera\u00e7\u00f5es no c\u00f3digo principal O diagrama a seguir ilustra essa abordagem. sequenceDiagram New branch->>+Pull request: Cria\u00e7\u00e3o de nova PR Pull request->>+Code review: Processo de revis\u00e3o Code review->>+Pull request: Atualiza\u00e7\u00f5es de c\u00f3digo Pull request->>+New branch: Mesclar Pull Request Pull request-->>-New branch: Excluir ramo Pull request ->>+ Main branch: Mesclar ap\u00f3s a conclus\u00e3o New branch->>+Main branch: Objetivo da Pull request","title":"Processo Geral"},{"location":"code-reviews/pull-requests/#orientacao-de-tamanho","text":"Devemos sempre procurar manter as pull requests pequenas. PRs pequenas t\u00eam v\u00e1rias vantagens: S\u00e3o mais f\u00e1ceis de revisar; um benef\u00edcio claro para os revisores. S\u00e3o mais f\u00e1ceis de implantar; isso est\u00e1 alinhado com a estrat\u00e9gia de lan\u00e7ar r\u00e1pido e lan\u00e7ar com frequ\u00eancia. Minimiza poss\u00edveis conflitos e PRs n\u00e3o atualizadas. No entanto, devemos manter as PRs focadas - por exemplo, em torno de uma funcionalidade funcional, otimiza\u00e7\u00e3o ou legibilidade de c\u00f3digo, e evitar PRs que incluam c\u00f3digo sem contexto ou frouxamente acoplado. N\u00e3o h\u00e1 um tamanho certo, mas tenha em mente que uma revis\u00e3o de c\u00f3digo \u00e9 um processo colaborativo, e PRs grandes podem ser dif\u00edceis e, portanto, mais lentas de revisar. Devemos sempre nos esfor\u00e7ar para ter PRs o mais pequenas poss\u00edvel que ainda agreguem valor.","title":"Orienta\u00e7\u00e3o de Tamanho"},{"location":"code-reviews/pull-requests/#melhores-praticas","text":"Al\u00e9m do tamanho, lembre-se de que toda PR deve: ser consistente, n\u00e3o quebrar a compila\u00e7\u00e3o e incluir testes relacionados como parte da PR. Ser consistente significa que todas as altera\u00e7\u00f5es inclu\u00eddas na PR devem visar resolver um objetivo (por exemplo, uma hist\u00f3ria de usu\u00e1rio) e estar intrinsecamente relacionadas. Pense nisso como o princ\u00edpio de \u00fanica responsabilidade em termos do projeto como um todo, a PR deve ter apenas uma raz\u00e3o para alterar o projeto. Comece pequeno, \u00e9 mais f\u00e1cil criar uma PR pequena desde o in\u00edcio do que dividir uma maior. Aqui est\u00e3o algumas estrat\u00e9gias para manter as PRs pequenas, dependendo da \"causa\" da inevitabilidade: voc\u00ea pode dividir a PR em altera\u00e7\u00f5es autocontidas que ainda agreguem valor, lan\u00e7ar recursos ocultos (consulte feature flag, feature toggling ou lan\u00e7amentos can\u00e1rios) ou dividir a PR em diferentes camadas (por exemplo, usando padr\u00f5es de design como MVC ou Observer/Subject). N\u00e3o importa a estrat\u00e9gia.","title":"Melhores Pr\u00e1ticas"},{"location":"code-reviews/pull-requests/#descricao-da-pull-request","text":"Descri\u00e7\u00f5es de PR bem escritas ajudam a manter um hist\u00f3rico de altera\u00e7\u00f5es limpo e bem estruturado. Embora cada equipe n\u00e3o precise aderir \u00e0 mesma especifica\u00e7\u00e3o, \u00e9 importante que a conven\u00e7\u00e3o seja acordada no in\u00edcio do projeto. Uma especifica\u00e7\u00e3o popular para projetos de c\u00f3digo aberto e outros \u00e9 a Conventional Commits specification , que \u00e9 estruturada como: <tipo>[escopo opcional]: <descri\u00e7\u00e3o> [corpo opcional] [rodap\u00e9 opcional] O <tipo> nesta mensagem pode ser selecionado em uma lista de tipos definidos pela equipe, mas muitos projetos usam a lista de tipos de commit do projeto open-source Angular . Deve ficar claro que os elementos escopo , corpo e rodap\u00e9 s\u00e3o opcionais , mas ter um tipo obrigat\u00f3rio e uma breve descri\u00e7\u00e3o permite as funcionalidades mencionadas acima. Veja tamb\u00e9m Modelo de Pull Request","title":"Descri\u00e7\u00e3o da Pull Request"},{"location":"code-reviews/pull-requests/#recursos","text":"Escrevendo uma \u00f3tima descri\u00e7\u00e3o de pull request Revisando c\u00f3digo com pull requests (Azure DevOps) Colabora\u00e7\u00e3o com problemas e pull requests (GitHub) Abordagem do Google para o tamanho de PR Feature Flags Abordagem do Facebook para recursos ocultos Abordagem da Azure para lan\u00e7amentos can\u00e1rios [Especifica\u00e7\u00e3o Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0-beta.2/) * Tipos de Commit do Angular","title":"Recursos"},{"location":"code-reviews/tools/","text":"Ferramentas de Revis\u00e3o de C\u00f3digo Personalizar o ADO (Azure DevOps) Quadros de Tarefas AzDO: Personalizar cart\u00f5es AzDO: Adicionar colunas no quadro de tarefas Pol\u00edticas de Revisor Configurar um grupo de revisores obrigat\u00f3rios no AzDO - Incluir automaticamente revisores de c\u00f3digo Configurando Pol\u00edticas de Ramifica\u00e7\u00e3o AzDO: Configurar pol\u00edticas de ramifica\u00e7\u00e3o AzDO: Configurar pol\u00edticas de ramifica\u00e7\u00e3o com a ferramenta CLI: Criar um arquivo de configura\u00e7\u00e3o de pol\u00edtica Pol\u00edtica de contagem de aprova\u00e7\u00e3o GitHub: Configurando ramifica\u00e7\u00f5es protegidas Visual Studio Code GitHub: GitHub Pull Requests Suporta o processamento de pull requests do GitHub dentro do VS Code. Abra o plugin na Barra de Atividades Selecione Atribu\u00eddo a Mim Selecione um PR Sob Descri\u00e7\u00e3o , voc\u00ea pode escolher Fazer Check-out do ramo e entrar no Modo de Revis\u00e3o para obter uma experi\u00eancia mais integrada Azure DevOps: Azure DevOps Pull Requests Suporta o processamento de pull requests do Azure DevOps dentro do VS Code. Abra o plugin na Barra de Atividades Selecione Atribu\u00eddo a Mim Selecione um PR Sob Descri\u00e7\u00e3o , voc\u00ea pode escolher Fazer Check-out do ramo e entrar no Modo de Revis\u00e3o para obter uma experi\u00eancia mais integrada Visual Studio As seguintes extens\u00f5es podem ser usadas para criar uma experi\u00eancia integrada de revis\u00e3o de c\u00f3digo no Visual Studio, trabalhando com GitHub ou Azure DevOps. GitHub: GitHub Extension para Visual Studio Fornece funcionalidades estendidas para trabalhar com pull requests no GitHub diretamente no Visual Studio. View -> Other Windows -> GitHub Clique no \u00edcone de Pull Requests na barra de tarefas Clique duas vezes em um pull request pendente Azure DevOps: Pull Requests para Visual Studio Trabalhe com pull requests no Azure DevOps diretamente no Visual Studio. Abra o Team Explorer Clique em Pull Requests Clique duas vezes em um pull request - os Detalhes do Pull Request ser\u00e3o abertos Clique em Checkout se voc\u00ea quiser ter a mudan\u00e7a completa localmente e ter uma experi\u00eancia mais integrada Revise as mudan\u00e7as e fa\u00e7a coment\u00e1rios Web Reviewable: Revis\u00f5es de C\u00f3digo GitHub multi-round sem interrup\u00e7\u00f5es Suporta revis\u00f5es de c\u00f3digo GitHub multi-round, com atalhos de teclado e muito mais. A extens\u00e3o para o VS Code est\u00e1 em andamento. Visite o Painel de Revis\u00f5es para ver revis\u00f5es aguardando sua a\u00e7\u00e3o, que t\u00eam novos coment\u00e1rios para voc\u00ea e muito mais. Selecione um Pull Request dessa lista. Abra qualquer arquivo no seu navegador, no Visual Studio Code ou em qualquer editor que voc\u00ea tenha configurado, clicando na sua foto de perfil no canto superior direito. Selecione um editor em \"Modelo de link externo\". O VS Code \u00e9 uma op\u00e7\u00e3o, mas tamb\u00e9m qualquer editor que suporte URI. Revise a diferen\u00e7a globalmente ou por arquivo, deixando coment\u00e1rios, sugest\u00f5es de c\u00f3digo e muito mais.","title":"Ferramentas de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/tools/#ferramentas-de-revisao-de-codigo","text":"","title":"Ferramentas de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/tools/#personalizar-o-ado-azure-devops","text":"","title":"Personalizar o ADO (Azure DevOps)"},{"location":"code-reviews/tools/#quadros-de-tarefas","text":"AzDO: Personalizar cart\u00f5es AzDO: Adicionar colunas no quadro de tarefas","title":"Quadros de Tarefas"},{"location":"code-reviews/tools/#politicas-de-revisor","text":"Configurar um grupo de revisores obrigat\u00f3rios no AzDO - Incluir automaticamente revisores de c\u00f3digo","title":"Pol\u00edticas de Revisor"},{"location":"code-reviews/tools/#configurando-politicas-de-ramificacao","text":"AzDO: Configurar pol\u00edticas de ramifica\u00e7\u00e3o AzDO: Configurar pol\u00edticas de ramifica\u00e7\u00e3o com a ferramenta CLI: Criar um arquivo de configura\u00e7\u00e3o de pol\u00edtica Pol\u00edtica de contagem de aprova\u00e7\u00e3o GitHub: Configurando ramifica\u00e7\u00f5es protegidas","title":"Configurando Pol\u00edticas de Ramifica\u00e7\u00e3o"},{"location":"code-reviews/tools/#visual-studio-code","text":"","title":"Visual Studio Code"},{"location":"code-reviews/tools/#github-github-pull-requests","text":"Suporta o processamento de pull requests do GitHub dentro do VS Code. Abra o plugin na Barra de Atividades Selecione Atribu\u00eddo a Mim Selecione um PR Sob Descri\u00e7\u00e3o , voc\u00ea pode escolher Fazer Check-out do ramo e entrar no Modo de Revis\u00e3o para obter uma experi\u00eancia mais integrada","title":"GitHub: GitHub Pull Requests"},{"location":"code-reviews/tools/#azure-devops-azure-devops-pull-requests","text":"Suporta o processamento de pull requests do Azure DevOps dentro do VS Code. Abra o plugin na Barra de Atividades Selecione Atribu\u00eddo a Mim Selecione um PR Sob Descri\u00e7\u00e3o , voc\u00ea pode escolher Fazer Check-out do ramo e entrar no Modo de Revis\u00e3o para obter uma experi\u00eancia mais integrada","title":"Azure DevOps: Azure DevOps Pull Requests"},{"location":"code-reviews/tools/#visual-studio","text":"As seguintes extens\u00f5es podem ser usadas para criar uma experi\u00eancia integrada de revis\u00e3o de c\u00f3digo no Visual Studio, trabalhando com GitHub ou Azure DevOps.","title":"Visual Studio"},{"location":"code-reviews/tools/#github-github-extension-para-visual-studio","text":"Fornece funcionalidades estendidas para trabalhar com pull requests no GitHub diretamente no Visual Studio. View -> Other Windows -> GitHub Clique no \u00edcone de Pull Requests na barra de tarefas Clique duas vezes em um pull request pendente","title":"GitHub: GitHub Extension para Visual Studio"},{"location":"code-reviews/tools/#azure-devops-pull-requests-para-visual-studio","text":"Trabalhe com pull requests no Azure DevOps diretamente no Visual Studio. Abra o Team Explorer Clique em Pull Requests Clique duas vezes em um pull request - os Detalhes do Pull Request ser\u00e3o abertos Clique em Checkout se voc\u00ea quiser ter a mudan\u00e7a completa localmente e ter uma experi\u00eancia mais integrada Revise as mudan\u00e7as e fa\u00e7a coment\u00e1rios","title":"Azure DevOps: Pull Requests para Visual Studio"},{"location":"code-reviews/tools/#web","text":"","title":"Web"},{"location":"code-reviews/tools/#reviewable-revisoes-de-codigo-github-multi-round-sem-interrupcoes","text":"Suporta revis\u00f5es de c\u00f3digo GitHub multi-round, com atalhos de teclado e muito mais. A extens\u00e3o para o VS Code est\u00e1 em andamento. Visite o Painel de Revis\u00f5es para ver revis\u00f5es aguardando sua a\u00e7\u00e3o, que t\u00eam novos coment\u00e1rios para voc\u00ea e muito mais. Selecione um Pull Request dessa lista. Abra qualquer arquivo no seu navegador, no Visual Studio Code ou em qualquer editor que voc\u00ea tenha configurado, clicando na sua foto de perfil no canto superior direito. Selecione um editor em \"Modelo de link externo\". O VS Code \u00e9 uma op\u00e7\u00e3o, mas tamb\u00e9m qualquer editor que suporte URI. Revise a diferen\u00e7a globalmente ou por arquivo, deixando coment\u00e1rios, sugest\u00f5es de c\u00f3digo e muito mais.","title":"Reviewable: Revis\u00f5es de C\u00f3digo GitHub multi-round sem interrup\u00e7\u00f5es"},{"location":"code-reviews/evidence-and-measures/","text":"Evid\u00eancias e Medidas Evid\u00eancias Muitos dos itens de garantia de qualidade de c\u00f3digo podem ser automatizados ou aplicados por meio de pol\u00edticas em sistemas modernos de controle de vers\u00e3o e rastreamento de itens de trabalho. A verifica\u00e7\u00e3o das pol\u00edticas na branch principal no Azure DevOps (AzDO) ou no GitHub , por exemplo, pode ser evid\u00eancia suficiente de que uma equipe de projeto est\u00e1 conduzindo revis\u00f5es de c\u00f3digo. Todas as branches principais em todos os reposit\u00f3rios t\u00eam pol\u00edticas de branch. - Configurar pol\u00edticas de branch Todas as compila\u00e7\u00f5es geradas a partir dos reposit\u00f3rios do projeto incluem linters apropriados e executam testes unit\u00e1rios. Cada item de trabalho de corre\u00e7\u00e3o de bug deve incluir um link para o pull request que o introduziu, assim que o erro for diagnosticado. Isso ajuda na aprendizagem. Cada item de trabalho de corre\u00e7\u00e3o de bug deve incluir uma observa\u00e7\u00e3o sobre como o bug poderia (ou n\u00e3o) ter sido detectado em uma revis\u00e3o de c\u00f3digo. A equipe do projeto atualiza regularmente suas listas de verifica\u00e7\u00e3o de revis\u00e3o de c\u00f3digo para refletir problemas comuns que eles encontraram. Os l\u00edderes de desenvolvimento devem revisar uma amostra de pull requests e/ou ser co-revisores com outros desenvolvedores para ajudar todos a melhorar suas habilidades como revisores de c\u00f3digo. Medidas A equipe pode coletar m\u00e9tricas de revis\u00f5es de c\u00f3digo para medir sua efici\u00eancia. Algumas m\u00e9tricas \u00fateis incluem: Efici\u00eancia na Remo\u00e7\u00e3o de Defeitos (DRE) - uma medida da capacidade da equipe de desenvolvimento de remover defeitos antes do lan\u00e7amento. M\u00e9tricas de tempo: Tempo gasto preparando-se para sess\u00f5es de inspe\u00e7\u00e3o de c\u00f3digo. Tempo gasto em sess\u00f5es de revis\u00e3o. Linhas de c\u00f3digo (LOC) inspecionadas por unidade de tempo/reuni\u00e3o. \u00c9 uma solu\u00e7\u00e3o perfeitamente razo\u00e1vel rastrear essas m\u00e9tricas manualmente, por exemplo, em uma planilha do Excel. Tamb\u00e9m \u00e9 poss\u00edvel utilizar os recursos de plataformas de gerenciamento de projetos - por exemplo, o AzDO permite pain\u00e9is de m\u00e9tricas, incluindo rastreamento de bugs . Voc\u00ea pode encontrar plugins prontos para v\u00e1rias plataformas - consulte o GitHub Marketplace , por exemplo - ou optar por implementar esses recursos por conta pr\u00f3pria. Lembre-se de que, uma vez que defeitos removidos gra\u00e7as a revis\u00f5es s\u00e3o muito menos custosos em compara\u00e7\u00e3o com a detec\u00e7\u00e3o deles em produ\u00e7\u00e3o, o custo das revis\u00f5es de c\u00f3digo \u00e9, na verdade, negativo! Para obter mais informa\u00e7\u00f5es, consulte os links na se\u00e7\u00e3o de recursos . Recursos Um Guia para Inspe\u00e7\u00f5es de C\u00f3digo","title":"Evid\u00eancias e Medidas"},{"location":"code-reviews/evidence-and-measures/#evidencias-e-medidas","text":"","title":"Evid\u00eancias e Medidas"},{"location":"code-reviews/evidence-and-measures/#evidencias","text":"Muitos dos itens de garantia de qualidade de c\u00f3digo podem ser automatizados ou aplicados por meio de pol\u00edticas em sistemas modernos de controle de vers\u00e3o e rastreamento de itens de trabalho. A verifica\u00e7\u00e3o das pol\u00edticas na branch principal no Azure DevOps (AzDO) ou no GitHub , por exemplo, pode ser evid\u00eancia suficiente de que uma equipe de projeto est\u00e1 conduzindo revis\u00f5es de c\u00f3digo. Todas as branches principais em todos os reposit\u00f3rios t\u00eam pol\u00edticas de branch. - Configurar pol\u00edticas de branch Todas as compila\u00e7\u00f5es geradas a partir dos reposit\u00f3rios do projeto incluem linters apropriados e executam testes unit\u00e1rios. Cada item de trabalho de corre\u00e7\u00e3o de bug deve incluir um link para o pull request que o introduziu, assim que o erro for diagnosticado. Isso ajuda na aprendizagem. Cada item de trabalho de corre\u00e7\u00e3o de bug deve incluir uma observa\u00e7\u00e3o sobre como o bug poderia (ou n\u00e3o) ter sido detectado em uma revis\u00e3o de c\u00f3digo. A equipe do projeto atualiza regularmente suas listas de verifica\u00e7\u00e3o de revis\u00e3o de c\u00f3digo para refletir problemas comuns que eles encontraram. Os l\u00edderes de desenvolvimento devem revisar uma amostra de pull requests e/ou ser co-revisores com outros desenvolvedores para ajudar todos a melhorar suas habilidades como revisores de c\u00f3digo.","title":"Evid\u00eancias"},{"location":"code-reviews/evidence-and-measures/#medidas","text":"A equipe pode coletar m\u00e9tricas de revis\u00f5es de c\u00f3digo para medir sua efici\u00eancia. Algumas m\u00e9tricas \u00fateis incluem: Efici\u00eancia na Remo\u00e7\u00e3o de Defeitos (DRE) - uma medida da capacidade da equipe de desenvolvimento de remover defeitos antes do lan\u00e7amento. M\u00e9tricas de tempo: Tempo gasto preparando-se para sess\u00f5es de inspe\u00e7\u00e3o de c\u00f3digo. Tempo gasto em sess\u00f5es de revis\u00e3o. Linhas de c\u00f3digo (LOC) inspecionadas por unidade de tempo/reuni\u00e3o. \u00c9 uma solu\u00e7\u00e3o perfeitamente razo\u00e1vel rastrear essas m\u00e9tricas manualmente, por exemplo, em uma planilha do Excel. Tamb\u00e9m \u00e9 poss\u00edvel utilizar os recursos de plataformas de gerenciamento de projetos - por exemplo, o AzDO permite pain\u00e9is de m\u00e9tricas, incluindo rastreamento de bugs . Voc\u00ea pode encontrar plugins prontos para v\u00e1rias plataformas - consulte o GitHub Marketplace , por exemplo - ou optar por implementar esses recursos por conta pr\u00f3pria. Lembre-se de que, uma vez que defeitos removidos gra\u00e7as a revis\u00f5es s\u00e3o muito menos custosos em compara\u00e7\u00e3o com a detec\u00e7\u00e3o deles em produ\u00e7\u00e3o, o custo das revis\u00f5es de c\u00f3digo \u00e9, na verdade, negativo! Para obter mais informa\u00e7\u00f5es, consulte os links na se\u00e7\u00e3o de recursos .","title":"Medidas"},{"location":"code-reviews/evidence-and-measures/#recursos","text":"Um Guia para Inspe\u00e7\u00f5es de C\u00f3digo","title":"Recursos"},{"location":"code-reviews/process-guidance/","text":"Orienta\u00e7\u00e3o do Processo Orienta\u00e7\u00f5es Gerais As revis\u00f5es de c\u00f3digo devem fazer parte do processo da equipe de engenharia de software, independentemente do modelo de desenvolvimento. Al\u00e9m disso, a equipe deve aprender a realizar revis\u00f5es de forma oportuna. Pull requests (PRs) deixados pendentes podem causar problemas adicionais de mesclagem e ficarem desatualizados, resultando em trabalho perdido. PRs qualificados devem refletir tarefas bem definidas e concisas, sendo, portanto, compactos em conte\u00fado. A revis\u00e3o de uma \u00fanica tarefa deve levar relativamente pouco tempo para ser conclu\u00edda. Para garantir que o processo de revis\u00e3o de c\u00f3digo seja saud\u00e1vel, inclusivo e atenda aos objetivos mencionados acima, considere seguir estas diretrizes: Estabele\u00e7a um acordo de n\u00edvel de servi\u00e7o (SLA) para revis\u00f5es de c\u00f3digo e inclua-o no acordo de trabalho de sua equipe. Embora os ambientes modernos de DevOps incorporem ferramentas para gerenciar PRs, pode ser \u00fatil rotular tarefas pendentes de revis\u00e3o ou ter um local dedicado para elas no quadro de tarefas - Personalize os quadros de tarefas do AzDO Na reuni\u00e3o di\u00e1ria de standup, verifique as tarefas pendentes de revis\u00e3o e certifique-se de que possuam revisores atribu\u00eddos. Equipes juniores e equipes novas no processo podem considerar criar tarefas separadas para revis\u00f5es junto com as pr\u00f3prias tarefas. Utilize ferramentas para simplificar o processo de revis\u00e3o - Ferramentas de revis\u00e3o de c\u00f3digo Promova revis\u00f5es de c\u00f3digo inclusivas - Inclus\u00e3o na Revis\u00e3o de C\u00f3digo Medindo o Processo de Revis\u00e3o de C\u00f3digo Se a equipe perceber que as revis\u00f5es de c\u00f3digo est\u00e3o demorando muito para serem mescladas e est\u00e3o se tornando um obst\u00e1culo, considere as seguintes recomenda\u00e7\u00f5es adicionais: Me\u00e7a o tempo m\u00e9dio necess\u00e1rio para mesclar um PR por ciclo de sprint. Revise durante a retrospectiva como o tempo para mesclar pode ser melhorado e priorizado. Avalie o tempo para mesclar ao longo dos sprints para ver se o processo est\u00e1 melhorando. Lembre os aprovadores necess\u00e1rios diretamente como lembrete. As revis\u00f5es de c\u00f3digo n\u00e3o devem incluir muito c\u00f3digo \u00c9 f\u00e1cil dizer que um desenvolvedor pode revisar algumas centenas de linhas de c\u00f3digo, mas quando o c\u00f3digo ultrapassa uma certa quantidade de linhas, a efic\u00e1cia na descoberta de defeitos diminuir\u00e1, e h\u00e1 menos chances de fazer uma boa revis\u00e3o. N\u00e3o se trata de estabelecer um limite de linhas de c\u00f3digo, mas sim de usar o bom senso. Quanto mais c\u00f3digo houver para revisar, maiores s\u00e3o as chances de deixar um erro passar despercebido. Consulte Orienta\u00e7\u00e3o de Tamanho de PR . Automatize sempre que for razo\u00e1vel Use automa\u00e7\u00e3o (linting, an\u00e1lise de c\u00f3digo etc.) para evitar a necessidade de \" nits \" e permita que o revisor se concentre mais nos aspectos funcionais do PR. Configurando compila\u00e7\u00f5es automatizadas, testes e verifica\u00e7\u00f5es (algo alcan\u00e7\u00e1vel no processo de CI ), as equipes podem economizar tempo dos revisores humanos e permitir que eles se concentrem em \u00e1reas como design e funcionalidade para uma avalia\u00e7\u00e3o adequada. Isso garantir\u00e1 maiores chances de sucesso, pois a equipe est\u00e1 se concentrando no que realmente importa. Orienta\u00e7\u00f5es Espec\u00edficas por Fun\u00e7\u00e3o Orienta\u00e7\u00f5es para o Autor Orienta\u00e7\u00f5es para o Revisor","title":"Orienta\u00e7\u00e3o do Processo"},{"location":"code-reviews/process-guidance/#orientacao-do-processo","text":"","title":"Orienta\u00e7\u00e3o do Processo"},{"location":"code-reviews/process-guidance/#orientacoes-gerais","text":"As revis\u00f5es de c\u00f3digo devem fazer parte do processo da equipe de engenharia de software, independentemente do modelo de desenvolvimento. Al\u00e9m disso, a equipe deve aprender a realizar revis\u00f5es de forma oportuna. Pull requests (PRs) deixados pendentes podem causar problemas adicionais de mesclagem e ficarem desatualizados, resultando em trabalho perdido. PRs qualificados devem refletir tarefas bem definidas e concisas, sendo, portanto, compactos em conte\u00fado. A revis\u00e3o de uma \u00fanica tarefa deve levar relativamente pouco tempo para ser conclu\u00edda. Para garantir que o processo de revis\u00e3o de c\u00f3digo seja saud\u00e1vel, inclusivo e atenda aos objetivos mencionados acima, considere seguir estas diretrizes: Estabele\u00e7a um acordo de n\u00edvel de servi\u00e7o (SLA) para revis\u00f5es de c\u00f3digo e inclua-o no acordo de trabalho de sua equipe. Embora os ambientes modernos de DevOps incorporem ferramentas para gerenciar PRs, pode ser \u00fatil rotular tarefas pendentes de revis\u00e3o ou ter um local dedicado para elas no quadro de tarefas - Personalize os quadros de tarefas do AzDO Na reuni\u00e3o di\u00e1ria de standup, verifique as tarefas pendentes de revis\u00e3o e certifique-se de que possuam revisores atribu\u00eddos. Equipes juniores e equipes novas no processo podem considerar criar tarefas separadas para revis\u00f5es junto com as pr\u00f3prias tarefas. Utilize ferramentas para simplificar o processo de revis\u00e3o - Ferramentas de revis\u00e3o de c\u00f3digo Promova revis\u00f5es de c\u00f3digo inclusivas - Inclus\u00e3o na Revis\u00e3o de C\u00f3digo","title":"Orienta\u00e7\u00f5es Gerais"},{"location":"code-reviews/process-guidance/#medindo-o-processo-de-revisao-de-codigo","text":"Se a equipe perceber que as revis\u00f5es de c\u00f3digo est\u00e3o demorando muito para serem mescladas e est\u00e3o se tornando um obst\u00e1culo, considere as seguintes recomenda\u00e7\u00f5es adicionais: Me\u00e7a o tempo m\u00e9dio necess\u00e1rio para mesclar um PR por ciclo de sprint. Revise durante a retrospectiva como o tempo para mesclar pode ser melhorado e priorizado. Avalie o tempo para mesclar ao longo dos sprints para ver se o processo est\u00e1 melhorando. Lembre os aprovadores necess\u00e1rios diretamente como lembrete.","title":"Medindo o Processo de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/process-guidance/#as-revisoes-de-codigo-nao-devem-incluir-muito-codigo","text":"\u00c9 f\u00e1cil dizer que um desenvolvedor pode revisar algumas centenas de linhas de c\u00f3digo, mas quando o c\u00f3digo ultrapassa uma certa quantidade de linhas, a efic\u00e1cia na descoberta de defeitos diminuir\u00e1, e h\u00e1 menos chances de fazer uma boa revis\u00e3o. N\u00e3o se trata de estabelecer um limite de linhas de c\u00f3digo, mas sim de usar o bom senso. Quanto mais c\u00f3digo houver para revisar, maiores s\u00e3o as chances de deixar um erro passar despercebido. Consulte Orienta\u00e7\u00e3o de Tamanho de PR .","title":"As revis\u00f5es de c\u00f3digo n\u00e3o devem incluir muito c\u00f3digo"},{"location":"code-reviews/process-guidance/#automatize-sempre-que-for-razoavel","text":"Use automa\u00e7\u00e3o (linting, an\u00e1lise de c\u00f3digo etc.) para evitar a necessidade de \" nits \" e permita que o revisor se concentre mais nos aspectos funcionais do PR. Configurando compila\u00e7\u00f5es automatizadas, testes e verifica\u00e7\u00f5es (algo alcan\u00e7\u00e1vel no processo de CI ), as equipes podem economizar tempo dos revisores humanos e permitir que eles se concentrem em \u00e1reas como design e funcionalidade para uma avalia\u00e7\u00e3o adequada. Isso garantir\u00e1 maiores chances de sucesso, pois a equipe est\u00e1 se concentrando no que realmente importa.","title":"Automatize sempre que for razo\u00e1vel"},{"location":"code-reviews/process-guidance/#orientacoes-especificas-por-funcao","text":"Orienta\u00e7\u00f5es para o Autor Orienta\u00e7\u00f5es para o Revisor","title":"Orienta\u00e7\u00f5es Espec\u00edficas por Fun\u00e7\u00e3o"},{"location":"code-reviews/process-guidance/author-guidance/","text":"Orienta\u00e7\u00f5es para o Autor Descreva adequadamente o seu pull request (PR) D\u00ea ao PR um t\u00edtulo descritivo, para que outros membros possam entender facilmente (em uma frase curta) sobre o que se trata o PR. Todo PR deve ter uma descri\u00e7\u00e3o adequada que mostre ao revisor o que foi alterado e por qu\u00ea. Adicione revisores relevantes Adicione um ou mais revisores (dependendo das diretrizes do seu projeto) ao PR. Idealmente, voc\u00ea adicionaria pelo menos algu\u00e9m que tenha expertise e esteja familiarizado com o projeto ou a linguagem utilizada. Adicionar algu\u00e9m menos familiarizado com o projeto ou a linguagem pode ajudar a verificar se as altera\u00e7\u00f5es s\u00e3o compreens\u00edveis, f\u00e1ceis de ler e aumenta a expertise dentro da equipe. Nos projetos code-with da ISE com uma equipe de cliente, \u00e9 importante incluir revisores de ambas as organiza\u00e7\u00f5es para transfer\u00eancia de conhecimento - Personalize a Pol\u00edtica de Revisores Esteja aberto para receber feedback Discuta o design/l\u00f3gica do c\u00f3digo e aborde todos os coment\u00e1rios da seguinte forma: Resolva um coment\u00e1rio se a altera\u00e7\u00e3o solicitada foi feita. Marque o coment\u00e1rio como \"n\u00e3o vou corrigir\" se voc\u00ea n\u00e3o pretende fazer as altera\u00e7\u00f5es solicitadas e forne\u00e7a um racioc\u00ednio claro. Se a altera\u00e7\u00e3o solicitada estiver dentro do escopo da tarefa, \"farei mais tarde\" n\u00e3o \u00e9 uma raz\u00e3o aceit\u00e1vel! Se a altera\u00e7\u00e3o solicitada estiver fora do escopo, crie um novo item de trabalho (tarefa ou bug) para ela. Se voc\u00ea n\u00e3o entender um coment\u00e1rio, fa\u00e7a perguntas na pr\u00f3pria revis\u00e3o em vez de iniciar um chat privado. Se uma discuss\u00e3o se estender sem uma conclus\u00e3o, agende uma reuni\u00e3o com o revisor (ligue para eles ou bata \u00e0 porta). Use listas de verifica\u00e7\u00e3o Ao criar um PR, \u00e9 uma boa ideia adicionar uma lista de verifica\u00e7\u00e3o dos objetivos do PR na descri\u00e7\u00e3o. Isso ajuda os revisores a se concentrarem nas \u00e1reas-chave das altera\u00e7\u00f5es de c\u00f3digo. Vincule uma tarefa ao seu PR Vincule os itens de trabalho/tarefas correspondentes ao PR. N\u00e3o \u00e9 necess\u00e1rio duplicar informa\u00e7\u00f5es entre o item de trabalho e o PR, mas se alguns detalhes estiverem faltando em um deles, juntos eles fornecem mais contexto ao revisor. O c\u00f3digo deve ter anota\u00e7\u00f5es antes da revis\u00e3o Se voc\u00ea n\u00e3o puder evitar PRs grandes, inclua explica\u00e7\u00f5es das altera\u00e7\u00f5es para facilitar a revis\u00e3o do c\u00f3digo. Com coment\u00e1rios claros, o revisor pode identificar o objetivo de cada bloco de c\u00f3digo.","title":"Orienta\u00e7\u00f5es para o Autor"},{"location":"code-reviews/process-guidance/author-guidance/#orientacoes-para-o-autor","text":"","title":"Orienta\u00e7\u00f5es para o Autor"},{"location":"code-reviews/process-guidance/author-guidance/#descreva-adequadamente-o-seu-pull-request-pr","text":"D\u00ea ao PR um t\u00edtulo descritivo, para que outros membros possam entender facilmente (em uma frase curta) sobre o que se trata o PR. Todo PR deve ter uma descri\u00e7\u00e3o adequada que mostre ao revisor o que foi alterado e por qu\u00ea.","title":"Descreva adequadamente o seu pull request (PR)"},{"location":"code-reviews/process-guidance/author-guidance/#adicione-revisores-relevantes","text":"Adicione um ou mais revisores (dependendo das diretrizes do seu projeto) ao PR. Idealmente, voc\u00ea adicionaria pelo menos algu\u00e9m que tenha expertise e esteja familiarizado com o projeto ou a linguagem utilizada. Adicionar algu\u00e9m menos familiarizado com o projeto ou a linguagem pode ajudar a verificar se as altera\u00e7\u00f5es s\u00e3o compreens\u00edveis, f\u00e1ceis de ler e aumenta a expertise dentro da equipe. Nos projetos code-with da ISE com uma equipe de cliente, \u00e9 importante incluir revisores de ambas as organiza\u00e7\u00f5es para transfer\u00eancia de conhecimento - Personalize a Pol\u00edtica de Revisores","title":"Adicione revisores relevantes"},{"location":"code-reviews/process-guidance/author-guidance/#esteja-aberto-para-receber-feedback","text":"Discuta o design/l\u00f3gica do c\u00f3digo e aborde todos os coment\u00e1rios da seguinte forma: Resolva um coment\u00e1rio se a altera\u00e7\u00e3o solicitada foi feita. Marque o coment\u00e1rio como \"n\u00e3o vou corrigir\" se voc\u00ea n\u00e3o pretende fazer as altera\u00e7\u00f5es solicitadas e forne\u00e7a um racioc\u00ednio claro. Se a altera\u00e7\u00e3o solicitada estiver dentro do escopo da tarefa, \"farei mais tarde\" n\u00e3o \u00e9 uma raz\u00e3o aceit\u00e1vel! Se a altera\u00e7\u00e3o solicitada estiver fora do escopo, crie um novo item de trabalho (tarefa ou bug) para ela. Se voc\u00ea n\u00e3o entender um coment\u00e1rio, fa\u00e7a perguntas na pr\u00f3pria revis\u00e3o em vez de iniciar um chat privado. Se uma discuss\u00e3o se estender sem uma conclus\u00e3o, agende uma reuni\u00e3o com o revisor (ligue para eles ou bata \u00e0 porta).","title":"Esteja aberto para receber feedback"},{"location":"code-reviews/process-guidance/author-guidance/#use-listas-de-verificacao","text":"Ao criar um PR, \u00e9 uma boa ideia adicionar uma lista de verifica\u00e7\u00e3o dos objetivos do PR na descri\u00e7\u00e3o. Isso ajuda os revisores a se concentrarem nas \u00e1reas-chave das altera\u00e7\u00f5es de c\u00f3digo.","title":"Use listas de verifica\u00e7\u00e3o"},{"location":"code-reviews/process-guidance/author-guidance/#vincule-uma-tarefa-ao-seu-pr","text":"Vincule os itens de trabalho/tarefas correspondentes ao PR. N\u00e3o \u00e9 necess\u00e1rio duplicar informa\u00e7\u00f5es entre o item de trabalho e o PR, mas se alguns detalhes estiverem faltando em um deles, juntos eles fornecem mais contexto ao revisor.","title":"Vincule uma tarefa ao seu PR"},{"location":"code-reviews/process-guidance/author-guidance/#o-codigo-deve-ter-anotacoes-antes-da-revisao","text":"Se voc\u00ea n\u00e3o puder evitar PRs grandes, inclua explica\u00e7\u00f5es das altera\u00e7\u00f5es para facilitar a revis\u00e3o do c\u00f3digo. Com coment\u00e1rios claros, o revisor pode identificar o objetivo de cada bloco de c\u00f3digo.","title":"O c\u00f3digo deve ter anota\u00e7\u00f5es antes da revis\u00e3o"},{"location":"code-reviews/process-guidance/reviewer-guidance/","text":"Orienta\u00e7\u00f5es para o Revisor Uma vez que partes das revis\u00f5es podem ser automatizadas por meio de linters e similares, os revisores humanos podem se concentrar na corre\u00e7\u00e3o arquitetural e funcional. Os revisores humanos devem se concentrar em: A corre\u00e7\u00e3o da l\u00f3gica de neg\u00f3cios incorporada no c\u00f3digo. A corre\u00e7\u00e3o de novos testes ou testes alterados. A \"legibilidade\" e manutenibilidade das decis\u00f5es gerais de design refletidas no c\u00f3digo. A lista de verifica\u00e7\u00e3o de erros comuns mantida pela equipe para cada linguagem de programa\u00e7\u00e3o. As revis\u00f5es de c\u00f3digo devem seguir as orienta\u00e7\u00f5es e listas de verifica\u00e7\u00e3o abaixo para garantir revis\u00f5es de c\u00f3digo positivas e eficazes. Orienta\u00e7\u00f5es gerais Compreenda o c\u00f3digo que voc\u00ea est\u00e1 revisando Leia cada linha alterada. Se tivermos uma revis\u00e3o do interessado, n\u00e3o \u00e9 necess\u00e1rio executar o PR, a menos que isso ajude a entender o c\u00f3digo. O AzDO ordena os arquivos para voc\u00ea, mas voc\u00ea deve ler o c\u00f3digo em alguma sequ\u00eancia l\u00f3gica para facilitar o entendimento. Se voc\u00ea n\u00e3o entender completamente uma altera\u00e7\u00e3o em um arquivo por falta de contexto, clique para visualizar o arquivo completo e leia o c\u00f3digo circundante ou verifique as altera\u00e7\u00f5es e visualize-as no IDE. Pe\u00e7a ao autor para esclarecer. Leve seu tempo e mantenha o foco no escopo Voc\u00ea n\u00e3o deve revisar o c\u00f3digo apressadamente, mas tamb\u00e9m n\u00e3o deve demorar muito em uma \u00fanica sess\u00e3o. Se voc\u00ea tiver muitos pull requests (PRs) para revisar ou se a complexidade do c\u00f3digo for alta, a recomenda\u00e7\u00e3o \u00e9 fazer pausas entre as revis\u00f5es para se recuperar e se concentrar naqueles com os quais voc\u00ea tem mais experi\u00eancia. Lembre-se sempre de que o objetivo de uma revis\u00e3o de c\u00f3digo \u00e9 verificar se os objetivos da tarefa correspondente foram alcan\u00e7ados. Se voc\u00ea tiver preocupa\u00e7\u00f5es com o c\u00f3digo relacionado ou adjacente que n\u00e3o est\u00e1 no escopo do PR, aborde essas preocupa\u00e7\u00f5es como tarefas separadas (por exemplo, bugs ou d\u00edvidas t\u00e9cnicas). N\u00e3o bloqueie o PR atual devido a problemas que est\u00e3o fora do escopo. Fomente uma cultura de revis\u00e3o de c\u00f3digo positiva As revis\u00f5es de c\u00f3digo desempenham um papel cr\u00edtico na qualidade do produto e n\u00e3o devem representar um local para discuss\u00f5es longas ou, pior ainda, uma batalha de egos. O que importa \u00e9 encontrar um erro, n\u00e3o quem o cometeu, n\u00e3o quem o encontrou, n\u00e3o quem o corrigiu. A \u00fanica coisa que importa \u00e9 ter o melhor produto poss\u00edvel. Seja considerado Seja positivo - incentive e aprecie as boas pr\u00e1ticas. Prefira prefixar um \"ponto de polimento\" com \"Ajuste:\". Evite linguagem que aponte o dedo, como \"voc\u00ea\", e use preferencialmente \"n\u00f3s\" ou \"esta linha\" - as revis\u00f5es de c\u00f3digo n\u00e3o s\u00e3o pessoais e a linguagem importa. Prefira fazer perguntas em vez de fazer afirma\u00e7\u00f5es. Pode haver uma boa raz\u00e3o para o autor fazer algo. Se voc\u00ea fizer um coment\u00e1rio direto, explique por que o c\u00f3digo precisa ser alterado, de prefer\u00eancia com um exemplo. Falando em mudan\u00e7as, voc\u00ea pode sugerir altera\u00e7\u00f5es a um PR usando o recurso de sugest\u00e3o (dispon\u00edvel no GitHub e no Azure DevOps) ou criando um PR para o branch do autor. Se alguns coment\u00e1rios de ida e volta n\u00e3o resolverem uma discord\u00e2ncia, conversem rapidamente entre si (pessoalmente ou por telefone) ou crie uma discuss\u00e3o em grupo, o que pode levar a uma s\u00e9rie de melhorias para os pr\u00f3ximos PRs. N\u00e3o se esque\u00e7a de atualizar o PR com o que voc\u00eas concordaram e por qu\u00ea. Primeira an\u00e1lise de design Vis\u00e3o geral do Pull Request A descri\u00e7\u00e3o do PR faz sentido? Todas as altera\u00e7\u00f5es se encaixam logicamente neste PR ou existem altera\u00e7\u00f5es n\u00e3o relacionadas? Se necess\u00e1rio, as altera\u00e7\u00f5es feitas est\u00e3o refletidas nas atualiza\u00e7\u00f5es do README ou em outros documentos? Especialmente se as altera\u00e7\u00f5es afetarem como o usu\u00e1rio compila o c\u00f3digo. Altera\u00e7\u00f5es vis\u00edveis pelo usu\u00e1rio Se o c\u00f3digo envolver uma altera\u00e7\u00e3o vis\u00edvel pelo usu\u00e1rio, h\u00e1 um GIF/foto que explique a funcionalidade? Se n\u00e3o houver, pode ser crucial validar o PR para garantir que a altera\u00e7\u00e3o fa\u00e7a o que \u00e9 esperado. Certifique-se de que as altera\u00e7\u00f5es de interface do usu\u00e1rio pare\u00e7am boas sem comportamentos inesperados. Design As intera\u00e7\u00f5es das v\u00e1rias partes de c\u00f3digo no PR fazem sentido? O c\u00f3digo reconhece e incorpora arquiteturas e padr\u00f5es de codifica\u00e7\u00e3o? An\u00e1lise de Qualidade de C\u00f3digo Complexidade As fun\u00e7\u00f5es s\u00e3o muito complexas? O princ\u00edpio da responsabilidade \u00fanica \u00e9 seguido? Uma fun\u00e7\u00e3o ou classe deve fazer apenas uma 'coisa'. Uma fun\u00e7\u00e3o deve ser dividida em v\u00e1rias fun\u00e7\u00f5es? Se um m\u00e9todo tem mais de 3 argumentos, ele \u00e9 potencialmente excessivamente complexo. O c\u00f3digo adiciona funcionalidade que n\u00e3o \u00e9 necess\u00e1ria? O c\u00f3digo pode ser facilmente compreendido pelos leitores de c\u00f3digo? Nomea\u00e7\u00e3o/legibilidade O desenvolvedor escolheu bons nomes para fun\u00e7\u00f5es, vari\u00e1veis, etc.? Tratamento de Erros Os erros s\u00e3o tratados com eleg\u00e2ncia e de forma expl\u00edcita quando necess\u00e1rio? Funcionalidade H\u00e1 programa\u00e7\u00e3o paralela neste PR que pode causar condi\u00e7\u00f5es de corrida? Leia atentamente essa l\u00f3gica. O c\u00f3digo pode ser otimizado? Por exemplo: existem mais chamadas ao banco de dados do que o necess\u00e1rio? Como a funcionalidade se encaixa na imagem maior? Pode ter efeitos negativos no sistema como um todo? Existem falhas de seguran\u00e7a? O nome de uma vari\u00e1vel revela alguma informa\u00e7\u00e3o espec\u00edfica do cliente? PII (Informa\u00e7\u00f5es Pessoais Identific\u00e1veis) e EUII (Informa\u00e7\u00f5es Empresariais Identific\u00e1veis) s\u00e3o tratados corretamente? Estamos registrando informa\u00e7\u00f5es PII? Estilo Existem coment\u00e1rios desnecess\u00e1rios? Se o c\u00f3digo n\u00e3o for claro o suficiente para se explicar, ent\u00e3o o c\u00f3digo deve ser simplificado. Os coment\u00e1rios podem estar l\u00e1 para explicar por que algum c\u00f3digo existe. O c\u00f3digo segue o guia de estilo/conven\u00e7\u00f5es que acordamos? Usamos formata\u00e7\u00e3o autom\u00e1tica como black e prettier. Testes Os testes sempre devem ser inclu\u00eddos no mesmo PR que o c\u00f3digo em si (\"Vou adicionar testes depois\" n\u00e3o \u00e9 aceit\u00e1vel). Certifique-se de que os testes sejam sensatos e que sejam feitas suposi\u00e7\u00f5es v\u00e1lidas. Certifique-se de que os casos limite sejam tratados tamb\u00e9m. Os testes podem ser uma \u00f3tima fonte para entender as altera\u00e7\u00f5es. Pode ser uma estrat\u00e9gia olhar primeiro os testes para ajudar a entender melhor as altera\u00e7\u00f5es.","title":"Orienta\u00e7\u00f5es para o Revisor"},{"location":"code-reviews/process-guidance/reviewer-guidance/#orientacoes-para-o-revisor","text":"Uma vez que partes das revis\u00f5es podem ser automatizadas por meio de linters e similares, os revisores humanos podem se concentrar na corre\u00e7\u00e3o arquitetural e funcional. Os revisores humanos devem se concentrar em: A corre\u00e7\u00e3o da l\u00f3gica de neg\u00f3cios incorporada no c\u00f3digo. A corre\u00e7\u00e3o de novos testes ou testes alterados. A \"legibilidade\" e manutenibilidade das decis\u00f5es gerais de design refletidas no c\u00f3digo. A lista de verifica\u00e7\u00e3o de erros comuns mantida pela equipe para cada linguagem de programa\u00e7\u00e3o. As revis\u00f5es de c\u00f3digo devem seguir as orienta\u00e7\u00f5es e listas de verifica\u00e7\u00e3o abaixo para garantir revis\u00f5es de c\u00f3digo positivas e eficazes.","title":"Orienta\u00e7\u00f5es para o Revisor"},{"location":"code-reviews/process-guidance/reviewer-guidance/#orientacoes-gerais","text":"","title":"Orienta\u00e7\u00f5es gerais"},{"location":"code-reviews/process-guidance/reviewer-guidance/#compreenda-o-codigo-que-voce-esta-revisando","text":"Leia cada linha alterada. Se tivermos uma revis\u00e3o do interessado, n\u00e3o \u00e9 necess\u00e1rio executar o PR, a menos que isso ajude a entender o c\u00f3digo. O AzDO ordena os arquivos para voc\u00ea, mas voc\u00ea deve ler o c\u00f3digo em alguma sequ\u00eancia l\u00f3gica para facilitar o entendimento. Se voc\u00ea n\u00e3o entender completamente uma altera\u00e7\u00e3o em um arquivo por falta de contexto, clique para visualizar o arquivo completo e leia o c\u00f3digo circundante ou verifique as altera\u00e7\u00f5es e visualize-as no IDE. Pe\u00e7a ao autor para esclarecer.","title":"Compreenda o c\u00f3digo que voc\u00ea est\u00e1 revisando"},{"location":"code-reviews/process-guidance/reviewer-guidance/#leve-seu-tempo-e-mantenha-o-foco-no-escopo","text":"Voc\u00ea n\u00e3o deve revisar o c\u00f3digo apressadamente, mas tamb\u00e9m n\u00e3o deve demorar muito em uma \u00fanica sess\u00e3o. Se voc\u00ea tiver muitos pull requests (PRs) para revisar ou se a complexidade do c\u00f3digo for alta, a recomenda\u00e7\u00e3o \u00e9 fazer pausas entre as revis\u00f5es para se recuperar e se concentrar naqueles com os quais voc\u00ea tem mais experi\u00eancia. Lembre-se sempre de que o objetivo de uma revis\u00e3o de c\u00f3digo \u00e9 verificar se os objetivos da tarefa correspondente foram alcan\u00e7ados. Se voc\u00ea tiver preocupa\u00e7\u00f5es com o c\u00f3digo relacionado ou adjacente que n\u00e3o est\u00e1 no escopo do PR, aborde essas preocupa\u00e7\u00f5es como tarefas separadas (por exemplo, bugs ou d\u00edvidas t\u00e9cnicas). N\u00e3o bloqueie o PR atual devido a problemas que est\u00e3o fora do escopo.","title":"Leve seu tempo e mantenha o foco no escopo"},{"location":"code-reviews/process-guidance/reviewer-guidance/#fomente-uma-cultura-de-revisao-de-codigo-positiva","text":"As revis\u00f5es de c\u00f3digo desempenham um papel cr\u00edtico na qualidade do produto e n\u00e3o devem representar um local para discuss\u00f5es longas ou, pior ainda, uma batalha de egos. O que importa \u00e9 encontrar um erro, n\u00e3o quem o cometeu, n\u00e3o quem o encontrou, n\u00e3o quem o corrigiu. A \u00fanica coisa que importa \u00e9 ter o melhor produto poss\u00edvel.","title":"Fomente uma cultura de revis\u00e3o de c\u00f3digo positiva"},{"location":"code-reviews/process-guidance/reviewer-guidance/#seja-considerado","text":"Seja positivo - incentive e aprecie as boas pr\u00e1ticas. Prefira prefixar um \"ponto de polimento\" com \"Ajuste:\". Evite linguagem que aponte o dedo, como \"voc\u00ea\", e use preferencialmente \"n\u00f3s\" ou \"esta linha\" - as revis\u00f5es de c\u00f3digo n\u00e3o s\u00e3o pessoais e a linguagem importa. Prefira fazer perguntas em vez de fazer afirma\u00e7\u00f5es. Pode haver uma boa raz\u00e3o para o autor fazer algo. Se voc\u00ea fizer um coment\u00e1rio direto, explique por que o c\u00f3digo precisa ser alterado, de prefer\u00eancia com um exemplo. Falando em mudan\u00e7as, voc\u00ea pode sugerir altera\u00e7\u00f5es a um PR usando o recurso de sugest\u00e3o (dispon\u00edvel no GitHub e no Azure DevOps) ou criando um PR para o branch do autor. Se alguns coment\u00e1rios de ida e volta n\u00e3o resolverem uma discord\u00e2ncia, conversem rapidamente entre si (pessoalmente ou por telefone) ou crie uma discuss\u00e3o em grupo, o que pode levar a uma s\u00e9rie de melhorias para os pr\u00f3ximos PRs. N\u00e3o se esque\u00e7a de atualizar o PR com o que voc\u00eas concordaram e por qu\u00ea.","title":"Seja considerado"},{"location":"code-reviews/process-guidance/reviewer-guidance/#primeira-analise-de-design","text":"","title":"Primeira an\u00e1lise de design"},{"location":"code-reviews/process-guidance/reviewer-guidance/#visao-geral-do-pull-request","text":"A descri\u00e7\u00e3o do PR faz sentido? Todas as altera\u00e7\u00f5es se encaixam logicamente neste PR ou existem altera\u00e7\u00f5es n\u00e3o relacionadas? Se necess\u00e1rio, as altera\u00e7\u00f5es feitas est\u00e3o refletidas nas atualiza\u00e7\u00f5es do README ou em outros documentos? Especialmente se as altera\u00e7\u00f5es afetarem como o usu\u00e1rio compila o c\u00f3digo.","title":"Vis\u00e3o geral do Pull Request"},{"location":"code-reviews/process-guidance/reviewer-guidance/#alteracoes-visiveis-pelo-usuario","text":"Se o c\u00f3digo envolver uma altera\u00e7\u00e3o vis\u00edvel pelo usu\u00e1rio, h\u00e1 um GIF/foto que explique a funcionalidade? Se n\u00e3o houver, pode ser crucial validar o PR para garantir que a altera\u00e7\u00e3o fa\u00e7a o que \u00e9 esperado. Certifique-se de que as altera\u00e7\u00f5es de interface do usu\u00e1rio pare\u00e7am boas sem comportamentos inesperados.","title":"Altera\u00e7\u00f5es vis\u00edveis pelo usu\u00e1rio"},{"location":"code-reviews/process-guidance/reviewer-guidance/#design","text":"As intera\u00e7\u00f5es das v\u00e1rias partes de c\u00f3digo no PR fazem sentido? O c\u00f3digo reconhece e incorpora arquiteturas e padr\u00f5es de codifica\u00e7\u00e3o?","title":"Design"},{"location":"code-reviews/process-guidance/reviewer-guidance/#analise-de-qualidade-de-codigo","text":"","title":"An\u00e1lise de Qualidade de C\u00f3digo"},{"location":"code-reviews/process-guidance/reviewer-guidance/#complexidade","text":"As fun\u00e7\u00f5es s\u00e3o muito complexas? O princ\u00edpio da responsabilidade \u00fanica \u00e9 seguido? Uma fun\u00e7\u00e3o ou classe deve fazer apenas uma 'coisa'. Uma fun\u00e7\u00e3o deve ser dividida em v\u00e1rias fun\u00e7\u00f5es? Se um m\u00e9todo tem mais de 3 argumentos, ele \u00e9 potencialmente excessivamente complexo. O c\u00f3digo adiciona funcionalidade que n\u00e3o \u00e9 necess\u00e1ria? O c\u00f3digo pode ser facilmente compreendido pelos leitores de c\u00f3digo?","title":"Complexidade"},{"location":"code-reviews/process-guidance/reviewer-guidance/#nomeacaolegibilidade","text":"O desenvolvedor escolheu bons nomes para fun\u00e7\u00f5es, vari\u00e1veis, etc.?","title":"Nomea\u00e7\u00e3o/legibilidade"},{"location":"code-reviews/process-guidance/reviewer-guidance/#tratamento-de-erros","text":"Os erros s\u00e3o tratados com eleg\u00e2ncia e de forma expl\u00edcita quando necess\u00e1rio?","title":"Tratamento de Erros"},{"location":"code-reviews/process-guidance/reviewer-guidance/#funcionalidade","text":"H\u00e1 programa\u00e7\u00e3o paralela neste PR que pode causar condi\u00e7\u00f5es de corrida? Leia atentamente essa l\u00f3gica. O c\u00f3digo pode ser otimizado? Por exemplo: existem mais chamadas ao banco de dados do que o necess\u00e1rio? Como a funcionalidade se encaixa na imagem maior? Pode ter efeitos negativos no sistema como um todo? Existem falhas de seguran\u00e7a? O nome de uma vari\u00e1vel revela alguma informa\u00e7\u00e3o espec\u00edfica do cliente? PII (Informa\u00e7\u00f5es Pessoais Identific\u00e1veis) e EUII (Informa\u00e7\u00f5es Empresariais Identific\u00e1veis) s\u00e3o tratados corretamente? Estamos registrando informa\u00e7\u00f5es PII?","title":"Funcionalidade"},{"location":"code-reviews/process-guidance/reviewer-guidance/#estilo","text":"Existem coment\u00e1rios desnecess\u00e1rios? Se o c\u00f3digo n\u00e3o for claro o suficiente para se explicar, ent\u00e3o o c\u00f3digo deve ser simplificado. Os coment\u00e1rios podem estar l\u00e1 para explicar por que algum c\u00f3digo existe. O c\u00f3digo segue o guia de estilo/conven\u00e7\u00f5es que acordamos? Usamos formata\u00e7\u00e3o autom\u00e1tica como black e prettier.","title":"Estilo"},{"location":"code-reviews/process-guidance/reviewer-guidance/#testes","text":"Os testes sempre devem ser inclu\u00eddos no mesmo PR que o c\u00f3digo em si (\"Vou adicionar testes depois\" n\u00e3o \u00e9 aceit\u00e1vel). Certifique-se de que os testes sejam sensatos e que sejam feitas suposi\u00e7\u00f5es v\u00e1lidas. Certifique-se de que os casos limite sejam tratados tamb\u00e9m. Os testes podem ser uma \u00f3tima fonte para entender as altera\u00e7\u00f5es. Pode ser uma estrat\u00e9gia olhar primeiro os testes para ajudar a entender melhor as altera\u00e7\u00f5es.","title":"Testes"},{"location":"code-reviews/pull-request-template/pull-request-template/","text":"Nro do Ticket do Jira Para obter mais informa\u00e7\u00f5es sobre como contribuir para este reposit\u00f3rio, visite esta p\u00e1gina . Descri\u00e7\u00e3o Deve incluir uma descri\u00e7\u00e3o concisa das altera\u00e7\u00f5es (bug ou recurso), seu impacto, juntamente com um resumo da solu\u00e7\u00e3o. Passos para Reproduzir o Bug e Validar a Solu\u00e7\u00e3o Somente aplic\u00e1vel se o trabalho for para corrigir um bug. Por favor, remova esta se\u00e7\u00e3o se o trabalho for para um recurso ou hist\u00f3ria. Forne\u00e7a detalhes sobre o ambiente em que o bug foi encontrado e os passos detalhados para reproduzir o bug. Isso deve ser detalhado o suficiente para que um membro da equipe possa confirmar que o bug n\u00e3o ocorre mais. Lista de Verifica\u00e7\u00e3o do PR Use a lista de verifica\u00e7\u00e3o abaixo para garantir que seu branch esteja pronto para PR. Se o item n\u00e3o se aplicar, deixe-o em branco. Atualizei a documenta\u00e7\u00e3o de acordo. Adicionei testes para cobrir minhas altera\u00e7\u00f5es. Todos os testes novos e existentes passaram. Meu c\u00f3digo segue o estilo de c\u00f3digo deste projeto. Executei as verifica\u00e7\u00f5es de lint que n\u00e3o produziram novos erros nem avisos para minhas altera\u00e7\u00f5es. Verifiquei se n\u00e3o h\u00e1 outros Pull Requests abertos para a mesma atualiza\u00e7\u00e3o/altera\u00e7\u00e3o. Isso introduz uma altera\u00e7\u00e3o que quebra a compatibilidade? Sim N\u00e3o Se isso introduzir uma altera\u00e7\u00e3o que quebra a compatibilidade, descreva o impacto e o caminho de migra\u00e7\u00e3o para aplicativos existentes abaixo. Testes Instru\u00e7\u00f5es para teste e valida\u00e7\u00e3o do seu c\u00f3digo: Qual sistema operacional foi usado para testar. Quais conjuntos de testes foram usados. Descri\u00e7\u00e3o dos cen\u00e1rios de teste que voc\u00ea experimentou. Registros ou sa\u00eddas relevantes Use esta se\u00e7\u00e3o para anexar imagens que demonstrem seu c\u00f3digo funcionando/funcionando corretamente. Se voc\u00ea estiver imprimindo algo, mostre uma captura de tela. Quando quiser compartilhar registros longos, fa\u00e7a o upload para: (ContaDeArmazenamento)/pr-support/anexos/(N\u00fameroDoPR)/(seusArquivos) usando o Azure Storage Explorer ou portal.azure.com e insira o link aqui. Outras informa\u00e7\u00f5es ou depend\u00eancias conhecidas Qualquer outra informa\u00e7\u00e3o ou depend\u00eancias conhecidas que sejam importantes para este PR. Tarefas a fazer ap\u00f3s este PR.","title":"[Nro do Ticket do Jira](./link-para-o-item-de-trabalho)"},{"location":"code-reviews/pull-request-template/pull-request-template/#nro-do-ticket-do-jira","text":"Para obter mais informa\u00e7\u00f5es sobre como contribuir para este reposit\u00f3rio, visite esta p\u00e1gina .","title":"Nro do Ticket do Jira"},{"location":"code-reviews/pull-request-template/pull-request-template/#descricao","text":"Deve incluir uma descri\u00e7\u00e3o concisa das altera\u00e7\u00f5es (bug ou recurso), seu impacto, juntamente com um resumo da solu\u00e7\u00e3o.","title":"Descri\u00e7\u00e3o"},{"location":"code-reviews/pull-request-template/pull-request-template/#passos-para-reproduzir-o-bug-e-validar-a-solucao","text":"Somente aplic\u00e1vel se o trabalho for para corrigir um bug. Por favor, remova esta se\u00e7\u00e3o se o trabalho for para um recurso ou hist\u00f3ria. Forne\u00e7a detalhes sobre o ambiente em que o bug foi encontrado e os passos detalhados para reproduzir o bug. Isso deve ser detalhado o suficiente para que um membro da equipe possa confirmar que o bug n\u00e3o ocorre mais.","title":"Passos para Reproduzir o Bug e Validar a Solu\u00e7\u00e3o"},{"location":"code-reviews/pull-request-template/pull-request-template/#lista-de-verificacao-do-pr","text":"Use a lista de verifica\u00e7\u00e3o abaixo para garantir que seu branch esteja pronto para PR. Se o item n\u00e3o se aplicar, deixe-o em branco. Atualizei a documenta\u00e7\u00e3o de acordo. Adicionei testes para cobrir minhas altera\u00e7\u00f5es. Todos os testes novos e existentes passaram. Meu c\u00f3digo segue o estilo de c\u00f3digo deste projeto. Executei as verifica\u00e7\u00f5es de lint que n\u00e3o produziram novos erros nem avisos para minhas altera\u00e7\u00f5es. Verifiquei se n\u00e3o h\u00e1 outros Pull Requests abertos para a mesma atualiza\u00e7\u00e3o/altera\u00e7\u00e3o.","title":"Lista de Verifica\u00e7\u00e3o do PR"},{"location":"code-reviews/pull-request-template/pull-request-template/#isso-introduz-uma-alteracao-que-quebra-a-compatibilidade","text":"Sim N\u00e3o Se isso introduzir uma altera\u00e7\u00e3o que quebra a compatibilidade, descreva o impacto e o caminho de migra\u00e7\u00e3o para aplicativos existentes abaixo.","title":"Isso introduz uma altera\u00e7\u00e3o que quebra a compatibilidade?"},{"location":"code-reviews/pull-request-template/pull-request-template/#testes","text":"Instru\u00e7\u00f5es para teste e valida\u00e7\u00e3o do seu c\u00f3digo: Qual sistema operacional foi usado para testar. Quais conjuntos de testes foram usados. Descri\u00e7\u00e3o dos cen\u00e1rios de teste que voc\u00ea experimentou.","title":"Testes"},{"location":"code-reviews/pull-request-template/pull-request-template/#registros-ou-saidas-relevantes","text":"Use esta se\u00e7\u00e3o para anexar imagens que demonstrem seu c\u00f3digo funcionando/funcionando corretamente. Se voc\u00ea estiver imprimindo algo, mostre uma captura de tela. Quando quiser compartilhar registros longos, fa\u00e7a o upload para: (ContaDeArmazenamento)/pr-support/anexos/(N\u00fameroDoPR)/(seusArquivos) usando o Azure Storage Explorer ou portal.azure.com e insira o link aqui.","title":"Registros ou sa\u00eddas relevantes"},{"location":"code-reviews/pull-request-template/pull-request-template/#outras-informacoes-ou-dependencias-conhecidas","text":"Qualquer outra informa\u00e7\u00e3o ou depend\u00eancias conhecidas que sejam importantes para este PR. Tarefas a fazer ap\u00f3s este PR.","title":"Outras informa\u00e7\u00f5es ou depend\u00eancias conhecidas"},{"location":"code-reviews/recipes/","text":"Orienta\u00e7\u00f5es Espec\u00edficas da Linguagem Bash C# Go Java JavaScript e TypeScript Markdown Python Terraform YAML (Azure Pipelines)","title":"Orienta\u00e7\u00f5es Espec\u00edficas da Linguagem"},{"location":"code-reviews/recipes/#orientacoes-especificas-da-linguagem","text":"Bash C# Go Java JavaScript e TypeScript Markdown Python Terraform YAML (Azure Pipelines)","title":"Orienta\u00e7\u00f5es Espec\u00edficas da Linguagem"},{"location":"code-reviews/recipes/azure-pipelines-yaml/","text":"Revis\u00e3o de C\u00f3digo YAML (Azure Pipelines) Guia de Estilo Os desenvolvedores devem seguir a refer\u00eancia do esquema YAML . An\u00e1lise de C\u00f3digo / Linting O linter YAML mais popular \u00e9 a extens\u00e3o YAML . Esta extens\u00e3o fornece valida\u00e7\u00e3o YAML, destaque de documentos, auto-completar, suporte de hover e recursos de formata\u00e7\u00e3o. Extens\u00f5es do VS Code Existe uma extens\u00e3o Azure Pipelines para o VS Code para adicionar realce de sintaxe e autocompletar para o YAML das Pipelines do Azure no VS Code. Ele tamb\u00e9m ajuda a configurar compila\u00e7\u00e3o e implanta\u00e7\u00e3o cont\u00ednuas para aplicativos da Web do Azure sem sair do VS Code. Vis\u00e3o Geral do YAML nas Pipelines do Azure Quando a pipeline \u00e9 acionada, antes de executar a pipeline, existem algumas fases, como Tempo de Fila, Tempo de Compila\u00e7\u00e3o e Tempo de Execu\u00e7\u00e3o , onde as vari\u00e1veis s\u00e3o interpretadas pelo sintaxe de express\u00e3o em tempo de execu\u00e7\u00e3o . Quando a pipeline \u00e9 acionada, todos os arquivos YAML aninhados s\u00e3o expandidos para serem executados nas Pipelines do Azure. Esta lista de verifica\u00e7\u00e3o cont\u00e9m algumas dicas para revisar todos os arquivos YAML aninhados. Estes documentos podem ser \u00fateis ao revisar os arquivos YAML: Documenta\u00e7\u00e3o YAML das Pipelines do Azure . Sequ\u00eancia de execu\u00e7\u00e3o da pipeline Principais conceitos para as novas Pipelines do Azure Vis\u00e3o geral dos principais conceitos das Pipelines do Azure Um acionador diz a uma Pipeline para ser executada. Uma pipeline \u00e9 composta por um ou mais est\u00e1gios. Uma pipeline pode ser implantada em um ou mais ambientes. Um est\u00e1gio \u00e9 uma maneira de organizar trabalhos em uma pipeline e cada est\u00e1gio pode ter um ou mais trabalhos. Cada trabalho \u00e9 executado em um agente. Um trabalho tamb\u00e9m pode ser sem agente. Cada agente executa um trabalho que cont\u00e9m uma ou mais etapas. Uma etapa pode ser uma tarefa ou um script e \u00e9 a menor unidade de constru\u00e7\u00e3o de uma pipeline. Uma tarefa \u00e9 um script pr\u00e9-empacotado que realiza uma a\u00e7\u00e3o, como invocar uma API REST ou publicar um artefato de compila\u00e7\u00e3o. Um artefato \u00e9 uma cole\u00e7\u00e3o de arquivos ou pacotes publicados por uma execu\u00e7\u00e3o. Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo Al\u00e9m da Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos da revis\u00e3o de c\u00f3digo YAML das Pipelines do Azure. Estrutura da Pipeline Os passos s\u00e3o bem compreendidos e os componentes s\u00e3o facilmente identific\u00e1veis. Certifique-se de que h\u00e1 uma descri\u00e7\u00e3o adequada displayName: para cada etapa na pipeline. Etapas/est\u00e1gios da pipeline s\u00e3o verificados nas Pipelines do Azure para ter uma compreens\u00e3o maior dos componentes. No caso de ter arquivos YAML aninhados complexos, a pipeline nas Pipelines do Azure \u00e9 editada para encontrar o arquivo raiz do acionador. Todas as refer\u00eancias de arquivos de modelo s\u00e3o visitadas para garantir que uma pequena altera\u00e7\u00e3o n\u00e3o cause altera\u00e7\u00f5es quebradas, alterar um arquivo pode afetar v\u00e1rias pipelines Scripts longos incorporados no arquivo YAML s\u00e3o movidos para arquivos de script Estrutura YAML Componentes reutiliz\u00e1veis s\u00e3o divididos em modelos YAML separados. Vari\u00e1veis s\u00e3o separadas por ambiente armazenadas em modelos ou grupos de vari\u00e1veis. Mudan\u00e7as de valor de vari\u00e1vel em Tempo de Fila , Tempo de Compila\u00e7\u00e3o e Tempo de Execu\u00e7\u00e3o s\u00e3o consideradas. Valores de sintaxe de vari\u00e1vel usados com Sintaxe de Macro , Sintaxe de Express\u00e3o de Modelo e Sintaxe de Express\u00e3o em Tempo de Execu\u00e7\u00e3o s\u00e3o considerados. Vari\u00e1veis n\u00e3o utilizadas/par\u00e2metros s\u00e3o removidos na pipeline. A pipeline atende aos crit\u00e9rios de Condi\u00e7\u00f5es do est\u00e1gio/trabalho? Verifica\u00e7\u00e3o de Permiss\u00e3o e Seguran\u00e7a Valores secretos n\u00e3o devem ser impressos na pipeline, issecret \u00e9 usado para imprimir segredos para depura\u00e7\u00e3o. Se a pipeline estiver usando grupos de vari\u00e1veis na Biblioteca, verifique se a pipeline tem acesso aos grupos de vari\u00e1veis criados. Se a pipeline tiver uma tarefa remota em outro reposit\u00f3rio/organiza\u00e7\u00e3o, ela tem acesso? Se a pipeline estiver tentando acessar um arquivo seguro, ela tem permiss\u00e3o? Se a pipeline exigir aprova\u00e7\u00e3o para implanta\u00e7\u00f5es em ambientes, quem \u00e9 o aprovador? \u00c9 necess\u00e1rio manter segredos e gerenci\u00e1-los, voc\u00ea considerou o uso do Azure KeyVault? Dicas de Solu\u00e7\u00e3o de Problemas Considere a Sintaxe de Vari\u00e1vel com Express\u00f5es em Tempo de Execu\u00e7\u00e3o na pipeline. Aqui est\u00e1 um bom exemplo para entender a Expans\u00e3o de vari\u00e1veis . Quando atribu\u00edmos uma vari\u00e1vel como abaixo, ela n\u00e3o ser\u00e1 definida durante o tempo de inicializa\u00e7\u00e3o, ser\u00e1 atribu\u00edda durante a execu\u00e7\u00e3o, e ent\u00e3o podemos recuperar alguns er ros com base no momento em que o modelo \u00e9 executado. - task : AzureWebApp@1 displayName : 'Implantar Azure Web App : $(webAppName)' inputs : azureSubscription : '$(azureServiceConnectionId)' appName : '$(webAppName)' package : $(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip startUpCommand : 'gunicorn --bind=0.0.0.0 --workers=4 app:app' Erro: Ap\u00f3s passar essas vari\u00e1veis como par\u00e2metro, ela carrega os valores corretamente. - template : steps-deployment.yaml parameters : azureServiceConnectionId : ${{ variables.azureServiceConnectionId }} webAppName : ${{ variables.webAppName }} - task : AzureWebApp@1 displayName : 'Implantar Azure Web App :${{ parameters.webAppName }}' inputs : azureSubscription : '${{ parameters.azureServiceConnectionId }}' appName : '${{ parameters.webAppName }}' package : $(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip startUpCommand : 'gunicorn --bind=0.0.0.0 --workers=4 app:app' Use issecret para imprimir segredos para depura\u00e7\u00e3o echo \"##vso[task.setvariable variable=token;issecret=true] ${ token } \"","title":"Revis\u00e3o de C\u00f3digo YAML (Azure Pipelines)"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#revisao-de-codigo-yaml-azure-pipelines","text":"","title":"Revis\u00e3o de C\u00f3digo YAML (Azure Pipelines)"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#guia-de-estilo","text":"Os desenvolvedores devem seguir a refer\u00eancia do esquema YAML .","title":"Guia de Estilo"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#analise-de-codigo-linting","text":"O linter YAML mais popular \u00e9 a extens\u00e3o YAML . Esta extens\u00e3o fornece valida\u00e7\u00e3o YAML, destaque de documentos, auto-completar, suporte de hover e recursos de formata\u00e7\u00e3o.","title":"An\u00e1lise de C\u00f3digo / Linting"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#extensoes-do-vs-code","text":"Existe uma extens\u00e3o Azure Pipelines para o VS Code para adicionar realce de sintaxe e autocompletar para o YAML das Pipelines do Azure no VS Code. Ele tamb\u00e9m ajuda a configurar compila\u00e7\u00e3o e implanta\u00e7\u00e3o cont\u00ednuas para aplicativos da Web do Azure sem sair do VS Code.","title":"Extens\u00f5es do VS Code"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#visao-geral-do-yaml-nas-pipelines-do-azure","text":"Quando a pipeline \u00e9 acionada, antes de executar a pipeline, existem algumas fases, como Tempo de Fila, Tempo de Compila\u00e7\u00e3o e Tempo de Execu\u00e7\u00e3o , onde as vari\u00e1veis s\u00e3o interpretadas pelo sintaxe de express\u00e3o em tempo de execu\u00e7\u00e3o . Quando a pipeline \u00e9 acionada, todos os arquivos YAML aninhados s\u00e3o expandidos para serem executados nas Pipelines do Azure. Esta lista de verifica\u00e7\u00e3o cont\u00e9m algumas dicas para revisar todos os arquivos YAML aninhados. Estes documentos podem ser \u00fateis ao revisar os arquivos YAML: Documenta\u00e7\u00e3o YAML das Pipelines do Azure . Sequ\u00eancia de execu\u00e7\u00e3o da pipeline Principais conceitos para as novas Pipelines do Azure Vis\u00e3o geral dos principais conceitos das Pipelines do Azure Um acionador diz a uma Pipeline para ser executada. Uma pipeline \u00e9 composta por um ou mais est\u00e1gios. Uma pipeline pode ser implantada em um ou mais ambientes. Um est\u00e1gio \u00e9 uma maneira de organizar trabalhos em uma pipeline e cada est\u00e1gio pode ter um ou mais trabalhos. Cada trabalho \u00e9 executado em um agente. Um trabalho tamb\u00e9m pode ser sem agente. Cada agente executa um trabalho que cont\u00e9m uma ou mais etapas. Uma etapa pode ser uma tarefa ou um script e \u00e9 a menor unidade de constru\u00e7\u00e3o de uma pipeline. Uma tarefa \u00e9 um script pr\u00e9-empacotado que realiza uma a\u00e7\u00e3o, como invocar uma API REST ou publicar um artefato de compila\u00e7\u00e3o. Um artefato \u00e9 uma cole\u00e7\u00e3o de arquivos ou pacotes publicados por uma execu\u00e7\u00e3o.","title":"Vis\u00e3o Geral do YAML nas Pipelines do Azure"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#lista-de-verificacao-de-revisao-de-codigo","text":"Al\u00e9m da Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos da revis\u00e3o de c\u00f3digo YAML das Pipelines do Azure.","title":"Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#estrutura-da-pipeline","text":"Os passos s\u00e3o bem compreendidos e os componentes s\u00e3o facilmente identific\u00e1veis. Certifique-se de que h\u00e1 uma descri\u00e7\u00e3o adequada displayName: para cada etapa na pipeline. Etapas/est\u00e1gios da pipeline s\u00e3o verificados nas Pipelines do Azure para ter uma compreens\u00e3o maior dos componentes. No caso de ter arquivos YAML aninhados complexos, a pipeline nas Pipelines do Azure \u00e9 editada para encontrar o arquivo raiz do acionador. Todas as refer\u00eancias de arquivos de modelo s\u00e3o visitadas para garantir que uma pequena altera\u00e7\u00e3o n\u00e3o cause altera\u00e7\u00f5es quebradas, alterar um arquivo pode afetar v\u00e1rias pipelines Scripts longos incorporados no arquivo YAML s\u00e3o movidos para arquivos de script","title":"Estrutura da Pipeline"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#estrutura-yaml","text":"Componentes reutiliz\u00e1veis s\u00e3o divididos em modelos YAML separados. Vari\u00e1veis s\u00e3o separadas por ambiente armazenadas em modelos ou grupos de vari\u00e1veis. Mudan\u00e7as de valor de vari\u00e1vel em Tempo de Fila , Tempo de Compila\u00e7\u00e3o e Tempo de Execu\u00e7\u00e3o s\u00e3o consideradas. Valores de sintaxe de vari\u00e1vel usados com Sintaxe de Macro , Sintaxe de Express\u00e3o de Modelo e Sintaxe de Express\u00e3o em Tempo de Execu\u00e7\u00e3o s\u00e3o considerados. Vari\u00e1veis n\u00e3o utilizadas/par\u00e2metros s\u00e3o removidos na pipeline. A pipeline atende aos crit\u00e9rios de Condi\u00e7\u00f5es do est\u00e1gio/trabalho?","title":"Estrutura YAML"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#verificacao-de-permissao-e-seguranca","text":"Valores secretos n\u00e3o devem ser impressos na pipeline, issecret \u00e9 usado para imprimir segredos para depura\u00e7\u00e3o. Se a pipeline estiver usando grupos de vari\u00e1veis na Biblioteca, verifique se a pipeline tem acesso aos grupos de vari\u00e1veis criados. Se a pipeline tiver uma tarefa remota em outro reposit\u00f3rio/organiza\u00e7\u00e3o, ela tem acesso? Se a pipeline estiver tentando acessar um arquivo seguro, ela tem permiss\u00e3o? Se a pipeline exigir aprova\u00e7\u00e3o para implanta\u00e7\u00f5es em ambientes, quem \u00e9 o aprovador? \u00c9 necess\u00e1rio manter segredos e gerenci\u00e1-los, voc\u00ea considerou o uso do Azure KeyVault?","title":"Verifica\u00e7\u00e3o de Permiss\u00e3o e Seguran\u00e7a"},{"location":"code-reviews/recipes/azure-pipelines-yaml/#dicas-de-solucao-de-problemas","text":"Considere a Sintaxe de Vari\u00e1vel com Express\u00f5es em Tempo de Execu\u00e7\u00e3o na pipeline. Aqui est\u00e1 um bom exemplo para entender a Expans\u00e3o de vari\u00e1veis . Quando atribu\u00edmos uma vari\u00e1vel como abaixo, ela n\u00e3o ser\u00e1 definida durante o tempo de inicializa\u00e7\u00e3o, ser\u00e1 atribu\u00edda durante a execu\u00e7\u00e3o, e ent\u00e3o podemos recuperar alguns er ros com base no momento em que o modelo \u00e9 executado. - task : AzureWebApp@1 displayName : 'Implantar Azure Web App : $(webAppName)' inputs : azureSubscription : '$(azureServiceConnectionId)' appName : '$(webAppName)' package : $(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip startUpCommand : 'gunicorn --bind=0.0.0.0 --workers=4 app:app' Erro: Ap\u00f3s passar essas vari\u00e1veis como par\u00e2metro, ela carrega os valores corretamente. - template : steps-deployment.yaml parameters : azureServiceConnectionId : ${{ variables.azureServiceConnectionId }} webAppName : ${{ variables.webAppName }} - task : AzureWebApp@1 displayName : 'Implantar Azure Web App :${{ parameters.webAppName }}' inputs : azureSubscription : '${{ parameters.azureServiceConnectionId }}' appName : '${{ parameters.webAppName }}' package : $(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip startUpCommand : 'gunicorn --bind=0.0.0.0 --workers=4 app:app' Use issecret para imprimir segredos para depura\u00e7\u00e3o echo \"##vso[task.setvariable variable=token;issecret=true] ${ token } \"","title":"Dicas de Solu\u00e7\u00e3o de Problemas"},{"location":"code-reviews/recipes/bash/","text":"Revis\u00e3o de C\u00f3digo em Bash Guia de Estilo Os desenvolvedores devem seguir o Guia de Estilo Bash do Google . An\u00e1lise de C\u00f3digo / Linting Projetos devem verificar o c\u00f3digo Bash com o shellcheck como parte do processo de CI . Al\u00e9m do linting, shfmt pode ser usado para formatar automaticamente scripts shell. Existem algumas extens\u00f5es de c\u00f3digo do vscode baseadas no shfmt, como shell-format, que podem ser usadas para formatar automaticamente scripts shell. Configura\u00e7\u00e3o do Projeto vscode-shellcheck A extens\u00e3o Shellcheck deve ser usada no VS Code, ela fornece capacidades de an\u00e1lise de c\u00f3digo est\u00e1tico e corre\u00e7\u00e3o autom\u00e1tica de problemas de linting. Para usar o vscode-shellcheck no VS Code, fa\u00e7a o seguinte: Instale o shellcheck em sua m\u00e1quina Para macOS brew install shellcheck Para Ubuntu: apt-get install shellcheck Instale o shellcheck no vscode Encontre a extens\u00e3o vscode-shellcheck no vscode e instale-a. Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo shell-format A extens\u00e3o shell-format faz a formata\u00e7\u00e3o autom\u00e1tica de seus scripts bash, arquivos Docker e v\u00e1rios arquivos de configura\u00e7\u00e3o. Ela depende do shfmt, que pode aplicar verifica\u00e7\u00f5es do guia de estilo do Google para bash. Para usar o shell-format no vscode, siga os passos abaixo: Instale o shfmt (requer Go 1.13 ou posterior) em sua m\u00e1quina GO111MODULE = on go get mvdan.cc/sh/v3/cmd/shfmt Instale o shell-format no vscode Encontre a extens\u00e3o shell-format no vscode e instale-a. Valida\u00e7\u00e3o de Build Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o seguinte trecho ao seu arquivo azure-pipelines.yaml . Isso far\u00e1 a verifica\u00e7\u00e3o de linting em qualquer script na pasta ./scripts/ . - bash : | echo \"Isso verifica a formata\u00e7\u00e3o e erros comuns do Bash. Consulte o wiki para detalhes sobre erros e op\u00e7\u00f5es de ignorar: https://github.com/koalaman/shellcheck/wiki/SC1000\" export scversion=\"stable\" wget -qO- \"https://github.com/koalaman/shellcheck/releases/download/${scversion?}/shellcheck-${scversion?}.linux.x86_64.tar.xz\" | tar -xJv sudo mv \"shellcheck-${scversion}/shellcheck\" /usr/bin/ rm -r \"shellcheck-${scversion}\" shellcheck ./scripts/*.sh displayName : \"Validar Scripts: Shellcheck\" Al\u00e9m disso, seus scripts shell podem ser formatados em sua pipeline de build usando a ferramenta shfmt . Para integrar o shfmt em sua pipeline de build, fa\u00e7a o seguinte: - bash : | echo \"Esta etapa faz a formata\u00e7\u00e3o autom\u00e1tica de scripts shell\" shfmt -l -w ./scripts/*.sh displayName : \"Formatar Scripts: shfmt\" A realiza\u00e7\u00e3o de testes unit\u00e1rios usando shunit2 tamb\u00e9m pode ser adicionada \u00e0 pipeline de build, usando o seguinte bloco: - bash : | echo \"Esta etapa realiza testes unit\u00e1rios em scripts shell usando shunit2\" ./shunit2 displayName : \"Formatar Scripts: shfmt\" Hooks Pr\u00e9-Commit Todos os desenvolvedores devem executar o shellcheck e o shfmt como hooks pr\u00e9-commit. Etapa 1 - Instalar o pre-commit Execute pip install pre-commit para instalar o pre-commit. Alternativamente, voc\u00ea pode executar brew install pre-commit se estiver usando o Homebrew. Etapa 2 - Adicione o shellcheck e o shfmt Adicione o arquivo .pre-commit-config.yaml \u00e0 raiz do projeto em Go. Execute o shfmt no pr\u00e9-commit adicionando-o ao arquivo .pre-commit-config.yaml como abaixo. - repo : git://github.com/pecigonzalo/pre-commit-fmt sha : master hooks : - id : shell-fmt args : - --indent=4 - repo : https://github.com/shellcheck-py/shellcheck-py rev : v0.7.1.1 hooks : - id : shellcheck Etapa 3 Execute $ pre-commit install para configurar os scripts de hook do git. Depend\u00eancias Scripts Bash s\u00e3o frequentemente usados para 'ligar' outros sistemas e ferramentas. Portanto, os scripts Bash podem ter muitas e/ou complicadas depend\u00eancias. Considere usar cont\u00eaineres Docker para garantir que os scripts sejam executados em um ambiente port\u00e1til e reproduz\u00edvel que contenha todas as depend\u00eancias corretas. Para garantir que os scripts com Docker sejam f\u00e1ceis de executar, considere tornar o uso do Docker transparente para quem chama o script, envolvendo o script em um 'bootstrap' que verifica se o script est\u00e1 sendo executado no Docker e o reexecuta em Docker se n\u00e3o for o caso. Isso proporciona o melhor dos dois mundos: execu\u00e7\u00e3o f\u00e1cil de script e ambientes consistentes. if [[ \" ${ DOCKER } \" ! = \"true\" ]] ; then docker build -t my_script -f my_script.Dockerfile . > /dev/null docker run -e DOCKER = true my_script \" $@ \" exit $? fi # ... implementa\u00e7\u00e3o do my_script aqui pode assumir que todas as suas depend\u00eancias existem, pois ele sempre est\u00e1 sendo executado no Docker ... Checklist de Revis\u00e3o de C\u00f3digo Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve verificar esses itens espec\u00edficos de revis\u00e3o de c\u00f3digo em Bash Esse c\u00f3digo usa Op\u00e7\u00f5es Internas do Shell como set -o, set -e, set -u para controle de execu\u00e7\u00e3o de scripts shell? O c\u00f3digo est\u00e1 modularizado? Scripts shell podem ser modularizados como m\u00f3dulos Python. Partes de scripts Bash devem ser importadas em projetos Bash complexos. Todas as exce\u00e7\u00f5es s\u00e3o tratadas corretamente? Exce\u00e7\u00f5es devem ser tratadas corretamente usando c\u00f3digos de sa\u00edda ou capturando sinais. O c\u00f3digo passa em todas as verifica\u00e7\u00f5es de linting conforme shellcheck e em todos os testes unit\u00e1rios conforme shunit2? O c\u00f3digo usa caminhos relativos ou caminhos absolutos? Caminhos relativos devem ser evitados, pois s\u00e3o vulner\u00e1veis a ataques de ambiente. Se for necess\u00e1rio um caminho relativo, verifique se a vari\u00e1vel PATH est\u00e1 definida. O c\u00f3digo aceita credenciais como entrada do usu\u00e1rio? As credenciais est\u00e3o ocultas ou criptografadas no script?","title":"Revis\u00e3o de C\u00f3digo em Bash"},{"location":"code-reviews/recipes/bash/#revisao-de-codigo-em-bash","text":"","title":"Revis\u00e3o de C\u00f3digo em Bash"},{"location":"code-reviews/recipes/bash/#guia-de-estilo","text":"Os desenvolvedores devem seguir o Guia de Estilo Bash do Google .","title":"Guia de Estilo"},{"location":"code-reviews/recipes/bash/#analise-de-codigo-linting","text":"Projetos devem verificar o c\u00f3digo Bash com o shellcheck como parte do processo de CI . Al\u00e9m do linting, shfmt pode ser usado para formatar automaticamente scripts shell. Existem algumas extens\u00f5es de c\u00f3digo do vscode baseadas no shfmt, como shell-format, que podem ser usadas para formatar automaticamente scripts shell.","title":"An\u00e1lise de C\u00f3digo / Linting"},{"location":"code-reviews/recipes/bash/#configuracao-do-projeto","text":"","title":"Configura\u00e7\u00e3o do Projeto"},{"location":"code-reviews/recipes/bash/#vscode-shellcheck","text":"A extens\u00e3o Shellcheck deve ser usada no VS Code, ela fornece capacidades de an\u00e1lise de c\u00f3digo est\u00e1tico e corre\u00e7\u00e3o autom\u00e1tica de problemas de linting. Para usar o vscode-shellcheck no VS Code, fa\u00e7a o seguinte:","title":"vscode-shellcheck"},{"location":"code-reviews/recipes/bash/#instale-o-shellcheck-em-sua-maquina","text":"Para macOS brew install shellcheck Para Ubuntu: apt-get install shellcheck","title":"Instale o shellcheck em sua m\u00e1quina"},{"location":"code-reviews/recipes/bash/#instale-o-shellcheck-no-vscode","text":"Encontre a extens\u00e3o vscode-shellcheck no vscode e instale-a.","title":"Instale o shellcheck no vscode"},{"location":"code-reviews/recipes/bash/#formatacao-automatica-de-codigo","text":"","title":"Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo"},{"location":"code-reviews/recipes/bash/#shell-format","text":"A extens\u00e3o shell-format faz a formata\u00e7\u00e3o autom\u00e1tica de seus scripts bash, arquivos Docker e v\u00e1rios arquivos de configura\u00e7\u00e3o. Ela depende do shfmt, que pode aplicar verifica\u00e7\u00f5es do guia de estilo do Google para bash. Para usar o shell-format no vscode, siga os passos abaixo:","title":"shell-format"},{"location":"code-reviews/recipes/bash/#instale-o-shfmt-requer-go-113-ou-posterior-em-sua-maquina","text":"GO111MODULE = on go get mvdan.cc/sh/v3/cmd/shfmt","title":"Instale o shfmt (requer Go 1.13 ou posterior) em sua m\u00e1quina"},{"location":"code-reviews/recipes/bash/#instale-o-shell-format-no-vscode","text":"Encontre a extens\u00e3o shell-format no vscode e instale-a.","title":"Instale o shell-format no vscode"},{"location":"code-reviews/recipes/bash/#validacao-de-build","text":"Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o seguinte trecho ao seu arquivo azure-pipelines.yaml . Isso far\u00e1 a verifica\u00e7\u00e3o de linting em qualquer script na pasta ./scripts/ . - bash : | echo \"Isso verifica a formata\u00e7\u00e3o e erros comuns do Bash. Consulte o wiki para detalhes sobre erros e op\u00e7\u00f5es de ignorar: https://github.com/koalaman/shellcheck/wiki/SC1000\" export scversion=\"stable\" wget -qO- \"https://github.com/koalaman/shellcheck/releases/download/${scversion?}/shellcheck-${scversion?}.linux.x86_64.tar.xz\" | tar -xJv sudo mv \"shellcheck-${scversion}/shellcheck\" /usr/bin/ rm -r \"shellcheck-${scversion}\" shellcheck ./scripts/*.sh displayName : \"Validar Scripts: Shellcheck\" Al\u00e9m disso, seus scripts shell podem ser formatados em sua pipeline de build usando a ferramenta shfmt . Para integrar o shfmt em sua pipeline de build, fa\u00e7a o seguinte: - bash : | echo \"Esta etapa faz a formata\u00e7\u00e3o autom\u00e1tica de scripts shell\" shfmt -l -w ./scripts/*.sh displayName : \"Formatar Scripts: shfmt\" A realiza\u00e7\u00e3o de testes unit\u00e1rios usando shunit2 tamb\u00e9m pode ser adicionada \u00e0 pipeline de build, usando o seguinte bloco: - bash : | echo \"Esta etapa realiza testes unit\u00e1rios em scripts shell usando shunit2\" ./shunit2 displayName : \"Formatar Scripts: shfmt\"","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/bash/#hooks-pre-commit","text":"Todos os desenvolvedores devem executar o shellcheck e o shfmt como hooks pr\u00e9-commit.","title":"Hooks Pr\u00e9-Commit"},{"location":"code-reviews/recipes/bash/#etapa-1-instalar-o-pre-commit","text":"Execute pip install pre-commit para instalar o pre-commit. Alternativamente, voc\u00ea pode executar brew install pre-commit se estiver usando o Homebrew.","title":"Etapa 1 - Instalar o pre-commit"},{"location":"code-reviews/recipes/bash/#etapa-2-adicione-o-shellcheck-e-o-shfmt","text":"Adicione o arquivo .pre-commit-config.yaml \u00e0 raiz do projeto em Go. Execute o shfmt no pr\u00e9-commit adicionando-o ao arquivo .pre-commit-config.yaml como abaixo. - repo : git://github.com/pecigonzalo/pre-commit-fmt sha : master hooks : - id : shell-fmt args : - --indent=4 - repo : https://github.com/shellcheck-py/shellcheck-py rev : v0.7.1.1 hooks : - id : shellcheck","title":"Etapa 2 - Adicione o shellcheck e o shfmt"},{"location":"code-reviews/recipes/bash/#etapa-3","text":"Execute $ pre-commit install para configurar os scripts de hook do git.","title":"Etapa 3"},{"location":"code-reviews/recipes/bash/#dependencias","text":"Scripts Bash s\u00e3o frequentemente usados para 'ligar' outros sistemas e ferramentas. Portanto, os scripts Bash podem ter muitas e/ou complicadas depend\u00eancias. Considere usar cont\u00eaineres Docker para garantir que os scripts sejam executados em um ambiente port\u00e1til e reproduz\u00edvel que contenha todas as depend\u00eancias corretas. Para garantir que os scripts com Docker sejam f\u00e1ceis de executar, considere tornar o uso do Docker transparente para quem chama o script, envolvendo o script em um 'bootstrap' que verifica se o script est\u00e1 sendo executado no Docker e o reexecuta em Docker se n\u00e3o for o caso. Isso proporciona o melhor dos dois mundos: execu\u00e7\u00e3o f\u00e1cil de script e ambientes consistentes. if [[ \" ${ DOCKER } \" ! = \"true\" ]] ; then docker build -t my_script -f my_script.Dockerfile . > /dev/null docker run -e DOCKER = true my_script \" $@ \" exit $? fi # ... implementa\u00e7\u00e3o do my_script aqui pode assumir que todas as suas depend\u00eancias existem, pois ele sempre est\u00e1 sendo executado no Docker ...","title":"Depend\u00eancias"},{"location":"code-reviews/recipes/bash/#checklist-de-revisao-de-codigo","text":"Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve verificar esses itens espec\u00edficos de revis\u00e3o de c\u00f3digo em Bash Esse c\u00f3digo usa Op\u00e7\u00f5es Internas do Shell como set -o, set -e, set -u para controle de execu\u00e7\u00e3o de scripts shell? O c\u00f3digo est\u00e1 modularizado? Scripts shell podem ser modularizados como m\u00f3dulos Python. Partes de scripts Bash devem ser importadas em projetos Bash complexos. Todas as exce\u00e7\u00f5es s\u00e3o tratadas corretamente? Exce\u00e7\u00f5es devem ser tratadas corretamente usando c\u00f3digos de sa\u00edda ou capturando sinais. O c\u00f3digo passa em todas as verifica\u00e7\u00f5es de linting conforme shellcheck e em todos os testes unit\u00e1rios conforme shunit2? O c\u00f3digo usa caminhos relativos ou caminhos absolutos? Caminhos relativos devem ser evitados, pois s\u00e3o vulner\u00e1veis a ataques de ambiente. Se for necess\u00e1rio um caminho relativo, verifique se a vari\u00e1vel PATH est\u00e1 definida. O c\u00f3digo aceita credenciais como entrada do usu\u00e1rio? As credenciais est\u00e3o ocultas ou criptografadas no script?","title":"Checklist de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/csharp/","text":"Revis\u00f5es de C\u00f3digo em C Guia de Estilo Os desenvolvedores devem seguir as Conven\u00e7\u00f5es de Codifica\u00e7\u00e3o C# da Microsoft e, quando aplic\u00e1vel, as Diretrizes de Codifica\u00e7\u00e3o Segura da Microsoft . An\u00e1lise de C\u00f3digo / Linting Acreditamos firmemente que um estilo consistente aumenta a legibilidade e a manutenibilidade de uma base de c\u00f3digo. Portanto, estamos recomendando o uso de analisadores / linters para impor regras de consist\u00eancia e estilo. Configura\u00e7\u00e3o do Projeto Recomendamos o uso de uma configura\u00e7\u00e3o comum para sua solu\u00e7\u00e3o que voc\u00ea pode referenciar em todos os projetos que fazem parte da solu\u00e7\u00e3o. Crie um arquivo common.props que contenha as configura\u00e7\u00f5es padr\u00e3o para todos os seus projetos: <Project> ... <ItemGroup> <PackageReference Include= \"Microsoft.CodeAnalysis.NetAnalyzers\" Version= \"5.0.3\" > <PrivateAssets> all </PrivateAssets> <IncludeAssets> runtime; build; native; contentfiles; analyzers; buildtransitive </IncludeAssets> </PackageReference> <PackageReference Include= \"StyleCop.Analyzers\" Version= \"1.1.118\" > <PrivateAssets> all </PrivateAssets> <IncludeAssets> runtime; build; native; contentfiles; analyzers; buildtransitive </IncludeAssets> </PackageReference> </ItemGroup> <PropertyGroup> <TreatWarningsAsErrors> true </TreatWarningsAsErrors> </PropertyGroup> <ItemGroup Condition= \"Exists('$(MSBuildThisFileDirectory)../.editorconfig')\" > <AdditionalFiles Include= \"$(MSBuildThisFileDirectory)../.editorconfig\" /> </ItemGroup> ... </Project> Voc\u00ea pode ent\u00e3o fazer refer\u00eancia ao common.props em seus outros arquivos de projeto para garantir uma configura\u00e7\u00e3o consistente. <Project Sdk= \"Microsoft.NET.Sdk.Web\" > <Import Project= \"..\\common.props\" /> </Project> O arquivo .editorconfig permite a configura\u00e7\u00e3o e substitui\u00e7\u00e3o de regras. Voc\u00ea pode ter um arquivo .editorconfig no n\u00edvel do projeto para personalizar regras para diferentes projetos (por exemplo, projetos de teste). Detalhes sobre a configura\u00e7\u00e3o de diferentes regras . Analisadores .NET Os analisadores .NET da Microsoft possuem regras de qualidade de c\u00f3digo e regras de uso de APIs .NET implementadas como analisadores usando a plataforma .NET Compiler (Roslyn). Isso \u00e9 a substitui\u00e7\u00e3o para os analisadores legados do FxCop da Microsoft. Habilite ou instale os analisadores .NET de primeira parte . Se voc\u00ea estiver usando os analisadores legados do FxCop atualmente, migre dos analisadores FxCop para os analisadores .NET . Analisador StyleCop O analisador StyleCop \u00e9 um pacote NuGet (StyleCop.Analyzers) que pode ser instalado em qualquer um de seus projetos. Ele se concentra principalmente em regras de estilo de c\u00f3digo e garante que a equipe esteja seguindo as mesmas regras sem a necessidade de discuss\u00f5es subjetivas sobre chaves e espa\u00e7os. Informa\u00e7\u00f5es detalhadas podem ser encontradas aqui: Analisadores StyleCop para a Plataforma de Compilador .NET . O conjunto m\u00ednimo de regras que as equipes devem adotar \u00e9 o conjunto de regras Managed Recommended Rules . Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo Use o .editorconfig para configurar regras de formata\u00e7\u00e3o de c\u00f3digo em seu projeto. Valida\u00e7\u00e3o de Build \u00c9 importante que voc\u00ea apl ique seu estilo de c\u00f3digo e regras na integra\u00e7\u00e3o cont\u00ednua (CI) para evitar que qualquer membro da equipe fa\u00e7a merge de c\u00f3digo que n\u00e3o esteja em conformidade com seus padr\u00f5es em seu reposit\u00f3rio Git. Se voc\u00ea estiver usando analisadores do FxCop e o analisador StyleCop, \u00e9 muito simples habilit\u00e1-los na CI. Voc\u00ea deve garantir que esteja configurando o projeto usando o NuGet e o .editorconfig ( veja a Configura\u00e7\u00e3o do Projeto ). Uma vez que voc\u00ea tenha essa configura\u00e7\u00e3o, voc\u00ea precisar\u00e1 configurar o pipeline para construir seu c\u00f3digo. Isso \u00e9 basicamente tudo. Os analisadores do FxCop ser\u00e3o executados e reportar\u00e3o o resultado em seu pipeline de build. Se houver regras que estejam sendo violadas, sua build ficar\u00e1 vermelha. - task : DotNetCoreCLI@2 displayName : 'Verifica\u00e7\u00e3o de Estilo & Build' inputs : command : 'build' projects : '**/*.csproj' Habilitar Suporte ao Roslyn no Visual Studio Code As etapas acima tamb\u00e9m funcionam no Visual Studio Code, desde que voc\u00ea habilite o suporte ao Roslyn para o Omnisharp. A configura\u00e7\u00e3o \u00e9 omnisharp.enableRoslynAnalyzers e deve ser definida como true . Ap\u00f3s habilitar essa configura\u00e7\u00e3o, voc\u00ea deve \"Reiniciar o Omnisharp\" (isso pode ser feito a partir da Paleta de Comandos no Visual Studio Code ou reiniciando o Visual Studio Code). Checklist de Revis\u00e3o de C\u00f3digo Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos de revis\u00e3o de c\u00f3digo em C#: Este c\u00f3digo faz uso correto de constru\u00e7\u00f5es de programa\u00e7\u00e3o ass\u00edncrona , incluindo o uso adequado de await e Task.WhenAll incluindo CancellationTokens? O c\u00f3digo est\u00e1 sujeito a problemas de concorr\u00eancia? Os objetos compartilhados est\u00e3o devidamente protegidos? A inje\u00e7\u00e3o de depend\u00eancia (DI) \u00e9 usada? Est\u00e1 configurada corretamente? Os middleware inclu\u00eddos neste projeto est\u00e3o configurados corretamente? Os recursos s\u00e3o liberados de forma determin\u00edstica usando o padr\u00e3o IDispose? Todos os objetos descart\u00e1veis s\u00e3o devidamente liberados ( usando o padr\u00e3o )? O c\u00f3digo est\u00e1 criando muitos objetos de curta dura\u00e7\u00e3o. Poder\u00edamos otimizar a press\u00e3o no coletor de lixo? O c\u00f3digo est\u00e1 escrito de uma forma que causa opera\u00e7\u00f5es de boxing? O c\u00f3digo manipula exce\u00e7\u00f5es corretamente ? O gerenciamento de pacotes est\u00e1 sendo usado (NuGet) em vez de DLLs sendo commitadas? Este c\u00f3digo faz uso apropriado do LINQ? Trazer o LINQ para um projeto para substituir um \u00fanico loop curto ou de maneiras que n\u00e3o tenham bom desempenho geralmente n\u00e3o \u00e9 apropriado. Este c\u00f3digo valida corretamente a sanidade dos argumentos (ou seja, CA1062 )? Considere o uso de extens\u00f5es como Ensure.That Este c\u00f3digo inclui instrumenta\u00e7\u00e3o de telemetria ( m\u00e9tricas, rastreamento e registro )? Este c\u00f3digo aproveita o padr\u00e3o de design de op\u00e7\u00f5es usando classes para fornecer acesso fortemente tipado a grupos de configura\u00e7\u00f5es relacionadas? Em vez de usar strings literais, s\u00e3o usadas constantes na classe principal? Ou se essas strings s\u00e3o usadas em v\u00e1rios arquivos/classes, existe uma classe est\u00e1tica para as constantes? Os n\u00fameros m\u00e1gicos s\u00e3o explicados? N\u00e3o deve haver n\u00fameros no c\u00f3digo sem pelo menos um coment\u00e1rio explicando por que est\u00e3o l\u00e1. Se o n\u00famero for repetitivo, existe uma constante/enumerador ou equivalente? A manipula\u00e7\u00e3o de exce\u00e7\u00f5es adequada est\u00e1 configurada? Capturar a classe base de exce\u00e7\u00e3o ( catch (Exception) ) geralmente n\u00e3o \u00e9 o padr\u00e3o correto. Em vez disso, capture as exce\u00e7\u00f5es espec\u00edficas que podem acontecer, por exemplo, IOException . O uso de #pragma \u00e9 justo? Os testes est\u00e3o organizados corretamente com o padr\u00e3o Arrange/Act/Assert e devidamente documentados dessa forma? Se houver um m\u00e9todo ass\u00edncrono, o nome do m\u00e9todo termina com o sufixo Async ? Se um m\u00e9todo for ass\u00edncrono, \u00e9 usado Task.Delay em vez de Thread.Sleep ? O Task.Delay n\u00e3o bloqueia a thread atual e cria uma tarefa que ser\u00e1 conclu\u00edda sem bloquear a thread, portanto, em um ambiente com v\u00e1rias threads e tarefas, esta \u00e9 a prefer\u00edvel. \u00c9 necess\u00e1rio um token de cancelamento para tarefas ass\u00edncronas em vez de padr\u00f5es booleanos? Existe um n\u00edvel m\u00ednimo de registro? Os n\u00edveis de registro usados s\u00e3o sensatos? As classes internas versus privadas versus p\u00fablicas e os m\u00e9todos s\u00e3o usados da maneira certa? As propriedades autom\u00e1ticas get e set s\u00e3o usadas da maneira certa? Em um modelo sem construtor e para desserializa\u00e7\u00e3o, \u00e9 aceit\u00e1vel ter todas as propriedades acess\u00edveis. Para outras classes, geralmente \u00e9 melhor usar set privado ou set interno. O padr\u00e3o using para fluxos e outras classes descart\u00e1veis \u00e9 usado? Se n\u00e3o for, \u00e9 melhor chamar explicitamente o m\u00e9todo Dispose . As classes que mant\u00eam cole\u00e7\u00f5es na mem\u00f3ria s\u00e3o seguras para multithreading? Quando usadas em concorr\u00eancia, use o padr\u00e3o de bloqueio.","title":"Revis\u00f5es de C\u00f3digo em C#"},{"location":"code-reviews/recipes/csharp/#revisoes-de-codigo-em-c","text":"","title":"Revis\u00f5es de C\u00f3digo em C"},{"location":"code-reviews/recipes/csharp/#guia-de-estilo","text":"Os desenvolvedores devem seguir as Conven\u00e7\u00f5es de Codifica\u00e7\u00e3o C# da Microsoft e, quando aplic\u00e1vel, as Diretrizes de Codifica\u00e7\u00e3o Segura da Microsoft .","title":"Guia de Estilo"},{"location":"code-reviews/recipes/csharp/#analise-de-codigo-linting","text":"Acreditamos firmemente que um estilo consistente aumenta a legibilidade e a manutenibilidade de uma base de c\u00f3digo. Portanto, estamos recomendando o uso de analisadores / linters para impor regras de consist\u00eancia e estilo.","title":"An\u00e1lise de C\u00f3digo / Linting"},{"location":"code-reviews/recipes/csharp/#configuracao-do-projeto","text":"Recomendamos o uso de uma configura\u00e7\u00e3o comum para sua solu\u00e7\u00e3o que voc\u00ea pode referenciar em todos os projetos que fazem parte da solu\u00e7\u00e3o. Crie um arquivo common.props que contenha as configura\u00e7\u00f5es padr\u00e3o para todos os seus projetos: <Project> ... <ItemGroup> <PackageReference Include= \"Microsoft.CodeAnalysis.NetAnalyzers\" Version= \"5.0.3\" > <PrivateAssets> all </PrivateAssets> <IncludeAssets> runtime; build; native; contentfiles; analyzers; buildtransitive </IncludeAssets> </PackageReference> <PackageReference Include= \"StyleCop.Analyzers\" Version= \"1.1.118\" > <PrivateAssets> all </PrivateAssets> <IncludeAssets> runtime; build; native; contentfiles; analyzers; buildtransitive </IncludeAssets> </PackageReference> </ItemGroup> <PropertyGroup> <TreatWarningsAsErrors> true </TreatWarningsAsErrors> </PropertyGroup> <ItemGroup Condition= \"Exists('$(MSBuildThisFileDirectory)../.editorconfig')\" > <AdditionalFiles Include= \"$(MSBuildThisFileDirectory)../.editorconfig\" /> </ItemGroup> ... </Project> Voc\u00ea pode ent\u00e3o fazer refer\u00eancia ao common.props em seus outros arquivos de projeto para garantir uma configura\u00e7\u00e3o consistente. <Project Sdk= \"Microsoft.NET.Sdk.Web\" > <Import Project= \"..\\common.props\" /> </Project> O arquivo .editorconfig permite a configura\u00e7\u00e3o e substitui\u00e7\u00e3o de regras. Voc\u00ea pode ter um arquivo .editorconfig no n\u00edvel do projeto para personalizar regras para diferentes projetos (por exemplo, projetos de teste). Detalhes sobre a configura\u00e7\u00e3o de diferentes regras .","title":"Configura\u00e7\u00e3o do Projeto"},{"location":"code-reviews/recipes/csharp/#analisadores-net","text":"Os analisadores .NET da Microsoft possuem regras de qualidade de c\u00f3digo e regras de uso de APIs .NET implementadas como analisadores usando a plataforma .NET Compiler (Roslyn). Isso \u00e9 a substitui\u00e7\u00e3o para os analisadores legados do FxCop da Microsoft. Habilite ou instale os analisadores .NET de primeira parte . Se voc\u00ea estiver usando os analisadores legados do FxCop atualmente, migre dos analisadores FxCop para os analisadores .NET .","title":"Analisadores .NET"},{"location":"code-reviews/recipes/csharp/#analisador-stylecop","text":"O analisador StyleCop \u00e9 um pacote NuGet (StyleCop.Analyzers) que pode ser instalado em qualquer um de seus projetos. Ele se concentra principalmente em regras de estilo de c\u00f3digo e garante que a equipe esteja seguindo as mesmas regras sem a necessidade de discuss\u00f5es subjetivas sobre chaves e espa\u00e7os. Informa\u00e7\u00f5es detalhadas podem ser encontradas aqui: Analisadores StyleCop para a Plataforma de Compilador .NET . O conjunto m\u00ednimo de regras que as equipes devem adotar \u00e9 o conjunto de regras Managed Recommended Rules .","title":"Analisador StyleCop"},{"location":"code-reviews/recipes/csharp/#formatacao-automatica-de-codigo","text":"Use o .editorconfig para configurar regras de formata\u00e7\u00e3o de c\u00f3digo em seu projeto.","title":"Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo"},{"location":"code-reviews/recipes/csharp/#validacao-de-build","text":"\u00c9 importante que voc\u00ea apl ique seu estilo de c\u00f3digo e regras na integra\u00e7\u00e3o cont\u00ednua (CI) para evitar que qualquer membro da equipe fa\u00e7a merge de c\u00f3digo que n\u00e3o esteja em conformidade com seus padr\u00f5es em seu reposit\u00f3rio Git. Se voc\u00ea estiver usando analisadores do FxCop e o analisador StyleCop, \u00e9 muito simples habilit\u00e1-los na CI. Voc\u00ea deve garantir que esteja configurando o projeto usando o NuGet e o .editorconfig ( veja a Configura\u00e7\u00e3o do Projeto ). Uma vez que voc\u00ea tenha essa configura\u00e7\u00e3o, voc\u00ea precisar\u00e1 configurar o pipeline para construir seu c\u00f3digo. Isso \u00e9 basicamente tudo. Os analisadores do FxCop ser\u00e3o executados e reportar\u00e3o o resultado em seu pipeline de build. Se houver regras que estejam sendo violadas, sua build ficar\u00e1 vermelha. - task : DotNetCoreCLI@2 displayName : 'Verifica\u00e7\u00e3o de Estilo & Build' inputs : command : 'build' projects : '**/*.csproj'","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/csharp/#habilitar-suporte-ao-roslyn-no-visual-studio-code","text":"As etapas acima tamb\u00e9m funcionam no Visual Studio Code, desde que voc\u00ea habilite o suporte ao Roslyn para o Omnisharp. A configura\u00e7\u00e3o \u00e9 omnisharp.enableRoslynAnalyzers e deve ser definida como true . Ap\u00f3s habilitar essa configura\u00e7\u00e3o, voc\u00ea deve \"Reiniciar o Omnisharp\" (isso pode ser feito a partir da Paleta de Comandos no Visual Studio Code ou reiniciando o Visual Studio Code).","title":"Habilitar Suporte ao Roslyn no Visual Studio Code"},{"location":"code-reviews/recipes/csharp/#checklist-de-revisao-de-codigo","text":"Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos de revis\u00e3o de c\u00f3digo em C#: Este c\u00f3digo faz uso correto de constru\u00e7\u00f5es de programa\u00e7\u00e3o ass\u00edncrona , incluindo o uso adequado de await e Task.WhenAll incluindo CancellationTokens? O c\u00f3digo est\u00e1 sujeito a problemas de concorr\u00eancia? Os objetos compartilhados est\u00e3o devidamente protegidos? A inje\u00e7\u00e3o de depend\u00eancia (DI) \u00e9 usada? Est\u00e1 configurada corretamente? Os middleware inclu\u00eddos neste projeto est\u00e3o configurados corretamente? Os recursos s\u00e3o liberados de forma determin\u00edstica usando o padr\u00e3o IDispose? Todos os objetos descart\u00e1veis s\u00e3o devidamente liberados ( usando o padr\u00e3o )? O c\u00f3digo est\u00e1 criando muitos objetos de curta dura\u00e7\u00e3o. Poder\u00edamos otimizar a press\u00e3o no coletor de lixo? O c\u00f3digo est\u00e1 escrito de uma forma que causa opera\u00e7\u00f5es de boxing? O c\u00f3digo manipula exce\u00e7\u00f5es corretamente ? O gerenciamento de pacotes est\u00e1 sendo usado (NuGet) em vez de DLLs sendo commitadas? Este c\u00f3digo faz uso apropriado do LINQ? Trazer o LINQ para um projeto para substituir um \u00fanico loop curto ou de maneiras que n\u00e3o tenham bom desempenho geralmente n\u00e3o \u00e9 apropriado. Este c\u00f3digo valida corretamente a sanidade dos argumentos (ou seja, CA1062 )? Considere o uso de extens\u00f5es como Ensure.That Este c\u00f3digo inclui instrumenta\u00e7\u00e3o de telemetria ( m\u00e9tricas, rastreamento e registro )? Este c\u00f3digo aproveita o padr\u00e3o de design de op\u00e7\u00f5es usando classes para fornecer acesso fortemente tipado a grupos de configura\u00e7\u00f5es relacionadas? Em vez de usar strings literais, s\u00e3o usadas constantes na classe principal? Ou se essas strings s\u00e3o usadas em v\u00e1rios arquivos/classes, existe uma classe est\u00e1tica para as constantes? Os n\u00fameros m\u00e1gicos s\u00e3o explicados? N\u00e3o deve haver n\u00fameros no c\u00f3digo sem pelo menos um coment\u00e1rio explicando por que est\u00e3o l\u00e1. Se o n\u00famero for repetitivo, existe uma constante/enumerador ou equivalente? A manipula\u00e7\u00e3o de exce\u00e7\u00f5es adequada est\u00e1 configurada? Capturar a classe base de exce\u00e7\u00e3o ( catch (Exception) ) geralmente n\u00e3o \u00e9 o padr\u00e3o correto. Em vez disso, capture as exce\u00e7\u00f5es espec\u00edficas que podem acontecer, por exemplo, IOException . O uso de #pragma \u00e9 justo? Os testes est\u00e3o organizados corretamente com o padr\u00e3o Arrange/Act/Assert e devidamente documentados dessa forma? Se houver um m\u00e9todo ass\u00edncrono, o nome do m\u00e9todo termina com o sufixo Async ? Se um m\u00e9todo for ass\u00edncrono, \u00e9 usado Task.Delay em vez de Thread.Sleep ? O Task.Delay n\u00e3o bloqueia a thread atual e cria uma tarefa que ser\u00e1 conclu\u00edda sem bloquear a thread, portanto, em um ambiente com v\u00e1rias threads e tarefas, esta \u00e9 a prefer\u00edvel. \u00c9 necess\u00e1rio um token de cancelamento para tarefas ass\u00edncronas em vez de padr\u00f5es booleanos? Existe um n\u00edvel m\u00ednimo de registro? Os n\u00edveis de registro usados s\u00e3o sensatos? As classes internas versus privadas versus p\u00fablicas e os m\u00e9todos s\u00e3o usados da maneira certa? As propriedades autom\u00e1ticas get e set s\u00e3o usadas da maneira certa? Em um modelo sem construtor e para desserializa\u00e7\u00e3o, \u00e9 aceit\u00e1vel ter todas as propriedades acess\u00edveis. Para outras classes, geralmente \u00e9 melhor usar set privado ou set interno. O padr\u00e3o using para fluxos e outras classes descart\u00e1veis \u00e9 usado? Se n\u00e3o for, \u00e9 melhor chamar explicitamente o m\u00e9todo Dispose . As classes que mant\u00eam cole\u00e7\u00f5es na mem\u00f3ria s\u00e3o seguras para multithreading? Quando usadas em concorr\u00eancia, use o padr\u00e3o de bloqueio.","title":"Checklist de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/go/","text":"Revis\u00f5es de C\u00f3digo em Go Guia de Estilo Os desenvolvedores devem seguir o Guia de Estilo Effective Go . An\u00e1lise de C\u00f3digo / Verifica\u00e7\u00e3o de Estilo Configura\u00e7\u00e3o do Projeto Abaixo est\u00e1 a configura\u00e7\u00e3o do projeto que voc\u00ea gostaria de ter em seu Visual Studio Code. Extens\u00e3o vscode-go Usando a extens\u00e3o Go para o Visual Studio Code, voc\u00ea obt\u00e9m recursos de linguagem como IntelliSense, navega\u00e7\u00e3o de c\u00f3digo, pesquisa de s\u00edmbolos, correspond\u00eancia de colchetes, snippets, etc. Esta extens\u00e3o inclui suporte de linguagem avan\u00e7ado para Go no VS Code. go vet go vet \u00e9 uma ferramenta de an\u00e1lise est\u00e1tica que verifica erros comuns em Go, como uso incorreto de vari\u00e1veis de loop range ou argumentos printf desalinhados. O c\u00f3digo Go deve ser capaz de ser compilado sem erros do go vet . Isso far\u00e1 parte da extens\u00e3o vscode-go. golint :exclamation: AVISO: A biblioteca golint est\u00e1 descontinuada e arquivada. O linter revive (abaixo) pode ser uma substitui\u00e7\u00e3o adequada. golint pode ser uma ferramenta eficaz para encontrar muitos problemas, mas pode gerar falsos positivos. \u00c9 melhor usado por desenvolvedores ao trabalhar no c\u00f3digo, n\u00e3o como parte de um processo de build automatizado. Este \u00e9 o linter padr\u00e3o que est\u00e1 configurado como parte da extens\u00e3o vscode-go. revive Revive \u00e9 um linter para Go, que fornece um framework para o desenvolvimento de regras personalizadas e permite que voc\u00ea defina um conjunto r\u00edgido para melhorar seus processos de desenvolvimento e revis\u00e3o de c\u00f3digo. Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo gofmt gofmt \u00e9 o guia de estilo de formata\u00e7\u00e3o de c\u00f3digo automatizado para Go. Isso faz parte da extens\u00e3o vs-code e \u00e9 ativado por padr\u00e3o para rodar sempre que um arquivo \u00e9 salvo. Agregador golangci-lint golangci-lint \u00e9 a substitui\u00e7\u00e3o do agora descontinuado gometalinter . Ele \u00e9 de 2 a 7 vezes mais r\u00e1pido que gometalinter juntamente com uma s\u00e9rie de outros benef\u00edcios . golangci-lint \u00e9 um agregador poderoso e personaliz\u00e1vel de linters. Por padr\u00e3o, v\u00e1rios est\u00e3o habilitados, mas nem todos. Uma lista completa de linters e seus usos pode ser encontrada aqui . Ele permitir\u00e1 que voc\u00ea configure cada linter e escolha quais deseja habilitar em seu projeto. Uma caracter\u00edstica incr\u00edvel do golangci-lint \u00e9 que ele pode ser facilmente introduzido em um c\u00f3digo legado existente usando --new-from-rev COMMITID . Com essa configura\u00e7\u00e3o, apenas novos problemas s\u00e3o sinalizados, permitindo que uma equipe melhore o novo c\u00f3digo sem precisar corrigir todos os problemas hist\u00f3ricos em um c\u00f3digo legado grande. O golangci-lint tamb\u00e9m pode ser configurado como o linter padr\u00e3o no VS Code. Op\u00e7\u00f5es de instala\u00e7\u00e3o para golangci-lint est\u00e3o presentes em golangci-lint . Para usar golangci-lint com o VS Code, use as configura\u00e7\u00f5es recomendadas abaixo: \"go.lintTool\" : \"golangci-lint\" , \"go.lintFlags\" : [ \"--fast\" ] Hooks Pr\u00e9-Commit Todos os desenvolvedores devem executar gofmt em um hook pr\u00e9-commit para garantir a formata\u00e7\u00e3o padr\u00e3o. Passo 1 - Instalar pre-commit Execute pip install pre-commit para instalar o pre-commit. Alternativamente, voc\u00ea pode executar brew install pre-commit se estiver usando o Homebrew. Passo 2 - Adicionar go-fmt no pr\u00e9-commit Adicione o arquivo .pre-commit-config.yaml \u00e0 raiz do projeto Go. Execute go-fmt no pr\u00e9-commit adicionando-o ao arquivo .pre-commit-config.yaml como abaixo. - repo : git://github.com/dnephin/pre-commit-golang rev : master hooks : - id : go-fmt Passo 3 Execute $ pre-commit install para configurar os scripts de hook do Git. Valida\u00e7\u00e3o de Build gofmt deve ser executado como parte de cada build para impor o padr\u00e3o comum. Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o trecho a seguir ao seu arquivo azure-pipelines.yaml . Isso formatar\u00e1 os scripts na pasta ./scripts/ . - script : go fmt workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar formata\u00e7\u00e3o de c\u00f3digo\" govet deve ser executado como parte de cada build para verificar a verifica\u00e7\u00e3o de c\u00f3digo. Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o trecho a seguir ao seu arquivo azure-pipelines.yaml . Isso verificar\u00e1 a verifica\u00e7\u00e3o de linting de qualquer script na pasta ./scripts/ . - script : go vet workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar verifica\u00e7\u00e3o de c\u00f3digo\" Alternativamente, voc\u00ea pode usar o golangci-lint como uma etapa no pipeline para realizar v\u00e1rias valida\u00e7\u00f5es habilitadas (incluindo go vet e go fmt) do golangci-lint. - script : golangci-lint run --enable gofmt --fix workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar verifica\u00e7\u00e3o de c\u00f3digo\" Exemplo de Pipeline de Valida\u00e7\u00e3o de Build no Azure DevOps trigger : master pool : vmImage : 'ubuntu-latest' steps : - task : GoTool@0 inputs : version : '1.13.5' - task : Go@0 inputs : command : 'get' arguments : '-d' workingDirectory : '$(System.DefaultWorkingDirectory)/scripts' - script : go fmt workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar formata\u00e7\u00e3o de c\u00f3digo\" - script : go vet workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : 'Executar go vet' - task : Go@0 inputs : command : 'build' workingDirectory : '$(System.DefaultWorking Directory)' - task : CopyFiles@2 inputs : TargetFolder : '$(Build.ArtifactStagingDirectory)' - task : PublishBuildArtifacts@1 inputs : artifactName : drop Checklist de Revis\u00e3o de C\u00f3digo A equipe de linguagem Go mant\u00e9m uma lista de Coment\u00e1rios de Revis\u00e3o de C\u00f3digo Comuns para Go que formam a base para um s\u00f3lido checklist para uma equipe que trabalha em Go, que deve ser seguido al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo ISE Este c\u00f3digo trata erros corretamente? Isso inclui n\u00e3o descartar erros com atribui\u00e7\u00f5es _ e retornar erros, em vez de valores de erro no pr\u00f3prio canal ? Este c\u00f3digo segue os padr\u00f5es Go para tipos de receptor de m\u00e9todo receiver types ? Este c\u00f3digo passa valores quando necess\u00e1rio? As interfaces neste c\u00f3digo s\u00e3o definidas nos pacotes corretos ? As go-routines neste c\u00f3digo t\u00eam lifetimes claros ? O paralelismo neste c\u00f3digo \u00e9 tratado por meio de go-routines e canais com m\u00e9todos s\u00edncronos ? Este c\u00f3digo possui Coment\u00e1rios de Documenta\u00e7\u00e3o significativos? Este c\u00f3digo possui Coment\u00e1rios de Pacote significativos? Este c\u00f3digo usa Contextos corretamente? Os testes unit\u00e1rios falham com mensagens significativas ?","title":"Revis\u00f5es de C\u00f3digo em Go"},{"location":"code-reviews/recipes/go/#revisoes-de-codigo-em-go","text":"","title":"Revis\u00f5es de C\u00f3digo em Go"},{"location":"code-reviews/recipes/go/#guia-de-estilo","text":"Os desenvolvedores devem seguir o Guia de Estilo Effective Go .","title":"Guia de Estilo"},{"location":"code-reviews/recipes/go/#analise-de-codigo-verificacao-de-estilo","text":"","title":"An\u00e1lise de C\u00f3digo / Verifica\u00e7\u00e3o de Estilo"},{"location":"code-reviews/recipes/go/#configuracao-do-projeto","text":"Abaixo est\u00e1 a configura\u00e7\u00e3o do projeto que voc\u00ea gostaria de ter em seu Visual Studio Code.","title":"Configura\u00e7\u00e3o do Projeto"},{"location":"code-reviews/recipes/go/#extensao-vscode-go","text":"Usando a extens\u00e3o Go para o Visual Studio Code, voc\u00ea obt\u00e9m recursos de linguagem como IntelliSense, navega\u00e7\u00e3o de c\u00f3digo, pesquisa de s\u00edmbolos, correspond\u00eancia de colchetes, snippets, etc. Esta extens\u00e3o inclui suporte de linguagem avan\u00e7ado para Go no VS Code.","title":"Extens\u00e3o vscode-go"},{"location":"code-reviews/recipes/go/#go-vet","text":"go vet \u00e9 uma ferramenta de an\u00e1lise est\u00e1tica que verifica erros comuns em Go, como uso incorreto de vari\u00e1veis de loop range ou argumentos printf desalinhados. O c\u00f3digo Go deve ser capaz de ser compilado sem erros do go vet . Isso far\u00e1 parte da extens\u00e3o vscode-go.","title":"go vet"},{"location":"code-reviews/recipes/go/#golint","text":":exclamation: AVISO: A biblioteca golint est\u00e1 descontinuada e arquivada. O linter revive (abaixo) pode ser uma substitui\u00e7\u00e3o adequada. golint pode ser uma ferramenta eficaz para encontrar muitos problemas, mas pode gerar falsos positivos. \u00c9 melhor usado por desenvolvedores ao trabalhar no c\u00f3digo, n\u00e3o como parte de um processo de build automatizado. Este \u00e9 o linter padr\u00e3o que est\u00e1 configurado como parte da extens\u00e3o vscode-go.","title":"golint"},{"location":"code-reviews/recipes/go/#revive","text":"Revive \u00e9 um linter para Go, que fornece um framework para o desenvolvimento de regras personalizadas e permite que voc\u00ea defina um conjunto r\u00edgido para melhorar seus processos de desenvolvimento e revis\u00e3o de c\u00f3digo.","title":"revive"},{"location":"code-reviews/recipes/go/#formatacao-automatica-de-codigo","text":"","title":"Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo"},{"location":"code-reviews/recipes/go/#gofmt","text":"gofmt \u00e9 o guia de estilo de formata\u00e7\u00e3o de c\u00f3digo automatizado para Go. Isso faz parte da extens\u00e3o vs-code e \u00e9 ativado por padr\u00e3o para rodar sempre que um arquivo \u00e9 salvo.","title":"gofmt"},{"location":"code-reviews/recipes/go/#agregador","text":"","title":"Agregador"},{"location":"code-reviews/recipes/go/#golangci-lint","text":"golangci-lint \u00e9 a substitui\u00e7\u00e3o do agora descontinuado gometalinter . Ele \u00e9 de 2 a 7 vezes mais r\u00e1pido que gometalinter juntamente com uma s\u00e9rie de outros benef\u00edcios . golangci-lint \u00e9 um agregador poderoso e personaliz\u00e1vel de linters. Por padr\u00e3o, v\u00e1rios est\u00e3o habilitados, mas nem todos. Uma lista completa de linters e seus usos pode ser encontrada aqui . Ele permitir\u00e1 que voc\u00ea configure cada linter e escolha quais deseja habilitar em seu projeto. Uma caracter\u00edstica incr\u00edvel do golangci-lint \u00e9 que ele pode ser facilmente introduzido em um c\u00f3digo legado existente usando --new-from-rev COMMITID . Com essa configura\u00e7\u00e3o, apenas novos problemas s\u00e3o sinalizados, permitindo que uma equipe melhore o novo c\u00f3digo sem precisar corrigir todos os problemas hist\u00f3ricos em um c\u00f3digo legado grande. O golangci-lint tamb\u00e9m pode ser configurado como o linter padr\u00e3o no VS Code. Op\u00e7\u00f5es de instala\u00e7\u00e3o para golangci-lint est\u00e3o presentes em golangci-lint . Para usar golangci-lint com o VS Code, use as configura\u00e7\u00f5es recomendadas abaixo: \"go.lintTool\" : \"golangci-lint\" , \"go.lintFlags\" : [ \"--fast\" ]","title":"golangci-lint"},{"location":"code-reviews/recipes/go/#hooks-pre-commit","text":"Todos os desenvolvedores devem executar gofmt em um hook pr\u00e9-commit para garantir a formata\u00e7\u00e3o padr\u00e3o.","title":"Hooks Pr\u00e9-Commit"},{"location":"code-reviews/recipes/go/#passo-1-instalar-pre-commit","text":"Execute pip install pre-commit para instalar o pre-commit. Alternativamente, voc\u00ea pode executar brew install pre-commit se estiver usando o Homebrew.","title":"Passo 1 - Instalar pre-commit"},{"location":"code-reviews/recipes/go/#passo-2-adicionar-go-fmt-no-pre-commit","text":"Adicione o arquivo .pre-commit-config.yaml \u00e0 raiz do projeto Go. Execute go-fmt no pr\u00e9-commit adicionando-o ao arquivo .pre-commit-config.yaml como abaixo. - repo : git://github.com/dnephin/pre-commit-golang rev : master hooks : - id : go-fmt","title":"Passo 2 - Adicionar go-fmt no pr\u00e9-commit"},{"location":"code-reviews/recipes/go/#passo-3","text":"Execute $ pre-commit install para configurar os scripts de hook do Git.","title":"Passo 3"},{"location":"code-reviews/recipes/go/#validacao-de-build","text":"gofmt deve ser executado como parte de cada build para impor o padr\u00e3o comum. Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o trecho a seguir ao seu arquivo azure-pipelines.yaml . Isso formatar\u00e1 os scripts na pasta ./scripts/ . - script : go fmt workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar formata\u00e7\u00e3o de c\u00f3digo\" govet deve ser executado como parte de cada build para verificar a verifica\u00e7\u00e3o de c\u00f3digo. Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o trecho a seguir ao seu arquivo azure-pipelines.yaml . Isso verificar\u00e1 a verifica\u00e7\u00e3o de linting de qualquer script na pasta ./scripts/ . - script : go vet workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar verifica\u00e7\u00e3o de c\u00f3digo\" Alternativamente, voc\u00ea pode usar o golangci-lint como uma etapa no pipeline para realizar v\u00e1rias valida\u00e7\u00f5es habilitadas (incluindo go vet e go fmt) do golangci-lint. - script : golangci-lint run --enable gofmt --fix workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar verifica\u00e7\u00e3o de c\u00f3digo\"","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/go/#exemplo-de-pipeline-de-validacao-de-build-no-azure-devops","text":"trigger : master pool : vmImage : 'ubuntu-latest' steps : - task : GoTool@0 inputs : version : '1.13.5' - task : Go@0 inputs : command : 'get' arguments : '-d' workingDirectory : '$(System.DefaultWorkingDirectory)/scripts' - script : go fmt workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : \"Executar formata\u00e7\u00e3o de c\u00f3digo\" - script : go vet workingDirectory : $(System.DefaultWorkingDirectory)/scripts displayName : 'Executar go vet' - task : Go@0 inputs : command : 'build' workingDirectory : '$(System.DefaultWorking Directory)' - task : CopyFiles@2 inputs : TargetFolder : '$(Build.ArtifactStagingDirectory)' - task : PublishBuildArtifacts@1 inputs : artifactName : drop","title":"Exemplo de Pipeline de Valida\u00e7\u00e3o de Build no Azure DevOps"},{"location":"code-reviews/recipes/go/#checklist-de-revisao-de-codigo","text":"A equipe de linguagem Go mant\u00e9m uma lista de Coment\u00e1rios de Revis\u00e3o de C\u00f3digo Comuns para Go que formam a base para um s\u00f3lido checklist para uma equipe que trabalha em Go, que deve ser seguido al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo ISE Este c\u00f3digo trata erros corretamente? Isso inclui n\u00e3o descartar erros com atribui\u00e7\u00f5es _ e retornar erros, em vez de valores de erro no pr\u00f3prio canal ? Este c\u00f3digo segue os padr\u00f5es Go para tipos de receptor de m\u00e9todo receiver types ? Este c\u00f3digo passa valores quando necess\u00e1rio? As interfaces neste c\u00f3digo s\u00e3o definidas nos pacotes corretos ? As go-routines neste c\u00f3digo t\u00eam lifetimes claros ? O paralelismo neste c\u00f3digo \u00e9 tratado por meio de go-routines e canais com m\u00e9todos s\u00edncronos ? Este c\u00f3digo possui Coment\u00e1rios de Documenta\u00e7\u00e3o significativos? Este c\u00f3digo possui Coment\u00e1rios de Pacote significativos? Este c\u00f3digo usa Contextos corretamente? Os testes unit\u00e1rios falham com mensagens significativas ?","title":"Checklist de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/java/","text":"Revis\u00f5es de C\u00f3digo em Java Guia de Estilo Java Os desenvolvedores devem seguir o Guia de Estilo Java do Google . An\u00e1lise de C\u00f3digo / Verifica\u00e7\u00e3o de Estilo Acreditamos firmemente que um estilo consistente aumenta a legibilidade e a manuten\u00e7\u00e3o de uma base de c\u00f3digo. Portanto, recomendamos o uso de analisadores para impor regras de estilo e consist\u00eancia. Fazemos uso do Checkstyle usando a mesma configura\u00e7\u00e3o usada no Azure Java SDK . FindBugs e PMD tamb\u00e9m s\u00e3o comumente usados. Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo O Eclipse e outros IDEs Java oferecem suporte para formata\u00e7\u00e3o autom\u00e1tica de c\u00f3digo. Se estiver usando o Maven, alguns desenvolvedores tamb\u00e9m fazem uso do formatter-maven-plugin . Valida\u00e7\u00e3o de Build \u00c9 importante impor o estilo de c\u00f3digo e as regras na integra\u00e7\u00e3o cont\u00ednua (CI) para evitar que os membros da equipe fa\u00e7am merge de c\u00f3digo que n\u00e3o esteja em conformidade com os padr\u00f5es em seu reposit\u00f3rio Git. Se estiver construindo usando o Azure DevOps, o Azure DevOps oferece suporte para tarefas de build do Maven e Gradle usando ferramentas de an\u00e1lise de c\u00f3digo PMD , Checkstyle e FindBugs como parte de cada build. Aqui est\u00e1 um exemplo de YAML para uma tarefa de build Maven com todas as tr\u00eas ferramentas de an\u00e1lise habilitadas: - task : Maven@3 displayName : 'Maven pom.xml' inputs : mavenPomFile : '$(Parameters.mavenPOMFile)' checkStyleRunAnalysis : true pmdRunAnalysis : true findBugsRunAnalysis : true Aqui est\u00e1 um exemplo de YAML para uma tarefa de build Gradle com todas as tr\u00eas ferramentas de an\u00e1lise habilitadas: - task : Gradle@2 displayName : 'gradlew build' inputs : checkStyleRunAnalysis : true findBugsRunAnalysis : true pmdRunAnalysis : true Checklist de Revis\u00e3o de C\u00f3digo Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos de revis\u00e3o de c\u00f3digo em Java: O projeto utiliza Lambdas para tornar o c\u00f3digo mais limpo? A inje\u00e7\u00e3o de depend\u00eancia (DI) \u00e9 usada? Est\u00e1 configurada corretamente? Se o c\u00f3digo usa o Spring Boot, voc\u00ea est\u00e1 usando @Inject em vez de @Autowire? O c\u00f3digo lida com exce\u00e7\u00f5es corretamente? O Azul Zulu OpenJDK est\u00e1 sendo usado? Uma ferramenta de automa\u00e7\u00e3o de build e gerenciamento de pacotes (Gradle ou Maven) est\u00e1 sendo usada?","title":"Revis\u00f5es de C\u00f3digo em Java"},{"location":"code-reviews/recipes/java/#revisoes-de-codigo-em-java","text":"","title":"Revis\u00f5es de C\u00f3digo em Java"},{"location":"code-reviews/recipes/java/#guia-de-estilo-java","text":"Os desenvolvedores devem seguir o Guia de Estilo Java do Google .","title":"Guia de Estilo Java"},{"location":"code-reviews/recipes/java/#analise-de-codigo-verificacao-de-estilo","text":"Acreditamos firmemente que um estilo consistente aumenta a legibilidade e a manuten\u00e7\u00e3o de uma base de c\u00f3digo. Portanto, recomendamos o uso de analisadores para impor regras de estilo e consist\u00eancia. Fazemos uso do Checkstyle usando a mesma configura\u00e7\u00e3o usada no Azure Java SDK . FindBugs e PMD tamb\u00e9m s\u00e3o comumente usados.","title":"An\u00e1lise de C\u00f3digo / Verifica\u00e7\u00e3o de Estilo"},{"location":"code-reviews/recipes/java/#formatacao-automatica-de-codigo","text":"O Eclipse e outros IDEs Java oferecem suporte para formata\u00e7\u00e3o autom\u00e1tica de c\u00f3digo. Se estiver usando o Maven, alguns desenvolvedores tamb\u00e9m fazem uso do formatter-maven-plugin .","title":"Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo"},{"location":"code-reviews/recipes/java/#validacao-de-build","text":"\u00c9 importante impor o estilo de c\u00f3digo e as regras na integra\u00e7\u00e3o cont\u00ednua (CI) para evitar que os membros da equipe fa\u00e7am merge de c\u00f3digo que n\u00e3o esteja em conformidade com os padr\u00f5es em seu reposit\u00f3rio Git. Se estiver construindo usando o Azure DevOps, o Azure DevOps oferece suporte para tarefas de build do Maven e Gradle usando ferramentas de an\u00e1lise de c\u00f3digo PMD , Checkstyle e FindBugs como parte de cada build. Aqui est\u00e1 um exemplo de YAML para uma tarefa de build Maven com todas as tr\u00eas ferramentas de an\u00e1lise habilitadas: - task : Maven@3 displayName : 'Maven pom.xml' inputs : mavenPomFile : '$(Parameters.mavenPOMFile)' checkStyleRunAnalysis : true pmdRunAnalysis : true findBugsRunAnalysis : true Aqui est\u00e1 um exemplo de YAML para uma tarefa de build Gradle com todas as tr\u00eas ferramentas de an\u00e1lise habilitadas: - task : Gradle@2 displayName : 'gradlew build' inputs : checkStyleRunAnalysis : true findBugsRunAnalysis : true pmdRunAnalysis : true","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/java/#checklist-de-revisao-de-codigo","text":"Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos de revis\u00e3o de c\u00f3digo em Java: O projeto utiliza Lambdas para tornar o c\u00f3digo mais limpo? A inje\u00e7\u00e3o de depend\u00eancia (DI) \u00e9 usada? Est\u00e1 configurada corretamente? Se o c\u00f3digo usa o Spring Boot, voc\u00ea est\u00e1 usando @Inject em vez de @Autowire? O c\u00f3digo lida com exce\u00e7\u00f5es corretamente? O Azul Zulu OpenJDK est\u00e1 sendo usado? Uma ferramenta de automa\u00e7\u00e3o de build e gerenciamento de pacotes (Gradle ou Maven) est\u00e1 sendo usada?","title":"Checklist de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/javascript-and-typescript/","text":"Revis\u00f5es de C\u00f3digo em JavaScript/TypeScript Guia de Estilo Os desenvolvedores devem usar o Prettier para formata\u00e7\u00e3o de c\u00f3digo em JavaScript. O uso de uma ferramenta automatizada de formata\u00e7\u00e3o de c\u00f3digo, como o Prettier, imp\u00f5e um guia de estilo amplamente aceito que foi colaborativamente desenvolvido por uma ampla gama de empresas, incluindo Microsoft, Facebook e AirBnB. Para orienta\u00e7\u00e3o de estilo de n\u00edvel superior n\u00e3o abrangida pelo Prettier, seguimos o Guia de Estilo AirBnB . An\u00e1lise de C\u00f3digo / Verifica\u00e7\u00e3o de Estilo eslint De acordo com as orienta\u00e7\u00f5es delineadas no roadmap TSLint da Palantir de 2019 , o c\u00f3digo TypeScript deve ser lintado com o ESLint . Consulte a documenta\u00e7\u00e3o do typescript-eslint para obter mais informa\u00e7\u00f5es sobre a verifica\u00e7\u00e3o de c\u00f3digo TypeScript com o ESLint. Para instalar e configurar a verifica\u00e7\u00e3o de c\u00f3digo com o ESLint , instale os seguintes pacotes como depend\u00eancias de desenvolvimento: npm install -D eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin Adicione um arquivo .eslintrc.js \u00e0 raiz do seu projeto: module . exports = { root : true , parser : '@typescript-eslint/parser' , plugins : [ '@typescript-eslint' , ], extends : [ 'eslint:recommended' , 'plugin:@typescript-eslint/eslint-recommended' , 'plugin:@typescript-eslint/recommended' , ], }; Adicione o seguinte ao scripts do seu package.json : \"scripts\" : { \"lint\" : \"eslint . --ext .js,.jsx,.ts,.tsx --ignore-path .gitignore\" } Isso vai lintar todos os arquivos .js , .jsx , .ts , .tsx em seu projeto e omitir quaisquer arquivos ou diret\u00f3rios especificados no seu .gitignore . Voc\u00ea pode executar a verifica\u00e7\u00e3o de lintagem com: npm run lint Configura\u00e7\u00e3o do Prettier Prettier \u00e9 um formatador de c\u00f3digo com opini\u00f5es. Guia de in\u00edcio . Instale com npm como uma depend\u00eancia de desenvolvimento: npm install -D prettier eslint-config-prettier eslint-plugin-prettier Adicione prettier ao seu .eslintrc.js : module . exports = { root : true , parser : '@typescript-eslint/parser' , plugins : [ '@typescript-eslint' , ], extends : [ 'eslint:recommended' , 'plugin:@typescript-eslint/eslint-recommended' , 'plugin:@typescript-eslint/recommended' , 'prettier/@typescript-eslint' , 'plugin:prettier/recommended' , ], }; Isso aplicar\u00e1 o conjunto de regras prettier ao fazer a lintagem com o ESLint. Formata\u00e7\u00e3o Autom\u00e1tica com o VS Code O VS Code pode ser configurado para executar automaticamente eslint --fix ao salvar. Crie uma pasta .vscode na raiz do seu projeto e adicione o seguinte ao seu .vscode/settings.json : { \"editor.codeActionsOnSave\" : { \"source.fixAll.eslint\" : true }, } Por padr\u00e3o, usamos as seguintes substitui\u00e7\u00f5es que devem ser adicionadas \u00e0 configura\u00e7\u00e3o do VS Code para padronizar as aspas simples, uma indenta\u00e7\u00e3o de quatro espa\u00e7os e para realizar a verifica\u00e7\u00e3o de linting com ESLint: { \"prettier.singleQuote\" : true , \"prettier.eslintIntegration\" : true , \"prettier.tabWidth\" : 4 } Configura\u00e7\u00e3o de Testes Recomenda-se fortemente a configura\u00e7\u00e3o do Playwright em um projeto. \u00c9 uma su\u00edte de testes de c\u00f3digo aberto criada pela Microsoft. Para instal\u00e1-lo, use o seguinte comando: npm install playwright Como o Playwright mostra os testes no navegador, voc\u00ea deve escolher qual navegador deseja executar, a menos que esteja usando o Chrome, que \u00e9 o padr\u00e3o. Voc\u00ea pode fazer isso Valida\u00e7\u00e3o de Build Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o seguinte trecho ao seu arquivo de defini\u00e7\u00e3o de pipeline yaml. Isso realizar\u00e1 a lintagem de quaisquer scripts na pasta ./scripts/ . - task : Npm@1 displayName : 'Lint' inputs : command : 'custom' customCommand : 'run lint' workingDir : './scripts/' Hooks Pr\u00e9-Commit Todos os desenvolvedores devem executar o eslint em um hook pr\u00e9-commit para garantir a formata\u00e7\u00e3o padr\u00e3o. Recomendamos fortemente o uso de uma integra\u00e7\u00e3o com o editor, como o vscode-eslint , para fornecer feedback em tempo real. Em .git/hooks , renomeie pre-commit.sample para pre-commit Remova o c\u00f3digo de exemplo existente nesse arquivo Existem muitos exemplos de scripts para isso no gist, como pre-commit-eslint Modifique de acordo para incluir arquivos TypeScript (inclua a extens\u00e3o ts e certifique-se de que typescript-eslint esteja configurado) Torne o arquivo execut\u00e1vel: chmod +x .git/hooks/pre-commit Como alternativa, husky pode ser considerado para simplificar os hooks pr\u00e9-commit. Checklist de Revis\u00e3o de C\u00f3digo Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve verificar esses itens espec\u00edficos de revis\u00e3o de c\u00f3digo em JavaScript e TypeScript. Checklist de JavaScript / TypeScript O c\u00f3digo segue nossos padr\u00f5es de formata\u00e7\u00e3o e c\u00f3digo? Executar prettier e ESLint no c\u00f3digo n\u00e3o deve gerar avisos ou erros, respectivamente? A mudan\u00e7a re-implementa c\u00f3digo que seria melhor servido por um m\u00f3dulo bem conhecido do ecossistema? \u00c9 usado \"use strict\"; para reduzir erros com vari\u00e1veis n\u00e3o declaradas? S\u00e3o usados testes unit\u00e1rios sempre que poss\u00edvel, tamb\u00e9m para APIs? Os testes s\u00e3o organizados corretamente no padr\u00e3o Arrange/Act/Assert e devidamente documentados dessa forma? S\u00e3o seguidas as melhores pr\u00e1ticas para tratamento de erros, bem como as declara\u00e7\u00f5es try catch finally ? As chamadas ass\u00edncronas seguem corretamente o padr\u00e3o doWork().then(doSomething).then(checkSomething) , incluindo expect , done ? Em vez de usar strings brutas, s\u00e3o usadas constantes na classe principal? Ou, se essas strings s\u00e3o usadas em v\u00e1rios arquivos/classes, existe uma classe est\u00e1tica para as constantes? N\u00fameros m\u00e1gicos s\u00e3o explicados? N\u00e3o deve haver n\u00fameros no c\u00f3digo sem pelo menos um coment\u00e1rio explicando por que est\u00e3o l\u00e1. Se o n\u00famero for repetitivo, existe uma constante/enum ou equivalente? Se houver um m\u00e9todo ass\u00edncrono, o nome do m\u00e9todo termina com o sufixo Async ? Existe um n\u00edvel m\u00ednimo de registro de eventos? Os n\u00edveis de registro usados s\u00e3o sensatos? A manipula\u00e7\u00e3o do fragmento de documento \u00e9 limitada quando \u00e9 necess\u00e1rio manipular v\u00e1rios subelementos? O c\u00f3digo TypeScript \u00e9 compilado sem gerar erros de lintagem? Em vez de usar strings brutas, s\u00e3o usadas constantes na classe principal? Ou, se essas strings s\u00e3o usadas em v\u00e1rios arquivos/classes, existe uma classe est\u00e1tica para as constantes? N\u00fameros m\u00e1gicos s\u00e3o explicados? N\u00e3o deve haver n\u00fameros no c\u00f3digo sem pelo menos um coment\u00e1rio explicando por que est\u00e3o l\u00e1. Se o n\u00famero for repetitivo, existe uma constante/enum ou equivalente? Existem coment\u00e1rios apropriados /* */ nas v\u00e1rias classes e m\u00e9todos? Opera\u00e7\u00f5es pesadas s\u00e3o implementadas no backend, mantendo o controlador o mais leve poss\u00edvel? O tratamento de eventos no HTML \u00e9 eficiente?","title":"Revis\u00f5es de C\u00f3digo em JavaScript/TypeScript"},{"location":"code-reviews/recipes/javascript-and-typescript/#revisoes-de-codigo-em-javascripttypescript","text":"","title":"Revis\u00f5es de C\u00f3digo em JavaScript/TypeScript"},{"location":"code-reviews/recipes/javascript-and-typescript/#guia-de-estilo","text":"Os desenvolvedores devem usar o Prettier para formata\u00e7\u00e3o de c\u00f3digo em JavaScript. O uso de uma ferramenta automatizada de formata\u00e7\u00e3o de c\u00f3digo, como o Prettier, imp\u00f5e um guia de estilo amplamente aceito que foi colaborativamente desenvolvido por uma ampla gama de empresas, incluindo Microsoft, Facebook e AirBnB. Para orienta\u00e7\u00e3o de estilo de n\u00edvel superior n\u00e3o abrangida pelo Prettier, seguimos o Guia de Estilo AirBnB .","title":"Guia de Estilo"},{"location":"code-reviews/recipes/javascript-and-typescript/#analise-de-codigo-verificacao-de-estilo","text":"","title":"An\u00e1lise de C\u00f3digo / Verifica\u00e7\u00e3o de Estilo"},{"location":"code-reviews/recipes/javascript-and-typescript/#eslint","text":"De acordo com as orienta\u00e7\u00f5es delineadas no roadmap TSLint da Palantir de 2019 , o c\u00f3digo TypeScript deve ser lintado com o ESLint . Consulte a documenta\u00e7\u00e3o do typescript-eslint para obter mais informa\u00e7\u00f5es sobre a verifica\u00e7\u00e3o de c\u00f3digo TypeScript com o ESLint. Para instalar e configurar a verifica\u00e7\u00e3o de c\u00f3digo com o ESLint , instale os seguintes pacotes como depend\u00eancias de desenvolvimento: npm install -D eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin Adicione um arquivo .eslintrc.js \u00e0 raiz do seu projeto: module . exports = { root : true , parser : '@typescript-eslint/parser' , plugins : [ '@typescript-eslint' , ], extends : [ 'eslint:recommended' , 'plugin:@typescript-eslint/eslint-recommended' , 'plugin:@typescript-eslint/recommended' , ], }; Adicione o seguinte ao scripts do seu package.json : \"scripts\" : { \"lint\" : \"eslint . --ext .js,.jsx,.ts,.tsx --ignore-path .gitignore\" } Isso vai lintar todos os arquivos .js , .jsx , .ts , .tsx em seu projeto e omitir quaisquer arquivos ou diret\u00f3rios especificados no seu .gitignore . Voc\u00ea pode executar a verifica\u00e7\u00e3o de lintagem com: npm run lint","title":"eslint"},{"location":"code-reviews/recipes/javascript-and-typescript/#configuracao-do-prettier","text":"Prettier \u00e9 um formatador de c\u00f3digo com opini\u00f5es. Guia de in\u00edcio . Instale com npm como uma depend\u00eancia de desenvolvimento: npm install -D prettier eslint-config-prettier eslint-plugin-prettier Adicione prettier ao seu .eslintrc.js : module . exports = { root : true , parser : '@typescript-eslint/parser' , plugins : [ '@typescript-eslint' , ], extends : [ 'eslint:recommended' , 'plugin:@typescript-eslint/eslint-recommended' , 'plugin:@typescript-eslint/recommended' , 'prettier/@typescript-eslint' , 'plugin:prettier/recommended' , ], }; Isso aplicar\u00e1 o conjunto de regras prettier ao fazer a lintagem com o ESLint.","title":"Configura\u00e7\u00e3o do Prettier"},{"location":"code-reviews/recipes/javascript-and-typescript/#formatacao-automatica-com-o-vs-code","text":"O VS Code pode ser configurado para executar automaticamente eslint --fix ao salvar. Crie uma pasta .vscode na raiz do seu projeto e adicione o seguinte ao seu .vscode/settings.json : { \"editor.codeActionsOnSave\" : { \"source.fixAll.eslint\" : true }, } Por padr\u00e3o, usamos as seguintes substitui\u00e7\u00f5es que devem ser adicionadas \u00e0 configura\u00e7\u00e3o do VS Code para padronizar as aspas simples, uma indenta\u00e7\u00e3o de quatro espa\u00e7os e para realizar a verifica\u00e7\u00e3o de linting com ESLint: { \"prettier.singleQuote\" : true , \"prettier.eslintIntegration\" : true , \"prettier.tabWidth\" : 4 }","title":"Formata\u00e7\u00e3o Autom\u00e1tica com o VS Code"},{"location":"code-reviews/recipes/javascript-and-typescript/#configuracao-de-testes","text":"Recomenda-se fortemente a configura\u00e7\u00e3o do Playwright em um projeto. \u00c9 uma su\u00edte de testes de c\u00f3digo aberto criada pela Microsoft. Para instal\u00e1-lo, use o seguinte comando: npm install playwright Como o Playwright mostra os testes no navegador, voc\u00ea deve escolher qual navegador deseja executar, a menos que esteja usando o Chrome, que \u00e9 o padr\u00e3o. Voc\u00ea pode fazer isso","title":"Configura\u00e7\u00e3o de Testes"},{"location":"code-reviews/recipes/javascript-and-typescript/#validacao-de-build","text":"Para automatizar esse processo no Azure DevOps, voc\u00ea pode adicionar o seguinte trecho ao seu arquivo de defini\u00e7\u00e3o de pipeline yaml. Isso realizar\u00e1 a lintagem de quaisquer scripts na pasta ./scripts/ . - task : Npm@1 displayName : 'Lint' inputs : command : 'custom' customCommand : 'run lint' workingDir : './scripts/'","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/javascript-and-typescript/#hooks-pre-commit","text":"Todos os desenvolvedores devem executar o eslint em um hook pr\u00e9-commit para garantir a formata\u00e7\u00e3o padr\u00e3o. Recomendamos fortemente o uso de uma integra\u00e7\u00e3o com o editor, como o vscode-eslint , para fornecer feedback em tempo real. Em .git/hooks , renomeie pre-commit.sample para pre-commit Remova o c\u00f3digo de exemplo existente nesse arquivo Existem muitos exemplos de scripts para isso no gist, como pre-commit-eslint Modifique de acordo para incluir arquivos TypeScript (inclua a extens\u00e3o ts e certifique-se de que typescript-eslint esteja configurado) Torne o arquivo execut\u00e1vel: chmod +x .git/hooks/pre-commit Como alternativa, husky pode ser considerado para simplificar os hooks pr\u00e9-commit.","title":"Hooks Pr\u00e9-Commit"},{"location":"code-reviews/recipes/javascript-and-typescript/#checklist-de-revisao-de-codigo","text":"Al\u00e9m do Checklist de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve verificar esses itens espec\u00edficos de revis\u00e3o de c\u00f3digo em JavaScript e TypeScript.","title":"Checklist de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/javascript-and-typescript/#checklist-de-javascript-typescript","text":"O c\u00f3digo segue nossos padr\u00f5es de formata\u00e7\u00e3o e c\u00f3digo? Executar prettier e ESLint no c\u00f3digo n\u00e3o deve gerar avisos ou erros, respectivamente? A mudan\u00e7a re-implementa c\u00f3digo que seria melhor servido por um m\u00f3dulo bem conhecido do ecossistema? \u00c9 usado \"use strict\"; para reduzir erros com vari\u00e1veis n\u00e3o declaradas? S\u00e3o usados testes unit\u00e1rios sempre que poss\u00edvel, tamb\u00e9m para APIs? Os testes s\u00e3o organizados corretamente no padr\u00e3o Arrange/Act/Assert e devidamente documentados dessa forma? S\u00e3o seguidas as melhores pr\u00e1ticas para tratamento de erros, bem como as declara\u00e7\u00f5es try catch finally ? As chamadas ass\u00edncronas seguem corretamente o padr\u00e3o doWork().then(doSomething).then(checkSomething) , incluindo expect , done ? Em vez de usar strings brutas, s\u00e3o usadas constantes na classe principal? Ou, se essas strings s\u00e3o usadas em v\u00e1rios arquivos/classes, existe uma classe est\u00e1tica para as constantes? N\u00fameros m\u00e1gicos s\u00e3o explicados? N\u00e3o deve haver n\u00fameros no c\u00f3digo sem pelo menos um coment\u00e1rio explicando por que est\u00e3o l\u00e1. Se o n\u00famero for repetitivo, existe uma constante/enum ou equivalente? Se houver um m\u00e9todo ass\u00edncrono, o nome do m\u00e9todo termina com o sufixo Async ? Existe um n\u00edvel m\u00ednimo de registro de eventos? Os n\u00edveis de registro usados s\u00e3o sensatos? A manipula\u00e7\u00e3o do fragmento de documento \u00e9 limitada quando \u00e9 necess\u00e1rio manipular v\u00e1rios subelementos? O c\u00f3digo TypeScript \u00e9 compilado sem gerar erros de lintagem? Em vez de usar strings brutas, s\u00e3o usadas constantes na classe principal? Ou, se essas strings s\u00e3o usadas em v\u00e1rios arquivos/classes, existe uma classe est\u00e1tica para as constantes? N\u00fameros m\u00e1gicos s\u00e3o explicados? N\u00e3o deve haver n\u00fameros no c\u00f3digo sem pelo menos um coment\u00e1rio explicando por que est\u00e3o l\u00e1. Se o n\u00famero for repetitivo, existe uma constante/enum ou equivalente? Existem coment\u00e1rios apropriados /* */ nas v\u00e1rias classes e m\u00e9todos? Opera\u00e7\u00f5es pesadas s\u00e3o implementadas no backend, mantendo o controlador o mais leve poss\u00edvel? O tratamento de eventos no HTML \u00e9 eficiente?","title":"Checklist de JavaScript / TypeScript"},{"location":"code-reviews/recipes/markdown/","text":"Revis\u00f5es de C\u00f3digo em Markdown Guia de Estilo Os desenvolvedores devem tratar a documenta\u00e7\u00e3o como qualquer outro c\u00f3digo fonte e seguir as mesmas regras e listas de verifica\u00e7\u00e3o ao revisar a documenta\u00e7\u00e3o como c\u00f3digo. A documenta\u00e7\u00e3o deve utilizar uma boa sintaxe Markdown para garantir que seja interpretada corretamente e seguir boas diretrizes de estilo de escrita para garantir que o documento seja f\u00e1cil de ler e entender. Markdown Markdown \u00e9 uma linguagem de marca\u00e7\u00e3o leve que voc\u00ea pode usar para adicionar elementos de formata\u00e7\u00e3o a documentos de texto simples. Criado por John Gruber em 2004, o Markdown agora \u00e9 uma das linguagens de marca\u00e7\u00e3o mais populares do mundo. Usar o Markdown \u00e9 diferente de usar um editor WYSIWYG. Em um aplicativo como o Microsoft Word, voc\u00ea clica em bot\u00f5es para formatar palavras e frases, e as altera\u00e7\u00f5es s\u00e3o vis\u00edveis imediatamente. O Markdown n\u00e3o \u00e9 assim. Quando voc\u00ea cria um arquivo formatado em Markdown, voc\u00ea adiciona a sintaxe do Markdown ao texto para indicar quais palavras e frases devem parecer diferentes. Voc\u00ea pode encontrar mais informa\u00e7\u00f5es e documenta\u00e7\u00e3o completa aqui . Linters O Markdown tem uma maneira espec\u00edfica de ser formatado. \u00c9 importante respeitar essa formata\u00e7\u00e3o, caso contr\u00e1rio, alguns interpretadores que s\u00e3o rigorosos podem n\u00e3o exibir corretamente o documento. Os linters s\u00e3o frequentemente usados para ajudar os desenvolvedores a criar documentos adequadamente, verificando tanto a sintaxe correta do Markdown quanto a gram\u00e1tica e o uso adequado do idioma ingl\u00eas. Uma boa configura\u00e7\u00e3o inclui um linter de Markdown usado durante a edi\u00e7\u00e3o e verifica\u00e7\u00e3o de build de PR, e um linter de gram\u00e1tica usado durante a edi\u00e7\u00e3o do documento. A seguir, est\u00e3o listados alguns linters que podem ser usados nessa configura\u00e7\u00e3o. markdownlint markdownlint \u00e9 um linter para Markdown que verifica a sintaxe do Markdown e tamb\u00e9m imp\u00f5e regras que tornam o texto mais leg\u00edvel. Markdownlint-cli \u00e9 uma CLI f\u00e1cil de usar baseada no Markdownlint. Est\u00e1 dispon\u00edvel como um gem Ruby , um pacote npm , uma CLI Node.js e uma extens\u00e3o do VS Code . A extens\u00e3o do VS Code Prettier tamb\u00e9m captura todos os erros do markdownlint. Instalando a CLI Node.js npm install -g markdownlint-cli Executando o markdownlint em um projeto Node.js markdownlint **/*.md --ignore node_modules Corrigindo erros automaticamente markdownlint **/*.md --ignore node_modules --fix Uma lista completa de regras do markdownlint est\u00e1 dispon\u00edvel aqui . proselint proselint \u00e9 um utilit\u00e1rio de linha de comando que verifica o conte\u00fado de texto do documento. Ele verifica jarg\u00f5es, erros de ortografia, redund\u00e2ncia, linguagem corporativa e outros problemas relacionados ao idioma. Est\u00e1 dispon\u00edvel como um pacote Python e um pacote Node . pip install proselint npm install -g proselint Execute o proselint proselint document.md write-good write-good \u00e9 um linter para texto em ingl\u00eas que ajuda a escrever uma documenta\u00e7\u00e3o melhor. npm install -g write-good Execute o write-good write-good *.md Execute o write-good sem instal\u00e1-lo npx write-good *.md O Write Good tamb\u00e9m est\u00e1 dispon\u00edvel como uma extens\u00e3o para o VS Code Extens\u00f5es do VS Code Extens\u00e3o Write Good Linter A Extens\u00e3o Write Good Linter integra-se ao VS Code para fornecer dicas de gram\u00e1tica e linguagem durante a edi\u00e7\u00e3o do documento. Extens\u00e3o markdownlint A Extens\u00e3o markdownlint examina os documentos Markdown, exibindo avisos para viola\u00e7\u00f5es de regras durante a edi\u00e7\u00e3o. Valida\u00e7\u00e3o de Build Lintagem Para automatizar a lintagem com o markdownlint para valida\u00e7\u00e3o de PR em a\u00e7\u00f5es do GitHub, voc\u00ea pode usar um agregador de linters, como fazemos com o MegaLinter neste reposit\u00f3rio , ou usar o seguinte YAML. name : Markdownlint on : push : paths : - \"**/*.md\" pull_request : paths : - \"**/*.md\" jobs : lint : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - name : Use o Node.js uses : actions/setup-node@v1 with : node-version : 12.x - name : Execute o Markdownlint run : | npm i -g markdownlint-cli markdownlint \"**/*.md\" --ignore node_modules Verifica\u00e7\u00e3o de Links Para automatizar a verifica\u00e7\u00e3o de links em seus arquivos Markdown, adicione a a\u00e7\u00e3o markdown-link-check ao seu pipeline de valida\u00e7\u00e3o: markdown-link-check : runs-on : ubuntu-latest steps : - uses : actions/checkout@master - uses : gaurav-nelson/github-action-markdown-link-check@v1 Mais informa\u00e7\u00f5es sobre as op\u00e7\u00f5es da a\u00e7\u00e3o markdown-link-check podem ser encontradas na p\u00e1gina principal do markdown-link-check . Checklist de Revis\u00e3o de C\u00f3digo Al\u00e9m do [Checklist de Revis\u00e3o de C\u00f3digo](../process-guidance/reviewer-guidance.md), voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos de revis\u00e3o de c\u00f3digo de documenta\u00e7\u00e3o: O documento \u00e9 f\u00e1cil de ler e entender e segue as boas diretrizes de escrita ? Existe uma \u00fanica fonte de verdade ou o conte\u00fado \u00e9 repetido em mais de um documento? A documenta\u00e7\u00e3o est\u00e1 atualizada com o c\u00f3digo? A documenta\u00e7\u00e3o \u00e9 tecnicamente e eticamente correta? Diretrizes de Estilo de Escrita A seguir, alguns exemplos de diretrizes de estilo de escrita. Concordem em sua equipe quais diretrizes voc\u00eas devem aplicar \u00e0 documenta\u00e7\u00e3o do projeto. Salve suas diretrizes juntamente com sua documenta\u00e7\u00e3o, para que seja f\u00e1cil consult\u00e1-las. Reda\u00e7\u00e3o Use linguagem inclusiva e evite jarg\u00f5es e palavras incomuns. A documenta\u00e7\u00e3o deve ser f\u00e1cil de entender. Seja claro e conciso, siga o objetivo do documento. Use voz ativa. Verifique a ortografia e a gram\u00e1tica do texto. Siga sempre a ordem cronol\u00f3gica. Visite Plain English para dicas sobre como escrever documenta\u00e7\u00e3o f\u00e1cil de entender. Organiza\u00e7\u00e3o do Documento Organize os documentos por t\u00f3pico em vez de tipo, isso facilita a localiza\u00e7\u00e3o da documenta\u00e7\u00e3o. Cada pasta deve ter um README.md de n\u00edvel superior e qualquer outro documento dentro dessa pasta deve ter links diretos ou indiretos a partir desse README.md. Nomes de documentos com mais de uma palavra devem usar sublinhados em vez de espa\u00e7os, por exemplo, machine_learning_pipeline_design.md . O mesmo se aplica \u00e0s imagens. Cabe\u00e7alhos Comece com um H1 (um \u00fanico # em Markdown) e respeite a ordem H1 > H2 > H3 etc. Siga cada cabe\u00e7alho com texto antes de prosseguir para o pr\u00f3ximo cabe\u00e7alho. Evite colocar n\u00fameros nos cabe\u00e7alhos. N\u00fameros mudam e podem criar t\u00edtulos desatualizados. Evite usar s\u00edmbolos e caracteres especiais em cabe\u00e7alhos, isso causa problemas com links de \u00e2ncora. Evite links em cabe\u00e7alhos. Links Evite duplica\u00e7\u00e3o de conte\u00fado, em vez disso, fa\u00e7a um link para a \u00fanica fonte de verdade . Fa\u00e7a link, mas n\u00e3o resuma. Resumir o conte\u00fado em outra p\u00e1gina faz com que o conte\u00fado exista em dois lugares. Use textos de \u00e2ncora significativos, por exemplo, em vez de escrever Siga as instru\u00e7\u00f5es [aqui](../recipes/markdown.md) , escreva Siga as [diretrizes do Markdown](../recipes/markdown.md) . Certifique-se de que os links para a documenta\u00e7\u00e3o da Microsoft n\u00e3o contenham o marcador de idioma /en-us/ ou /fr-fr/ , pois isso \u00e9 determinado automaticamente pelo pr\u00f3prio site. Listas Itens de lista devem come\u00e7ar com letras mai\u00fasculas, se poss\u00edvel. Use listas ordenadas quando os itens descrevem uma sequ\u00eancia a seguir, caso contr\u00e1rio, use listas n\u00e3o ordenadas. Para listas ordenadas, prefixe cada item com 1. . Quando renderizado, os itens da lista aparecer\u00e3o com numera\u00e7\u00e3o sequencial. Isso evita lacunas de n\u00fameros na lista. N\u00e3o adicione v\u00edrgulas , ou ponto e v\u00edrgulas ; no final dos itens da lista e evite pontos . a menos que o item da lista represente uma frase completa. Imagens Coloque as imagens em um diret\u00f3rio separado chamado img . Nomeie as imagens apropriadamente, evitando nomes gen\u00e9ricos como screenshot.png . Evite adicionar imagens ou v\u00eddeos grandes ao controle de origem, fa\u00e7a um link para um local externo. \u00canfase e se\u00e7\u00f5es especiais Use negrito ou it\u00e1lico para enfatizar. Para se\u00e7\u00f5es que todos que leem este documento precisam estar cientes, use blocos. Use crases para c\u00f3digo, uma crase simples para c\u00f3digo inline como pip install flake8 e 3 crases para blocos de c\u00f3digo seguidos pelo idioma para destacar a sintaxe. def add ( num1 : int , num2 : int ): return num1 + num2 Use caixas de sele\u00e7\u00e3o para listas de tarefas. Item 1 Item 2 Item 3 Adicione uma se\u00e7\u00e3o de Refer\u00eancias ao final do documento com links para refer\u00eancias externas. Prefira tabelas a listas para compara\u00e7\u00f5es e relat\u00f3rios para tornar a pesquisa e os resultados mais leg\u00edveis. Op\u00e7\u00e3o Pr\u00f3s Contras Op\u00e7\u00e3o 1 Alguns pr\u00f3s Alguns contras Op\u00e7\u00e3o 2 Alguns pr\u00f3s Alguns contras Geral Sempre use a sintaxe Markdown, n\u00e3o misture com HTML. Certifique-se de que a extens\u00e3o dos arquivos seja .md . Se a extens\u00e3o estiver faltando, um linter pode ignorar os arquivos.","title":"Revis\u00f5es de C\u00f3digo em Markdown"},{"location":"code-reviews/recipes/markdown/#revisoes-de-codigo-em-markdown","text":"","title":"Revis\u00f5es de C\u00f3digo em Markdown"},{"location":"code-reviews/recipes/markdown/#guia-de-estilo","text":"Os desenvolvedores devem tratar a documenta\u00e7\u00e3o como qualquer outro c\u00f3digo fonte e seguir as mesmas regras e listas de verifica\u00e7\u00e3o ao revisar a documenta\u00e7\u00e3o como c\u00f3digo. A documenta\u00e7\u00e3o deve utilizar uma boa sintaxe Markdown para garantir que seja interpretada corretamente e seguir boas diretrizes de estilo de escrita para garantir que o documento seja f\u00e1cil de ler e entender.","title":"Guia de Estilo"},{"location":"code-reviews/recipes/markdown/#markdown","text":"Markdown \u00e9 uma linguagem de marca\u00e7\u00e3o leve que voc\u00ea pode usar para adicionar elementos de formata\u00e7\u00e3o a documentos de texto simples. Criado por John Gruber em 2004, o Markdown agora \u00e9 uma das linguagens de marca\u00e7\u00e3o mais populares do mundo. Usar o Markdown \u00e9 diferente de usar um editor WYSIWYG. Em um aplicativo como o Microsoft Word, voc\u00ea clica em bot\u00f5es para formatar palavras e frases, e as altera\u00e7\u00f5es s\u00e3o vis\u00edveis imediatamente. O Markdown n\u00e3o \u00e9 assim. Quando voc\u00ea cria um arquivo formatado em Markdown, voc\u00ea adiciona a sintaxe do Markdown ao texto para indicar quais palavras e frases devem parecer diferentes. Voc\u00ea pode encontrar mais informa\u00e7\u00f5es e documenta\u00e7\u00e3o completa aqui .","title":"Markdown"},{"location":"code-reviews/recipes/markdown/#linters","text":"O Markdown tem uma maneira espec\u00edfica de ser formatado. \u00c9 importante respeitar essa formata\u00e7\u00e3o, caso contr\u00e1rio, alguns interpretadores que s\u00e3o rigorosos podem n\u00e3o exibir corretamente o documento. Os linters s\u00e3o frequentemente usados para ajudar os desenvolvedores a criar documentos adequadamente, verificando tanto a sintaxe correta do Markdown quanto a gram\u00e1tica e o uso adequado do idioma ingl\u00eas. Uma boa configura\u00e7\u00e3o inclui um linter de Markdown usado durante a edi\u00e7\u00e3o e verifica\u00e7\u00e3o de build de PR, e um linter de gram\u00e1tica usado durante a edi\u00e7\u00e3o do documento. A seguir, est\u00e3o listados alguns linters que podem ser usados nessa configura\u00e7\u00e3o.","title":"Linters"},{"location":"code-reviews/recipes/markdown/#markdownlint","text":"markdownlint \u00e9 um linter para Markdown que verifica a sintaxe do Markdown e tamb\u00e9m imp\u00f5e regras que tornam o texto mais leg\u00edvel. Markdownlint-cli \u00e9 uma CLI f\u00e1cil de usar baseada no Markdownlint. Est\u00e1 dispon\u00edvel como um gem Ruby , um pacote npm , uma CLI Node.js e uma extens\u00e3o do VS Code . A extens\u00e3o do VS Code Prettier tamb\u00e9m captura todos os erros do markdownlint. Instalando a CLI Node.js npm install -g markdownlint-cli Executando o markdownlint em um projeto Node.js markdownlint **/*.md --ignore node_modules Corrigindo erros automaticamente markdownlint **/*.md --ignore node_modules --fix Uma lista completa de regras do markdownlint est\u00e1 dispon\u00edvel aqui .","title":"markdownlint"},{"location":"code-reviews/recipes/markdown/#proselint","text":"proselint \u00e9 um utilit\u00e1rio de linha de comando que verifica o conte\u00fado de texto do documento. Ele verifica jarg\u00f5es, erros de ortografia, redund\u00e2ncia, linguagem corporativa e outros problemas relacionados ao idioma. Est\u00e1 dispon\u00edvel como um pacote Python e um pacote Node . pip install proselint npm install -g proselint Execute o proselint proselint document.md","title":"proselint"},{"location":"code-reviews/recipes/markdown/#write-good","text":"write-good \u00e9 um linter para texto em ingl\u00eas que ajuda a escrever uma documenta\u00e7\u00e3o melhor. npm install -g write-good Execute o write-good write-good *.md Execute o write-good sem instal\u00e1-lo npx write-good *.md O Write Good tamb\u00e9m est\u00e1 dispon\u00edvel como uma extens\u00e3o para o VS Code","title":"write-good"},{"location":"code-reviews/recipes/markdown/#extensoes-do-vs-code","text":"","title":"Extens\u00f5es do VS Code"},{"location":"code-reviews/recipes/markdown/#extensao-write-good-linter","text":"A Extens\u00e3o Write Good Linter integra-se ao VS Code para fornecer dicas de gram\u00e1tica e linguagem durante a edi\u00e7\u00e3o do documento.","title":"Extens\u00e3o Write Good Linter"},{"location":"code-reviews/recipes/markdown/#extensao-markdownlint","text":"A Extens\u00e3o markdownlint examina os documentos Markdown, exibindo avisos para viola\u00e7\u00f5es de regras durante a edi\u00e7\u00e3o.","title":"Extens\u00e3o markdownlint"},{"location":"code-reviews/recipes/markdown/#validacao-de-build","text":"","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/markdown/#lintagem","text":"Para automatizar a lintagem com o markdownlint para valida\u00e7\u00e3o de PR em a\u00e7\u00f5es do GitHub, voc\u00ea pode usar um agregador de linters, como fazemos com o MegaLinter neste reposit\u00f3rio , ou usar o seguinte YAML. name : Markdownlint on : push : paths : - \"**/*.md\" pull_request : paths : - \"**/*.md\" jobs : lint : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - name : Use o Node.js uses : actions/setup-node@v1 with : node-version : 12.x - name : Execute o Markdownlint run : | npm i -g markdownlint-cli markdownlint \"**/*.md\" --ignore node_modules","title":"Lintagem"},{"location":"code-reviews/recipes/markdown/#verificacao-de-links","text":"Para automatizar a verifica\u00e7\u00e3o de links em seus arquivos Markdown, adicione a a\u00e7\u00e3o markdown-link-check ao seu pipeline de valida\u00e7\u00e3o: markdown-link-check : runs-on : ubuntu-latest steps : - uses : actions/checkout@master - uses : gaurav-nelson/github-action-markdown-link-check@v1 Mais informa\u00e7\u00f5es sobre as op\u00e7\u00f5es da a\u00e7\u00e3o markdown-link-check podem ser encontradas na p\u00e1gina principal do markdown-link-check .","title":"Verifica\u00e7\u00e3o de Links"},{"location":"code-reviews/recipes/markdown/#checklist-de-revisao-de-codigo","text":"Al\u00e9m do [Checklist de Revis\u00e3o de C\u00f3digo](../process-guidance/reviewer-guidance.md), voc\u00ea tamb\u00e9m deve procurar por itens espec\u00edficos de revis\u00e3o de c\u00f3digo de documenta\u00e7\u00e3o: O documento \u00e9 f\u00e1cil de ler e entender e segue as boas diretrizes de escrita ? Existe uma \u00fanica fonte de verdade ou o conte\u00fado \u00e9 repetido em mais de um documento? A documenta\u00e7\u00e3o est\u00e1 atualizada com o c\u00f3digo? A documenta\u00e7\u00e3o \u00e9 tecnicamente e eticamente correta?","title":"Checklist de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/markdown/#diretrizes-de-estilo-de-escrita","text":"A seguir, alguns exemplos de diretrizes de estilo de escrita. Concordem em sua equipe quais diretrizes voc\u00eas devem aplicar \u00e0 documenta\u00e7\u00e3o do projeto. Salve suas diretrizes juntamente com sua documenta\u00e7\u00e3o, para que seja f\u00e1cil consult\u00e1-las.","title":"Diretrizes de Estilo de Escrita"},{"location":"code-reviews/recipes/markdown/#redacao","text":"Use linguagem inclusiva e evite jarg\u00f5es e palavras incomuns. A documenta\u00e7\u00e3o deve ser f\u00e1cil de entender. Seja claro e conciso, siga o objetivo do documento. Use voz ativa. Verifique a ortografia e a gram\u00e1tica do texto. Siga sempre a ordem cronol\u00f3gica. Visite Plain English para dicas sobre como escrever documenta\u00e7\u00e3o f\u00e1cil de entender.","title":"Reda\u00e7\u00e3o"},{"location":"code-reviews/recipes/markdown/#organizacao-do-documento","text":"Organize os documentos por t\u00f3pico em vez de tipo, isso facilita a localiza\u00e7\u00e3o da documenta\u00e7\u00e3o. Cada pasta deve ter um README.md de n\u00edvel superior e qualquer outro documento dentro dessa pasta deve ter links diretos ou indiretos a partir desse README.md. Nomes de documentos com mais de uma palavra devem usar sublinhados em vez de espa\u00e7os, por exemplo, machine_learning_pipeline_design.md . O mesmo se aplica \u00e0s imagens.","title":"Organiza\u00e7\u00e3o do Documento"},{"location":"code-reviews/recipes/markdown/#cabecalhos","text":"Comece com um H1 (um \u00fanico # em Markdown) e respeite a ordem H1 > H2 > H3 etc. Siga cada cabe\u00e7alho com texto antes de prosseguir para o pr\u00f3ximo cabe\u00e7alho. Evite colocar n\u00fameros nos cabe\u00e7alhos. N\u00fameros mudam e podem criar t\u00edtulos desatualizados. Evite usar s\u00edmbolos e caracteres especiais em cabe\u00e7alhos, isso causa problemas com links de \u00e2ncora. Evite links em cabe\u00e7alhos.","title":"Cabe\u00e7alhos"},{"location":"code-reviews/recipes/markdown/#links","text":"Evite duplica\u00e7\u00e3o de conte\u00fado, em vez disso, fa\u00e7a um link para a \u00fanica fonte de verdade . Fa\u00e7a link, mas n\u00e3o resuma. Resumir o conte\u00fado em outra p\u00e1gina faz com que o conte\u00fado exista em dois lugares. Use textos de \u00e2ncora significativos, por exemplo, em vez de escrever Siga as instru\u00e7\u00f5es [aqui](../recipes/markdown.md) , escreva Siga as [diretrizes do Markdown](../recipes/markdown.md) . Certifique-se de que os links para a documenta\u00e7\u00e3o da Microsoft n\u00e3o contenham o marcador de idioma /en-us/ ou /fr-fr/ , pois isso \u00e9 determinado automaticamente pelo pr\u00f3prio site.","title":"Links"},{"location":"code-reviews/recipes/markdown/#listas","text":"Itens de lista devem come\u00e7ar com letras mai\u00fasculas, se poss\u00edvel. Use listas ordenadas quando os itens descrevem uma sequ\u00eancia a seguir, caso contr\u00e1rio, use listas n\u00e3o ordenadas. Para listas ordenadas, prefixe cada item com 1. . Quando renderizado, os itens da lista aparecer\u00e3o com numera\u00e7\u00e3o sequencial. Isso evita lacunas de n\u00fameros na lista. N\u00e3o adicione v\u00edrgulas , ou ponto e v\u00edrgulas ; no final dos itens da lista e evite pontos . a menos que o item da lista represente uma frase completa.","title":"Listas"},{"location":"code-reviews/recipes/markdown/#imagens","text":"Coloque as imagens em um diret\u00f3rio separado chamado img . Nomeie as imagens apropriadamente, evitando nomes gen\u00e9ricos como screenshot.png . Evite adicionar imagens ou v\u00eddeos grandes ao controle de origem, fa\u00e7a um link para um local externo.","title":"Imagens"},{"location":"code-reviews/recipes/markdown/#enfase-e-secoes-especiais","text":"Use negrito ou it\u00e1lico para enfatizar. Para se\u00e7\u00f5es que todos que leem este documento precisam estar cientes, use blocos. Use crases para c\u00f3digo, uma crase simples para c\u00f3digo inline como pip install flake8 e 3 crases para blocos de c\u00f3digo seguidos pelo idioma para destacar a sintaxe. def add ( num1 : int , num2 : int ): return num1 + num2 Use caixas de sele\u00e7\u00e3o para listas de tarefas. Item 1 Item 2 Item 3 Adicione uma se\u00e7\u00e3o de Refer\u00eancias ao final do documento com links para refer\u00eancias externas. Prefira tabelas a listas para compara\u00e7\u00f5es e relat\u00f3rios para tornar a pesquisa e os resultados mais leg\u00edveis. Op\u00e7\u00e3o Pr\u00f3s Contras Op\u00e7\u00e3o 1 Alguns pr\u00f3s Alguns contras Op\u00e7\u00e3o 2 Alguns pr\u00f3s Alguns contras","title":"\u00canfase e se\u00e7\u00f5es especiais"},{"location":"code-reviews/recipes/markdown/#geral","text":"Sempre use a sintaxe Markdown, n\u00e3o misture com HTML. Certifique-se de que a extens\u00e3o dos arquivos seja .md . Se a extens\u00e3o estiver faltando, um linter pode ignorar os arquivos.","title":"Geral"},{"location":"code-reviews/recipes/python/","text":"Revis\u00e3o de C\u00f3digo em Python Guia de Estilo Os desenvolvedores devem seguir o guia de estilo PEP8 com dicas de tipo . O uso de dicas de tipo em conjunto com a lintagem e verifica\u00e7\u00e3o de dicas de tipo evita erros comuns que s\u00e3o dif\u00edceis de depurar. Projetos devem verificar o c\u00f3digo Python com ferramentas automatizadas. A lintagem deve ser adicionada \u00e0 valida\u00e7\u00e3o de build, e tanto a lintagem quanto a formata\u00e7\u00e3o de c\u00f3digo podem ser adicionadas aos seus ganchos de pr\u00e9-compromisso e ao VS Code. An\u00e1lise de C\u00f3digo / Lintagem Os dois linters Python mais populares s\u00e3o o Pylint e o Flake8 . Ambos verificam a ader\u00eancia ao PEP8 , mas variam um pouco no que diz respeito a outras regras que verificam. Em geral, o Pylint tende a ser um pouco mais rigoroso e pode gerar mais falsos positivos, mas ambos s\u00e3o boas op\u00e7\u00f5es para a lintagem de c\u00f3digo Python. Tanto o Pylint quanto o Flake8 podem ser configurados no VS Code usando a extens\u00e3o Python do VS Code. Flake8 O Flake8 \u00e9 um wrapper simples e r\u00e1pido em torno do Pyflakes (para detec\u00e7\u00e3o de erros de codifica\u00e7\u00e3o) e pycodestyle (para o PEP8 ). Instale o Flake8 pip install flake8 Adicione uma extens\u00e3o para a ferramenta pydocstyle (para strings de documenta\u00e7\u00e3o ) ao Flake8 . pip install flake8-docstrings Adicione uma extens\u00e3o para o pep8-naming (para conven\u00e7\u00f5es de nomenclatura no PEP8 ) ao Flake8 . pip install pep8-naming Execute o Flake8 flake8 . # Lintagem do projeto inteiro Pylint Instale o Pylint pip install pylint Execute o Pylint pylint src # Lintagem do diret\u00f3rio de c\u00f3digo-fonte Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo Black O Black \u00e9 uma ferramenta de formata\u00e7\u00e3o de c\u00f3digo sem desculpas. Ele remove todas as reclama\u00e7\u00f5es do pycodestyle sobre formata\u00e7\u00e3o, para que a equipe possa se concentrar no conte\u00fado em vez do estilo. N\u00e3o \u00e9 poss\u00edvel configurar o Black de acordo com suas pr\u00f3prias necessidades de estilo. pip install black Formate o c\u00f3digo Python black [ arquivo/pasta ] Autopep8 O Autopep8 \u00e9 mais flex\u00edvel e permite mais configura\u00e7\u00e3o se voc\u00ea deseja uma formata\u00e7\u00e3o menos rigorosa. pip install autopep8 Formate o c\u00f3digo Python autopep8 [ arquivo/pasta ] --in-place yapf yapf Yet Another Python Formatter \u00e9 um formatador Python da Google baseado em ideias do gofmt. Ele tamb\u00e9m \u00e9 mais configur\u00e1vel e uma boa op\u00e7\u00e3o para formata\u00e7\u00e3o autom\u00e1tica de c\u00f3digo. pip install yapf Formate o c\u00f3digo Python yapf [ arquivo/pasta ] --in-place Extens\u00f5es do VS Code Python A extens\u00e3o da linguagem Python \u00e9 a extens\u00e3o base que voc\u00ea deve ter instalada para desenvolvimento Python com o VS Code. Ela permite intellisense, depura\u00e7\u00e3o, lintagem (com os linters mencionados acima), testes com pytest ou unittest e formata\u00e7\u00e3o de c\u00f3digo com os formatadores mencionados acima. Pyright A extens\u00e3o Pyright aprimora o VS Code com verifica\u00e7\u00e3o est\u00e1tica de tipos quando voc\u00ea usa dicas de tipo. def add ( primeiro_valor : int , segundo_valor : int ) -> int : return primeiro_valor + segundo_valor Valida\u00e7\u00e3o de Build Para automatizar a lintagem com o flake8 e os testes com o pytest no Azure Devops, voc\u00ea pode adicionar o seguinte trecho ao seu arquivo azure-pipelines.yaml . trigger : branches : include : - develop - master paths : include : - src/* pool : vmImage : 'ubuntu-latest' jobs : - job : LintAndTest displayName : Lintagem e Teste steps : - checkout : self lfs : true - task : UsePythonVersion@0 displayName : 'Definir a vers\u00e3o do Python para 3.6' inputs : versionSpec : '3.6' - script : pip3 install --user -r requirements.txt displayName : 'Instalar depend\u00eancias' - script : | # Instalar o Flake8 pip3 install --user flake8 # Instalar o PyTest pip3 install --user pytest displayName : 'Instalar o Flake8 e o PyTest' - script : | python3 -m flake8 displayName : 'Executar o linter Flake8' - script : | # Executar o testador PyTest python3 -m pytest --junitxml=./test-results.xml displayName : 'Executar o testador PyTest' - task : PublishTestResults@2 displayName : 'Publicar resultados do PyTest' condition : succeededOrFailed() inputs : testResultsFiles : '**/test-*.xml' testRunTitle : 'Publicar resultados do teste para Python $(python.version)' Para realizar uma valida\u00e7\u00e3o de PR no GitHub, voc\u00ea pode usar uma configura\u00e7\u00e3o YAML semelhante com GitHub Actions . Pre-commit hooks Os Pre-commit hooks permitem que voc\u00ea formate e lint o c\u00f3digo localmente antes de enviar a solicita\u00e7\u00e3o de pull. Adicionar Pre-commit hookso para o seu reposit\u00f3rio Python \u00e9 f\u00e1cil usando o pacote pre-commit. Instale o pre-commit e adicione-o ao requirements.txt pip install pre-commit Adicione um arquivo .pre-commit-config.yaml na raiz do reposit\u00f3rio, com as a\u00e7\u00f5es de pr\u00e9-compromisso desejadas repos : - repo : https://github.com/ambv/black rev : stable hooks : - id : black language_version : python3.6 - repo : https://github.com/pre-commit/pre-commit-hooks rev : v1.2.3 hooks : - id : flake8 Cada desenvolvedor individual que deseja configurar ganchos de pr\u00e9-compromisso pode ent\u00e3o executar pre-commit install Na pr\u00f3xima tentativa de commit, quaisquer falhas de lint bloquear\u00e3o o commit. Observa\u00e7\u00e3o: A instala\u00e7\u00e3o de ganchos de pr\u00e9-compromisso \u00e9 volunt\u00e1ria e feita por cada desenvolvedor individualmente. Portanto, n\u00e3o substitui a valida\u00e7\u00e3o de build no servidor. Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo Al\u00e9m da Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por estes itens espec\u00edficos de revis\u00e3o de c\u00f3digo em Python: Todos os novos pacotes usados est\u00e3o inclu\u00eddos no requirements.txt? O c\u00f3digo passa em todas as verifica\u00e7\u00f5es de lint? As fun\u00e7\u00f5es usam dicas de tipo e h\u00e1 erros de dica de tipo? O c\u00f3digo \u00e9 leg\u00edvel e utiliza constru\u00e7\u00f5es pythonicas sempre que poss\u00edvel.","title":"Revis\u00e3o de C\u00f3digo em Python"},{"location":"code-reviews/recipes/python/#revisao-de-codigo-em-python","text":"","title":"Revis\u00e3o de C\u00f3digo em Python"},{"location":"code-reviews/recipes/python/#guia-de-estilo","text":"Os desenvolvedores devem seguir o guia de estilo PEP8 com dicas de tipo . O uso de dicas de tipo em conjunto com a lintagem e verifica\u00e7\u00e3o de dicas de tipo evita erros comuns que s\u00e3o dif\u00edceis de depurar. Projetos devem verificar o c\u00f3digo Python com ferramentas automatizadas. A lintagem deve ser adicionada \u00e0 valida\u00e7\u00e3o de build, e tanto a lintagem quanto a formata\u00e7\u00e3o de c\u00f3digo podem ser adicionadas aos seus ganchos de pr\u00e9-compromisso e ao VS Code.","title":"Guia de Estilo"},{"location":"code-reviews/recipes/python/#analise-de-codigo-lintagem","text":"Os dois linters Python mais populares s\u00e3o o Pylint e o Flake8 . Ambos verificam a ader\u00eancia ao PEP8 , mas variam um pouco no que diz respeito a outras regras que verificam. Em geral, o Pylint tende a ser um pouco mais rigoroso e pode gerar mais falsos positivos, mas ambos s\u00e3o boas op\u00e7\u00f5es para a lintagem de c\u00f3digo Python. Tanto o Pylint quanto o Flake8 podem ser configurados no VS Code usando a extens\u00e3o Python do VS Code.","title":"An\u00e1lise de C\u00f3digo / Lintagem"},{"location":"code-reviews/recipes/python/#flake8","text":"O Flake8 \u00e9 um wrapper simples e r\u00e1pido em torno do Pyflakes (para detec\u00e7\u00e3o de erros de codifica\u00e7\u00e3o) e pycodestyle (para o PEP8 ). Instale o Flake8 pip install flake8 Adicione uma extens\u00e3o para a ferramenta pydocstyle (para strings de documenta\u00e7\u00e3o ) ao Flake8 . pip install flake8-docstrings Adicione uma extens\u00e3o para o pep8-naming (para conven\u00e7\u00f5es de nomenclatura no PEP8 ) ao Flake8 . pip install pep8-naming Execute o Flake8 flake8 . # Lintagem do projeto inteiro","title":"Flake8"},{"location":"code-reviews/recipes/python/#pylint","text":"Instale o Pylint pip install pylint Execute o Pylint pylint src # Lintagem do diret\u00f3rio de c\u00f3digo-fonte","title":"Pylint"},{"location":"code-reviews/recipes/python/#formatacao-automatica-de-codigo","text":"","title":"Formata\u00e7\u00e3o Autom\u00e1tica de C\u00f3digo"},{"location":"code-reviews/recipes/python/#black","text":"O Black \u00e9 uma ferramenta de formata\u00e7\u00e3o de c\u00f3digo sem desculpas. Ele remove todas as reclama\u00e7\u00f5es do pycodestyle sobre formata\u00e7\u00e3o, para que a equipe possa se concentrar no conte\u00fado em vez do estilo. N\u00e3o \u00e9 poss\u00edvel configurar o Black de acordo com suas pr\u00f3prias necessidades de estilo. pip install black Formate o c\u00f3digo Python black [ arquivo/pasta ]","title":"Black"},{"location":"code-reviews/recipes/python/#autopep8","text":"O Autopep8 \u00e9 mais flex\u00edvel e permite mais configura\u00e7\u00e3o se voc\u00ea deseja uma formata\u00e7\u00e3o menos rigorosa. pip install autopep8 Formate o c\u00f3digo Python autopep8 [ arquivo/pasta ] --in-place","title":"Autopep8"},{"location":"code-reviews/recipes/python/#yapf","text":"yapf Yet Another Python Formatter \u00e9 um formatador Python da Google baseado em ideias do gofmt. Ele tamb\u00e9m \u00e9 mais configur\u00e1vel e uma boa op\u00e7\u00e3o para formata\u00e7\u00e3o autom\u00e1tica de c\u00f3digo. pip install yapf Formate o c\u00f3digo Python yapf [ arquivo/pasta ] --in-place","title":"yapf"},{"location":"code-reviews/recipes/python/#extensoes-do-vs-code","text":"","title":"Extens\u00f5es do VS Code"},{"location":"code-reviews/recipes/python/#python","text":"A extens\u00e3o da linguagem Python \u00e9 a extens\u00e3o base que voc\u00ea deve ter instalada para desenvolvimento Python com o VS Code. Ela permite intellisense, depura\u00e7\u00e3o, lintagem (com os linters mencionados acima), testes com pytest ou unittest e formata\u00e7\u00e3o de c\u00f3digo com os formatadores mencionados acima.","title":"Python"},{"location":"code-reviews/recipes/python/#pyright","text":"A extens\u00e3o Pyright aprimora o VS Code com verifica\u00e7\u00e3o est\u00e1tica de tipos quando voc\u00ea usa dicas de tipo. def add ( primeiro_valor : int , segundo_valor : int ) -> int : return primeiro_valor + segundo_valor","title":"Pyright"},{"location":"code-reviews/recipes/python/#validacao-de-build","text":"Para automatizar a lintagem com o flake8 e os testes com o pytest no Azure Devops, voc\u00ea pode adicionar o seguinte trecho ao seu arquivo azure-pipelines.yaml . trigger : branches : include : - develop - master paths : include : - src/* pool : vmImage : 'ubuntu-latest' jobs : - job : LintAndTest displayName : Lintagem e Teste steps : - checkout : self lfs : true - task : UsePythonVersion@0 displayName : 'Definir a vers\u00e3o do Python para 3.6' inputs : versionSpec : '3.6' - script : pip3 install --user -r requirements.txt displayName : 'Instalar depend\u00eancias' - script : | # Instalar o Flake8 pip3 install --user flake8 # Instalar o PyTest pip3 install --user pytest displayName : 'Instalar o Flake8 e o PyTest' - script : | python3 -m flake8 displayName : 'Executar o linter Flake8' - script : | # Executar o testador PyTest python3 -m pytest --junitxml=./test-results.xml displayName : 'Executar o testador PyTest' - task : PublishTestResults@2 displayName : 'Publicar resultados do PyTest' condition : succeededOrFailed() inputs : testResultsFiles : '**/test-*.xml' testRunTitle : 'Publicar resultados do teste para Python $(python.version)' Para realizar uma valida\u00e7\u00e3o de PR no GitHub, voc\u00ea pode usar uma configura\u00e7\u00e3o YAML semelhante com GitHub Actions .","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/python/#pre-commit-hooks","text":"Os Pre-commit hooks permitem que voc\u00ea formate e lint o c\u00f3digo localmente antes de enviar a solicita\u00e7\u00e3o de pull. Adicionar Pre-commit hookso para o seu reposit\u00f3rio Python \u00e9 f\u00e1cil usando o pacote pre-commit. Instale o pre-commit e adicione-o ao requirements.txt pip install pre-commit Adicione um arquivo .pre-commit-config.yaml na raiz do reposit\u00f3rio, com as a\u00e7\u00f5es de pr\u00e9-compromisso desejadas repos : - repo : https://github.com/ambv/black rev : stable hooks : - id : black language_version : python3.6 - repo : https://github.com/pre-commit/pre-commit-hooks rev : v1.2.3 hooks : - id : flake8 Cada desenvolvedor individual que deseja configurar ganchos de pr\u00e9-compromisso pode ent\u00e3o executar pre-commit install Na pr\u00f3xima tentativa de commit, quaisquer falhas de lint bloquear\u00e3o o commit. Observa\u00e7\u00e3o: A instala\u00e7\u00e3o de ganchos de pr\u00e9-compromisso \u00e9 volunt\u00e1ria e feita por cada desenvolvedor individualmente. Portanto, n\u00e3o substitui a valida\u00e7\u00e3o de build no servidor.","title":"Pre-commit hooks"},{"location":"code-reviews/recipes/python/#lista-de-verificacao-de-revisao-de-codigo","text":"Al\u00e9m da Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por estes itens espec\u00edficos de revis\u00e3o de c\u00f3digo em Python: Todos os novos pacotes usados est\u00e3o inclu\u00eddos no requirements.txt? O c\u00f3digo passa em todas as verifica\u00e7\u00f5es de lint? As fun\u00e7\u00f5es usam dicas de tipo e h\u00e1 erros de dica de tipo? O c\u00f3digo \u00e9 leg\u00edvel e utiliza constru\u00e7\u00f5es pythonicas sempre que poss\u00edvel.","title":"Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/terraform/","text":"Revis\u00e3o de C\u00f3digo em Terraform Guia de Estilo Os desenvolvedores devem seguir o guia de estilo do Terraform . Projetos devem verificar os scripts do Terraform com ferramentas automatizadas. An\u00e1lise de C\u00f3digo / Linting TFLint O TFLint \u00e9 um linter do Terraform focado em poss\u00edveis erros, melhores pr\u00e1ticas, etc. Uma vez instalado o TFLint no ambiente, ele pode ser invocado usando a extens\u00e3o do VS Code terraform . Extens\u00f5es do VS Code As seguintes extens\u00f5es do VS Code s\u00e3o amplamente utilizadas. Extens\u00e3o Terraform Esta extens\u00e3o fornece realce de sintaxe, lintagem, formata\u00e7\u00e3o e capacidades de valida\u00e7\u00e3o. Extens\u00e3o Azure Terraform Esta extens\u00e3o oferece suporte aos comandos do Terraform, visualiza\u00e7\u00e3o de gr\u00e1fico de recursos e integra\u00e7\u00e3o com o CloudShell dentro do VS Code. Valida\u00e7\u00e3o de Build Certifique-se de aplicar os guias de estilo durante a constru\u00e7\u00e3o. O seguinte script de exemplo pode ser usado para instalar o Terraform e um linter que verifica a formata\u00e7\u00e3o e erros comuns. #! /bin/bash set -e SCRIPT_DIR = $( dirname \" $BASH_SOURCE \" ) cd \" $SCRIPT_DIR \" TF_VERSION = 0 .12.4 TF_LINT_VERSION = 0 .9.1 echo -e \"\\n\\n>>> Instalando Terraform 0.12\" # Instale as ferramentas do Terraform para a verifica\u00e7\u00e3o de formata\u00e7\u00e3o wget -q https://releases.hashicorp.com/terraform/ ${ TF_VERSION } /terraform_ ${ TF_VERSION } _linux_amd64.zip -O /tmp/terraform.zip sudo unzip -q -o -d /usr/local/bin/ /tmp/terraform.zip echo \"\" echo -e \"\\n\\n>>> Instalando o TFLint (terceiros)\" wget -q https://github.com/wata727/tflint/releases/download/v ${ TF_LINT_VERSION } /tflint_linux_amd64.zip -O /tmp/tflint.zip sudo unzip -q -o -d /usr/local/bin/ /tmp/tflint.zip echo -e \"\\n\\n>>> Vers\u00e3o do Terraform\" terraform -version echo -e \"\\n\\n>>> Formato do Terraform (se falhar, use o comando 'terraform fmt -recursive' para resolver\" terraform fmt -recursive -diff -check echo -e \"\\n\\n>>> TFLint\" tflint echo -e \"\\n\\n>>> Terraform init\" terraform init echo -e \"\\n\\n>>> Terraform validate\" terraform validate Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo Al\u00e9m da Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por esses itens espec\u00edficos de revis\u00e3o de c\u00f3digo do Terraform. Provedores Todos os provedores usados nos scripts do Terraform est\u00e3o versionados para evitar altera\u00e7\u00f5es quebradas no futuro? Organiza\u00e7\u00e3o do Reposit\u00f3rio O c\u00f3digo foi dividido em m\u00f3dulos reutiliz\u00e1veis? Os m\u00f3dulos foram divididos em arquivos .tf separados quando apropriado? O reposit\u00f3rio cont\u00e9m um README.md descrevendo a arquitetura provisionada? Se o c\u00f3digo do Terraform est\u00e1 misturado com o c\u00f3digo-fonte da aplica\u00e7\u00e3o, o c\u00f3digo do Terraform foi isolado em uma pasta dedicada? Estado do Terraform O projeto do Terraform est\u00e1 configurado usando o Azure Storage como backend de estado remoto? A chave do backend de estado remoto est\u00e1 armazenada em um local seguro (por exemplo, Azure Key Vault)? O projeto est\u00e1 configurado para usar arquivos de estado com base no ambiente, e o pipeline de implanta\u00e7\u00e3o est\u00e1 configurado para fornecer dinamicamente o nome do arquivo de estado? Vari\u00e1veis Se a infraestrutura ser\u00e1 diferente dependendo do ambiente (por exemplo, Dev, UAT, Produ\u00e7\u00e3o), os par\u00e2metros espec\u00edficos do ambiente s\u00e3o fornecidos por meio de um arquivo .tfvars ? Todas as vari\u00e1veis t\u00eam informa\u00e7\u00f5es de type . Por exemplo, list(string) ou string . Todas as vari\u00e1veis t\u00eam uma description que indica o prop\u00f3sito da vari\u00e1vel e seu uso. Valores default n\u00e3o s\u00e3o fornecidos para vari\u00e1veis que devem ser fornecidas por um usu\u00e1rio. Testes Existem testes unit\u00e1rios e de integra\u00e7\u00e3o que cobrem o c\u00f3digo do Terraform (por exemplo, Terratest , terratest-abstraction )? Nomea\u00e7\u00e3o e Estrutura do C\u00f3digo As defini\u00e7\u00f5es de recursos e fontes de dados s\u00e3o usadas corretamente nos scripts do Terraform? resource: Indica ao Terraform que a configura\u00e7\u00e3o atual \u00e9 respons\u00e1vel por gerenciar o ciclo de vida do objeto. data: Indica ao Terraform que voc\u00ea s\u00f3 deseja obter uma refer\u00eancia ao objeto existente, mas n\u00e3o deseja gerenci\u00e1-lo como parte desta configura\u00e7\u00e3o. Os nomes dos recursos come\u00e7am com o nome do provedor que os cont\u00e9m, seguido de um sublinhado? Por exemplo, um recurso do provedor postgresql pode ser nomeado como postgresql_database ? A fun\u00e7\u00e3o try s\u00f3 \u00e9 usada com refer\u00eancias de atributos simples e fun\u00e7\u00f5es de convers\u00e3o de tipo? O uso excessivo da fun\u00e7\u00e3o try para suprimir erros levar\u00e1 a uma configura\u00e7\u00e3o dif\u00edcil de entender e manter. As fun\u00e7\u00f5es de convers\u00e3o de tipo expl\u00edcito usadas para normalizar tipos s\u00f3 s\u00e3o retornadas nas sa\u00eddas do m\u00f3dulo? Convers\u00f5es de tipo expl\u00edcitas raramente s\u00e3o necess\u00e1rias no Terraform, pois ele converter\u00e1 tipos automaticamente quando necess\u00e1rio. A propriedade Sensitive no esquema est\u00e1 definida como true para os campos que cont\u00eam informa\u00e7\u00f5es confidenciais? Isso evitar\u00e1 que os valores do campo apare\u00e7am na sa\u00edda da CLI. Recomenda\u00e7\u00f5es Gerais Tente evitar o aninhamento de configura\u00e7\u00f5es secund\u00e1rias dentro de recursos. Crie uma se\u00e7\u00e3o de recursos separada para recursos, mesmo que possam ser declarados como subelementos de um recurso. Por exemplo, declarar sub-redes dentro da rede virtual versus declarar sub-redes como recursos separados em compara\u00e7\u00e3o com a rede virtual no Azure. Nunca codifique valores est\u00e1ticos na configura\u00e7\u00e3o. Declare-os na se\u00e7\u00e3o locals se uma vari\u00e1vel for necess\u00e1ria v\u00e1rias vezes como um valor est\u00e1tico e for interna \u00e0 configura\u00e7\u00e3o. Os names dos recursos criados no Azure n\u00e3o devem ser codificados ou est\u00e1ticos. Esses nomes devem ser din\u00e2micos e fornecidos pelo usu\u00e1rio usando o bloco variable . Isso \u00e9 \u00fatil especialmente nos testes de unidade quando v\u00e1rios testes s\u00e3o executados em paralelo tentando criar recursos no Azure, mas precisam de nomes diferentes (alguns recursos no Azure precisam ter nomes exclusivos, por exemplo, contas de armazenamento). \u00c9 uma boa pr\u00e1tica output o ID dos recursos criados no Azure a partir da configura\u00e7\u00e3o. Isso \u00e9 especialmente \u00fatil ao adicionar blocos din\u00e2micos para subelementos/elementos filhos ao recurso pai. Use o bloco required_providers para estabelecer a depend\u00eancia de provedores juntamente com a vers\u00e3o predefinida. Use o bloco terraform para declarar a depend\u00eancia do provedor com a vers\u00e3o exata e tamb\u00e9m a vers\u00e3o do terraform CLI necess\u00e1ria para a configura\u00e7\u00e3o. Valide os valores das vari\u00e1veis fornecidos com base no uso e no tipo da vari\u00e1vel. A valida\u00e7\u00e3o pode ser feita nas vari\u00e1veis adicionando o bloco validation .","title":"Revis\u00e3o de C\u00f3digo em Terraform"},{"location":"code-reviews/recipes/terraform/#revisao-de-codigo-em-terraform","text":"","title":"Revis\u00e3o de C\u00f3digo em Terraform"},{"location":"code-reviews/recipes/terraform/#guia-de-estilo","text":"Os desenvolvedores devem seguir o guia de estilo do Terraform . Projetos devem verificar os scripts do Terraform com ferramentas automatizadas.","title":"Guia de Estilo"},{"location":"code-reviews/recipes/terraform/#analise-de-codigo-linting","text":"","title":"An\u00e1lise de C\u00f3digo / Linting"},{"location":"code-reviews/recipes/terraform/#tflint","text":"O TFLint \u00e9 um linter do Terraform focado em poss\u00edveis erros, melhores pr\u00e1ticas, etc. Uma vez instalado o TFLint no ambiente, ele pode ser invocado usando a extens\u00e3o do VS Code terraform .","title":"TFLint"},{"location":"code-reviews/recipes/terraform/#extensoes-do-vs-code","text":"As seguintes extens\u00f5es do VS Code s\u00e3o amplamente utilizadas.","title":"Extens\u00f5es do VS Code"},{"location":"code-reviews/recipes/terraform/#extensao-terraform","text":"Esta extens\u00e3o fornece realce de sintaxe, lintagem, formata\u00e7\u00e3o e capacidades de valida\u00e7\u00e3o.","title":"Extens\u00e3o Terraform"},{"location":"code-reviews/recipes/terraform/#extensao-azure-terraform","text":"Esta extens\u00e3o oferece suporte aos comandos do Terraform, visualiza\u00e7\u00e3o de gr\u00e1fico de recursos e integra\u00e7\u00e3o com o CloudShell dentro do VS Code.","title":"Extens\u00e3o Azure Terraform"},{"location":"code-reviews/recipes/terraform/#validacao-de-build","text":"Certifique-se de aplicar os guias de estilo durante a constru\u00e7\u00e3o. O seguinte script de exemplo pode ser usado para instalar o Terraform e um linter que verifica a formata\u00e7\u00e3o e erros comuns. #! /bin/bash set -e SCRIPT_DIR = $( dirname \" $BASH_SOURCE \" ) cd \" $SCRIPT_DIR \" TF_VERSION = 0 .12.4 TF_LINT_VERSION = 0 .9.1 echo -e \"\\n\\n>>> Instalando Terraform 0.12\" # Instale as ferramentas do Terraform para a verifica\u00e7\u00e3o de formata\u00e7\u00e3o wget -q https://releases.hashicorp.com/terraform/ ${ TF_VERSION } /terraform_ ${ TF_VERSION } _linux_amd64.zip -O /tmp/terraform.zip sudo unzip -q -o -d /usr/local/bin/ /tmp/terraform.zip echo \"\" echo -e \"\\n\\n>>> Instalando o TFLint (terceiros)\" wget -q https://github.com/wata727/tflint/releases/download/v ${ TF_LINT_VERSION } /tflint_linux_amd64.zip -O /tmp/tflint.zip sudo unzip -q -o -d /usr/local/bin/ /tmp/tflint.zip echo -e \"\\n\\n>>> Vers\u00e3o do Terraform\" terraform -version echo -e \"\\n\\n>>> Formato do Terraform (se falhar, use o comando 'terraform fmt -recursive' para resolver\" terraform fmt -recursive -diff -check echo -e \"\\n\\n>>> TFLint\" tflint echo -e \"\\n\\n>>> Terraform init\" terraform init echo -e \"\\n\\n>>> Terraform validate\" terraform validate","title":"Valida\u00e7\u00e3o de Build"},{"location":"code-reviews/recipes/terraform/#lista-de-verificacao-de-revisao-de-codigo","text":"Al\u00e9m da Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo , voc\u00ea tamb\u00e9m deve procurar por esses itens espec\u00edficos de revis\u00e3o de c\u00f3digo do Terraform.","title":"Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo"},{"location":"code-reviews/recipes/terraform/#provedores","text":"Todos os provedores usados nos scripts do Terraform est\u00e3o versionados para evitar altera\u00e7\u00f5es quebradas no futuro?","title":"Provedores"},{"location":"code-reviews/recipes/terraform/#organizacao-do-repositorio","text":"O c\u00f3digo foi dividido em m\u00f3dulos reutiliz\u00e1veis? Os m\u00f3dulos foram divididos em arquivos .tf separados quando apropriado? O reposit\u00f3rio cont\u00e9m um README.md descrevendo a arquitetura provisionada? Se o c\u00f3digo do Terraform est\u00e1 misturado com o c\u00f3digo-fonte da aplica\u00e7\u00e3o, o c\u00f3digo do Terraform foi isolado em uma pasta dedicada?","title":"Organiza\u00e7\u00e3o do Reposit\u00f3rio"},{"location":"code-reviews/recipes/terraform/#estado-do-terraform","text":"O projeto do Terraform est\u00e1 configurado usando o Azure Storage como backend de estado remoto? A chave do backend de estado remoto est\u00e1 armazenada em um local seguro (por exemplo, Azure Key Vault)? O projeto est\u00e1 configurado para usar arquivos de estado com base no ambiente, e o pipeline de implanta\u00e7\u00e3o est\u00e1 configurado para fornecer dinamicamente o nome do arquivo de estado?","title":"Estado do Terraform"},{"location":"code-reviews/recipes/terraform/#variaveis","text":"Se a infraestrutura ser\u00e1 diferente dependendo do ambiente (por exemplo, Dev, UAT, Produ\u00e7\u00e3o), os par\u00e2metros espec\u00edficos do ambiente s\u00e3o fornecidos por meio de um arquivo .tfvars ? Todas as vari\u00e1veis t\u00eam informa\u00e7\u00f5es de type . Por exemplo, list(string) ou string . Todas as vari\u00e1veis t\u00eam uma description que indica o prop\u00f3sito da vari\u00e1vel e seu uso. Valores default n\u00e3o s\u00e3o fornecidos para vari\u00e1veis que devem ser fornecidas por um usu\u00e1rio.","title":"Vari\u00e1veis"},{"location":"code-reviews/recipes/terraform/#testes","text":"Existem testes unit\u00e1rios e de integra\u00e7\u00e3o que cobrem o c\u00f3digo do Terraform (por exemplo, Terratest , terratest-abstraction )?","title":"Testes"},{"location":"code-reviews/recipes/terraform/#nomeacao-e-estrutura-do-codigo","text":"As defini\u00e7\u00f5es de recursos e fontes de dados s\u00e3o usadas corretamente nos scripts do Terraform? resource: Indica ao Terraform que a configura\u00e7\u00e3o atual \u00e9 respons\u00e1vel por gerenciar o ciclo de vida do objeto. data: Indica ao Terraform que voc\u00ea s\u00f3 deseja obter uma refer\u00eancia ao objeto existente, mas n\u00e3o deseja gerenci\u00e1-lo como parte desta configura\u00e7\u00e3o. Os nomes dos recursos come\u00e7am com o nome do provedor que os cont\u00e9m, seguido de um sublinhado? Por exemplo, um recurso do provedor postgresql pode ser nomeado como postgresql_database ? A fun\u00e7\u00e3o try s\u00f3 \u00e9 usada com refer\u00eancias de atributos simples e fun\u00e7\u00f5es de convers\u00e3o de tipo? O uso excessivo da fun\u00e7\u00e3o try para suprimir erros levar\u00e1 a uma configura\u00e7\u00e3o dif\u00edcil de entender e manter. As fun\u00e7\u00f5es de convers\u00e3o de tipo expl\u00edcito usadas para normalizar tipos s\u00f3 s\u00e3o retornadas nas sa\u00eddas do m\u00f3dulo? Convers\u00f5es de tipo expl\u00edcitas raramente s\u00e3o necess\u00e1rias no Terraform, pois ele converter\u00e1 tipos automaticamente quando necess\u00e1rio. A propriedade Sensitive no esquema est\u00e1 definida como true para os campos que cont\u00eam informa\u00e7\u00f5es confidenciais? Isso evitar\u00e1 que os valores do campo apare\u00e7am na sa\u00edda da CLI.","title":"Nomea\u00e7\u00e3o e Estrutura do C\u00f3digo"},{"location":"code-reviews/recipes/terraform/#recomendacoes-gerais","text":"Tente evitar o aninhamento de configura\u00e7\u00f5es secund\u00e1rias dentro de recursos. Crie uma se\u00e7\u00e3o de recursos separada para recursos, mesmo que possam ser declarados como subelementos de um recurso. Por exemplo, declarar sub-redes dentro da rede virtual versus declarar sub-redes como recursos separados em compara\u00e7\u00e3o com a rede virtual no Azure. Nunca codifique valores est\u00e1ticos na configura\u00e7\u00e3o. Declare-os na se\u00e7\u00e3o locals se uma vari\u00e1vel for necess\u00e1ria v\u00e1rias vezes como um valor est\u00e1tico e for interna \u00e0 configura\u00e7\u00e3o. Os names dos recursos criados no Azure n\u00e3o devem ser codificados ou est\u00e1ticos. Esses nomes devem ser din\u00e2micos e fornecidos pelo usu\u00e1rio usando o bloco variable . Isso \u00e9 \u00fatil especialmente nos testes de unidade quando v\u00e1rios testes s\u00e3o executados em paralelo tentando criar recursos no Azure, mas precisam de nomes diferentes (alguns recursos no Azure precisam ter nomes exclusivos, por exemplo, contas de armazenamento). \u00c9 uma boa pr\u00e1tica output o ID dos recursos criados no Azure a partir da configura\u00e7\u00e3o. Isso \u00e9 especialmente \u00fatil ao adicionar blocos din\u00e2micos para subelementos/elementos filhos ao recurso pai. Use o bloco required_providers para estabelecer a depend\u00eancia de provedores juntamente com a vers\u00e3o predefinida. Use o bloco terraform para declarar a depend\u00eancia do provedor com a vers\u00e3o exata e tamb\u00e9m a vers\u00e3o do terraform CLI necess\u00e1ria para a configura\u00e7\u00e3o. Valide os valores das vari\u00e1veis fornecidos com base no uso e no tipo da vari\u00e1vel. A valida\u00e7\u00e3o pode ser feita nas vari\u00e1veis adicionando o bloco validation .","title":"Recomenda\u00e7\u00f5es Gerais"},{"location":"continuous-delivery/","text":"Entrega Cont\u00ednua A inspira\u00e7\u00e3o por tr\u00e1s da entrega cont\u00ednua \u00e9 entregar constantemente software valioso para usu\u00e1rios e desenvolvedores com mais frequ\u00eancia. Aplicar os princ\u00edpios e pr\u00e1ticas delineados neste readme ajudar\u00e1 voc\u00ea a reduzir riscos, eliminar opera\u00e7\u00f5es manuais e aumentar a qualidade e a confian\u00e7a. Implantar software envolve os seguintes princ\u00edpios: Prover e gerenciar o ambiente em nuvem em tempo de execu\u00e7\u00e3o para sua aplica\u00e7\u00e3o (recursos em nuvem, infraestrutura, hardware, servi\u00e7os, etc). Instalar a vers\u00e3o da aplica\u00e7\u00e3o alvo em todos os ambientes em nuvem. Configurar sua aplica\u00e7\u00e3o, incluindo quaisquer dados necess\u00e1rios. Um pipeline de entrega cont\u00ednua \u00e9 uma manifesta\u00e7\u00e3o automatizada de seu processo para otimizar esses princ\u00edpios de maneira consistente e repet\u00edvel. Objetivo Seguir as melhores pr\u00e1ticas da ind\u00fastria para entregar mudan\u00e7as de software para clientes e desenvolvedores. Estabelecer consist\u00eancia para os princ\u00edpios orientadores e melhores pr\u00e1ticas ao montar fluxos de entrega cont\u00ednua. Orienta\u00e7\u00e3o Geral Definir uma Estrat\u00e9gia de Lan\u00e7amento \u00c9 importante estabelecer um entendimento comum entre o L\u00edder de Desenvolvimento e as partes interessadas da aplica\u00e7\u00e3o sobre a estrat\u00e9gia/design de lan\u00e7amento durante a fase de planejamento de um projeto. Esse entendimento comum inclui a implanta\u00e7\u00e3o e manuten\u00e7\u00e3o da aplica\u00e7\u00e3o ao longo de seu ciclo de vida de desenvolvimento de software. Princ\u00edpios da Estrat\u00e9gia de Lan\u00e7amento Continuous Delivery por Jez Humble e David Farley cobre as principais considera\u00e7\u00f5es a seguir ao criar uma estrat\u00e9gia de lan\u00e7amento: Respons\u00e1veis pelos implantes em cada ambiente, bem como respons\u00e1veis pelo lan\u00e7amento. Uma estrat\u00e9gia de gerenciamento de ativos e configura\u00e7\u00f5es. Enumera\u00e7\u00e3o dos ambientes dispon\u00edveis para aceita\u00e7\u00e3o, capacidade, integra\u00e7\u00e3o e teste de aceita\u00e7\u00e3o do usu\u00e1rio, e o processo pelo qual as compila\u00e7\u00f5es ser\u00e3o movidas por esses ambientes. Uma descri\u00e7\u00e3o dos processos a serem seguidos para implanta\u00e7\u00e3o nos ambientes de teste e produ\u00e7\u00e3o, como solicita\u00e7\u00f5es de altera\u00e7\u00e3o a serem abertas e aprova\u00e7\u00f5es a serem concedidas. Uma discuss\u00e3o sobre o m\u00e9todo pelo qual a configura\u00e7\u00e3o em tempo de implanta\u00e7\u00e3o e em tempo de execu\u00e7\u00e3o da aplica\u00e7\u00e3o ser\u00e1 gerenciada, e como isso se relaciona com o processo de implanta\u00e7\u00e3o automatizada. _Descri\u00e7\u00e3o da integra\u00e7\u00e3o com quaisquer sistemas externos. Em que est\u00e1gio e como eles s\u00e3o testados como parte de um lan\u00e7amento? Como o operador t\u00e9cnico se comunica com o provedor em caso de problema? _Um plano de recupera\u00e7\u00e3o de desastres para que o estado da aplica\u00e7\u00e3o possa ser recuperado ap\u00f3s um desastre. Quais etapas ser\u00e3o necess\u00e1rias para reiniciar ou reimplementar a aplica\u00e7\u00e3o em caso de falha. _Dimensionamento e planejamento de capacidade de produ\u00e7\u00e3o: Quanta dados sua aplica\u00e7\u00e3o ao vivo criar\u00e1? Quantos arquivos de log ou bancos de dados voc\u00ea precisar\u00e1? Quanta largura de banda e espa\u00e7o em disco voc\u00ea precisar\u00e1? Qual lat\u00eancia os clientes esperam? Como funciona a implanta\u00e7\u00e3o inicial em produ\u00e7\u00e3o. Como corrigir defeitos e aplicar corre\u00e7\u00f5es no ambiente de produ\u00e7\u00e3o ser\u00e1 tratado. Como as atualiza\u00e7\u00f5es do ambiente de produ\u00e7\u00e3o ser\u00e3o tratadas, incluindo a migra\u00e7\u00e3o de dados. Como as atualiza\u00e7\u00f5es ser\u00e3o realizadas na aplica\u00e7\u00e3o sem destruir seu estado. Lan\u00e7amento da Aplica\u00e7\u00e3o e Promo\u00e7\u00e3o de Ambiente Seu processo de manifesta\u00e7\u00e3o de lan\u00e7amento deve pegar o artefato de constru\u00e7\u00e3o implant\u00e1vel criado em sua etapa de confirma\u00e7\u00e3o e implant\u00e1-lo em todos os ambientes em nuvem, come\u00e7ando pelo ambiente de teste. O ambiente de teste ( muitas vezes chamado de Integra\u00e7\u00e3o ) atua como um port\u00e3o para validar se sua su\u00edte de testes \u00e9 bem-sucedida para todos os candidatos a lan\u00e7amento. Essa valida\u00e7\u00e3o deve sempre come\u00e7ar em um ambiente de teste enquanto inspeciona o lan\u00e7amento implantado a partir do branch de feature/libera\u00e7\u00e3o contendo suas mudan\u00e7as de c\u00f3digo. As mudan\u00e7as de c\u00f3digo lan\u00e7adas no ambiente de teste normalmente t\u00eam como alvo o branch principal (quando usando trunk ) ou o branch de lan\u00e7amento (quando usando gitflow ). O Primeiro Lan\u00e7amento O primeiro lan\u00e7amento de qualquer aplica\u00e7\u00e3o deve ser apresentado ao cliente em um ambiente semelhante \u00e0 produ\u00e7\u00e3o ( UAT ) para obter feedback rapidamente. O ambiente de UAT \u00e9 usado para obter a aceita\u00e7\u00e3o do propriet\u00e1rio do produto para, em \u00faltima an\u00e1lise, promover o lan\u00e7amento para produ\u00e7\u00e3o. Crit\u00e9rios para um ambiente semelhante \u00e0 produ\u00e7\u00e3o Executa o mesmo sistema operacional que a produ\u00e7\u00e3o. Tem o mesmo software instalado que a produ\u00e7\u00e3o. \u00c9 dimensionado e configurado da mesma forma que a produ\u00e7\u00e3o. Reflete a topologia de rede da produ\u00e7\u00e3o. Testes de carga simulados semelhantes \u00e0 produ\u00e7\u00e3o s\u00e3o executados ap\u00f3s um lan\u00e7amento para identificar qualquer degrada\u00e7\u00e3o de lat\u00eancia ou throughput. Modelagem de seu Pipeline de Lan\u00e7amento \u00c9 crucial modelar seu processo de teste e lan\u00e7amento para estabelecer um entendimento comum entre os engenheiros de aplica\u00e7\u00e3o e as partes interessadas do cliente. Alinhar especificamente as expectativas sobre quantos ambientes em nuvem precisam ser pr\u00e9-provisionados, bem como definir os pap\u00e9is e responsabilidades dos port\u00f5es de aprova\u00e7\u00e3o. Considera\u00e7\u00f5es na Modelagem do Pipeline de Lan\u00e7amento Representar todas as etapas pelas quais uma mudan\u00e7a na aplica\u00e7\u00e3o precisaria passar antes de ser lan\u00e7ada na produ\u00e7\u00e3o. Definir todos os controles de port\u00f5es de lan\u00e7amento. Determinar grupos de Cloud RBAC espec\u00edficos do cliente que t\u00eam autoridade para aprovar candidatos a lan\u00e7amento por ambiente. Est\u00e1gios do Pipeline de Lan\u00e7amento Os est\u00e1gios em seu fluxo de trabalho de lan\u00e7amento est\u00e3o testando, em \u00faltima inst\u00e2ncia, uma vers\u00e3o de sua aplica\u00e7\u00e3o para validar se ela pode ser lan\u00e7ada de acordo com seus crit\u00e9rios de aceita\u00e7\u00e3o. O pipeline de lan\u00e7amento deve considerar as seguintes condi\u00e7\u00f5es: Sele\u00e7\u00e3o de Lan\u00e7amento: O desenvolvedor que realiza o teste da aplica\u00e7\u00e3o deve ter a capacidade de selecionar qual vers\u00e3o de lan\u00e7amento implantar no ambiente de teste. * Implanta\u00e7\u00e3o - Libere o artefato de implanta\u00e7\u00e3o da aplica\u00e7\u00e3o ( criado na etapa CI ) para o ambiente em nuvem de destino. * Configura\u00e7\u00e3o - As aplica\u00e7\u00f5es devem ser configuradas de forma consistente em todos os ambientes. Essa configura\u00e7\u00e3o \u00e9 aplicada no momento da implanta\u00e7\u00e3o. Dados sens\u00edveis, como segredos de aplica\u00e7\u00e3o e certificados, devem ser gerenciados em um reposit\u00f3rio totalmente gerenciado de chaves e segredos (por exemplo, Key Vault , KMS ). Quaisquer segredos usados pela aplica\u00e7\u00e3o devem ser obtidos internamente pela pr\u00f3pria aplica\u00e7\u00e3o. Os segredos da aplica\u00e7\u00e3o n\u00e3o devem ser expostos no ambiente de execu\u00e7\u00e3o. Incentivamos os princ\u00edpios do Modelo de 12 Fatores, especialmente quando se trata de gerenciamento de configura\u00e7\u00e3o . * Migra\u00e7\u00e3o de Dados - Pr\u00e9-popular o estado da aplica\u00e7\u00e3o e/ou registros de dados necess\u00e1rios para o ambiente de execu\u00e7\u00e3o. Isso pode incluir dados de teste necess\u00e1rios para sua su\u00edte de testes de integra\u00e7\u00e3o de ponta a ponta. * Teste de Validade de Implanta\u00e7\u00e3o. Seu teste de validade tamb\u00e9m deve verificar se sua aplica\u00e7\u00e3o est\u00e1 apontando para a configura\u00e7\u00e3o correta (por exemplo, produ\u00e7\u00e3o apontando para um banco de dados UAT). * Realizar cen\u00e1rios de teste de aceita\u00e7\u00e3o manuais ou automatizados. * Aprovar o port\u00e3o de lan\u00e7amento para promover a vers\u00e3o da aplica\u00e7\u00e3o para o ambiente em nuvem de destino. Essa promo\u00e7\u00e3o tamb\u00e9m deve incluir o estado de configura\u00e7\u00e3o do ambiente (por exemplo, novas configura\u00e7\u00f5es de ambiente, flags de recursos, etc). Aquecimento do Lan\u00e7amento ao Vivo Um lan\u00e7amento deve estar em execu\u00e7\u00e3o por um per\u00edodo de tempo antes de ser considerado ativo e permitido para aceitar o tr\u00e1fego do usu\u00e1rio. Essas atividades de aquecimento podem incluir o pr\u00e9-preenchimento de servidores de aplica\u00e7\u00e3o e bancos de dados com qualquer cache dependente, bem como estabelecer todas as conex\u00f5es de servi\u00e7o (por exemplo, aloca\u00e7\u00f5es de pool de conex\u00e3o, etc). Lan\u00e7amentos Pr\u00e9-produ\u00e7\u00e3o Os candidatos a lan\u00e7amento da aplica\u00e7\u00e3o devem ser implantados em um ambiente de staging semelhante ao de produ\u00e7\u00e3o para realiza\u00e7\u00e3o de testes manuais/automatizados finais ( incluindo testes de capacidade ). Seus ambientes em nuvem de produ\u00e7\u00e3o e staging/pr\u00e9-produ\u00e7\u00e3o devem ser configurados no in\u00edcio do projeto. O aquecimento da aplica\u00e7\u00e3o deve ser uma medi\u00e7\u00e3o quantificada que \u00e9 validada como parte de seus testes de valida\u00e7\u00e3o pr\u00e9-produ\u00e7\u00e3o. Rollback de Lan\u00e7amentos Sua estrat\u00e9gia de lan\u00e7amento deve considerar cen\u00e1rios de rollback no caso de falhas inesperadas ap\u00f3s uma implanta\u00e7\u00e3o. O rollback de lan\u00e7amentos pode ficar complicado, especialmente quando ocorrem altera\u00e7\u00f5es em registros/objetos de banco de dados como resultado de sua implanta\u00e7\u00e3o ( seja inadvertidamente ou intencionalmente ). Se n\u00e3o houver altera\u00e7\u00f5es de dados que precisem ser revertidas, voc\u00ea pode simplesmente acionar um novo candidato a lan\u00e7amento para a \u00faltima vers\u00e3o conhecida da produ\u00e7\u00e3o e promover esse lan\u00e7amento ao longo de seu pipeline de entrega cont\u00ednua. Para cen\u00e1rios de rollback envolvendo altera\u00e7\u00f5es de dados, existem v\u00e1rias abordagens para mitigar isso, que est\u00e3o fora do escopo deste guia. Algumas envolvem a vers\u00e3o de registros de banco de dados, registro no tempo de registros/objetos de banco de dados, etc. Todos os arquivos de dados e bancos de dados devem ser copiados de backup antes de cada lan\u00e7amento, para que possam ser restaurados. A estrat\u00e9gia de mitiga\u00e7\u00e3o para esse cen\u00e1rio variar\u00e1 entre nossos projetos. A expectativa \u00e9 que essa estrat\u00e9gia de mitiga\u00e7\u00e3o seja abordada como parte de sua estrat\u00e9gia de lan\u00e7amento. Outra abordagem a considerar ao projetar sua estrat\u00e9gia de lan\u00e7amento s\u00e3o os an\u00e9is de implanta\u00e7\u00e3o . Essa abordagem simplifica cen\u00e1rios de rollback ao limitar o impacto de seu lan\u00e7amento nos usu\u00e1rios finais, implantando e validando gradualmente suas altera\u00e7\u00f5es na produ\u00e7\u00e3o. Lan\u00e7amentos sem Interrup\u00e7\u00e3o Uma implanta\u00e7\u00e3o quente segue um processo de troca de usu\u00e1rios de uma vers\u00e3o para outra sem impactar a experi\u00eancia do usu\u00e1rio. Como exemplo, os servi\u00e7os gerenciados pela Azure permitem que os desenvolvedores validem as mudan\u00e7as do aplicativo em um slot de implanta\u00e7\u00e3o de teste antes de troc\u00e1-lo pelo slot de produ\u00e7\u00e3o. A troca de slots de servi\u00e7o de aplicativo tamb\u00e9m pode ser totalmente automatizada assim que o slot de origem estiver totalmente aquecido (e a troca autom\u00e1tica estiver ativada). A troca de slots tamb\u00e9m simplifica a revers\u00e3o de lan\u00e7amentos assim que um operador t\u00e9cnico restaurar os slots para seus estados pr\u00e9-troca. O Kubernetes oferece suporte nativo a atualiza\u00e7\u00f5es cont\u00ednuas . Implanta\u00e7\u00f5es Blue/Green Blue/Green \u00e9 uma t\u00e9cnica de implanta\u00e7\u00e3o que reduz o tempo de inatividade ao executar duas inst\u00e2ncias id\u00eanticas de um ambiente de produ\u00e7\u00e3o chamadas Blue e Green . Apenas um desses ambientes aceita tr\u00e1fego de produ\u00e7\u00e3o ao vivo de cada vez. No exemplo acima, o tr\u00e1fego de produ\u00e7\u00e3o ao vivo \u00e9 direcionado para o ambiente Green. Durante os lan\u00e7amentos da aplica\u00e7\u00e3o, a nova vers\u00e3o \u00e9 implantada no ambiente Blue, o que ocorre independentemente do ambiente Green. O tr\u00e1fego ao vivo n\u00e3o \u00e9 afetado pelas implanta\u00e7\u00f5es do ambiente Blue. Voc\u00ea pode direcionar sua su\u00edte de testes de ponta a ponta ao ambiente Blue como um de seus pontos de verifica\u00e7\u00e3o de teste. Migrar os usu\u00e1rios para a nova vers\u00e3o do aplicativo \u00e9 t\u00e3o simples quanto alterar a configura\u00e7\u00e3o do roteador para direcionar todo o tr\u00e1fego para o ambiente Blue. Essa t\u00e9cnica simplifica cen\u00e1rios de rollback, pois voc\u00ea pode simplesmente alternar o roteador de volta para o Green. Provedores de banco de dados como Cosmos e Azure SQL oferecem suporte nativo \u00e0 replica\u00e7\u00e3o de dados para ajudar a habilitar ambientes de banco de dados Blue/Green totalmente sincronizados. Implanta\u00e7\u00f5es de Lan\u00e7amento Canary As implanta\u00e7\u00f5es Canary permitem que equipes de desenvolvimento obtenham feedback mais r\u00e1pido ao implantar novos recursos na produ\u00e7\u00e3o. Esses lan\u00e7amentos s\u00e3o implantados em um subconjunto de n\u00f3s de produ\u00e7\u00e3o ( onde nenhum usu\u00e1rio \u00e9 direcionado ) para coletar insights precoces sobre testes de capacidade, completude funcional e impacto. Uma vez conclu\u00eddos os testes de capacidade e fuma\u00e7a, voc\u00ea pode direcionar um pequeno subconjunto de usu\u00e1rios para os n\u00f3s de produ\u00e7\u00e3o que hospedam o candidato a lan\u00e7amento. As implanta\u00e7\u00f5es Canary simplificam os rollbacks, pois voc\u00ea pode evitar direcionar os usu\u00e1rios para vers\u00f5es ruins do aplicativo. Tente limitar o n\u00famero de vers\u00f5es de sua aplica\u00e7\u00e3o em execu\u00e7\u00e3o paralelamente na produ\u00e7\u00e3o, pois isso pode complicar os controles de manuten\u00e7\u00e3o e monitoramento. Solu\u00e7\u00f5es de Low-Code/No-Code Solu\u00e7\u00f5es de Low-Code/No-Codeo aumentaram sua participa\u00e7\u00e3o nas aplica\u00e7\u00f5es e processos e, por causa disso, \u00e9 necess\u00e1rio uma adequada combina\u00e7\u00e3o de disciplinas para melhorar seu desenvolvimento. Aqui est\u00e1 um guia para entrega cont\u00ednua para Solu\u00e7\u00f5es de Low-Code/No-Code . Refer\u00eancias Entrega Cont\u00ednua por Jez Humble e David Farley. Integra\u00e7\u00e3o Cont\u00ednua vs. Entrega Cont\u00ednua vs. Implanta\u00e7\u00e3o Cont\u00ednua An\u00e9is de Implanta\u00e7\u00e3o Ferramentas Confira as seguintes ferramentas que podem ajudar nas melhores pr\u00e1ticas de Entrega Cont\u00ednua mencionadas acima: Flux para GitOps. Tekton para pipelines nativas do Kubernetes. \u00c9 importante observar que o Jenkins-X usa o Tekton em seu funcionamento interno. Argo Workflows para gerenciamento de fluxo de trabalho. Flagger para lan\u00e7amentos poderosos nativos do Kubernetes, incluindo abordagens de implanta\u00e7\u00e3o blue/green, canaryo e testes A/B. Embora n\u00e3o diretamente relacionado \u00e0 Entrega Cont\u00ednua, voc\u00ea pode explorar o jsonnet , uma linguagem de modelagem que ajuda a reduzir a redund\u00e2ncia em manifestos YAML/JSON e promove a reutiliza\u00e7\u00e3o. Para solu\u00e7\u00f5es de baixo c\u00f3digo, voc\u00ea pode seguir o guia de entrega cont\u00ednua para Solu\u00e7\u00f5es de Low-Code/No-Code .","title":"Entrega Cont\u00ednua"},{"location":"continuous-delivery/#entrega-continua","text":"A inspira\u00e7\u00e3o por tr\u00e1s da entrega cont\u00ednua \u00e9 entregar constantemente software valioso para usu\u00e1rios e desenvolvedores com mais frequ\u00eancia. Aplicar os princ\u00edpios e pr\u00e1ticas delineados neste readme ajudar\u00e1 voc\u00ea a reduzir riscos, eliminar opera\u00e7\u00f5es manuais e aumentar a qualidade e a confian\u00e7a. Implantar software envolve os seguintes princ\u00edpios: Prover e gerenciar o ambiente em nuvem em tempo de execu\u00e7\u00e3o para sua aplica\u00e7\u00e3o (recursos em nuvem, infraestrutura, hardware, servi\u00e7os, etc). Instalar a vers\u00e3o da aplica\u00e7\u00e3o alvo em todos os ambientes em nuvem. Configurar sua aplica\u00e7\u00e3o, incluindo quaisquer dados necess\u00e1rios. Um pipeline de entrega cont\u00ednua \u00e9 uma manifesta\u00e7\u00e3o automatizada de seu processo para otimizar esses princ\u00edpios de maneira consistente e repet\u00edvel.","title":"Entrega Cont\u00ednua"},{"location":"continuous-delivery/#objetivo","text":"Seguir as melhores pr\u00e1ticas da ind\u00fastria para entregar mudan\u00e7as de software para clientes e desenvolvedores. Estabelecer consist\u00eancia para os princ\u00edpios orientadores e melhores pr\u00e1ticas ao montar fluxos de entrega cont\u00ednua.","title":"Objetivo"},{"location":"continuous-delivery/#orientacao-geral","text":"","title":"Orienta\u00e7\u00e3o Geral"},{"location":"continuous-delivery/#definir-uma-estrategia-de-lancamento","text":"\u00c9 importante estabelecer um entendimento comum entre o L\u00edder de Desenvolvimento e as partes interessadas da aplica\u00e7\u00e3o sobre a estrat\u00e9gia/design de lan\u00e7amento durante a fase de planejamento de um projeto. Esse entendimento comum inclui a implanta\u00e7\u00e3o e manuten\u00e7\u00e3o da aplica\u00e7\u00e3o ao longo de seu ciclo de vida de desenvolvimento de software.","title":"Definir uma Estrat\u00e9gia de Lan\u00e7amento"},{"location":"continuous-delivery/#principios-da-estrategia-de-lancamento","text":"Continuous Delivery por Jez Humble e David Farley cobre as principais considera\u00e7\u00f5es a seguir ao criar uma estrat\u00e9gia de lan\u00e7amento: Respons\u00e1veis pelos implantes em cada ambiente, bem como respons\u00e1veis pelo lan\u00e7amento. Uma estrat\u00e9gia de gerenciamento de ativos e configura\u00e7\u00f5es. Enumera\u00e7\u00e3o dos ambientes dispon\u00edveis para aceita\u00e7\u00e3o, capacidade, integra\u00e7\u00e3o e teste de aceita\u00e7\u00e3o do usu\u00e1rio, e o processo pelo qual as compila\u00e7\u00f5es ser\u00e3o movidas por esses ambientes. Uma descri\u00e7\u00e3o dos processos a serem seguidos para implanta\u00e7\u00e3o nos ambientes de teste e produ\u00e7\u00e3o, como solicita\u00e7\u00f5es de altera\u00e7\u00e3o a serem abertas e aprova\u00e7\u00f5es a serem concedidas. Uma discuss\u00e3o sobre o m\u00e9todo pelo qual a configura\u00e7\u00e3o em tempo de implanta\u00e7\u00e3o e em tempo de execu\u00e7\u00e3o da aplica\u00e7\u00e3o ser\u00e1 gerenciada, e como isso se relaciona com o processo de implanta\u00e7\u00e3o automatizada. _Descri\u00e7\u00e3o da integra\u00e7\u00e3o com quaisquer sistemas externos. Em que est\u00e1gio e como eles s\u00e3o testados como parte de um lan\u00e7amento? Como o operador t\u00e9cnico se comunica com o provedor em caso de problema? _Um plano de recupera\u00e7\u00e3o de desastres para que o estado da aplica\u00e7\u00e3o possa ser recuperado ap\u00f3s um desastre. Quais etapas ser\u00e3o necess\u00e1rias para reiniciar ou reimplementar a aplica\u00e7\u00e3o em caso de falha. _Dimensionamento e planejamento de capacidade de produ\u00e7\u00e3o: Quanta dados sua aplica\u00e7\u00e3o ao vivo criar\u00e1? Quantos arquivos de log ou bancos de dados voc\u00ea precisar\u00e1? Quanta largura de banda e espa\u00e7o em disco voc\u00ea precisar\u00e1? Qual lat\u00eancia os clientes esperam? Como funciona a implanta\u00e7\u00e3o inicial em produ\u00e7\u00e3o. Como corrigir defeitos e aplicar corre\u00e7\u00f5es no ambiente de produ\u00e7\u00e3o ser\u00e1 tratado. Como as atualiza\u00e7\u00f5es do ambiente de produ\u00e7\u00e3o ser\u00e3o tratadas, incluindo a migra\u00e7\u00e3o de dados. Como as atualiza\u00e7\u00f5es ser\u00e3o realizadas na aplica\u00e7\u00e3o sem destruir seu estado.","title":"Princ\u00edpios da Estrat\u00e9gia de Lan\u00e7amento"},{"location":"continuous-delivery/#lancamento-da-aplicacao-e-promocao-de-ambiente","text":"Seu processo de manifesta\u00e7\u00e3o de lan\u00e7amento deve pegar o artefato de constru\u00e7\u00e3o implant\u00e1vel criado em sua etapa de confirma\u00e7\u00e3o e implant\u00e1-lo em todos os ambientes em nuvem, come\u00e7ando pelo ambiente de teste. O ambiente de teste ( muitas vezes chamado de Integra\u00e7\u00e3o ) atua como um port\u00e3o para validar se sua su\u00edte de testes \u00e9 bem-sucedida para todos os candidatos a lan\u00e7amento. Essa valida\u00e7\u00e3o deve sempre come\u00e7ar em um ambiente de teste enquanto inspeciona o lan\u00e7amento implantado a partir do branch de feature/libera\u00e7\u00e3o contendo suas mudan\u00e7as de c\u00f3digo. As mudan\u00e7as de c\u00f3digo lan\u00e7adas no ambiente de teste normalmente t\u00eam como alvo o branch principal (quando usando trunk ) ou o branch de lan\u00e7amento (quando usando gitflow ).","title":"Lan\u00e7amento da Aplica\u00e7\u00e3o e Promo\u00e7\u00e3o de Ambiente"},{"location":"continuous-delivery/#o-primeiro-lancamento","text":"O primeiro lan\u00e7amento de qualquer aplica\u00e7\u00e3o deve ser apresentado ao cliente em um ambiente semelhante \u00e0 produ\u00e7\u00e3o ( UAT ) para obter feedback rapidamente. O ambiente de UAT \u00e9 usado para obter a aceita\u00e7\u00e3o do propriet\u00e1rio do produto para, em \u00faltima an\u00e1lise, promover o lan\u00e7amento para produ\u00e7\u00e3o.","title":"O Primeiro Lan\u00e7amento"},{"location":"continuous-delivery/#criterios-para-um-ambiente-semelhante-a-producao","text":"Executa o mesmo sistema operacional que a produ\u00e7\u00e3o. Tem o mesmo software instalado que a produ\u00e7\u00e3o. \u00c9 dimensionado e configurado da mesma forma que a produ\u00e7\u00e3o. Reflete a topologia de rede da produ\u00e7\u00e3o. Testes de carga simulados semelhantes \u00e0 produ\u00e7\u00e3o s\u00e3o executados ap\u00f3s um lan\u00e7amento para identificar qualquer degrada\u00e7\u00e3o de lat\u00eancia ou throughput.","title":"Crit\u00e9rios para um ambiente semelhante \u00e0 produ\u00e7\u00e3o"},{"location":"continuous-delivery/#modelagem-de-seu-pipeline-de-lancamento","text":"\u00c9 crucial modelar seu processo de teste e lan\u00e7amento para estabelecer um entendimento comum entre os engenheiros de aplica\u00e7\u00e3o e as partes interessadas do cliente. Alinhar especificamente as expectativas sobre quantos ambientes em nuvem precisam ser pr\u00e9-provisionados, bem como definir os pap\u00e9is e responsabilidades dos port\u00f5es de aprova\u00e7\u00e3o.","title":"Modelagem de seu Pipeline de Lan\u00e7amento"},{"location":"continuous-delivery/#consideracoes-na-modelagem-do-pipeline-de-lancamento","text":"Representar todas as etapas pelas quais uma mudan\u00e7a na aplica\u00e7\u00e3o precisaria passar antes de ser lan\u00e7ada na produ\u00e7\u00e3o. Definir todos os controles de port\u00f5es de lan\u00e7amento. Determinar grupos de Cloud RBAC espec\u00edficos do cliente que t\u00eam autoridade para aprovar candidatos a lan\u00e7amento por ambiente.","title":"Considera\u00e7\u00f5es na Modelagem do Pipeline de Lan\u00e7amento"},{"location":"continuous-delivery/#estagios-do-pipeline-de-lancamento","text":"Os est\u00e1gios em seu fluxo de trabalho de lan\u00e7amento est\u00e3o testando, em \u00faltima inst\u00e2ncia, uma vers\u00e3o de sua aplica\u00e7\u00e3o para validar se ela pode ser lan\u00e7ada de acordo com seus crit\u00e9rios de aceita\u00e7\u00e3o. O pipeline de lan\u00e7amento deve considerar as seguintes condi\u00e7\u00f5es: Sele\u00e7\u00e3o de Lan\u00e7amento: O desenvolvedor que realiza o teste da aplica\u00e7\u00e3o deve ter a capacidade de selecionar qual vers\u00e3o de lan\u00e7amento implantar no ambiente de teste. * Implanta\u00e7\u00e3o - Libere o artefato de implanta\u00e7\u00e3o da aplica\u00e7\u00e3o ( criado na etapa CI ) para o ambiente em nuvem de destino. * Configura\u00e7\u00e3o - As aplica\u00e7\u00f5es devem ser configuradas de forma consistente em todos os ambientes. Essa configura\u00e7\u00e3o \u00e9 aplicada no momento da implanta\u00e7\u00e3o. Dados sens\u00edveis, como segredos de aplica\u00e7\u00e3o e certificados, devem ser gerenciados em um reposit\u00f3rio totalmente gerenciado de chaves e segredos (por exemplo, Key Vault , KMS ). Quaisquer segredos usados pela aplica\u00e7\u00e3o devem ser obtidos internamente pela pr\u00f3pria aplica\u00e7\u00e3o. Os segredos da aplica\u00e7\u00e3o n\u00e3o devem ser expostos no ambiente de execu\u00e7\u00e3o. Incentivamos os princ\u00edpios do Modelo de 12 Fatores, especialmente quando se trata de gerenciamento de configura\u00e7\u00e3o . * Migra\u00e7\u00e3o de Dados - Pr\u00e9-popular o estado da aplica\u00e7\u00e3o e/ou registros de dados necess\u00e1rios para o ambiente de execu\u00e7\u00e3o. Isso pode incluir dados de teste necess\u00e1rios para sua su\u00edte de testes de integra\u00e7\u00e3o de ponta a ponta. * Teste de Validade de Implanta\u00e7\u00e3o. Seu teste de validade tamb\u00e9m deve verificar se sua aplica\u00e7\u00e3o est\u00e1 apontando para a configura\u00e7\u00e3o correta (por exemplo, produ\u00e7\u00e3o apontando para um banco de dados UAT). * Realizar cen\u00e1rios de teste de aceita\u00e7\u00e3o manuais ou automatizados. * Aprovar o port\u00e3o de lan\u00e7amento para promover a vers\u00e3o da aplica\u00e7\u00e3o para o ambiente em nuvem de destino. Essa promo\u00e7\u00e3o tamb\u00e9m deve incluir o estado de configura\u00e7\u00e3o do ambiente (por exemplo, novas configura\u00e7\u00f5es de ambiente, flags de recursos, etc).","title":"Est\u00e1gios do Pipeline de Lan\u00e7amento"},{"location":"continuous-delivery/#aquecimento-do-lancamento-ao-vivo","text":"Um lan\u00e7amento deve estar em execu\u00e7\u00e3o por um per\u00edodo de tempo antes de ser considerado ativo e permitido para aceitar o tr\u00e1fego do usu\u00e1rio. Essas atividades de aquecimento podem incluir o pr\u00e9-preenchimento de servidores de aplica\u00e7\u00e3o e bancos de dados com qualquer cache dependente, bem como estabelecer todas as conex\u00f5es de servi\u00e7o (por exemplo, aloca\u00e7\u00f5es de pool de conex\u00e3o, etc).","title":"Aquecimento do Lan\u00e7amento ao Vivo"},{"location":"continuous-delivery/#lancamentos-pre-producao","text":"Os candidatos a lan\u00e7amento da aplica\u00e7\u00e3o devem ser implantados em um ambiente de staging semelhante ao de produ\u00e7\u00e3o para realiza\u00e7\u00e3o de testes manuais/automatizados finais ( incluindo testes de capacidade ). Seus ambientes em nuvem de produ\u00e7\u00e3o e staging/pr\u00e9-produ\u00e7\u00e3o devem ser configurados no in\u00edcio do projeto. O aquecimento da aplica\u00e7\u00e3o deve ser uma medi\u00e7\u00e3o quantificada que \u00e9 validada como parte de seus testes de valida\u00e7\u00e3o pr\u00e9-produ\u00e7\u00e3o.","title":"Lan\u00e7amentos Pr\u00e9-produ\u00e7\u00e3o"},{"location":"continuous-delivery/#rollback-de-lancamentos","text":"Sua estrat\u00e9gia de lan\u00e7amento deve considerar cen\u00e1rios de rollback no caso de falhas inesperadas ap\u00f3s uma implanta\u00e7\u00e3o. O rollback de lan\u00e7amentos pode ficar complicado, especialmente quando ocorrem altera\u00e7\u00f5es em registros/objetos de banco de dados como resultado de sua implanta\u00e7\u00e3o ( seja inadvertidamente ou intencionalmente ). Se n\u00e3o houver altera\u00e7\u00f5es de dados que precisem ser revertidas, voc\u00ea pode simplesmente acionar um novo candidato a lan\u00e7amento para a \u00faltima vers\u00e3o conhecida da produ\u00e7\u00e3o e promover esse lan\u00e7amento ao longo de seu pipeline de entrega cont\u00ednua. Para cen\u00e1rios de rollback envolvendo altera\u00e7\u00f5es de dados, existem v\u00e1rias abordagens para mitigar isso, que est\u00e3o fora do escopo deste guia. Algumas envolvem a vers\u00e3o de registros de banco de dados, registro no tempo de registros/objetos de banco de dados, etc. Todos os arquivos de dados e bancos de dados devem ser copiados de backup antes de cada lan\u00e7amento, para que possam ser restaurados. A estrat\u00e9gia de mitiga\u00e7\u00e3o para esse cen\u00e1rio variar\u00e1 entre nossos projetos. A expectativa \u00e9 que essa estrat\u00e9gia de mitiga\u00e7\u00e3o seja abordada como parte de sua estrat\u00e9gia de lan\u00e7amento. Outra abordagem a considerar ao projetar sua estrat\u00e9gia de lan\u00e7amento s\u00e3o os an\u00e9is de implanta\u00e7\u00e3o . Essa abordagem simplifica cen\u00e1rios de rollback ao limitar o impacto de seu lan\u00e7amento nos usu\u00e1rios finais, implantando e validando gradualmente suas altera\u00e7\u00f5es na produ\u00e7\u00e3o.","title":"Rollback de Lan\u00e7amentos"},{"location":"continuous-delivery/#lancamentos-sem-interrupcao","text":"Uma implanta\u00e7\u00e3o quente segue um processo de troca de usu\u00e1rios de uma vers\u00e3o para outra sem impactar a experi\u00eancia do usu\u00e1rio. Como exemplo, os servi\u00e7os gerenciados pela Azure permitem que os desenvolvedores validem as mudan\u00e7as do aplicativo em um slot de implanta\u00e7\u00e3o de teste antes de troc\u00e1-lo pelo slot de produ\u00e7\u00e3o. A troca de slots de servi\u00e7o de aplicativo tamb\u00e9m pode ser totalmente automatizada assim que o slot de origem estiver totalmente aquecido (e a troca autom\u00e1tica estiver ativada). A troca de slots tamb\u00e9m simplifica a revers\u00e3o de lan\u00e7amentos assim que um operador t\u00e9cnico restaurar os slots para seus estados pr\u00e9-troca. O Kubernetes oferece suporte nativo a atualiza\u00e7\u00f5es cont\u00ednuas .","title":"Lan\u00e7amentos sem Interrup\u00e7\u00e3o"},{"location":"continuous-delivery/#implantacoes-bluegreen","text":"Blue/Green \u00e9 uma t\u00e9cnica de implanta\u00e7\u00e3o que reduz o tempo de inatividade ao executar duas inst\u00e2ncias id\u00eanticas de um ambiente de produ\u00e7\u00e3o chamadas Blue e Green . Apenas um desses ambientes aceita tr\u00e1fego de produ\u00e7\u00e3o ao vivo de cada vez. No exemplo acima, o tr\u00e1fego de produ\u00e7\u00e3o ao vivo \u00e9 direcionado para o ambiente Green. Durante os lan\u00e7amentos da aplica\u00e7\u00e3o, a nova vers\u00e3o \u00e9 implantada no ambiente Blue, o que ocorre independentemente do ambiente Green. O tr\u00e1fego ao vivo n\u00e3o \u00e9 afetado pelas implanta\u00e7\u00f5es do ambiente Blue. Voc\u00ea pode direcionar sua su\u00edte de testes de ponta a ponta ao ambiente Blue como um de seus pontos de verifica\u00e7\u00e3o de teste. Migrar os usu\u00e1rios para a nova vers\u00e3o do aplicativo \u00e9 t\u00e3o simples quanto alterar a configura\u00e7\u00e3o do roteador para direcionar todo o tr\u00e1fego para o ambiente Blue. Essa t\u00e9cnica simplifica cen\u00e1rios de rollback, pois voc\u00ea pode simplesmente alternar o roteador de volta para o Green. Provedores de banco de dados como Cosmos e Azure SQL oferecem suporte nativo \u00e0 replica\u00e7\u00e3o de dados para ajudar a habilitar ambientes de banco de dados Blue/Green totalmente sincronizados.","title":"Implanta\u00e7\u00f5es Blue/Green"},{"location":"continuous-delivery/#implantacoes-de-lancamento-canary","text":"As implanta\u00e7\u00f5es Canary permitem que equipes de desenvolvimento obtenham feedback mais r\u00e1pido ao implantar novos recursos na produ\u00e7\u00e3o. Esses lan\u00e7amentos s\u00e3o implantados em um subconjunto de n\u00f3s de produ\u00e7\u00e3o ( onde nenhum usu\u00e1rio \u00e9 direcionado ) para coletar insights precoces sobre testes de capacidade, completude funcional e impacto. Uma vez conclu\u00eddos os testes de capacidade e fuma\u00e7a, voc\u00ea pode direcionar um pequeno subconjunto de usu\u00e1rios para os n\u00f3s de produ\u00e7\u00e3o que hospedam o candidato a lan\u00e7amento. As implanta\u00e7\u00f5es Canary simplificam os rollbacks, pois voc\u00ea pode evitar direcionar os usu\u00e1rios para vers\u00f5es ruins do aplicativo. Tente limitar o n\u00famero de vers\u00f5es de sua aplica\u00e7\u00e3o em execu\u00e7\u00e3o paralelamente na produ\u00e7\u00e3o, pois isso pode complicar os controles de manuten\u00e7\u00e3o e monitoramento.","title":"Implanta\u00e7\u00f5es de Lan\u00e7amento Canary"},{"location":"continuous-delivery/#solucoes-de-low-codeno-code","text":"Solu\u00e7\u00f5es de Low-Code/No-Codeo aumentaram sua participa\u00e7\u00e3o nas aplica\u00e7\u00f5es e processos e, por causa disso, \u00e9 necess\u00e1rio uma adequada combina\u00e7\u00e3o de disciplinas para melhorar seu desenvolvimento. Aqui est\u00e1 um guia para entrega cont\u00ednua para Solu\u00e7\u00f5es de Low-Code/No-Code .","title":"Solu\u00e7\u00f5es de Low-Code/No-Code"},{"location":"continuous-delivery/#referencias","text":"Entrega Cont\u00ednua por Jez Humble e David Farley. Integra\u00e7\u00e3o Cont\u00ednua vs. Entrega Cont\u00ednua vs. Implanta\u00e7\u00e3o Cont\u00ednua An\u00e9is de Implanta\u00e7\u00e3o","title":"Refer\u00eancias"},{"location":"continuous-delivery/#ferramentas","text":"Confira as seguintes ferramentas que podem ajudar nas melhores pr\u00e1ticas de Entrega Cont\u00ednua mencionadas acima: Flux para GitOps. Tekton para pipelines nativas do Kubernetes. \u00c9 importante observar que o Jenkins-X usa o Tekton em seu funcionamento interno. Argo Workflows para gerenciamento de fluxo de trabalho. Flagger para lan\u00e7amentos poderosos nativos do Kubernetes, incluindo abordagens de implanta\u00e7\u00e3o blue/green, canaryo e testes A/B. Embora n\u00e3o diretamente relacionado \u00e0 Entrega Cont\u00ednua, voc\u00ea pode explorar o jsonnet , uma linguagem de modelagem que ajuda a reduzir a redund\u00e2ncia em manifestos YAML/JSON e promove a reutiliza\u00e7\u00e3o. Para solu\u00e7\u00f5es de baixo c\u00f3digo, voc\u00ea pode seguir o guia de entrega cont\u00ednua para Solu\u00e7\u00f5es de Low-Code/No-Code .","title":"Ferramentas"},{"location":"continuous-delivery/azure-devops/secret-management-per-branch/","text":"Azure DevOps: Gerenciando Configura\u00e7\u00f5es de Forma Branch Espec\u00edfica Ao utilizar o Azure DevOps Pipelines para CI/CD, \u00e9 conveniente aproveitar as vari\u00e1veis de pipeline integradas para gerenciamento de segredos , mas o uso de vari\u00e1veis de pipeline para gerenciamento de segredos tem suas desvantagens: Vari\u00e1veis de pipeline s\u00e3o gerenciadas fora do c\u00f3digo que faz refer\u00eancia a elas. Isso torna f\u00e1cil introduzir diverg\u00eancias entre o c\u00f3digo-fonte e os segredos, por exemplo, ao adicionar uma refer\u00eancia a um novo segredo no c\u00f3digo, mas esquecer de adicion\u00e1-lo \u00e0s vari\u00e1veis de pipeline (o que leva a quebras de compila\u00e7\u00e3o confusas) ou excluir uma refer\u00eancia a um segredo no c\u00f3digo e esquecer de remov\u00ea-lo das vari\u00e1veis de pipeline (o que leva a vari\u00e1veis de pipeline confusas). Vari\u00e1veis de pipeline s\u00e3o um estado global compartilhado. Isso pode levar a situa\u00e7\u00f5es confusas e problemas dif\u00edceis de depurar quando os desenvolvedores fazem altera\u00e7\u00f5es simult\u00e2neas nas vari\u00e1veis de pipeline que podem se sobrepor umas \u00e0s outras. Ter um \u00fanico conjunto global de vari\u00e1veis de pipeline tamb\u00e9m torna imposs\u00edvel que os segredos variem por ambiente (por exemplo, ao usar um modelo de implanta\u00e7\u00e3o baseado em branches, onde 'master' faz implanta\u00e7\u00f5es usando os segredos de produ\u00e7\u00e3o, 'development' faz implanta\u00e7\u00f5es usando os segredos de staging, e assim por diante). Uma solu\u00e7\u00e3o para essas limita\u00e7\u00f5es \u00e9 gerenciar os segredos no reposit\u00f3rio Git em conjunto com o c\u00f3digo-fonte do projeto. Conforme descrito em gerenciamento de segredos , n\u00e3o inclua segredos no reposit\u00f3rio em texto simples. Em vez disso, podemos adicionar uma vers\u00e3o criptografada de nossos segredos ao reposit\u00f3rio e permitir que nossos agentes CI/CD e desenvolvedores descriptografem os segredos para uso local com alguma chave pr\u00e9-compartilhada. Isso nos oferece o melhor dos dois mundos: um armazenamento seguro para segredos, bem como o gerenciamento lado a lado de segredos e c\u00f3digo. # Primeiro, certifique-se de nunca cometer nossos segredos em texto simples e gere uma chave de criptografia forte echo \".env\" >> .gitignore ENCRYPTION_KEY = \" $( LC_ALL = C < /dev/urandom tr -dc '_A-Z-a-z-0-9' | head -c128 ) \" # Agora, vamos adicionar algum segredo ao nosso arquivo .env echo \"MEU_SEGREDO=...\" >> .env # Atualize tamb\u00e9m nosso arquivo de documenta\u00e7\u00e3o de segredos cat >> .env.template <<< \" # Insira a descri\u00e7\u00e3o do seu segredo aqui MEU_SEGREDO= \" # Em seguida, criptografe os segredos em texto simples; o arquivo resultante .env.enc pode ser comitado com seguran\u00e7a para o reposit\u00f3rio echo \" ${ ENCRYPTION_KEY } \" | openssl enc -aes-256-cbc -md sha512 -pass stdin -in .env -out .env.enc git add .env.enc .env.template git commit -m \"Atualizar segredos\" Ao executar o CI/CD, o servidor de compila\u00e7\u00e3o agora pode acessar os segredos descriptografando-os. Por exemplo, para o Azure DevOps, configure ENCRYPTION_KEY como uma vari\u00e1vel de pipeline secreta e, em seguida, adicione a seguinte etapa ao arquivo azure-pipelines.yml : steps : - script : echo \"$(ENCRYPTION_KEY)\" | openssl enc -aes-256-cbc -md sha512 -pass stdin -in .env.enc -out .env -d displayName : Descriptografar segredos Voc\u00ea tamb\u00e9m pode usar grupos de vari\u00e1veis vinculados diretamente ao Azure Key Vault para seus pipelines para gerenciar todos os segredos em um local.","title":"Azure DevOps: Gerenciando Configura\u00e7\u00f5es de Forma Branch Espec\u00edfica"},{"location":"continuous-delivery/azure-devops/secret-management-per-branch/#azure-devops-gerenciando-configuracoes-de-forma-branch-especifica","text":"Ao utilizar o Azure DevOps Pipelines para CI/CD, \u00e9 conveniente aproveitar as vari\u00e1veis de pipeline integradas para gerenciamento de segredos , mas o uso de vari\u00e1veis de pipeline para gerenciamento de segredos tem suas desvantagens: Vari\u00e1veis de pipeline s\u00e3o gerenciadas fora do c\u00f3digo que faz refer\u00eancia a elas. Isso torna f\u00e1cil introduzir diverg\u00eancias entre o c\u00f3digo-fonte e os segredos, por exemplo, ao adicionar uma refer\u00eancia a um novo segredo no c\u00f3digo, mas esquecer de adicion\u00e1-lo \u00e0s vari\u00e1veis de pipeline (o que leva a quebras de compila\u00e7\u00e3o confusas) ou excluir uma refer\u00eancia a um segredo no c\u00f3digo e esquecer de remov\u00ea-lo das vari\u00e1veis de pipeline (o que leva a vari\u00e1veis de pipeline confusas). Vari\u00e1veis de pipeline s\u00e3o um estado global compartilhado. Isso pode levar a situa\u00e7\u00f5es confusas e problemas dif\u00edceis de depurar quando os desenvolvedores fazem altera\u00e7\u00f5es simult\u00e2neas nas vari\u00e1veis de pipeline que podem se sobrepor umas \u00e0s outras. Ter um \u00fanico conjunto global de vari\u00e1veis de pipeline tamb\u00e9m torna imposs\u00edvel que os segredos variem por ambiente (por exemplo, ao usar um modelo de implanta\u00e7\u00e3o baseado em branches, onde 'master' faz implanta\u00e7\u00f5es usando os segredos de produ\u00e7\u00e3o, 'development' faz implanta\u00e7\u00f5es usando os segredos de staging, e assim por diante). Uma solu\u00e7\u00e3o para essas limita\u00e7\u00f5es \u00e9 gerenciar os segredos no reposit\u00f3rio Git em conjunto com o c\u00f3digo-fonte do projeto. Conforme descrito em gerenciamento de segredos , n\u00e3o inclua segredos no reposit\u00f3rio em texto simples. Em vez disso, podemos adicionar uma vers\u00e3o criptografada de nossos segredos ao reposit\u00f3rio e permitir que nossos agentes CI/CD e desenvolvedores descriptografem os segredos para uso local com alguma chave pr\u00e9-compartilhada. Isso nos oferece o melhor dos dois mundos: um armazenamento seguro para segredos, bem como o gerenciamento lado a lado de segredos e c\u00f3digo. # Primeiro, certifique-se de nunca cometer nossos segredos em texto simples e gere uma chave de criptografia forte echo \".env\" >> .gitignore ENCRYPTION_KEY = \" $( LC_ALL = C < /dev/urandom tr -dc '_A-Z-a-z-0-9' | head -c128 ) \" # Agora, vamos adicionar algum segredo ao nosso arquivo .env echo \"MEU_SEGREDO=...\" >> .env # Atualize tamb\u00e9m nosso arquivo de documenta\u00e7\u00e3o de segredos cat >> .env.template <<< \" # Insira a descri\u00e7\u00e3o do seu segredo aqui MEU_SEGREDO= \" # Em seguida, criptografe os segredos em texto simples; o arquivo resultante .env.enc pode ser comitado com seguran\u00e7a para o reposit\u00f3rio echo \" ${ ENCRYPTION_KEY } \" | openssl enc -aes-256-cbc -md sha512 -pass stdin -in .env -out .env.enc git add .env.enc .env.template git commit -m \"Atualizar segredos\" Ao executar o CI/CD, o servidor de compila\u00e7\u00e3o agora pode acessar os segredos descriptografando-os. Por exemplo, para o Azure DevOps, configure ENCRYPTION_KEY como uma vari\u00e1vel de pipeline secreta e, em seguida, adicione a seguinte etapa ao arquivo azure-pipelines.yml : steps : - script : echo \"$(ENCRYPTION_KEY)\" | openssl enc -aes-256-cbc -md sha512 -pass stdin -in .env.enc -out .env -d displayName : Descriptografar segredos Voc\u00ea tamb\u00e9m pode usar grupos de vari\u00e1veis vinculados diretamente ao Azure Key Vault para seus pipelines para gerenciar todos os segredos em um local.","title":"Azure DevOps: Gerenciando Configura\u00e7\u00f5es de Forma Branch Espec\u00edfica"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/","text":"Vari\u00e1veis de Tempo de Execu\u00e7\u00e3o no GitHub Actions Objetivo Embora o GitHub Actions seja uma escolha popular para escrever e executar pipelines de CI/CD, especialmente para projetos de c\u00f3digo aberto hospedados no GitHub, ele carece de recursos espec\u00edficos de qualidade de vida encontrados em outros ambientes de CI/CD. Um recurso-chave que o GitHub Actions ainda n\u00e3o implementou \u00e9 a capacidade de simular e injetar vari\u00e1veis de tempo de execu\u00e7\u00e3o em um fluxo de trabalho, a fim de testar o pipeline em si. Isso cria uma ponte entre um recurso existente no Azure DevOps e um recurso que ainda n\u00e3o foi lan\u00e7ado no GitHub Actions. P\u00fablico-Alvo Este guia assume que voc\u00ea est\u00e1 familiarizado com CI/CD e compreende as implica\u00e7\u00f5es de seguran\u00e7a das pipelines de CI/CD. Tamb\u00e9m pressup\u00f5e conhecimento b\u00e1sico do GitHub Actions, incluindo como escrever e executar uma pipeline de CI/CD b\u00e1sica, fazer checkout de reposit\u00f3rios dentro da a\u00e7\u00e3o, usar A\u00e7\u00f5es do Marketplace com controle de vers\u00e3o, etc. Assumimos que voc\u00ea, como engenheiro de CI/CD, deseja injetar vari\u00e1veis de ambiente ou flags de ambiente em suas pipelines e fluxos de trabalho para test\u00e1-los e est\u00e1 usando o GitHub Actions para fazer isso. Cen\u00e1rio de Uso Muitos fluxos de trabalho de integra\u00e7\u00e3o ou de ponta a ponta requerem vari\u00e1veis de ambiente espec\u00edficas que s\u00f3 est\u00e3o dispon\u00edveis durante a execu\u00e7\u00e3o. Por exemplo, um fluxo de trabalho pode estar fazendo o seguinte: Nessa situa\u00e7\u00e3o, testar o pipeline \u00e9 extremamente dif\u00edcil sem a necessidade de fazer chamadas externas para o recurso. Em muitos casos, fazer chamadas externas ao recurso pode ser caro ou demorado, retardando significativamente o desenvolvimento em loop interno. O Azure DevOps, como exemplo, oferece uma maneira de definir vari\u00e1veis de pipeline em um acionador manual: O GitHub Actions ainda n\u00e3o faz isso. Solu\u00e7\u00e3o Para contornar isso, a solu\u00e7\u00e3o mais simples \u00e9 adicionar vari\u00e1veis de tempo de execu\u00e7\u00e3o \u00e0s mensagens de commit ou ao corpo do PR e usar o grep para encontrar a vari\u00e1vel. O GitHub Actions fornece a funcionalidade de grep nativamente usando uma fun\u00e7\u00e3o contains , que \u00e9 o que estaremos usando especificamente. Dentro do escopo: Vamos limitar isso \u00e0 inje\u00e7\u00e3o de uma \u00fanica vari\u00e1vel de ambiente em uma pipeline, com uma chave e valor previamente conhecidos. Fora do escopo: Embora a solu\u00e7\u00e3o seja obviamente extens\u00edvel usando scripts de shell ou qualquer outro meio de criar vari\u00e1veis, essa solu\u00e7\u00e3o serve bem como prova do conceito b\u00e1sico. Nenhum script desse tipo \u00e9 fornecido neste guia. Al\u00e9m disso, as equipes podem desejar formalizar esse processo usando um Modelo de PR que tenha uma se\u00e7\u00e3o adicional para as vari\u00e1veis fornecidas. No entanto, isso n\u00e3o est\u00e1 inclu\u00eddo neste guia. Aviso de Seguran\u00e7a: Isso N\u00c3O \u00e9 para injetar segredos , pois as mensagens de commit e o corpo do PR podem ser recuperados por terceiros, s\u00e3o armazenados no git log e podem ser lidos por um indiv\u00edduo mal-intencionado usando v\u00e1rias ferramentas. Em vez disso, isso \u00e9 para testar um fluxo de trabalho que precisa de vari\u00e1veis simples para serem injetadas, conforme descrito acima. Se voc\u00ea precisa recuperar segredos ou informa\u00e7\u00f5es sens\u00edveis , use a A\u00e7\u00e3o do GitHub para o Azure Key Vault ou algum outro servi\u00e7o de armazenamento e recupera\u00e7\u00e3o de segredos semelhante. Vari\u00e1veis de Mensagem de Commit Como injetar uma \u00fanica vari\u00e1vel no ambiente para uso, com uma chave e valor especificados . Neste exemplo, a chave \u00e9 COMMIT_VAR e o valor \u00e9 [commit var] . Pr\u00e9-requisitos: Os acionadores da pipeline est\u00e3o configurados corretamente para serem acionados por commits enviados (aqui usaremos actions-test-branch como a branch de escolha). Trecho de C\u00f3digo: on : push : branches : - actions-test-branch jobs : Echo-On-Commit : runs-on : ubuntu-latest steps : - name : \"Checkout do Reposit\u00f3rio\" uses : actions/checkout@v2 - name : \"Definir sinalizador a partir do Commit\" env : COMMIT_VAR : ${{ contains(github.event.head_commit.message, '[commit var]') }} run : | if ${COMMIT_VAR} == true; then echo \"flag=true\" >> $GITHUB_ENV echo \"sinalizador definido como verdadeiro\" else echo \"flag=false\" >> $GITHUB_ENV echo \"sinalizador definido como falso\" fi - name : \"Usar sinalizador se verdadeiro\" if : env.flag run : echo \"O sinalizador est\u00e1 dispon\u00edvel e \u00e9 verdadeiro\" Dispon\u00edvel como um arquivo .YAML aqui . Explica\u00e7\u00e3o do C\u00f3digo: A primeira parte do c\u00f3digo configura os acionadores de Push na branch de trabalho e faz o checkout do reposit\u00f3rio, ent\u00e3o n\u00e3o exploraremos isso em detalhes. - name : \"Definir sinalizador a partir do Commit\" env : COMMIT_VAR : ${{ contains(github.event.head_commit.message, '[commit var]') }} Esta \u00e9 uma etapa nomeada dentro do \u00fanico Job em nossa pipeline do GitHub Actions. Aqui, definimos uma vari\u00e1vel de ambiente para a etapa: qualquer c\u00f3digo ou a\u00e7\u00e3o que a etapa chamar agora ter\u00e1 a vari\u00e1vel de ambiente dispon\u00edvel. contains \u00e9 uma fun\u00e7\u00e3o do GitHub Actions que est\u00e1 dispon\u00edvel por padr\u00e3o em todos os fluxos de trabalho. Ela retorna um valor booleano true ou false . Nesta situa\u00e7\u00e3o, ela verifica se a mensagem de commit no \u00faltimo envio, acessada por github.event.head_commit.message , cont\u00e9m a string ${{...}} \u00e9 necess\u00e1rio para usar o Contexto do GitHub e tornar as fun\u00e7\u00f5es e as vari\u00e1veis github.event dispon\u00edveis para o comando. run : | if ${COMMIT_VAR} == true; then echo \"flag=true\" >> $GITHUB_ENV echo \"sinalizador definido como verdadeiro\" else echo \"flag=false\" >> $GITHUB_ENV echo \"sinalizador definido como falso\" fi O comando run aqui verifica se a vari\u00e1vel COMMIT_VAR foi definida como true e, se for o caso, define uma segunda flag como verdadeira e faz um echo disso. Ele faz o mesmo se a vari\u00e1vel for false . A raz\u00e3o espec\u00edfica para fazer isso \u00e9 permitir que a vari\u00e1vel flag seja usada em etapas posteriores em vez de ter que reutilizar a COMMIT_VAR em cada etapa. Al\u00e9m disso, permite que a flag seja usada na etapa if de uma a\u00e7\u00e3o, como na pr\u00f3xima parte do trecho de c\u00f3digo. - name : \"Usar sinalizador se verdadeiro\" if : env.flag run : echo \"O sinalizador est\u00e1 dispon\u00edvel e \u00e9 verdadeiro\" Nesta parte do trecho, a pr\u00f3xima etapa no mesmo job agora est\u00e1 usando o flag que foi definido na etapa anterior. Isso permite ao usu\u00e1rio: Reutilizar o sinalizador em vez de acessar repetidamente o Contexto do GitHub Definir o sinalizador usando v\u00e1rias condi\u00e7\u00f5es, em vez de apenas uma. Por exemplo, uma etapa diferente tamb\u00e9m pode definir o sinalizador como true ou false por diferentes motivos. Alterar a vari\u00e1vel em um \u00fanico local em vez de ter que alter\u00e1-la em v\u00e1rios lugares Alternativa mais curta: A etapa \"Definir sinalizador a partir do Commit\" pode ser simplificada da seguinte forma para tornar o c\u00f3digo muito mais curto, embora n\u00e3o necessariamente mais leg\u00edvel: - name : \"Definir sinalizador a partir do Commit\" env : COMMIT_VAR : ${{ contains(github.event.head_commit.message, '[commit var]') }} run : | echo \"flag=${COMMIT_VAR}\" >> $GITHUB_ENV echo \"sinalizador definido como ${COMMIT_VAR}\" Uso: Incluindo a Vari\u00e1vel Fa\u00e7a push na branch master : > git add. > git commit -m \"Running GitHub Actions Test [commit var]\" > git push Isso aciona o fluxo de trabalho (como qualquer push). Como [commit var] est\u00e1 na mensagem de commit, a vari\u00e1vel ${COMMIT_VAR} no fluxo de trabalho ser\u00e1 definida como true e resultar\u00e1 no seguinte: N\u00e3o Incluindo a Vari\u00e1vel Fa\u00e7a push na branch master : > git add. > git commit -m \"Running GitHub Actions Test\" > git push Isso aciona o fluxo de trabalho (como qualquer push). Como [commit var] n\u00e3o est\u00e1 na mensagem de commit, a vari\u00e1vel ${COMMIT_VAR} no fluxo de trabalho ser\u00e1 definida como false e resultar\u00e1 no seguinte: Vari\u00e1veis no Corpo do PR Quando um PR \u00e9 feito, o Corpo do PR tamb\u00e9m pode ser usado para configurar vari\u00e1veis. Essas vari\u00e1veis podem estar dispon\u00edveis para todas as execu\u00e7\u00f5es de fluxo de trabalho que derivam desse PR, o que pode ajudar a garantir que as mensagens de commit sejam mais informativas e menos polu\u00eddas, al\u00e9m de reduzir o trabalho do desenvolvedor. Mais uma vez, isso \u00e9 para uma chave e valor esperados. Neste caso, a chave \u00e9 PR_VAR e o valor \u00e9 [pr var] . Pr\u00e9-requisitos: Os acionadores da pipeline est\u00e3o configurados corretamente para acionar um pull request para uma branch espec\u00edfica. (Aqui usaremos master como a branch de destino.) Trecho de C\u00f3digo: on : pull_request : branches : - master jobs : Echo-On-PR : runs-on : ubuntu-latest steps : - name : \"Checkout do Reposit\u00f3rio\" uses : actions/checkout@v2 - name : \"Definir sinalizador a partir do PR\" env : PR_VAR : ${{ contains(github.event.pull_request.body, '[pr var]') }} run : | if ${PR_VAR} == true; then echo \"flag=true\" >> $GITHUB_ENV echo \"sinalizador definido como verdadeiro\" else echo \"flag=false\" >> $GITHUB_ENV echo \"sinalizador definido como falso\" fi - name : \"Usar sinalizador se verdadeiro\" if : env.flag run : echo \"O sinalizador est\u00e1 dispon\u00edvel e \u00e9 verdadeiro\" Dispon\u00edvel como um arquivo .YAML aqui . Explica\u00e7\u00e3o do C\u00f3digo: A primeira parte do arquivo YAML simplesmente configura o Acionador de Pull Request. A maior parte do c\u00f3digo a seguir \u00e9 id\u00eantica, ent\u00e3o explicaremos apenas as diferen\u00e7as. - name : \"Definir sinalizador a partir do PR\" env : PR_VAR : ${{ contains(github.event.pull_request.body, '[pr var]') }} Nesta se\u00e7\u00e3o, a vari\u00e1vel de ambiente PR_VAR \u00e9 definida como true ou false , dependendo se a string [pr var] est\u00e1 no Corpo do PR. Alternativa mais curta: Da mesma forma que o acima, a etapa YAML pode ser simplificada da seguinte forma para tornar o c\u00f3digo muito mais curto, embora n\u00e3o necessariamente mais leg\u00edvel: - name : \"Definir sinalizador a partir do PR\" env : PR_VAR : ${{ contains(github.event.pull_request.body, '[pr var]') }} run : | echo \"flag=${PR_VAR}\" >> $GITHUB_ENV echo \" sinalizador definido como ${PR_VAR}\" Uso: Crie um Pull Request para master e inclua a vari\u00e1vel esperada em algum lugar do corpo: A A\u00e7\u00e3o do GitHub ser\u00e1 acionada automaticamente e, como [pr var] est\u00e1 presente no Corpo do PR, ela definir\u00e1 o flag como verdadeiro, como mostrado abaixo: Cen\u00e1rios do Mundo Real Existem muitos cen\u00e1rios do mundo real em que o controle de vari\u00e1veis de ambiente pode ser extremamente \u00fatil. Alguns s\u00e3o destacados abaixo: Evitar Chamadas Externas Caras O Desenvolvedor A est\u00e1 escrevendo e testando um pipeline de integra\u00e7\u00e3o. O pipeline de integra\u00e7\u00e3o precisa fazer uma chamada a um servi\u00e7o externo, como o Azure Data Factory ou o Databricks, aguardar um resultado e depois exibir esse resultado. O fluxo de trabalho pode ser semelhante a este: O fluxo de trabalho inerentemente leva tempo e \u00e9 caro de ser executado, pois envolve a manuten\u00e7\u00e3o de um cluster Databricks e a espera pela resposta. Essa depend\u00eancia externa pode ser removida essencialmente simulando a resposta durante a escrita e teste de outras partes do fluxo de trabalho e simulando a resposta em situa\u00e7\u00f5es em que a resposta real n\u00e3o importa ou n\u00e3o est\u00e1 sendo testada diretamente. Pular Processos de CI Longos O Desenvolvedor B est\u00e1 escrevendo e testando uma pipeline de CI/CD. A pipeline tem v\u00e1rias etapas de CI, cada uma das quais \u00e9 executada sequencialmente. O fluxo de trabalho pode ser assim: Neste caso, cada etapa de CI precisa ser executada antes que a pr\u00f3xima comece, e erros no meio do processo podem fazer com que a pipeline inteira falhe. Embora esse possa ser um comportamento pretendido para a pipeline em algumas situa\u00e7\u00f5es (talvez voc\u00ea n\u00e3o queira executar uma constru\u00e7\u00e3o mais envolvente ou uma su\u00edte de cobertura de testes demorada se o processo de CI estiver falhando), significa que as etapas precisam ser comentadas ou exclu\u00eddas ao testar a pr\u00f3pria pipeline. Em vez disso, uma etapa adicional poderia verificar a presen\u00e7a de uma tag [skip ci $N] nas mensagens de commit ou no Corpo do PR e pular uma etapa espec\u00edfica da compila\u00e7\u00e3o do CI. Isso garante que a pipeline final n\u00e3o tenha altera\u00e7\u00f5es confirmadas que a tornem quebrada, como acontece \u00e0s vezes ao comentar/excluir etapas. Al\u00e9m disso, permite um mecanismo para testar repetidamente etapas individuais pulando as outras, o que facilita significativamente o desenvolvimento da pipeline.","title":"Vari\u00e1veis de Tempo de Execu\u00e7\u00e3o no GitHub Actions"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#variaveis-de-tempo-de-execucao-no-github-actions","text":"","title":"Vari\u00e1veis de Tempo de Execu\u00e7\u00e3o no GitHub Actions"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#objetivo","text":"Embora o GitHub Actions seja uma escolha popular para escrever e executar pipelines de CI/CD, especialmente para projetos de c\u00f3digo aberto hospedados no GitHub, ele carece de recursos espec\u00edficos de qualidade de vida encontrados em outros ambientes de CI/CD. Um recurso-chave que o GitHub Actions ainda n\u00e3o implementou \u00e9 a capacidade de simular e injetar vari\u00e1veis de tempo de execu\u00e7\u00e3o em um fluxo de trabalho, a fim de testar o pipeline em si. Isso cria uma ponte entre um recurso existente no Azure DevOps e um recurso que ainda n\u00e3o foi lan\u00e7ado no GitHub Actions.","title":"Objetivo"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#publico-alvo","text":"Este guia assume que voc\u00ea est\u00e1 familiarizado com CI/CD e compreende as implica\u00e7\u00f5es de seguran\u00e7a das pipelines de CI/CD. Tamb\u00e9m pressup\u00f5e conhecimento b\u00e1sico do GitHub Actions, incluindo como escrever e executar uma pipeline de CI/CD b\u00e1sica, fazer checkout de reposit\u00f3rios dentro da a\u00e7\u00e3o, usar A\u00e7\u00f5es do Marketplace com controle de vers\u00e3o, etc. Assumimos que voc\u00ea, como engenheiro de CI/CD, deseja injetar vari\u00e1veis de ambiente ou flags de ambiente em suas pipelines e fluxos de trabalho para test\u00e1-los e est\u00e1 usando o GitHub Actions para fazer isso.","title":"P\u00fablico-Alvo"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#cenario-de-uso","text":"Muitos fluxos de trabalho de integra\u00e7\u00e3o ou de ponta a ponta requerem vari\u00e1veis de ambiente espec\u00edficas que s\u00f3 est\u00e3o dispon\u00edveis durante a execu\u00e7\u00e3o. Por exemplo, um fluxo de trabalho pode estar fazendo o seguinte: Nessa situa\u00e7\u00e3o, testar o pipeline \u00e9 extremamente dif\u00edcil sem a necessidade de fazer chamadas externas para o recurso. Em muitos casos, fazer chamadas externas ao recurso pode ser caro ou demorado, retardando significativamente o desenvolvimento em loop interno. O Azure DevOps, como exemplo, oferece uma maneira de definir vari\u00e1veis de pipeline em um acionador manual: O GitHub Actions ainda n\u00e3o faz isso.","title":"Cen\u00e1rio de Uso"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#solucao","text":"Para contornar isso, a solu\u00e7\u00e3o mais simples \u00e9 adicionar vari\u00e1veis de tempo de execu\u00e7\u00e3o \u00e0s mensagens de commit ou ao corpo do PR e usar o grep para encontrar a vari\u00e1vel. O GitHub Actions fornece a funcionalidade de grep nativamente usando uma fun\u00e7\u00e3o contains , que \u00e9 o que estaremos usando especificamente. Dentro do escopo: Vamos limitar isso \u00e0 inje\u00e7\u00e3o de uma \u00fanica vari\u00e1vel de ambiente em uma pipeline, com uma chave e valor previamente conhecidos. Fora do escopo: Embora a solu\u00e7\u00e3o seja obviamente extens\u00edvel usando scripts de shell ou qualquer outro meio de criar vari\u00e1veis, essa solu\u00e7\u00e3o serve bem como prova do conceito b\u00e1sico. Nenhum script desse tipo \u00e9 fornecido neste guia. Al\u00e9m disso, as equipes podem desejar formalizar esse processo usando um Modelo de PR que tenha uma se\u00e7\u00e3o adicional para as vari\u00e1veis fornecidas. No entanto, isso n\u00e3o est\u00e1 inclu\u00eddo neste guia. Aviso de Seguran\u00e7a: Isso N\u00c3O \u00e9 para injetar segredos , pois as mensagens de commit e o corpo do PR podem ser recuperados por terceiros, s\u00e3o armazenados no git log e podem ser lidos por um indiv\u00edduo mal-intencionado usando v\u00e1rias ferramentas. Em vez disso, isso \u00e9 para testar um fluxo de trabalho que precisa de vari\u00e1veis simples para serem injetadas, conforme descrito acima. Se voc\u00ea precisa recuperar segredos ou informa\u00e7\u00f5es sens\u00edveis , use a A\u00e7\u00e3o do GitHub para o Azure Key Vault ou algum outro servi\u00e7o de armazenamento e recupera\u00e7\u00e3o de segredos semelhante.","title":"Solu\u00e7\u00e3o"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#variaveis-de-mensagem-de-commit","text":"Como injetar uma \u00fanica vari\u00e1vel no ambiente para uso, com uma chave e valor especificados . Neste exemplo, a chave \u00e9 COMMIT_VAR e o valor \u00e9 [commit var] . Pr\u00e9-requisitos: Os acionadores da pipeline est\u00e3o configurados corretamente para serem acionados por commits enviados (aqui usaremos actions-test-branch como a branch de escolha). Trecho de C\u00f3digo: on : push : branches : - actions-test-branch jobs : Echo-On-Commit : runs-on : ubuntu-latest steps : - name : \"Checkout do Reposit\u00f3rio\" uses : actions/checkout@v2 - name : \"Definir sinalizador a partir do Commit\" env : COMMIT_VAR : ${{ contains(github.event.head_commit.message, '[commit var]') }} run : | if ${COMMIT_VAR} == true; then echo \"flag=true\" >> $GITHUB_ENV echo \"sinalizador definido como verdadeiro\" else echo \"flag=false\" >> $GITHUB_ENV echo \"sinalizador definido como falso\" fi - name : \"Usar sinalizador se verdadeiro\" if : env.flag run : echo \"O sinalizador est\u00e1 dispon\u00edvel e \u00e9 verdadeiro\" Dispon\u00edvel como um arquivo .YAML aqui . Explica\u00e7\u00e3o do C\u00f3digo: A primeira parte do c\u00f3digo configura os acionadores de Push na branch de trabalho e faz o checkout do reposit\u00f3rio, ent\u00e3o n\u00e3o exploraremos isso em detalhes. - name : \"Definir sinalizador a partir do Commit\" env : COMMIT_VAR : ${{ contains(github.event.head_commit.message, '[commit var]') }} Esta \u00e9 uma etapa nomeada dentro do \u00fanico Job em nossa pipeline do GitHub Actions. Aqui, definimos uma vari\u00e1vel de ambiente para a etapa: qualquer c\u00f3digo ou a\u00e7\u00e3o que a etapa chamar agora ter\u00e1 a vari\u00e1vel de ambiente dispon\u00edvel. contains \u00e9 uma fun\u00e7\u00e3o do GitHub Actions que est\u00e1 dispon\u00edvel por padr\u00e3o em todos os fluxos de trabalho. Ela retorna um valor booleano true ou false . Nesta situa\u00e7\u00e3o, ela verifica se a mensagem de commit no \u00faltimo envio, acessada por github.event.head_commit.message , cont\u00e9m a string ${{...}} \u00e9 necess\u00e1rio para usar o Contexto do GitHub e tornar as fun\u00e7\u00f5es e as vari\u00e1veis github.event dispon\u00edveis para o comando. run : | if ${COMMIT_VAR} == true; then echo \"flag=true\" >> $GITHUB_ENV echo \"sinalizador definido como verdadeiro\" else echo \"flag=false\" >> $GITHUB_ENV echo \"sinalizador definido como falso\" fi O comando run aqui verifica se a vari\u00e1vel COMMIT_VAR foi definida como true e, se for o caso, define uma segunda flag como verdadeira e faz um echo disso. Ele faz o mesmo se a vari\u00e1vel for false . A raz\u00e3o espec\u00edfica para fazer isso \u00e9 permitir que a vari\u00e1vel flag seja usada em etapas posteriores em vez de ter que reutilizar a COMMIT_VAR em cada etapa. Al\u00e9m disso, permite que a flag seja usada na etapa if de uma a\u00e7\u00e3o, como na pr\u00f3xima parte do trecho de c\u00f3digo. - name : \"Usar sinalizador se verdadeiro\" if : env.flag run : echo \"O sinalizador est\u00e1 dispon\u00edvel e \u00e9 verdadeiro\" Nesta parte do trecho, a pr\u00f3xima etapa no mesmo job agora est\u00e1 usando o flag que foi definido na etapa anterior. Isso permite ao usu\u00e1rio: Reutilizar o sinalizador em vez de acessar repetidamente o Contexto do GitHub Definir o sinalizador usando v\u00e1rias condi\u00e7\u00f5es, em vez de apenas uma. Por exemplo, uma etapa diferente tamb\u00e9m pode definir o sinalizador como true ou false por diferentes motivos. Alterar a vari\u00e1vel em um \u00fanico local em vez de ter que alter\u00e1-la em v\u00e1rios lugares Alternativa mais curta: A etapa \"Definir sinalizador a partir do Commit\" pode ser simplificada da seguinte forma para tornar o c\u00f3digo muito mais curto, embora n\u00e3o necessariamente mais leg\u00edvel: - name : \"Definir sinalizador a partir do Commit\" env : COMMIT_VAR : ${{ contains(github.event.head_commit.message, '[commit var]') }} run : | echo \"flag=${COMMIT_VAR}\" >> $GITHUB_ENV echo \"sinalizador definido como ${COMMIT_VAR}\" Uso: Incluindo a Vari\u00e1vel Fa\u00e7a push na branch master : > git add. > git commit -m \"Running GitHub Actions Test [commit var]\" > git push Isso aciona o fluxo de trabalho (como qualquer push). Como [commit var] est\u00e1 na mensagem de commit, a vari\u00e1vel ${COMMIT_VAR} no fluxo de trabalho ser\u00e1 definida como true e resultar\u00e1 no seguinte: N\u00e3o Incluindo a Vari\u00e1vel Fa\u00e7a push na branch master : > git add. > git commit -m \"Running GitHub Actions Test\" > git push Isso aciona o fluxo de trabalho (como qualquer push). Como [commit var] n\u00e3o est\u00e1 na mensagem de commit, a vari\u00e1vel ${COMMIT_VAR} no fluxo de trabalho ser\u00e1 definida como false e resultar\u00e1 no seguinte:","title":"Vari\u00e1veis de Mensagem de Commit"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#variaveis-no-corpo-do-pr","text":"Quando um PR \u00e9 feito, o Corpo do PR tamb\u00e9m pode ser usado para configurar vari\u00e1veis. Essas vari\u00e1veis podem estar dispon\u00edveis para todas as execu\u00e7\u00f5es de fluxo de trabalho que derivam desse PR, o que pode ajudar a garantir que as mensagens de commit sejam mais informativas e menos polu\u00eddas, al\u00e9m de reduzir o trabalho do desenvolvedor. Mais uma vez, isso \u00e9 para uma chave e valor esperados. Neste caso, a chave \u00e9 PR_VAR e o valor \u00e9 [pr var] . Pr\u00e9-requisitos: Os acionadores da pipeline est\u00e3o configurados corretamente para acionar um pull request para uma branch espec\u00edfica. (Aqui usaremos master como a branch de destino.) Trecho de C\u00f3digo: on : pull_request : branches : - master jobs : Echo-On-PR : runs-on : ubuntu-latest steps : - name : \"Checkout do Reposit\u00f3rio\" uses : actions/checkout@v2 - name : \"Definir sinalizador a partir do PR\" env : PR_VAR : ${{ contains(github.event.pull_request.body, '[pr var]') }} run : | if ${PR_VAR} == true; then echo \"flag=true\" >> $GITHUB_ENV echo \"sinalizador definido como verdadeiro\" else echo \"flag=false\" >> $GITHUB_ENV echo \"sinalizador definido como falso\" fi - name : \"Usar sinalizador se verdadeiro\" if : env.flag run : echo \"O sinalizador est\u00e1 dispon\u00edvel e \u00e9 verdadeiro\" Dispon\u00edvel como um arquivo .YAML aqui . Explica\u00e7\u00e3o do C\u00f3digo: A primeira parte do arquivo YAML simplesmente configura o Acionador de Pull Request. A maior parte do c\u00f3digo a seguir \u00e9 id\u00eantica, ent\u00e3o explicaremos apenas as diferen\u00e7as. - name : \"Definir sinalizador a partir do PR\" env : PR_VAR : ${{ contains(github.event.pull_request.body, '[pr var]') }} Nesta se\u00e7\u00e3o, a vari\u00e1vel de ambiente PR_VAR \u00e9 definida como true ou false , dependendo se a string [pr var] est\u00e1 no Corpo do PR. Alternativa mais curta: Da mesma forma que o acima, a etapa YAML pode ser simplificada da seguinte forma para tornar o c\u00f3digo muito mais curto, embora n\u00e3o necessariamente mais leg\u00edvel: - name : \"Definir sinalizador a partir do PR\" env : PR_VAR : ${{ contains(github.event.pull_request.body, '[pr var]') }} run : | echo \"flag=${PR_VAR}\" >> $GITHUB_ENV echo \" sinalizador definido como ${PR_VAR}\" Uso: Crie um Pull Request para master e inclua a vari\u00e1vel esperada em algum lugar do corpo: A A\u00e7\u00e3o do GitHub ser\u00e1 acionada automaticamente e, como [pr var] est\u00e1 presente no Corpo do PR, ela definir\u00e1 o flag como verdadeiro, como mostrado abaixo:","title":"Vari\u00e1veis no Corpo do PR"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#cenarios-do-mundo-real","text":"Existem muitos cen\u00e1rios do mundo real em que o controle de vari\u00e1veis de ambiente pode ser extremamente \u00fatil. Alguns s\u00e3o destacados abaixo:","title":"Cen\u00e1rios do Mundo Real"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#evitar-chamadas-externas-caras","text":"O Desenvolvedor A est\u00e1 escrevendo e testando um pipeline de integra\u00e7\u00e3o. O pipeline de integra\u00e7\u00e3o precisa fazer uma chamada a um servi\u00e7o externo, como o Azure Data Factory ou o Databricks, aguardar um resultado e depois exibir esse resultado. O fluxo de trabalho pode ser semelhante a este: O fluxo de trabalho inerentemente leva tempo e \u00e9 caro de ser executado, pois envolve a manuten\u00e7\u00e3o de um cluster Databricks e a espera pela resposta. Essa depend\u00eancia externa pode ser removida essencialmente simulando a resposta durante a escrita e teste de outras partes do fluxo de trabalho e simulando a resposta em situa\u00e7\u00f5es em que a resposta real n\u00e3o importa ou n\u00e3o est\u00e1 sendo testada diretamente.","title":"Evitar Chamadas Externas Caras"},{"location":"continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/#pular-processos-de-ci-longos","text":"O Desenvolvedor B est\u00e1 escrevendo e testando uma pipeline de CI/CD. A pipeline tem v\u00e1rias etapas de CI, cada uma das quais \u00e9 executada sequencialmente. O fluxo de trabalho pode ser assim: Neste caso, cada etapa de CI precisa ser executada antes que a pr\u00f3xima comece, e erros no meio do processo podem fazer com que a pipeline inteira falhe. Embora esse possa ser um comportamento pretendido para a pipeline em algumas situa\u00e7\u00f5es (talvez voc\u00ea n\u00e3o queira executar uma constru\u00e7\u00e3o mais envolvente ou uma su\u00edte de cobertura de testes demorada se o processo de CI estiver falhando), significa que as etapas precisam ser comentadas ou exclu\u00eddas ao testar a pr\u00f3pria pipeline. Em vez disso, uma etapa adicional poderia verificar a presen\u00e7a de uma tag [skip ci $N] nas mensagens de commit ou no Corpo do PR e pular uma etapa espec\u00edfica da compila\u00e7\u00e3o do CI. Isso garante que a pipeline final n\u00e3o tenha altera\u00e7\u00f5es confirmadas que a tornem quebrada, como acontece \u00e0s vezes ao comentar/excluir etapas. Al\u00e9m disso, permite um mecanismo para testar repetidamente etapas individuais pulando as outras, o que facilita significativamente o desenvolvimento da pipeline.","title":"Pular Processos de CI Longos"},{"location":"continuous-delivery/gitops/deploying/","text":"Implanta\u00e7\u00e3o com GitOps O que \u00e9 GitOps? GitOps \u00e9 uma forma de gerenciar sua infraestrutura e aplicativos para que todo o sistema seja descrito de forma declarativa e controlada por vers\u00f5es (provavelmente em um reposit\u00f3rio Git) e tenha um processo automatizado que garanta que o ambiente implantado corresponda ao estado especificado em um reposit\u00f3rio.\" - WeaveWorks Por que devo usar o GitOps? O GitOps simplesmente permite implanta\u00e7\u00f5es mais r\u00e1pidas, tendo reposit\u00f3rios Git no centro, oferecendo um rastreamento claro por meio de commits do Git e sem acesso direto ao ambiente. Saiba mais em Por que devo usar o GitOps? O diagrama abaixo compara o fluxo de trabalho tradicional de CI/CD com o GitOps: Ferramentas para GitOps Alguns frameworks populares de GitOps para Kubernetes apoiados pela comunidade CNCF : Flux V2 Argo CD Rancher Fleet Implanta\u00e7\u00e3o usando GitOps O GitOps com o Flux v2 pode ser habilitado em clusters gerenciados do Azure Kubernetes Service (AKS) ou em clusters conectados do Kubernetes habilitados para o Azure Arc como uma extens\u00e3o de cluster. Ap\u00f3s a instala\u00e7\u00e3o da extens\u00e3o de cluster microsoft.flux, voc\u00ea pode criar um ou mais recursos de fluxConfigurations que sincronizam as fontes do seu reposit\u00f3rio Git com o cluster e reconciliam o cluster com o estado desejado. Com o GitOps, voc\u00ea pode usar seu reposit\u00f3rio Git como a fonte da verdade para a configura\u00e7\u00e3o do cluster e a implanta\u00e7\u00e3o de aplicativos. Tutorial: Implante configura\u00e7\u00f5es usando GitOps em um cluster Kubernetes habilitado para Azure Arc Tutorial: Implemente CI/CD com GitOps Ambiente com v\u00e1rios clusters e locat\u00e1rios com o Flux v2","title":"Implanta\u00e7\u00e3o com GitOps"},{"location":"continuous-delivery/gitops/deploying/#implantacao-com-gitops","text":"","title":"Implanta\u00e7\u00e3o com GitOps"},{"location":"continuous-delivery/gitops/deploying/#o-que-e-gitops","text":"GitOps \u00e9 uma forma de gerenciar sua infraestrutura e aplicativos para que todo o sistema seja descrito de forma declarativa e controlada por vers\u00f5es (provavelmente em um reposit\u00f3rio Git) e tenha um processo automatizado que garanta que o ambiente implantado corresponda ao estado especificado em um reposit\u00f3rio.\" - WeaveWorks","title":"O que \u00e9 GitOps?"},{"location":"continuous-delivery/gitops/deploying/#por-que-devo-usar-o-gitops","text":"O GitOps simplesmente permite implanta\u00e7\u00f5es mais r\u00e1pidas, tendo reposit\u00f3rios Git no centro, oferecendo um rastreamento claro por meio de commits do Git e sem acesso direto ao ambiente. Saiba mais em Por que devo usar o GitOps? O diagrama abaixo compara o fluxo de trabalho tradicional de CI/CD com o GitOps:","title":"Por que devo usar o GitOps?"},{"location":"continuous-delivery/gitops/deploying/#ferramentas-para-gitops","text":"Alguns frameworks populares de GitOps para Kubernetes apoiados pela comunidade CNCF : Flux V2 Argo CD Rancher Fleet","title":"Ferramentas para GitOps"},{"location":"continuous-delivery/gitops/deploying/#implantacao-usando-gitops","text":"O GitOps com o Flux v2 pode ser habilitado em clusters gerenciados do Azure Kubernetes Service (AKS) ou em clusters conectados do Kubernetes habilitados para o Azure Arc como uma extens\u00e3o de cluster. Ap\u00f3s a instala\u00e7\u00e3o da extens\u00e3o de cluster microsoft.flux, voc\u00ea pode criar um ou mais recursos de fluxConfigurations que sincronizam as fontes do seu reposit\u00f3rio Git com o cluster e reconciliam o cluster com o estado desejado. Com o GitOps, voc\u00ea pode usar seu reposit\u00f3rio Git como a fonte da verdade para a configura\u00e7\u00e3o do cluster e a implanta\u00e7\u00e3o de aplicativos. Tutorial: Implante configura\u00e7\u00f5es usando GitOps em um cluster Kubernetes habilitado para Azure Arc Tutorial: Implemente CI/CD com GitOps Ambiente com v\u00e1rios clusters e locat\u00e1rios com o Flux v2","title":"Implanta\u00e7\u00e3o usando GitOps"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/","text":"Gerenciamento de Senhas com GitOps Projetos GitOps t\u00eam reposit\u00f3rios Git como o ponto central, considerados a fonte da verdade para o gerenciamento tanto da infraestrutura quanto das aplica\u00e7\u00f5es. Essa infraestrutura e aplica\u00e7\u00e3o exigir\u00e3o acesso seguro a outros recursos do sistema por meio de senhas. Fazer commit de senhas em texto claro em reposit\u00f3rios Git \u00e9 inaceit\u00e1vel, mesmo que os reposit\u00f3rios sejam privados para sua equipe e organiza\u00e7\u00e3o. As equipes precisam de uma maneira segura de lidar com senhas ao usar GitOps. Existem v\u00e1rias maneiras de gerenciar senhas com GitOps e, em alto n\u00edvel, podem ser categorizadas em: Senhas criptografadas em reposit\u00f3rios Git Refer\u00eancia a senhas armazenadas em um cofre de chaves externo TLDR : Fazer refer\u00eancia a senhas em um cofre de chaves externo \u00e9 a abordagem recomendada. \u00c9 mais f\u00e1cil orquestrar a rota\u00e7\u00e3o de senhas e mais escal\u00e1vel com v\u00e1rios clusters e/ou equipes. Senhas Criptografadas em Reposit\u00f3rios Git Nessa abordagem, os desenvolvedores criptografam manualmente senhas usando uma chave p\u00fablica, e a chave s\u00f3 pode ser descriptografada pelo controlador Kubernetes personalizado em execu\u00e7\u00e3o no cluster de destino. Algumas ferramentas populares para essa abordagem s\u00e3o Bitnami Sealed Secrets e Mozilla SOPS . Todas as ferramentas de criptografia de senhas compartilham as seguintes caracter\u00edsticas: Altera\u00e7\u00f5es de senhas s\u00e3o gerenciadas fazendo altera\u00e7\u00f5es dentro do reposit\u00f3rio GitOps, o que proporciona grande rastreabilidade. Todas as senhas podem ser rotacionadas fazendo altera\u00e7\u00f5es no GitOps, sem acessar o cluster. Elas suportam cen\u00e1rios de GitOps completamente desconectados. As senhas s\u00e3o armazenadas criptografadas no reposit\u00f3rio GitOps. Se a chave de criptografia privada for vazada e o invasor tiver acesso ao reposit\u00f3rio, todas as senhas podem ser descriptografadas. Bitnami Sealed Secrets O Sealed Secrets usa criptografia assim\u00e9trica para criptografar senhas. Um controlador Kubernetes gera um par de chaves (privada-p\u00fablica) e armazena a chave privada no banco de dados etcd do cluster como um segredo Kubernetes. Os desenvolvedores usam o Kubeseal CLI para selar senhas antes de fazer commit no reposit\u00f3rio Git. Alguns pontos-chave do uso do Sealed Secrets incluem: Suporta rota\u00e7\u00e3o autom\u00e1tica de chaves para a chave privada e pode ser usada para for\u00e7ar a recriptografia de senhas. Devido \u00e0 renova\u00e7\u00e3o autom\u00e1tica da chave de selagem , a chave deve ser pr\u00e9-carregada do cluster ou configurada para armazenar a chave de selagem em um local secund\u00e1rio durante a renova\u00e7\u00e3o. Suporte \u00e0 multi-tenancy no n\u00edvel de namespace pode ser imposto pelo controlador. Ao selar senhas, os desenvolvedores precisam de uma conex\u00e3o com o plano de controle do cluster para buscar a chave p\u00fablica ou a chave p\u00fablica deve ser explicitamente compartilhada com o desenvolvedor. Se a chave privada no cluster for perdida por algum motivo, todas as senhas precisam ser recriptografadas ap\u00f3s a gera\u00e7\u00e3o de um novo par de chaves. N\u00e3o dimensiona bem com m\u00faltiplos clusters, pois cada cluster exigir\u00e1 um controlador com seu pr\u00f3prio par de chaves. S\u00f3 pode criptografar o tipo de recurso secret . A documenta\u00e7\u00e3o do Flux tem inconsist\u00eancias nos exemplos do Azure Key Vault. Mozilla SOPS O SOPS: Secrets OPerationS \u00e9 uma ferramenta de criptografia que suporta formatos YAML, JSON, ENV, INI e BINARY e criptografa com AWS KMS, GCP KMS, Azure Key Vault, age e PGP, n\u00e3o se limitando apenas ao Kubernetes. Ele suporta a integra\u00e7\u00e3o com alguns sistemas comuns de gerenciamento de chaves, incluindo o Azure Key Vault, onde um ou mais sistemas de gerenciamento de chaves s\u00e3o usados para armazenar a chave de criptografia para criptografar senhas e n\u00e3o as pr\u00f3prias senhas. Alguns pontos-chave do uso do SOPS incluem: Flux tem suporte nativo ao SOPS com descriptografia no lado do cluster. Fornece uma camada adicional de seguran\u00e7a, pois a chave privada usada para descriptografar \u00e9 protegida em um cofre de chaves externo. Para usar o CLI Helm para criptografia, \u00e9 necess\u00e1rio o plug-in ( Helm Secrets ). Necessita do plug-in ( KSOPS )([kustomize-sopssecretgenerator]( https://github.com/goabout/kustomize-sopssecretgenerator)) para funcionar com Kustomization. - N\u00e3o dimensiona bem com equipes maiores, pois cada desenvolvedor precisa criptografar as senhas. - A chave p\u00fablica \u00e9 suficiente para criar novos arquivos. A chave secreta \u00e9 necess\u00e1ria para descriptografar e editar arquivos existentes porque o SOPS calcula um c\u00f3digo de autentica\u00e7\u00e3o de mensagem (MAC) em todos os valores. Ao usar apenas a chave p\u00fablica para adicionar ou remover um campo, o arquivo inteiro deve ser exclu\u00eddo e recriado. - Suporta v\u00e1rios tipos de chaves que podem ser usadas em estados conectados e desconectados. Uma senha pode ter uma lista de chaves e tentar\u00e1 descriptografar com todas elas. Refer\u00eancia a Senhas Armazenadas em um Cofre de Chaves Externo (Recomendado) Essa abordagem depende de um sistema de gerenciamento de chaves, como o Azure Key Vault , para armazenar as senhas, e o manifesto Git nas reposit\u00f3rios faz refer\u00eancia \u00e0s senhas do cofre de chaves. Os desenvolvedores n\u00e3o realizam nenhuma opera\u00e7\u00e3o criptogr\u00e1fica com arquivos nos reposit\u00f3rios. Operadores Kubernetes em execu\u00e7\u00e3o no cluster de destino s\u00e3o respons\u00e1veis por recuperar as senhas do cofre de chaves e disponibiliz\u00e1-las como segredos Kubernetes ou volumes de segredos montados no pod. Todas as ferramentas abaixo compartilham as seguintes caracter\u00edsticas: As senhas n\u00e3o s\u00e3o armazenadas no reposit\u00f3rio. Suportam m\u00e9tricas Prometheus para observabilidade. Suportam sincroniza\u00e7\u00e3o com Segredos Kubernetes. Suportam cont\u00eaineres Linux e Windows. Fornecem gerenciamento de segredos externos de n\u00edvel empresarial. Facilmente escal\u00e1veis com m\u00faltiplos clusters e equipes maiores. Ambas as solu\u00e7\u00f5es suportam Azure Active Directory (Azure AD) principal de servi\u00e7o ou identidade gerenciada para autentica\u00e7\u00e3o com o Key Vault . Para ideias sobre rota\u00e7\u00e3o de senhas, consulte Rota\u00e7\u00e3o de Senhas em Vari\u00e1veis de Ambiente e Segredos Montados Para saber como autenticar registros de cont\u00eaineres privados com um principal de servi\u00e7o, consulte: Registro de Cont\u00eainer Privado Autenticado Provedor de Azure Key Vault para Secrets Store CSI Driver O Provedor de Azure Key Vault (AKVP) para Driver de Armazenamento de Segredos CSI para Kubernetes permite que voc\u00ea obtenha o conte\u00fado de segredos armazenados em uma inst\u00e2ncia do Azure Key Vault e use a interface Secrets Store CSI driver para mont\u00e1-los nos pods do Kubernetes. Monta segredos/chaves/certificados no pod usando um volume Inline CSI. Guia de instala\u00e7\u00e3o do Provedor de Azure Key Vault para Secrets Store CSI Driver aqui . O driver CSI precisar\u00e1 de acesso ao Azure Key Vault, seja por meio de um principal de servi\u00e7o ou identidade gerenciada (recomendado). Para tornar esse acesso seguro, voc\u00ea pode aproveitar a Identidade de Carga de Trabalho do Azure AD (recomendado) ou Identidade de Pod do AAD . Observe que a identidade de pod do AAD em breve ser\u00e1 substitu\u00edda pela identidade de carga de trabalho. Links do Grupo de Produtos fornecidos para AKVP com SSCSID: 1. Diferen\u00e7as entre ESO / SSCSID ( GitHub Issue ) 2. Palestra sobre Gerenciamento de Segredos no K8S aqui (Segredos Nativos, Vault.io e ESO vs. SSCSID) Vantagens: Suporta a portabilidade de pods com o SecretProviderClass CRD Suporta a rota\u00e7\u00e3o autom\u00e1tica de segredos com intervalos de sincroniza\u00e7\u00e3o personaliz\u00e1veis por cluster . Parece ser a escolha da Microsoft (o driver Secrets Store CSI \u00e9 fortemente contribu\u00eddo pela MSFT e pelo Kubernetes-SIG) Desvantagens: Suporte ausente para cen\u00e1rios desconectados : Quando o n\u00f3 est\u00e1 offline, o SSCSID falha ao buscar o segredo e, portanto, a montagem do volume falha, tornando a escalabilidade e a reinicializa\u00e7\u00e3o de pods imposs\u00edveis enquanto estiver offline O AKVP s\u00f3 pode acessar o Key Vault de um ambiente n\u00e3o-Azure usando um principal de servi\u00e7o O Segredo Kubernetes contendo as credenciais do principal de servi\u00e7o precisa ser criado como um segredo no mesmo namespace do pod de aplica\u00e7\u00e3o. Se os pods em v\u00e1rios namespaces precisarem usar o mesmo SP para acessar o Key Vault, este Segredo Kubernetes precisa ser criado em cada namespace. O reposit\u00f3rio GitOps deve conter o nome do Key Vault dentro do SecretProviderClass Deve montar segredos como volumes para permitir a sincroniza\u00e7\u00e3o em Segredos Kubernetes Usa mais recursos (4 pods; driver de armazenamento CSI e provedor) e \u00e9 um daemonset - n\u00e3o testado quanto ao uso de recursos/RPS. Operador de Segredos Externos com Azure Key Vault O Operador de Segredos Externos (ESO) \u00e9 um operador Kubernetes de c\u00f3digo aberto que pode ler segredos de armazenamentos de segred os externos (por exemplo, Azure Key Vault) e sincroniz\u00e1-los com Segredos Kubernetes. Em contraste com o Driver CSI, o controlador ESO cria os segredos no cluster como Segredos K8s, em vez de mont\u00e1-los como volumes em pods. Documenta\u00e7\u00e3o sobre o uso do provedor Azure Key Vault do ESO aqui . O ESO precisar\u00e1 de acesso ao Azure Key Vault, seja por meio de um principal de servi\u00e7o ou identidade gerenciada (por meio da Identidade de Carga de Trabalho do Azure AD (recomendado) ou Identidade de Pod do AAD ). Vantagens: Suporta a rota\u00e7\u00e3o autom\u00e1tica de segredos com intervalos de sincroniza\u00e7\u00e3o personaliz\u00e1veis por segredo . Os componentes s\u00e3o divididos em diferentes CRDs para namespace (ExternalSecret, SecretStore) e cluster-wide (ClusterSecretStore, ClusterExternalSecret), tornando a sincroniza\u00e7\u00e3o mais gerenci\u00e1vel em rela\u00e7\u00e3o a diferentes implanta\u00e7\u00f5es/pods, etc. O segredo do principal de servi\u00e7o para os (Cluster)SecretStores pode ser colocado em um namespace que apenas o ESO pode acessar (veja Shared ClusterSecretStore ). Eficiente em recursos (um \u00fanico pod) - n\u00e3o testado quanto ao uso de recursos/RPS. C\u00f3digo aberto e alto n\u00famero de contribui\u00e7\u00f5es, ( GitHub ) A montagem de segredos como volumes \u00e9 suportada por meio das APIs do K8S (veja aqui ) Suporta cen\u00e1rios parcialmente desconectados: como o ESO usa segredos nativos do K8s, o cluster pode estar offline e isso n\u00e3o afeta a reinicializa\u00e7\u00e3o e a escalabilidade de pods enquanto estiver offline Desvantagens: O reposit\u00f3rio GitOps deve conter o nome do Key Vault dentro do SecretStore / ClusterSecretStore ou um ConfigMap que fa\u00e7a refer\u00eancia a ele. Deve criar segredos como segredos K8s. Links Importantes Sealed Secrets com Flux v2 Mozilla SOPS com Flux v2 Gerenciamento de Segredos com Argo CD Fluxo de Trabalho de Gerenciamento de Segredos Ap\u00eandice Registro de Cont\u00eainer Privado Autenticado Uma op\u00e7\u00e3o de como autenticar registros de cont\u00eainer privados (por exemplo, ACR): Use um Segredo Kubernetes dockerconfigjson no n\u00edvel do pod com ImagePullSecret (Isso tamb\u00e9m pode ser definido no n\u00edvel do namespace ) Espero que esta tradu\u00e7\u00e3o seja \u00fatil para voc\u00ea. Se tiver alguma d\u00favida adicional ou precisar de mais informa\u00e7\u00f5es, sinta-se \u00e0 vontade para perguntar.","title":"Gerenciamento de Senhas com GitOps"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#gerenciamento-de-senhas-com-gitops","text":"Projetos GitOps t\u00eam reposit\u00f3rios Git como o ponto central, considerados a fonte da verdade para o gerenciamento tanto da infraestrutura quanto das aplica\u00e7\u00f5es. Essa infraestrutura e aplica\u00e7\u00e3o exigir\u00e3o acesso seguro a outros recursos do sistema por meio de senhas. Fazer commit de senhas em texto claro em reposit\u00f3rios Git \u00e9 inaceit\u00e1vel, mesmo que os reposit\u00f3rios sejam privados para sua equipe e organiza\u00e7\u00e3o. As equipes precisam de uma maneira segura de lidar com senhas ao usar GitOps. Existem v\u00e1rias maneiras de gerenciar senhas com GitOps e, em alto n\u00edvel, podem ser categorizadas em: Senhas criptografadas em reposit\u00f3rios Git Refer\u00eancia a senhas armazenadas em um cofre de chaves externo TLDR : Fazer refer\u00eancia a senhas em um cofre de chaves externo \u00e9 a abordagem recomendada. \u00c9 mais f\u00e1cil orquestrar a rota\u00e7\u00e3o de senhas e mais escal\u00e1vel com v\u00e1rios clusters e/ou equipes.","title":"Gerenciamento de Senhas com GitOps"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#senhas-criptografadas-em-repositorios-git","text":"Nessa abordagem, os desenvolvedores criptografam manualmente senhas usando uma chave p\u00fablica, e a chave s\u00f3 pode ser descriptografada pelo controlador Kubernetes personalizado em execu\u00e7\u00e3o no cluster de destino. Algumas ferramentas populares para essa abordagem s\u00e3o Bitnami Sealed Secrets e Mozilla SOPS . Todas as ferramentas de criptografia de senhas compartilham as seguintes caracter\u00edsticas: Altera\u00e7\u00f5es de senhas s\u00e3o gerenciadas fazendo altera\u00e7\u00f5es dentro do reposit\u00f3rio GitOps, o que proporciona grande rastreabilidade. Todas as senhas podem ser rotacionadas fazendo altera\u00e7\u00f5es no GitOps, sem acessar o cluster. Elas suportam cen\u00e1rios de GitOps completamente desconectados. As senhas s\u00e3o armazenadas criptografadas no reposit\u00f3rio GitOps. Se a chave de criptografia privada for vazada e o invasor tiver acesso ao reposit\u00f3rio, todas as senhas podem ser descriptografadas.","title":"Senhas Criptografadas em Reposit\u00f3rios Git"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#bitnami-sealed-secrets","text":"O Sealed Secrets usa criptografia assim\u00e9trica para criptografar senhas. Um controlador Kubernetes gera um par de chaves (privada-p\u00fablica) e armazena a chave privada no banco de dados etcd do cluster como um segredo Kubernetes. Os desenvolvedores usam o Kubeseal CLI para selar senhas antes de fazer commit no reposit\u00f3rio Git. Alguns pontos-chave do uso do Sealed Secrets incluem: Suporta rota\u00e7\u00e3o autom\u00e1tica de chaves para a chave privada e pode ser usada para for\u00e7ar a recriptografia de senhas. Devido \u00e0 renova\u00e7\u00e3o autom\u00e1tica da chave de selagem , a chave deve ser pr\u00e9-carregada do cluster ou configurada para armazenar a chave de selagem em um local secund\u00e1rio durante a renova\u00e7\u00e3o. Suporte \u00e0 multi-tenancy no n\u00edvel de namespace pode ser imposto pelo controlador. Ao selar senhas, os desenvolvedores precisam de uma conex\u00e3o com o plano de controle do cluster para buscar a chave p\u00fablica ou a chave p\u00fablica deve ser explicitamente compartilhada com o desenvolvedor. Se a chave privada no cluster for perdida por algum motivo, todas as senhas precisam ser recriptografadas ap\u00f3s a gera\u00e7\u00e3o de um novo par de chaves. N\u00e3o dimensiona bem com m\u00faltiplos clusters, pois cada cluster exigir\u00e1 um controlador com seu pr\u00f3prio par de chaves. S\u00f3 pode criptografar o tipo de recurso secret . A documenta\u00e7\u00e3o do Flux tem inconsist\u00eancias nos exemplos do Azure Key Vault.","title":"Bitnami Sealed Secrets"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#mozilla-sops","text":"O SOPS: Secrets OPerationS \u00e9 uma ferramenta de criptografia que suporta formatos YAML, JSON, ENV, INI e BINARY e criptografa com AWS KMS, GCP KMS, Azure Key Vault, age e PGP, n\u00e3o se limitando apenas ao Kubernetes. Ele suporta a integra\u00e7\u00e3o com alguns sistemas comuns de gerenciamento de chaves, incluindo o Azure Key Vault, onde um ou mais sistemas de gerenciamento de chaves s\u00e3o usados para armazenar a chave de criptografia para criptografar senhas e n\u00e3o as pr\u00f3prias senhas. Alguns pontos-chave do uso do SOPS incluem: Flux tem suporte nativo ao SOPS com descriptografia no lado do cluster. Fornece uma camada adicional de seguran\u00e7a, pois a chave privada usada para descriptografar \u00e9 protegida em um cofre de chaves externo. Para usar o CLI Helm para criptografia, \u00e9 necess\u00e1rio o plug-in ( Helm Secrets ). Necessita do plug-in ( KSOPS )([kustomize-sopssecretgenerator]( https://github.com/goabout/kustomize-sopssecretgenerator)) para funcionar com Kustomization. - N\u00e3o dimensiona bem com equipes maiores, pois cada desenvolvedor precisa criptografar as senhas. - A chave p\u00fablica \u00e9 suficiente para criar novos arquivos. A chave secreta \u00e9 necess\u00e1ria para descriptografar e editar arquivos existentes porque o SOPS calcula um c\u00f3digo de autentica\u00e7\u00e3o de mensagem (MAC) em todos os valores. Ao usar apenas a chave p\u00fablica para adicionar ou remover um campo, o arquivo inteiro deve ser exclu\u00eddo e recriado. - Suporta v\u00e1rios tipos de chaves que podem ser usadas em estados conectados e desconectados. Uma senha pode ter uma lista de chaves e tentar\u00e1 descriptografar com todas elas.","title":"Mozilla SOPS"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#referencia-a-senhas-armazenadas-em-um-cofre-de-chaves-externo-recomendado","text":"Essa abordagem depende de um sistema de gerenciamento de chaves, como o Azure Key Vault , para armazenar as senhas, e o manifesto Git nas reposit\u00f3rios faz refer\u00eancia \u00e0s senhas do cofre de chaves. Os desenvolvedores n\u00e3o realizam nenhuma opera\u00e7\u00e3o criptogr\u00e1fica com arquivos nos reposit\u00f3rios. Operadores Kubernetes em execu\u00e7\u00e3o no cluster de destino s\u00e3o respons\u00e1veis por recuperar as senhas do cofre de chaves e disponibiliz\u00e1-las como segredos Kubernetes ou volumes de segredos montados no pod. Todas as ferramentas abaixo compartilham as seguintes caracter\u00edsticas: As senhas n\u00e3o s\u00e3o armazenadas no reposit\u00f3rio. Suportam m\u00e9tricas Prometheus para observabilidade. Suportam sincroniza\u00e7\u00e3o com Segredos Kubernetes. Suportam cont\u00eaineres Linux e Windows. Fornecem gerenciamento de segredos externos de n\u00edvel empresarial. Facilmente escal\u00e1veis com m\u00faltiplos clusters e equipes maiores. Ambas as solu\u00e7\u00f5es suportam Azure Active Directory (Azure AD) principal de servi\u00e7o ou identidade gerenciada para autentica\u00e7\u00e3o com o Key Vault . Para ideias sobre rota\u00e7\u00e3o de senhas, consulte Rota\u00e7\u00e3o de Senhas em Vari\u00e1veis de Ambiente e Segredos Montados Para saber como autenticar registros de cont\u00eaineres privados com um principal de servi\u00e7o, consulte: Registro de Cont\u00eainer Privado Autenticado","title":"Refer\u00eancia a Senhas Armazenadas em um Cofre de Chaves Externo (Recomendado)"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#provedor-de-azure-key-vault-para-secrets-store-csi-driver","text":"O Provedor de Azure Key Vault (AKVP) para Driver de Armazenamento de Segredos CSI para Kubernetes permite que voc\u00ea obtenha o conte\u00fado de segredos armazenados em uma inst\u00e2ncia do Azure Key Vault e use a interface Secrets Store CSI driver para mont\u00e1-los nos pods do Kubernetes. Monta segredos/chaves/certificados no pod usando um volume Inline CSI. Guia de instala\u00e7\u00e3o do Provedor de Azure Key Vault para Secrets Store CSI Driver aqui . O driver CSI precisar\u00e1 de acesso ao Azure Key Vault, seja por meio de um principal de servi\u00e7o ou identidade gerenciada (recomendado). Para tornar esse acesso seguro, voc\u00ea pode aproveitar a Identidade de Carga de Trabalho do Azure AD (recomendado) ou Identidade de Pod do AAD . Observe que a identidade de pod do AAD em breve ser\u00e1 substitu\u00edda pela identidade de carga de trabalho. Links do Grupo de Produtos fornecidos para AKVP com SSCSID: 1. Diferen\u00e7as entre ESO / SSCSID ( GitHub Issue ) 2. Palestra sobre Gerenciamento de Segredos no K8S aqui (Segredos Nativos, Vault.io e ESO vs. SSCSID) Vantagens: Suporta a portabilidade de pods com o SecretProviderClass CRD Suporta a rota\u00e7\u00e3o autom\u00e1tica de segredos com intervalos de sincroniza\u00e7\u00e3o personaliz\u00e1veis por cluster . Parece ser a escolha da Microsoft (o driver Secrets Store CSI \u00e9 fortemente contribu\u00eddo pela MSFT e pelo Kubernetes-SIG) Desvantagens: Suporte ausente para cen\u00e1rios desconectados : Quando o n\u00f3 est\u00e1 offline, o SSCSID falha ao buscar o segredo e, portanto, a montagem do volume falha, tornando a escalabilidade e a reinicializa\u00e7\u00e3o de pods imposs\u00edveis enquanto estiver offline O AKVP s\u00f3 pode acessar o Key Vault de um ambiente n\u00e3o-Azure usando um principal de servi\u00e7o O Segredo Kubernetes contendo as credenciais do principal de servi\u00e7o precisa ser criado como um segredo no mesmo namespace do pod de aplica\u00e7\u00e3o. Se os pods em v\u00e1rios namespaces precisarem usar o mesmo SP para acessar o Key Vault, este Segredo Kubernetes precisa ser criado em cada namespace. O reposit\u00f3rio GitOps deve conter o nome do Key Vault dentro do SecretProviderClass Deve montar segredos como volumes para permitir a sincroniza\u00e7\u00e3o em Segredos Kubernetes Usa mais recursos (4 pods; driver de armazenamento CSI e provedor) e \u00e9 um daemonset - n\u00e3o testado quanto ao uso de recursos/RPS.","title":"Provedor de Azure Key Vault para Secrets Store CSI Driver"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#operador-de-segredos-externos-com-azure-key-vault","text":"O Operador de Segredos Externos (ESO) \u00e9 um operador Kubernetes de c\u00f3digo aberto que pode ler segredos de armazenamentos de segred os externos (por exemplo, Azure Key Vault) e sincroniz\u00e1-los com Segredos Kubernetes. Em contraste com o Driver CSI, o controlador ESO cria os segredos no cluster como Segredos K8s, em vez de mont\u00e1-los como volumes em pods. Documenta\u00e7\u00e3o sobre o uso do provedor Azure Key Vault do ESO aqui . O ESO precisar\u00e1 de acesso ao Azure Key Vault, seja por meio de um principal de servi\u00e7o ou identidade gerenciada (por meio da Identidade de Carga de Trabalho do Azure AD (recomendado) ou Identidade de Pod do AAD ). Vantagens: Suporta a rota\u00e7\u00e3o autom\u00e1tica de segredos com intervalos de sincroniza\u00e7\u00e3o personaliz\u00e1veis por segredo . Os componentes s\u00e3o divididos em diferentes CRDs para namespace (ExternalSecret, SecretStore) e cluster-wide (ClusterSecretStore, ClusterExternalSecret), tornando a sincroniza\u00e7\u00e3o mais gerenci\u00e1vel em rela\u00e7\u00e3o a diferentes implanta\u00e7\u00f5es/pods, etc. O segredo do principal de servi\u00e7o para os (Cluster)SecretStores pode ser colocado em um namespace que apenas o ESO pode acessar (veja Shared ClusterSecretStore ). Eficiente em recursos (um \u00fanico pod) - n\u00e3o testado quanto ao uso de recursos/RPS. C\u00f3digo aberto e alto n\u00famero de contribui\u00e7\u00f5es, ( GitHub ) A montagem de segredos como volumes \u00e9 suportada por meio das APIs do K8S (veja aqui ) Suporta cen\u00e1rios parcialmente desconectados: como o ESO usa segredos nativos do K8s, o cluster pode estar offline e isso n\u00e3o afeta a reinicializa\u00e7\u00e3o e a escalabilidade de pods enquanto estiver offline Desvantagens: O reposit\u00f3rio GitOps deve conter o nome do Key Vault dentro do SecretStore / ClusterSecretStore ou um ConfigMap que fa\u00e7a refer\u00eancia a ele. Deve criar segredos como segredos K8s.","title":"Operador de Segredos Externos com Azure Key Vault"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#links-importantes","text":"Sealed Secrets com Flux v2 Mozilla SOPS com Flux v2 Gerenciamento de Segredos com Argo CD Fluxo de Trabalho de Gerenciamento de Segredos","title":"Links Importantes"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#apendice","text":"","title":"Ap\u00eandice"},{"location":"continuous-delivery/gitops/secret-management/secret-management-gitops/#registro-de-conteiner-privado-autenticado","text":"Uma op\u00e7\u00e3o de como autenticar registros de cont\u00eainer privados (por exemplo, ACR): Use um Segredo Kubernetes dockerconfigjson no n\u00edvel do pod com ImagePullSecret (Isso tamb\u00e9m pode ser definido no n\u00edvel do namespace ) Espero que esta tradu\u00e7\u00e3o seja \u00fatil para voc\u00ea. Se tiver alguma d\u00favida adicional ou precisar de mais informa\u00e7\u00f5es, sinta-se \u00e0 vontade para perguntar.","title":"Registro de Cont\u00eainer Privado Autenticado"},{"location":"continuous-delivery/gitops/secret-management/secret-rotation-in-pods/","text":"Rota\u00e7\u00e3o de Segredos de Vari\u00e1veis de Ambiente e Segredos Montados em Pods Este documento aborda algumas maneiras de realizar a rota\u00e7\u00e3o de segredos com vari\u00e1veis de ambiente e segredos montados em pods do Kubernetes. Mapeamento de Segredos via secretKeyRef com Vari\u00e1veis de Ambiente Se mapearmos um segredo nativo do Kubernetes via secretKeyRef em uma vari\u00e1vel de ambiente e rotacionarmos as chaves, a vari\u00e1vel de ambiente n\u00e3o \u00e9 atualizada, mesmo que o segredo nativo do Kubernetes tenha sido atualizado. Precisamos reiniciar o Pod para que as altera\u00e7\u00f5es sejam populadas. O Reloader resolve esse problema com um controlador do Kubernetes. ... env : - name : EVENTHUB_CONNECTION_STRING valueFrom : secretKeyRef : name : poc-creds key : EventhubConnectionString ... Mapeamento de Segredos via volumeMounts (Abordagem do ESO) Se mapearmos um segredo nativo do Kubernetes via um volume mount e rotacionarmos as chaves, o arquivo \u00e9 atualizado. A aplica\u00e7\u00e3o precisa ser capaz de captar as altera\u00e7\u00f5es sem a necessidade de reiniciar (provavelmente exigindo l\u00f3gica personalizada na aplica\u00e7\u00e3o para oferecer suporte a isso). Nesse caso, n\u00e3o \u00e9 necess\u00e1ria a reinicializa\u00e7\u00e3o da aplica\u00e7\u00e3o. ... volumeMounts : - name : mounted-secret mountPath : /mnt/secrets-store readOnly : true volumes : - name : mounted-secret secret : secretName : poc-creds ... Mapeamento de Segredos via volumeMounts (Abordagem do AKVP SSCSID) O SSCSID concentra-se em montar segredos externos no CSI. Portanto, se rotacionarmos as chaves, o arquivo \u00e9 atualizado. A aplica\u00e7\u00e3o precisa ser capaz de captar as altera\u00e7\u00f5es sem a necessidade de reiniciar (provavelmente exigindo l\u00f3gica personalizada na aplica\u00e7\u00e3o para oferecer suporte a isso). Nesse caso, n\u00e3o \u00e9 necess\u00e1ria a reinicializa\u00e7\u00e3o da aplica\u00e7\u00e3o. ... volumeMounts : - name : app-secrets-store-inline mountPath : \"/mnt/app-secrets-store\" readOnly : true volumes : - name : app-secrets-store-inline csi : driver : secrets-store.csi.k8s.io readOnly : true volumeAttributes : secretProviderClass : akvp-app nodePublishSecretRef : name : secrets-store-sp-creds ...","title":"Rota\u00e7\u00e3o de Segredos de Vari\u00e1veis de Ambiente e Segredos Montados em Pods"},{"location":"continuous-delivery/gitops/secret-management/secret-rotation-in-pods/#rotacao-de-segredos-de-variaveis-de-ambiente-e-segredos-montados-em-pods","text":"Este documento aborda algumas maneiras de realizar a rota\u00e7\u00e3o de segredos com vari\u00e1veis de ambiente e segredos montados em pods do Kubernetes.","title":"Rota\u00e7\u00e3o de Segredos de Vari\u00e1veis de Ambiente e Segredos Montados em Pods"},{"location":"continuous-delivery/gitops/secret-management/secret-rotation-in-pods/#mapeamento-de-segredos-via-secretkeyref-com-variaveis-de-ambiente","text":"Se mapearmos um segredo nativo do Kubernetes via secretKeyRef em uma vari\u00e1vel de ambiente e rotacionarmos as chaves, a vari\u00e1vel de ambiente n\u00e3o \u00e9 atualizada, mesmo que o segredo nativo do Kubernetes tenha sido atualizado. Precisamos reiniciar o Pod para que as altera\u00e7\u00f5es sejam populadas. O Reloader resolve esse problema com um controlador do Kubernetes. ... env : - name : EVENTHUB_CONNECTION_STRING valueFrom : secretKeyRef : name : poc-creds key : EventhubConnectionString ...","title":"Mapeamento de Segredos via secretKeyRef com Vari\u00e1veis de Ambiente"},{"location":"continuous-delivery/gitops/secret-management/secret-rotation-in-pods/#mapeamento-de-segredos-via-volumemounts-abordagem-do-eso","text":"Se mapearmos um segredo nativo do Kubernetes via um volume mount e rotacionarmos as chaves, o arquivo \u00e9 atualizado. A aplica\u00e7\u00e3o precisa ser capaz de captar as altera\u00e7\u00f5es sem a necessidade de reiniciar (provavelmente exigindo l\u00f3gica personalizada na aplica\u00e7\u00e3o para oferecer suporte a isso). Nesse caso, n\u00e3o \u00e9 necess\u00e1ria a reinicializa\u00e7\u00e3o da aplica\u00e7\u00e3o. ... volumeMounts : - name : mounted-secret mountPath : /mnt/secrets-store readOnly : true volumes : - name : mounted-secret secret : secretName : poc-creds ...","title":"Mapeamento de Segredos via volumeMounts (Abordagem do ESO)"},{"location":"continuous-delivery/gitops/secret-management/secret-rotation-in-pods/#mapeamento-de-segredos-via-volumemounts-abordagem-do-akvp-sscsid","text":"O SSCSID concentra-se em montar segredos externos no CSI. Portanto, se rotacionarmos as chaves, o arquivo \u00e9 atualizado. A aplica\u00e7\u00e3o precisa ser capaz de captar as altera\u00e7\u00f5es sem a necessidade de reiniciar (provavelmente exigindo l\u00f3gica personalizada na aplica\u00e7\u00e3o para oferecer suporte a isso). Nesse caso, n\u00e3o \u00e9 necess\u00e1ria a reinicializa\u00e7\u00e3o da aplica\u00e7\u00e3o. ... volumeMounts : - name : app-secrets-store-inline mountPath : \"/mnt/app-secrets-store\" readOnly : true volumes : - name : app-secrets-store-inline csi : driver : secrets-store.csi.k8s.io readOnly : true volumeAttributes : secretProviderClass : akvp-app nodePublishSecretRef : name : secrets-store-sp-creds ...","title":"Mapeamento de Segredos via volumeMounts (Abordagem do AKVP SSCSID)"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/","text":"Entrega Cont\u00ednua em Solu\u00e7\u00f5es de Low-Code e No-Code As plataformas de low-code e no-code ocuparam um lugar em uma ampla variedade de Solu\u00e7\u00f5es de Neg\u00f3cios envolvendo automa\u00e7\u00e3o de processos, modelos de IA, Bots, Aplica\u00e7\u00f5es de Neg\u00f3cios e Intelig\u00eancia de Neg\u00f3cios. Os cen\u00e1rios habilitados por essas plataformas est\u00e3o constantemente evoluindo e abrindo espa\u00e7o para fun\u00e7\u00f5es produtivas. Este tem sido exatamente o motivo pelo qual a introdu\u00e7\u00e3o de ferramentas profissionais em seu desenvolvimento se tornou necess\u00e1ria, como entrega controlada e automatizada. No caso dos produtos da Power Platform, a ado\u00e7\u00e3o de um processo de CI/CD pode parecer aumentar a complexidade do desenvolvimento para uma solu\u00e7\u00e3o orientada a Desenvolvedores Cidad\u00e3os . No entanto, \u00e9 mais importante tornar o processo de desenvolvimento mais escal\u00e1vel e capaz de lidar com novos recursos e corre\u00e7\u00f5es de bugs de forma mais r\u00e1pida. Ambientes em Solu\u00e7\u00f5es da Power Platform Os ambientes s\u00e3o espa\u00e7os onde as Solu\u00e7\u00f5es da Power Platform existem. Eles armazenam, gerenciam e compartilham tudo relacionado \u00e0 solu\u00e7\u00e3o, como dados, aplicativos, chat bots, fluxos e modelos. Eles tamb\u00e9m funcionam como cont\u00eaineres para separar aplicativos que podem ter diferentes fun\u00e7\u00f5es, requisitos de seguran\u00e7a ou apenas p\u00fablicos-alvo diferentes. Eles podem ser usados para criar diferentes est\u00e1gios do processo de desenvolvimento da solu\u00e7\u00e3o, e o modelo esperado de trabalho com ambientes em um processo de CI/CD \u00e9 como a imagem a seguir sugere. Considera\u00e7\u00f5es sobre Ambientes Sempre que um ambiente \u00e9 criado, seus recursos s\u00f3 podem ser acessados por usu\u00e1rios dentro do mesmo locat\u00e1rio, que \u00e9 um locat\u00e1rio do Azure Active Directory, na verdade. Quando voc\u00ea cria um aplicativo em um ambiente, esse aplicativo s\u00f3 pode interagir com fontes de dados que tamb\u00e9m est\u00e3o implantadas no mesmo ambiente, o que inclui conex\u00f5es, fluxos e bancos de dados do Dataverse. Isso \u00e9 uma considera\u00e7\u00e3o importante ao lidar com um processo de Entrega Cont\u00ednua. Estrat\u00e9gia de Implanta\u00e7\u00e3o Com tr\u00eas ambientes j\u00e1 criados para representar os est\u00e1gios da implanta\u00e7\u00e3o, o objetivo agora \u00e9 automatizar a implanta\u00e7\u00e3o de um ambiente para outro. Cada ambiente exigir\u00e1 a cria\u00e7\u00e3o de sua pr\u00f3pria solu\u00e7\u00e3o: l\u00f3gica de neg\u00f3cios e dados. Etapa 1 A equipe de desenvolvimento trabalhar\u00e1 em um ambiente Dev . Esses ambientes, de acordo com a equipe, podem ser um para a equipe ou um para cada desenvolvedor. Depois que as altera\u00e7\u00f5es forem feitas, o primeiro passo ser\u00e1 empacotar a solu\u00e7\u00e3o e export\u00e1-la para o controle de origem. Etapa 2 A segunda etapa envolve a solu\u00e7\u00e3o. Voc\u00ea precisa ter uma solu\u00e7\u00e3o gerenciada para implantar em outros ambientes, como Stage ou Production , ent\u00e3o agora voc\u00ea deve usar um ambiente JIT onde importar\u00e1 sua solu\u00e7\u00e3o n\u00e3o gerenciada e a exportar\u00e1 como gerenciada. Esses arquivos de solu\u00e7\u00e3o n\u00e3o ser\u00e3o verificados no controle de origem, mas ser\u00e3o armazenados como um artefato de build no pipeline, tornando-os dispon\u00edveis para implanta\u00e7\u00e3o no pipeline de release. \u00c9 aqui que o segundo ambiente ser\u00e1 usado. Este segundo ambiente ser\u00e1 respons\u00e1vel por receber a solu\u00e7\u00e3o gerenciada de sa\u00edda vinda do artefato. Etapa 3 A terceira e \u00faltima etapa importar\u00e1 a solu\u00e7\u00e3o no ambiente de produ\u00e7\u00e3o, o que significa que esta etapa pegar\u00e1 o artefato da \u00faltima etapa e o exportar\u00e1. Ao trabalhar neste ambiente, voc\u00ea tamb\u00e9m pode versionar seu produto para fazer um rastreamento mais eficiente do produto. Ferramentas As ferramentas mais usadas para concluir esse processo s\u00e3o: Ferramentas de Compila\u00e7\u00e3o da Power Platform . Tamb\u00e9m existe uma ferramenta n\u00e3o gr\u00e1fica que pode ser usada para trabalhar com esse processo de Entrega Cont\u00ednua. A ferramenta Power CLI . Refer\u00eancias Gerenciamento de Ciclo de Vida de Aplicativos com a Microsoft Power Platform","title":"Entrega Cont\u00ednua em Solu\u00e7\u00f5es de Low-Code e No-Code"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#entrega-continua-em-solucoes-de-low-code-e-no-code","text":"As plataformas de low-code e no-code ocuparam um lugar em uma ampla variedade de Solu\u00e7\u00f5es de Neg\u00f3cios envolvendo automa\u00e7\u00e3o de processos, modelos de IA, Bots, Aplica\u00e7\u00f5es de Neg\u00f3cios e Intelig\u00eancia de Neg\u00f3cios. Os cen\u00e1rios habilitados por essas plataformas est\u00e3o constantemente evoluindo e abrindo espa\u00e7o para fun\u00e7\u00f5es produtivas. Este tem sido exatamente o motivo pelo qual a introdu\u00e7\u00e3o de ferramentas profissionais em seu desenvolvimento se tornou necess\u00e1ria, como entrega controlada e automatizada. No caso dos produtos da Power Platform, a ado\u00e7\u00e3o de um processo de CI/CD pode parecer aumentar a complexidade do desenvolvimento para uma solu\u00e7\u00e3o orientada a Desenvolvedores Cidad\u00e3os . No entanto, \u00e9 mais importante tornar o processo de desenvolvimento mais escal\u00e1vel e capaz de lidar com novos recursos e corre\u00e7\u00f5es de bugs de forma mais r\u00e1pida.","title":"Entrega Cont\u00ednua em Solu\u00e7\u00f5es de Low-Code e No-Code"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#ambientes-em-solucoes-da-power-platform","text":"Os ambientes s\u00e3o espa\u00e7os onde as Solu\u00e7\u00f5es da Power Platform existem. Eles armazenam, gerenciam e compartilham tudo relacionado \u00e0 solu\u00e7\u00e3o, como dados, aplicativos, chat bots, fluxos e modelos. Eles tamb\u00e9m funcionam como cont\u00eaineres para separar aplicativos que podem ter diferentes fun\u00e7\u00f5es, requisitos de seguran\u00e7a ou apenas p\u00fablicos-alvo diferentes. Eles podem ser usados para criar diferentes est\u00e1gios do processo de desenvolvimento da solu\u00e7\u00e3o, e o modelo esperado de trabalho com ambientes em um processo de CI/CD \u00e9 como a imagem a seguir sugere.","title":"Ambientes em Solu\u00e7\u00f5es da Power Platform"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#consideracoes-sobre-ambientes","text":"Sempre que um ambiente \u00e9 criado, seus recursos s\u00f3 podem ser acessados por usu\u00e1rios dentro do mesmo locat\u00e1rio, que \u00e9 um locat\u00e1rio do Azure Active Directory, na verdade. Quando voc\u00ea cria um aplicativo em um ambiente, esse aplicativo s\u00f3 pode interagir com fontes de dados que tamb\u00e9m est\u00e3o implantadas no mesmo ambiente, o que inclui conex\u00f5es, fluxos e bancos de dados do Dataverse. Isso \u00e9 uma considera\u00e7\u00e3o importante ao lidar com um processo de Entrega Cont\u00ednua.","title":"Considera\u00e7\u00f5es sobre Ambientes"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#estrategia-de-implantacao","text":"Com tr\u00eas ambientes j\u00e1 criados para representar os est\u00e1gios da implanta\u00e7\u00e3o, o objetivo agora \u00e9 automatizar a implanta\u00e7\u00e3o de um ambiente para outro. Cada ambiente exigir\u00e1 a cria\u00e7\u00e3o de sua pr\u00f3pria solu\u00e7\u00e3o: l\u00f3gica de neg\u00f3cios e dados.","title":"Estrat\u00e9gia de Implanta\u00e7\u00e3o"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#etapa-1","text":"A equipe de desenvolvimento trabalhar\u00e1 em um ambiente Dev . Esses ambientes, de acordo com a equipe, podem ser um para a equipe ou um para cada desenvolvedor. Depois que as altera\u00e7\u00f5es forem feitas, o primeiro passo ser\u00e1 empacotar a solu\u00e7\u00e3o e export\u00e1-la para o controle de origem.","title":"Etapa 1"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#etapa-2","text":"A segunda etapa envolve a solu\u00e7\u00e3o. Voc\u00ea precisa ter uma solu\u00e7\u00e3o gerenciada para implantar em outros ambientes, como Stage ou Production , ent\u00e3o agora voc\u00ea deve usar um ambiente JIT onde importar\u00e1 sua solu\u00e7\u00e3o n\u00e3o gerenciada e a exportar\u00e1 como gerenciada. Esses arquivos de solu\u00e7\u00e3o n\u00e3o ser\u00e3o verificados no controle de origem, mas ser\u00e3o armazenados como um artefato de build no pipeline, tornando-os dispon\u00edveis para implanta\u00e7\u00e3o no pipeline de release. \u00c9 aqui que o segundo ambiente ser\u00e1 usado. Este segundo ambiente ser\u00e1 respons\u00e1vel por receber a solu\u00e7\u00e3o gerenciada de sa\u00edda vinda do artefato.","title":"Etapa 2"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#etapa-3","text":"A terceira e \u00faltima etapa importar\u00e1 a solu\u00e7\u00e3o no ambiente de produ\u00e7\u00e3o, o que significa que esta etapa pegar\u00e1 o artefato da \u00faltima etapa e o exportar\u00e1. Ao trabalhar neste ambiente, voc\u00ea tamb\u00e9m pode versionar seu produto para fazer um rastreamento mais eficiente do produto.","title":"Etapa 3"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#ferramentas","text":"As ferramentas mais usadas para concluir esse processo s\u00e3o: Ferramentas de Compila\u00e7\u00e3o da Power Platform . Tamb\u00e9m existe uma ferramenta n\u00e3o gr\u00e1fica que pode ser usada para trabalhar com esse processo de Entrega Cont\u00ednua. A ferramenta Power CLI .","title":"Ferramentas"},{"location":"continuous-delivery/low-code-solutions/low-code-solutions/#referencias","text":"Gerenciamento de Ciclo de Vida de Aplicativos com a Microsoft Power Platform","title":"Refer\u00eancias"},{"location":"continuous-delivery/recipes/github-workflows/workflow-per-environment/","text":"Fluxos de Trabalho no GitHub Um fluxo de trabalho \u00e9 um processo automatizado configur\u00e1vel composto por um ou mais trabalhos, onde cada um desses trabalhos pode ser uma a\u00e7\u00e3o no GitHub. Atualmente, \u00e9 suportado um formato de arquivo YAML para definir um fluxo de trabalho no GitHub. Informa\u00e7\u00f5es adicionais sobre a\u00e7\u00f5es do GitHub e Fluxos de Trabalho no GitHub est\u00e3o nos links postados na se\u00e7\u00e3o de refer\u00eancias abaixo. Fluxo de Trabalho por Ambiente A abordagem geral \u00e9 ter um pipeline, onde o c\u00f3digo \u00e9 constru\u00eddo, testado e implantado, e o artefato \u00e9 ent\u00e3o promovido para o pr\u00f3ximo ambiente, eventualmente sendo implantado na produ\u00e7\u00e3o. Existem v\u00e1rias maneiras no GitHub de configurar um ambiente. Uma maneira de fazer isso \u00e9 ter um fluxo de trabalho para v\u00e1rios ambientes, mas a complexidade aumenta \u00e0 medida que processos e trabalhos adicionais s\u00e3o adicionados a um fluxo de trabalho, o que n\u00e3o significa que n\u00e3o pode ser feito para pipelines pequenos. O ponto positivo de ter um \u00fanico fluxo de trabalho \u00e9 que, quando um artefato flui de um ambiente para outro, os valores de estado e ambiente entre os ambientes de implanta\u00e7\u00e3o podem ser facilmente passados. Uma maneira de contornar a complexidade de um \u00fanico fluxo de trabalho \u00e9 ter fluxos de trabalho separados para diferentes ambientes, garantindo que apenas os artefatos criados e validados sejam promovidos de um ambiente para outro, bem como que o fluxo de trabalho seja pequeno o suficiente para depurar problemas em qualquer um dos fluxos de trabalho. Nesse caso, os valores de estado e ambiente precisam ser passados de um ambiente de implanta\u00e7\u00e3o para outro. M\u00faltiplos fluxos de trabalho tamb\u00e9m ajudam a manter as implanta\u00e7\u00f5es nos ambientes independentes, reduzindo assim o tempo para implantar e encontrar problemas mais cedo do que tarde no processo. Al\u00e9m disso, como os ambientes s\u00e3o independentes entre si, qualquer falha na implanta\u00e7\u00e3o em um ambiente n\u00e3o bloqueia as implanta\u00e7\u00f5es em outros ambientes. Um trade-off neste m\u00e9todo \u00e9 que, com diferentes fluxos de trabalho para cada ambiente, a manuten\u00e7\u00e3o aumenta \u00e0 medida que a complexidade dos fluxos de trabalho aumenta ao longo do tempo. Refer\u00eancias A\u00e7\u00f5es do GitHub Fluxos de Trabalho do GitHub","title":"Fluxos de Trabalho no GitHub"},{"location":"continuous-delivery/recipes/github-workflows/workflow-per-environment/#fluxos-de-trabalho-no-github","text":"Um fluxo de trabalho \u00e9 um processo automatizado configur\u00e1vel composto por um ou mais trabalhos, onde cada um desses trabalhos pode ser uma a\u00e7\u00e3o no GitHub. Atualmente, \u00e9 suportado um formato de arquivo YAML para definir um fluxo de trabalho no GitHub. Informa\u00e7\u00f5es adicionais sobre a\u00e7\u00f5es do GitHub e Fluxos de Trabalho no GitHub est\u00e3o nos links postados na se\u00e7\u00e3o de refer\u00eancias abaixo.","title":"Fluxos de Trabalho no GitHub"},{"location":"continuous-delivery/recipes/github-workflows/workflow-per-environment/#fluxo-de-trabalho-por-ambiente","text":"A abordagem geral \u00e9 ter um pipeline, onde o c\u00f3digo \u00e9 constru\u00eddo, testado e implantado, e o artefato \u00e9 ent\u00e3o promovido para o pr\u00f3ximo ambiente, eventualmente sendo implantado na produ\u00e7\u00e3o. Existem v\u00e1rias maneiras no GitHub de configurar um ambiente. Uma maneira de fazer isso \u00e9 ter um fluxo de trabalho para v\u00e1rios ambientes, mas a complexidade aumenta \u00e0 medida que processos e trabalhos adicionais s\u00e3o adicionados a um fluxo de trabalho, o que n\u00e3o significa que n\u00e3o pode ser feito para pipelines pequenos. O ponto positivo de ter um \u00fanico fluxo de trabalho \u00e9 que, quando um artefato flui de um ambiente para outro, os valores de estado e ambiente entre os ambientes de implanta\u00e7\u00e3o podem ser facilmente passados. Uma maneira de contornar a complexidade de um \u00fanico fluxo de trabalho \u00e9 ter fluxos de trabalho separados para diferentes ambientes, garantindo que apenas os artefatos criados e validados sejam promovidos de um ambiente para outro, bem como que o fluxo de trabalho seja pequeno o suficiente para depurar problemas em qualquer um dos fluxos de trabalho. Nesse caso, os valores de estado e ambiente precisam ser passados de um ambiente de implanta\u00e7\u00e3o para outro. M\u00faltiplos fluxos de trabalho tamb\u00e9m ajudam a manter as implanta\u00e7\u00f5es nos ambientes independentes, reduzindo assim o tempo para implantar e encontrar problemas mais cedo do que tarde no processo. Al\u00e9m disso, como os ambientes s\u00e3o independentes entre si, qualquer falha na implanta\u00e7\u00e3o em um ambiente n\u00e3o bloqueia as implanta\u00e7\u00f5es em outros ambientes. Um trade-off neste m\u00e9todo \u00e9 que, com diferentes fluxos de trabalho para cada ambiente, a manuten\u00e7\u00e3o aumenta \u00e0 medida que a complexidade dos fluxos de trabalho aumenta ao longo do tempo.","title":"Fluxo de Trabalho por Ambiente"},{"location":"continuous-delivery/recipes/github-workflows/workflow-per-environment/#referencias","text":"A\u00e7\u00f5es do GitHub Fluxos de Trabalho do GitHub","title":"Refer\u00eancias"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/","text":"Salvar sa\u00edda do Terraform em um grupo de vari\u00e1veis (Azure DevOps) Esta receita se aplica apenas ao uso do Terraform com o Azure DevOps. Ela pressup\u00f5e que voc\u00ea est\u00e1 familiarizado com os comandos do Terraform e com os pipelines do Azure. Contexto Quando o Terraform \u00e9 usado para automatizar o provisionamento da infraestrutura, geralmente \u00e9 dedicado um Pipeline do Azure para aplicar os arquivos de configura\u00e7\u00e3o do Terraform. Isso criar\u00e1, atualizar\u00e1, excluir\u00e1 recursos do Azure para provisionar as altera\u00e7\u00f5es em sua infraestrutura. Depois que os arquivos s\u00e3o aplicados, algumas Valores de Sa\u00edda (por exemplo, nome do grupo de recursos, nome do servi\u00e7o de aplicativo) podem ser referenciados e retornados pelo Terraform. Esses valores geralmente precisam ser recuperados posteriormente e usados como vari\u00e1veis de entrada para a implanta\u00e7\u00e3o de servi\u00e7os em pipelines separados. output \"core_resource_group_name\" { description = \"O nome do grupo de recursos\" value = module.core.resource_group_name } output \"core_key_vault_name\" { description = \"O nome do Key Vault.\" value = module.core.key_vault_name } output \"core_key_vault_url\" { description = \"A URL do Key Vault.\" value = module.core.key_vault_url } O objetivo desta receita \u00e9 responder \u00e0 seguinte declara\u00e7\u00e3o: Como tornar os valores de sa\u00edda do Terraform dispon\u00edveis em v\u00e1rios pipelines? Solu\u00e7\u00e3o Uma solu\u00e7\u00e3o sugerida \u00e9 armazenar os valores de sa\u00edda na Biblioteca com um Grupo de Vari\u00e1veis . Grupos de vari\u00e1veis s\u00e3o uma maneira conveniente de armazenar valores que voc\u00ea deseja passar para um pipeline YAML. Al\u00e9m disso, todos os ativos definidos na Biblioteca compartilham um modelo de seguran\u00e7a comum. Voc\u00ea pode controlar quem pode definir novos itens em uma biblioteca e quem pode usar um item existente. Para esse fim, estamos usando os seguintes comandos: terraform output para extrair o valor de uma vari\u00e1vel de sa\u00edda do arquivo de estado (fornecido pelo Terraform CLI ) az pipelines variable-group para gerenciar grupos de vari\u00e1veis (fornecido pelo Azure DevOps CLI ) Voc\u00ea pode usar o seguinte script ap\u00f3s a conclus\u00e3o do terraform apply para criar/atualizar o grupo de vari\u00e1veis. Script (update-variablegroup.sh) Par\u00e2metros Nome Descri\u00e7\u00e3o DEVOPS_ORGANIZATION A URI da organiza\u00e7\u00e3o do Azure DevOps. DEVOPS_PROJECT O nome ou ID do projeto do Azure DevOps. GROUP_NAME O nome do grupo de vari\u00e1veis alvo. Escolhas de implementa\u00e7\u00e3o: Se um grupo de vari\u00e1veis j\u00e1 existe, uma op\u00e7\u00e3o v\u00e1lida pode ser exclu\u00ed-lo e reconstruir o grupo do zero. No entanto, como a autoriza\u00e7\u00e3o pode ter sido atualizada no n\u00edvel do grupo, preferimos evitar essa op\u00e7\u00e3o. O script remove todos os valores das vari\u00e1veis no grupo alvo e os adiciona novamente com os valores mais recentes. As permiss\u00f5es n\u00e3o s\u00e3o afetadas. Um grupo de vari\u00e1veis n\u00e3o pode estar vazio. Ele deve conter pelo menos uma vari\u00e1vel. Um valor tempor\u00e1rio UUID \u00e9 criado para mitigar esse problema e \u00e9 removido assim que as vari\u00e1veis s\u00e3o atualizadas. #!/bin/bash set -e export DEVOPS_ORGANIZATION = $1 export DEVOPS_PROJECT = $2 export GROUP_NAME = $3 # Configurar o CLI do Azure DevOps az devops configure --defaults organization = ${ DEVOPS_ORGANIZATION } project = ${ DEVOPS_PROJECT } --use-git-aliases true # Obter o ID do grupo de vari\u00e1veis (se j\u00e1 existir) group_id = $( az pipelines variable-group list --group-name ${ GROUP_NAME } --query '[0].id' -o json ) if [ -z \" ${ group_id } \" ] ; then # Criar um novo grupo de vari\u00e1veis tf_output = $( terraform output -json | jq -r 'to_entries[] | \"\\(.key)=\\(.value.value)\"' ) az pipelines variable-group create --name ${ GROUP_NAME } --variables ${ tf_output } --authorize true else # Obter vari\u00e1veis existentes var_list = $( az pipelines variable-group variable list --group-id ${ group_id } ) # Adicionar vari\u00e1vel UUID tempor\u00e1ria (um grupo de vari\u00e1veis n\u00e3o pode estar vazio) uuid = $( cat /proc/sys/kernel/random/uuid ) az pipelines variable-group variable create --group-id ${ group_id } --name ${ uuid } # Excluir vari\u00e1veis existentes for row in $( echo ${ var_list } | jq -r 'to_entries[] | \"\\(.key)\"' ) ; do az pipelines variable-group variable delete --group-id ${ group_id } --name ${ row } --yes done # Criar vari\u00e1veis com os valores mais recentes (do Terraform) for row in $( terraform output -json | jq -c 'to_entries[]' ) ; do _jq () { echo ${ row } | jq -r ${ 1 } } az pipelines variable-group variable create --group-id ${ group_id } --name $( _jq '.key' ) --value $( _jq '.value.value' ) --secret $( _jq '.value.sensitive' ) done # Excluir vari\u00e1vel UUID tempor\u00e1ria az pipelines variable-group variable delete --group-id ${ group_id } --name ${ uuid } --yes fi Autentica\u00e7\u00e3o no Azure DevOps A maioria dos comandos usados no script anterior interage com o Azure DevOps e requer autentica\u00e7\u00e3o. Voc\u00ea pode autenticar usando o token de seguran\u00e7a System.AccessToken usado pelo pipeline em execu\u00e7\u00e3o, atribuindo-o a uma vari\u00e1vel de ambiente chamada AZURE_DEVOPS_EXT_PAT , como mostrado no exemplo a seguir (consulte Azure DevOps CLI in Azure Pipeline YAML para obter informa\u00e7\u00f5es adicionais). Al\u00e9m disso, voc\u00ea pode notar que tamb\u00e9m estamos usando vari\u00e1veis predefinidas para direcionar a organiza\u00e7\u00e3o e o projeto do Azure DevOps (respectivamente System.TeamFoundationCollectionUri e System.TeamProjectId ). - task : Bash@3 displayName : 'Atualizar grupo de vari\u00e1veis usando sa\u00eddas do Terraform' inputs : targetType : filePath arguments : $(System.TeamFoundationCollectionUri) $(System.TeamProjectId) \"Platform-VG\" workingDirectory : $(terraformDirectory) filePath : $(scriptsDirectory)/update-variablegroup.sh env : AZURE_DEVOPS_EXT_PAT : $(System.AccessToken) Vari\u00e1veis do sistema Descri\u00e7\u00e3o System.AccessToken Vari\u00e1vel especial que carrega o token de seguran\u00e7a usado pela compila\u00e7\u00e3o em execu\u00e7\u00e3o. System.TeamFoundationCollectionUri A URI da organiza\u00e7\u00e3o do Azure DevOps. System.TeamProjectId O ID do projeto ao qual esta compila\u00e7\u00e3o pertence. Seguran\u00e7a da Biblioteca Fun\u00e7\u00f5es s\u00e3o definidas para os itens da Biblioteca, e a associa\u00e7\u00e3o a essas fun\u00e7\u00f5es governa as opera\u00e7\u00f5es que voc\u00ea pode executar nesses itens. Fun\u00e7\u00e3o para item da biblioteca Descri\u00e7\u00e3o Leitor Pode visualizar o item. Usu\u00e1rio Pode usar o item ao criar pipelines de compila\u00e7\u00e3o ou libera\u00e7\u00e3o. Por exemplo, voc\u00ea deve ser um 'Usu\u00e1rio' de um grupo de vari\u00e1veis para us\u00e1-lo em um pipeline de libera\u00e7\u00e3o. Administrador Tamb\u00e9m pode gerenciar a associa\u00e7\u00e3o de todas as outras fun\u00e7\u00f5es para o item. O usu\u00e1rio que criou um item \u00e9 automaticamente adicionado \u00e0 fun\u00e7\u00e3o de Administrador desse item. Por padr\u00e3o, os seguintes grupos s\u00e3o adicionados \u00e0 fun\u00e7\u00e3o de Administrador da biblioteca: Administradores de Compila\u00e7\u00e3o, Administradores de Libera\u00e7\u00e3o e Administradores de Projeto. Criador Pode criar novos itens na biblioteca, mas essa fun\u00e7\u00e3o n\u00e3o inclui permiss\u00f5es de Leitura ou Usu\u00e1rio. A fun\u00e7\u00e3o de Criador n\u00e3o pode gerenciar permiss\u00f5es para outros usu\u00e1rios. Ao usar System.AccessToken , a identidade da conta de servi\u00e7o <NomeDoProjeto> Build Service ser\u00e1 usada para acessar a Biblioteca. Certifique-se de que, na se\u00e7\u00e3o Pipelines > Biblioteca > Seguran\u00e7a , esta conta de servi\u00e7o tenha a fun\u00e7\u00e3o de Administrador no n\u00edvel da Biblioteca ou do Grupo de Vari\u00e1veis para criar/atualizar/excluir vari\u00e1veis (consulte Biblioteca de ativos para informa\u00e7\u00f5es adicionais).","title":"Salvar sa\u00edda do Terraform em um grupo de vari\u00e1veis (Azure DevOps)"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#salvar-saida-do-terraform-em-um-grupo-de-variaveis-azure-devops","text":"Esta receita se aplica apenas ao uso do Terraform com o Azure DevOps. Ela pressup\u00f5e que voc\u00ea est\u00e1 familiarizado com os comandos do Terraform e com os pipelines do Azure.","title":"Salvar sa\u00edda do Terraform em um grupo de vari\u00e1veis (Azure DevOps)"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#contexto","text":"Quando o Terraform \u00e9 usado para automatizar o provisionamento da infraestrutura, geralmente \u00e9 dedicado um Pipeline do Azure para aplicar os arquivos de configura\u00e7\u00e3o do Terraform. Isso criar\u00e1, atualizar\u00e1, excluir\u00e1 recursos do Azure para provisionar as altera\u00e7\u00f5es em sua infraestrutura. Depois que os arquivos s\u00e3o aplicados, algumas Valores de Sa\u00edda (por exemplo, nome do grupo de recursos, nome do servi\u00e7o de aplicativo) podem ser referenciados e retornados pelo Terraform. Esses valores geralmente precisam ser recuperados posteriormente e usados como vari\u00e1veis de entrada para a implanta\u00e7\u00e3o de servi\u00e7os em pipelines separados. output \"core_resource_group_name\" { description = \"O nome do grupo de recursos\" value = module.core.resource_group_name } output \"core_key_vault_name\" { description = \"O nome do Key Vault.\" value = module.core.key_vault_name } output \"core_key_vault_url\" { description = \"A URL do Key Vault.\" value = module.core.key_vault_url } O objetivo desta receita \u00e9 responder \u00e0 seguinte declara\u00e7\u00e3o: Como tornar os valores de sa\u00edda do Terraform dispon\u00edveis em v\u00e1rios pipelines?","title":"Contexto"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#solucao","text":"Uma solu\u00e7\u00e3o sugerida \u00e9 armazenar os valores de sa\u00edda na Biblioteca com um Grupo de Vari\u00e1veis . Grupos de vari\u00e1veis s\u00e3o uma maneira conveniente de armazenar valores que voc\u00ea deseja passar para um pipeline YAML. Al\u00e9m disso, todos os ativos definidos na Biblioteca compartilham um modelo de seguran\u00e7a comum. Voc\u00ea pode controlar quem pode definir novos itens em uma biblioteca e quem pode usar um item existente. Para esse fim, estamos usando os seguintes comandos: terraform output para extrair o valor de uma vari\u00e1vel de sa\u00edda do arquivo de estado (fornecido pelo Terraform CLI ) az pipelines variable-group para gerenciar grupos de vari\u00e1veis (fornecido pelo Azure DevOps CLI ) Voc\u00ea pode usar o seguinte script ap\u00f3s a conclus\u00e3o do terraform apply para criar/atualizar o grupo de vari\u00e1veis.","title":"Solu\u00e7\u00e3o"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#script-update-variablegroupsh","text":"","title":"Script (update-variablegroup.sh)"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#parametros","text":"Nome Descri\u00e7\u00e3o DEVOPS_ORGANIZATION A URI da organiza\u00e7\u00e3o do Azure DevOps. DEVOPS_PROJECT O nome ou ID do projeto do Azure DevOps. GROUP_NAME O nome do grupo de vari\u00e1veis alvo. Escolhas de implementa\u00e7\u00e3o: Se um grupo de vari\u00e1veis j\u00e1 existe, uma op\u00e7\u00e3o v\u00e1lida pode ser exclu\u00ed-lo e reconstruir o grupo do zero. No entanto, como a autoriza\u00e7\u00e3o pode ter sido atualizada no n\u00edvel do grupo, preferimos evitar essa op\u00e7\u00e3o. O script remove todos os valores das vari\u00e1veis no grupo alvo e os adiciona novamente com os valores mais recentes. As permiss\u00f5es n\u00e3o s\u00e3o afetadas. Um grupo de vari\u00e1veis n\u00e3o pode estar vazio. Ele deve conter pelo menos uma vari\u00e1vel. Um valor tempor\u00e1rio UUID \u00e9 criado para mitigar esse problema e \u00e9 removido assim que as vari\u00e1veis s\u00e3o atualizadas. #!/bin/bash set -e export DEVOPS_ORGANIZATION = $1 export DEVOPS_PROJECT = $2 export GROUP_NAME = $3 # Configurar o CLI do Azure DevOps az devops configure --defaults organization = ${ DEVOPS_ORGANIZATION } project = ${ DEVOPS_PROJECT } --use-git-aliases true # Obter o ID do grupo de vari\u00e1veis (se j\u00e1 existir) group_id = $( az pipelines variable-group list --group-name ${ GROUP_NAME } --query '[0].id' -o json ) if [ -z \" ${ group_id } \" ] ; then # Criar um novo grupo de vari\u00e1veis tf_output = $( terraform output -json | jq -r 'to_entries[] | \"\\(.key)=\\(.value.value)\"' ) az pipelines variable-group create --name ${ GROUP_NAME } --variables ${ tf_output } --authorize true else # Obter vari\u00e1veis existentes var_list = $( az pipelines variable-group variable list --group-id ${ group_id } ) # Adicionar vari\u00e1vel UUID tempor\u00e1ria (um grupo de vari\u00e1veis n\u00e3o pode estar vazio) uuid = $( cat /proc/sys/kernel/random/uuid ) az pipelines variable-group variable create --group-id ${ group_id } --name ${ uuid } # Excluir vari\u00e1veis existentes for row in $( echo ${ var_list } | jq -r 'to_entries[] | \"\\(.key)\"' ) ; do az pipelines variable-group variable delete --group-id ${ group_id } --name ${ row } --yes done # Criar vari\u00e1veis com os valores mais recentes (do Terraform) for row in $( terraform output -json | jq -c 'to_entries[]' ) ; do _jq () { echo ${ row } | jq -r ${ 1 } } az pipelines variable-group variable create --group-id ${ group_id } --name $( _jq '.key' ) --value $( _jq '.value.value' ) --secret $( _jq '.value.sensitive' ) done # Excluir vari\u00e1vel UUID tempor\u00e1ria az pipelines variable-group variable delete --group-id ${ group_id } --name ${ uuid } --yes fi","title":"Par\u00e2metros"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#autenticacao-no-azure-devops","text":"A maioria dos comandos usados no script anterior interage com o Azure DevOps e requer autentica\u00e7\u00e3o. Voc\u00ea pode autenticar usando o token de seguran\u00e7a System.AccessToken usado pelo pipeline em execu\u00e7\u00e3o, atribuindo-o a uma vari\u00e1vel de ambiente chamada AZURE_DEVOPS_EXT_PAT , como mostrado no exemplo a seguir (consulte Azure DevOps CLI in Azure Pipeline YAML para obter informa\u00e7\u00f5es adicionais). Al\u00e9m disso, voc\u00ea pode notar que tamb\u00e9m estamos usando vari\u00e1veis predefinidas para direcionar a organiza\u00e7\u00e3o e o projeto do Azure DevOps (respectivamente System.TeamFoundationCollectionUri e System.TeamProjectId ). - task : Bash@3 displayName : 'Atualizar grupo de vari\u00e1veis usando sa\u00eddas do Terraform' inputs : targetType : filePath arguments : $(System.TeamFoundationCollectionUri) $(System.TeamProjectId) \"Platform-VG\" workingDirectory : $(terraformDirectory) filePath : $(scriptsDirectory)/update-variablegroup.sh env : AZURE_DEVOPS_EXT_PAT : $(System.AccessToken) Vari\u00e1veis do sistema Descri\u00e7\u00e3o System.AccessToken Vari\u00e1vel especial que carrega o token de seguran\u00e7a usado pela compila\u00e7\u00e3o em execu\u00e7\u00e3o. System.TeamFoundationCollectionUri A URI da organiza\u00e7\u00e3o do Azure DevOps. System.TeamProjectId O ID do projeto ao qual esta compila\u00e7\u00e3o pertence.","title":"Autentica\u00e7\u00e3o no Azure DevOps"},{"location":"continuous-delivery/recipes/terraform/save-output-to-variable-group/#seguranca-da-biblioteca","text":"Fun\u00e7\u00f5es s\u00e3o definidas para os itens da Biblioteca, e a associa\u00e7\u00e3o a essas fun\u00e7\u00f5es governa as opera\u00e7\u00f5es que voc\u00ea pode executar nesses itens. Fun\u00e7\u00e3o para item da biblioteca Descri\u00e7\u00e3o Leitor Pode visualizar o item. Usu\u00e1rio Pode usar o item ao criar pipelines de compila\u00e7\u00e3o ou libera\u00e7\u00e3o. Por exemplo, voc\u00ea deve ser um 'Usu\u00e1rio' de um grupo de vari\u00e1veis para us\u00e1-lo em um pipeline de libera\u00e7\u00e3o. Administrador Tamb\u00e9m pode gerenciar a associa\u00e7\u00e3o de todas as outras fun\u00e7\u00f5es para o item. O usu\u00e1rio que criou um item \u00e9 automaticamente adicionado \u00e0 fun\u00e7\u00e3o de Administrador desse item. Por padr\u00e3o, os seguintes grupos s\u00e3o adicionados \u00e0 fun\u00e7\u00e3o de Administrador da biblioteca: Administradores de Compila\u00e7\u00e3o, Administradores de Libera\u00e7\u00e3o e Administradores de Projeto. Criador Pode criar novos itens na biblioteca, mas essa fun\u00e7\u00e3o n\u00e3o inclui permiss\u00f5es de Leitura ou Usu\u00e1rio. A fun\u00e7\u00e3o de Criador n\u00e3o pode gerenciar permiss\u00f5es para outros usu\u00e1rios. Ao usar System.AccessToken , a identidade da conta de servi\u00e7o <NomeDoProjeto> Build Service ser\u00e1 usada para acessar a Biblioteca. Certifique-se de que, na se\u00e7\u00e3o Pipelines > Biblioteca > Seguran\u00e7a , esta conta de servi\u00e7o tenha a fun\u00e7\u00e3o de Administrador no n\u00edvel da Biblioteca ou do Grupo de Vari\u00e1veis para criar/atualizar/excluir vari\u00e1veis (consulte Biblioteca de ativos para informa\u00e7\u00f5es adicionais).","title":"Seguran\u00e7a da Biblioteca"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/","text":"Compartilhando Vari\u00e1veis Comuns / Conven\u00e7\u00f5es de Nomenclatura Entre M\u00f3dulos do Terraform O que estamos tentando resolver? Ao implantar infraestrutura por meio de c\u00f3digo, \u00e9 pr\u00e1tica comum dividir o c\u00f3digo em diferentes m\u00f3dulos respons\u00e1veis pela implanta\u00e7\u00e3o de uma parte ou componente da infraestrutura. No Terraform, isso pode ser feito usando m\u00f3dulos . Neste caso, \u00e9 \u00fatil ser capaz de compartilhar algumas vari\u00e1veis comuns, bem como centralizar as conven\u00e7\u00f5es de nomenclatura dos diferentes recursos, para garantir que seja f\u00e1cil refatorar quando necess\u00e1rio, apesar das depend\u00eancias entre m\u00f3dulos. Por exemplo, considere 2 m\u00f3dulos: M\u00f3dulo de rede, respons\u00e1vel pela implanta\u00e7\u00e3o de Rede Virtual, Sub-redes, Grupos de Seguran\u00e7a de Rede (NSGs) e Zonas DNS Privadas M\u00f3dulo Azure Kubernetes Service respons\u00e1vel pela implanta\u00e7\u00e3o do cluster AKS Existem depend\u00eancias entre esses m\u00f3dulos, como o cluster Kubernetes que ser\u00e1 implantado na rede virtual do M\u00f3dulo de Rede. Para fazer isso, ele deve fazer refer\u00eancia ao nome da rede virtual, bem como ao grupo de recursos no qual est\u00e1 implantado. E idealmente, gostar\u00edamos que essas depend\u00eancias fossem fracamente acopladas, o m\u00e1ximo poss\u00edvel, para manter a agilidade na forma como os m\u00f3dulos s\u00e3o implantados e manter o ciclo de vida independente. Esta p\u00e1gina explica uma maneira de resolver isso com o Terraform. Como fazer isso? Contexto Vamos considerar a seguinte estrutura para nossos m\u00f3dulos: modules \u251c\u2500\u2500 kubernetes \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 network \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf Agora, suponha que voc\u00ea implanta uma rede virtual para o ambiente de desenvolvimento, com as seguintes propriedades: Nome: vnet-dev Grupo de recursos: rg-dev-network Em algum momento, voc\u00ea precisa injetar esses valores no m\u00f3dulo Kubernetes, para obter uma refer\u00eancia a ele por meio de uma fonte de dados, por exemplo: data \"azurem_virtual_network\" \"vnet\" { name = var.vnet_name resource_group_name = var.vnet_rg_name } No trecho acima, o nome da rede virtual e o grupo de recursos s\u00e3o definidos por meio de vari\u00e1veis. Isso \u00e9 \u00f3timo, mas se isso mudar no futuro, os valores dessas vari\u00e1veis tamb\u00e9m devem ser alterados. Em todos os m\u00f3dulos em que s\u00e3o usados. Ser capaz de gerenciar a nomenclatura em um local central garantir\u00e1 que o c\u00f3digo possa ser facilmente refatorado no futuro, sem atualizar todos os m\u00f3dulos. Sobre Vari\u00e1veis do Terraform No Terraform, cada vari\u00e1vel de entrada deve ser definida no n\u00edvel de configura\u00e7\u00e3o (ou m\u00f3dulo), usando o bloco variable . Por conven\u00e7\u00e3o, isso \u00e9 frequentemente feito em um arquivo variables.tf , no m\u00f3dulo. Este arquivo cont\u00e9m a declara\u00e7\u00e3o de vari\u00e1veis e seus valores padr\u00e3o. Valores podem ser definidos usando arquivos de configura\u00e7\u00e3o de vari\u00e1veis (.tfvars), vari\u00e1veis de ambiente ou argumentos CLI ao usar os comandos terraform plan ou terraform apply . Uma das limita\u00e7\u00f5es da declara\u00e7\u00e3o de vari\u00e1veis \u00e9 que n\u00e3o \u00e9 poss\u00edvel compor vari\u00e1veis, locals ou fun\u00e7\u00f5es incorporadas do Terraform s\u00e3o usadas para isso. M\u00f3dulo Comum do Terraform Uma maneira de contornar essas limita\u00e7\u00f5es \u00e9 introduzir um m\u00f3dulo \"comum\" que n\u00e3o implantar\u00e1 recursos, mas apenas calcular\u00e1/solucionar\u00e1 e produzir\u00e1 os nomes de recursos e vari\u00e1veis compartilhadas e ser\u00e1 usado por todos os outros m\u00f3dulos, como uma depend\u00eancia. modules \u251c\u2500\u2500 common \u2502 \u251c\u2500\u2500 output.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 kubernetes \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 network \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf variables.tf: variable \"environment_name\" { type = string description = \"O nome do ambiente.\" } variable \"location\" { type = string description = \"A regi\u00e3o do Azure onde os recursos ser\u00e3o criados. O padr\u00e3o \u00e9 oeste da Europa.\" default = \"westeurope\" } output.tf: # Vari\u00e1veis compartilhadas output \"location\" { value = var.location } output \"subscription\" { value = var.subscription } # Nomenclatura de Rede Virtual output \"vnet_rg_name\" { value = \"rg-network-${var.environment_name}\" } output \"vnet_name\" { value = \"vnet-${var.environment_name}\" } # Nomenclatura do AKS output \"aks_rg_name\" { value = \"rg-aks-${var.environment_name}\" } output \"aks_name\" { value = \"aks-${var.environment_name}\" } Agora, se voc\u00ea executar o terraform apply para o m\u00f3dulo comum, voc\u00ea obter\u00e1 todas as vari\u00e1veis comuns compartilhadas nas sa\u00eddas: $ terraform plan -var environment_name = \"dev\" -var subscription = \" $( az account show --query id -o tsv ) \" Mudan\u00e7as nas Sa\u00eddas: + aks_name = \"aks-dev\" + aks_rg_name = \"rg-aks-dev\" + location = \"westeurope\" + subscription = \"01010101-1010-0101-1010-010101010101\" + vnet_name = \"vnet-dev\" + vnet_rg_name = \"rg-network-dev\" Voc\u00ea pode aplicar este plano para salvar esses novos valores de sa\u00edda no estado do Terraform, sem alterar nenhuma infraestrutura real. Usando o M\u00f3dulo Comum do Terraform Usar o m\u00f3dulo comum do Terraform em qualquer outro m\u00f3dulo \u00e9 muito f\u00e1cil. Por exemplo, isso \u00e9 o que voc\u00ea pode fazer no arquivo main.tf do m\u00f3dulo Azure Kubernetes: module \"common\" { source = \"../common\" environment_name = var.environment_name subscription = var.subscription } data \"azurerm_subnet\" \"aks_subnet\" { name = \"AksSubnet\" virtual_network _name = module.common.vnet_name resource_group_name = module.common.vnet_rg_name } resource \"azurerm_kubernetes_cluster\" \"aks\" { name = module.common.aks_name resource_group_name = module.common.aks_rg_name location = module.common.location dns_prefix = module.common.aks_name identity { type = \"SystemAssigned\" } default_node_pool { name = \"default\" vm_size = \"Standard_DS2_v2\" vnet_subnet_id = data.azurerm_subnet.aks_subnet.id } } Em seguida, voc\u00ea pode executar os comandos terraform plan e terraform apply para implantar! terraform plan -var environment_name=\"dev\" -var subscription=\"$(az account show --query id -o tsv)\" data.azurerm_subnet.aks_subnet: Reading... data.azurerm_subnet.aks_subnet: Read complete after 1s [id=/subscriptions/01010101-1010-0101-1010-010101010101/resourceGroups/rg-network-dev/providers/Microsoft.Network/virtualNetworks/vnet-dev/subnets/AksSubnet] O Terraform usou os provedores selecionados para gerar o seguinte plano de execu\u00e7\u00e3o. As a\u00e7\u00f5es de recursos s\u00e3o indicadas pelos seguintes s\u00edmbolos: + criar O Terraform executar\u00e1 as seguintes a\u00e7\u00f5es: # azurerm_kubernetes_cluster.aks ser\u00e1 criado + resource \"azurerm_kubernetes_cluster\" \"aks\" { + dns_prefix = \"aks-dev\" + fqdn = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + kube_admin_config = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + kube_admin_config_raw = (valor sens\u00edvel) + kube_config = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + kube_config_raw = (valor sens\u00edvel) + kubernetes_version = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + location = \"westeurope\" + name = \"aks-dev\" + node_resource_group = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + portal_fqdn = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_cluster_enabled = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_cluster_public_fqdn_enabled = false + private_dns_zone_id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_fqdn = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_link_enabled = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + public_network_access_enabled = true + resource_group_name = \"rg-aks-dev\" + sku_tier = \"Free\" [...] truncado + default_node_pool { + kubelet_disk_type = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + max_pods = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + name = \"default\" + node_count = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + node_labels = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + orchestrator_version = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + os_disk_size_gb = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + os_disk_type = \"Managed\" + os_sku = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + type = \"VirtualMachineScaleSets\" + ultra_ssd_enabled = false + vm_size = \"Standard_DS2_v2\" + vnet_subnet_id = \"/subscriptions/01010101-1010-0101-1010-010101010101/resourceGroups/rg-network-dev/providers/Microsoft.Network/virtualNetworks/vnet-dev/subnets/AksSubnet\" } + identity { + principal_id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + tenant_id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + type = \"SystemAssigned\" } [...] truncado } Plano: 1 para adicionar, 0 para alterar, 0 para destruir. Observa\u00e7\u00e3o: o uso de um m\u00f3dulo comum tamb\u00e9m \u00e9 v\u00e1lido se voc\u00ea decidir implantar todos os seus m\u00f3dulos na mesma opera\u00e7\u00e3o a partir de um arquivo de configura\u00e7\u00e3o principal do Terraform, como: module \"common\" { source = \"./common\" environment_name = var.environment_name subscription = var.subscription } module \"network\" { source = \"./network\" vnet_name = module.common.vnet_name vnet_rg_name = module.common.vnet_rg_name } module \"kubernetes\" { source = \"./kubernetes\" aks_name = module.common.aks_name aks_rg = module.common.aks_rg_name } Centralizando as Defini\u00e7\u00f5es de Vari\u00e1veis de Entrada No caso de voc\u00ea optar por definir os valores das vari\u00e1veis diretamente no controle de origem (por exemplo, cen\u00e1rio gitops) usando arquivos de defini\u00e7\u00e3o de vari\u00e1veis ( .tfvars ), ter um m\u00f3dulo comum tamb\u00e9m ajudar\u00e1 a n\u00e3o duplicar as defini\u00e7\u00f5es de vari\u00e1veis comuns em todos os m\u00f3dulos. Na verdade, \u00e9 poss\u00edvel ter um arquivo global que seja definido uma vez, no n\u00edvel do m\u00f3dulo comum, e mescl\u00e1-lo com arquivos de defini\u00e7\u00f5es de vari\u00e1veis espec\u00edficas do m\u00f3dulo no momento do plan ou apply do Terraform. Considere a seguinte estrutura: modules \u251c\u2500\u2500 common \u2502 \u251c\u2500\u2500 dev.tfvars \u2502 \u251c\u2500\u2500 prod.tfvars \u2502 \u251c\u2500\u2500 output.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 kubernetes \u2502 \u251c\u2500\u2500 dev.tfvars \u2502 \u251c\u2500\u2500 prod.tfvars \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 network \u2502 \u251c\u2500\u2500 dev.tfvars \u2502 \u251c\u2500\u2500 prod.tfvars \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf O m\u00f3dulo comum, assim como todos os outros m\u00f3dulos, cont\u00e9m arquivos de vari\u00e1veis para os ambientes dev e prod . Os arquivos tfvars do m\u00f3dulo comum definir\u00e3o todas as vari\u00e1veis globais que ser\u00e3o compartilhadas com outros m\u00f3dulos (como assinatura, nome do ambiente, etc.), e os arquivos .tfvars de cada m\u00f3dulo definir\u00e3o apenas os valores espec\u00edficos do m\u00f3dulo. Em seguida, \u00e9 poss\u00edvel mesclar esses arquivos ao executar os comandos terraform apply ou terraform plan , usando a seguinte sintaxe: terraform plan -var-file = < ( cat ../common/dev.tfvars ./dev.tf vars ) Observa\u00e7\u00e3o: ao usar isso, \u00e9 realmente importante garantir que voc\u00ea n\u00e3o tenha os mesmos nomes de vari\u00e1veis em ambos os arquivos, caso contr\u00e1rio, isso gerar\u00e1 um erro. Conclus\u00e3o Ao ter um m\u00f3dulo comum que possua vari\u00e1veis compartilhadas, bem como conven\u00e7\u00f5es de nomenclatura, agora \u00e9 mais f\u00e1cil refatorar o c\u00f3digo de configura\u00e7\u00e3o do Terraform. Imagine que, por algum motivo, voc\u00ea precisa alterar o padr\u00e3o usado para o nome da rede virtual: voc\u00ea o altera nos arquivos de sa\u00edda do m\u00f3dulo comum e s\u00f3 precisa reaplicar todos os m\u00f3dulos!","title":"Compartilhando Vari\u00e1veis Comuns / Conven\u00e7\u00f5es de Nomenclatura Entre M\u00f3dulos do Terraform"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#compartilhando-variaveis-comuns-convencoes-de-nomenclatura-entre-modulos-do-terraform","text":"","title":"Compartilhando Vari\u00e1veis Comuns / Conven\u00e7\u00f5es de Nomenclatura Entre M\u00f3dulos do Terraform"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#o-que-estamos-tentando-resolver","text":"Ao implantar infraestrutura por meio de c\u00f3digo, \u00e9 pr\u00e1tica comum dividir o c\u00f3digo em diferentes m\u00f3dulos respons\u00e1veis pela implanta\u00e7\u00e3o de uma parte ou componente da infraestrutura. No Terraform, isso pode ser feito usando m\u00f3dulos . Neste caso, \u00e9 \u00fatil ser capaz de compartilhar algumas vari\u00e1veis comuns, bem como centralizar as conven\u00e7\u00f5es de nomenclatura dos diferentes recursos, para garantir que seja f\u00e1cil refatorar quando necess\u00e1rio, apesar das depend\u00eancias entre m\u00f3dulos. Por exemplo, considere 2 m\u00f3dulos: M\u00f3dulo de rede, respons\u00e1vel pela implanta\u00e7\u00e3o de Rede Virtual, Sub-redes, Grupos de Seguran\u00e7a de Rede (NSGs) e Zonas DNS Privadas M\u00f3dulo Azure Kubernetes Service respons\u00e1vel pela implanta\u00e7\u00e3o do cluster AKS Existem depend\u00eancias entre esses m\u00f3dulos, como o cluster Kubernetes que ser\u00e1 implantado na rede virtual do M\u00f3dulo de Rede. Para fazer isso, ele deve fazer refer\u00eancia ao nome da rede virtual, bem como ao grupo de recursos no qual est\u00e1 implantado. E idealmente, gostar\u00edamos que essas depend\u00eancias fossem fracamente acopladas, o m\u00e1ximo poss\u00edvel, para manter a agilidade na forma como os m\u00f3dulos s\u00e3o implantados e manter o ciclo de vida independente. Esta p\u00e1gina explica uma maneira de resolver isso com o Terraform.","title":"O que estamos tentando resolver?"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#como-fazer-isso","text":"","title":"Como fazer isso?"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#contexto","text":"Vamos considerar a seguinte estrutura para nossos m\u00f3dulos: modules \u251c\u2500\u2500 kubernetes \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 network \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf Agora, suponha que voc\u00ea implanta uma rede virtual para o ambiente de desenvolvimento, com as seguintes propriedades: Nome: vnet-dev Grupo de recursos: rg-dev-network Em algum momento, voc\u00ea precisa injetar esses valores no m\u00f3dulo Kubernetes, para obter uma refer\u00eancia a ele por meio de uma fonte de dados, por exemplo: data \"azurem_virtual_network\" \"vnet\" { name = var.vnet_name resource_group_name = var.vnet_rg_name } No trecho acima, o nome da rede virtual e o grupo de recursos s\u00e3o definidos por meio de vari\u00e1veis. Isso \u00e9 \u00f3timo, mas se isso mudar no futuro, os valores dessas vari\u00e1veis tamb\u00e9m devem ser alterados. Em todos os m\u00f3dulos em que s\u00e3o usados. Ser capaz de gerenciar a nomenclatura em um local central garantir\u00e1 que o c\u00f3digo possa ser facilmente refatorado no futuro, sem atualizar todos os m\u00f3dulos.","title":"Contexto"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#sobre-variaveis-do-terraform","text":"No Terraform, cada vari\u00e1vel de entrada deve ser definida no n\u00edvel de configura\u00e7\u00e3o (ou m\u00f3dulo), usando o bloco variable . Por conven\u00e7\u00e3o, isso \u00e9 frequentemente feito em um arquivo variables.tf , no m\u00f3dulo. Este arquivo cont\u00e9m a declara\u00e7\u00e3o de vari\u00e1veis e seus valores padr\u00e3o. Valores podem ser definidos usando arquivos de configura\u00e7\u00e3o de vari\u00e1veis (.tfvars), vari\u00e1veis de ambiente ou argumentos CLI ao usar os comandos terraform plan ou terraform apply . Uma das limita\u00e7\u00f5es da declara\u00e7\u00e3o de vari\u00e1veis \u00e9 que n\u00e3o \u00e9 poss\u00edvel compor vari\u00e1veis, locals ou fun\u00e7\u00f5es incorporadas do Terraform s\u00e3o usadas para isso.","title":"Sobre Vari\u00e1veis do Terraform"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#modulo-comum-do-terraform","text":"Uma maneira de contornar essas limita\u00e7\u00f5es \u00e9 introduzir um m\u00f3dulo \"comum\" que n\u00e3o implantar\u00e1 recursos, mas apenas calcular\u00e1/solucionar\u00e1 e produzir\u00e1 os nomes de recursos e vari\u00e1veis compartilhadas e ser\u00e1 usado por todos os outros m\u00f3dulos, como uma depend\u00eancia. modules \u251c\u2500\u2500 common \u2502 \u251c\u2500\u2500 output.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 kubernetes \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 network \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf variables.tf: variable \"environment_name\" { type = string description = \"O nome do ambiente.\" } variable \"location\" { type = string description = \"A regi\u00e3o do Azure onde os recursos ser\u00e3o criados. O padr\u00e3o \u00e9 oeste da Europa.\" default = \"westeurope\" } output.tf: # Vari\u00e1veis compartilhadas output \"location\" { value = var.location } output \"subscription\" { value = var.subscription } # Nomenclatura de Rede Virtual output \"vnet_rg_name\" { value = \"rg-network-${var.environment_name}\" } output \"vnet_name\" { value = \"vnet-${var.environment_name}\" } # Nomenclatura do AKS output \"aks_rg_name\" { value = \"rg-aks-${var.environment_name}\" } output \"aks_name\" { value = \"aks-${var.environment_name}\" } Agora, se voc\u00ea executar o terraform apply para o m\u00f3dulo comum, voc\u00ea obter\u00e1 todas as vari\u00e1veis comuns compartilhadas nas sa\u00eddas: $ terraform plan -var environment_name = \"dev\" -var subscription = \" $( az account show --query id -o tsv ) \" Mudan\u00e7as nas Sa\u00eddas: + aks_name = \"aks-dev\" + aks_rg_name = \"rg-aks-dev\" + location = \"westeurope\" + subscription = \"01010101-1010-0101-1010-010101010101\" + vnet_name = \"vnet-dev\" + vnet_rg_name = \"rg-network-dev\" Voc\u00ea pode aplicar este plano para salvar esses novos valores de sa\u00edda no estado do Terraform, sem alterar nenhuma infraestrutura real.","title":"M\u00f3dulo Comum do Terraform"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#usando-o-modulo-comum-do-terraform","text":"Usar o m\u00f3dulo comum do Terraform em qualquer outro m\u00f3dulo \u00e9 muito f\u00e1cil. Por exemplo, isso \u00e9 o que voc\u00ea pode fazer no arquivo main.tf do m\u00f3dulo Azure Kubernetes: module \"common\" { source = \"../common\" environment_name = var.environment_name subscription = var.subscription } data \"azurerm_subnet\" \"aks_subnet\" { name = \"AksSubnet\" virtual_network _name = module.common.vnet_name resource_group_name = module.common.vnet_rg_name } resource \"azurerm_kubernetes_cluster\" \"aks\" { name = module.common.aks_name resource_group_name = module.common.aks_rg_name location = module.common.location dns_prefix = module.common.aks_name identity { type = \"SystemAssigned\" } default_node_pool { name = \"default\" vm_size = \"Standard_DS2_v2\" vnet_subnet_id = data.azurerm_subnet.aks_subnet.id } } Em seguida, voc\u00ea pode executar os comandos terraform plan e terraform apply para implantar! terraform plan -var environment_name=\"dev\" -var subscription=\"$(az account show --query id -o tsv)\" data.azurerm_subnet.aks_subnet: Reading... data.azurerm_subnet.aks_subnet: Read complete after 1s [id=/subscriptions/01010101-1010-0101-1010-010101010101/resourceGroups/rg-network-dev/providers/Microsoft.Network/virtualNetworks/vnet-dev/subnets/AksSubnet] O Terraform usou os provedores selecionados para gerar o seguinte plano de execu\u00e7\u00e3o. As a\u00e7\u00f5es de recursos s\u00e3o indicadas pelos seguintes s\u00edmbolos: + criar O Terraform executar\u00e1 as seguintes a\u00e7\u00f5es: # azurerm_kubernetes_cluster.aks ser\u00e1 criado + resource \"azurerm_kubernetes_cluster\" \"aks\" { + dns_prefix = \"aks-dev\" + fqdn = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + kube_admin_config = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + kube_admin_config_raw = (valor sens\u00edvel) + kube_config = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + kube_config_raw = (valor sens\u00edvel) + kubernetes_version = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + location = \"westeurope\" + name = \"aks-dev\" + node_resource_group = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + portal_fqdn = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_cluster_enabled = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_cluster_public_fqdn_enabled = false + private_dns_zone_id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_fqdn = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + private_link_enabled = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + public_network_access_enabled = true + resource_group_name = \"rg-aks-dev\" + sku_tier = \"Free\" [...] truncado + default_node_pool { + kubelet_disk_type = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + max_pods = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + name = \"default\" + node_count = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + node_labels = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + orchestrator_version = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + os_disk_size_gb = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + os_disk_type = \"Managed\" + os_sku = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + type = \"VirtualMachineScaleSets\" + ultra_ssd_enabled = false + vm_size = \"Standard_DS2_v2\" + vnet_subnet_id = \"/subscriptions/01010101-1010-0101-1010-010101010101/resourceGroups/rg-network-dev/providers/Microsoft.Network/virtualNetworks/vnet-dev/subnets/AksSubnet\" } + identity { + principal_id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + tenant_id = (conhecido ap\u00f3s a aplica\u00e7\u00e3o) + type = \"SystemAssigned\" } [...] truncado } Plano: 1 para adicionar, 0 para alterar, 0 para destruir. Observa\u00e7\u00e3o: o uso de um m\u00f3dulo comum tamb\u00e9m \u00e9 v\u00e1lido se voc\u00ea decidir implantar todos os seus m\u00f3dulos na mesma opera\u00e7\u00e3o a partir de um arquivo de configura\u00e7\u00e3o principal do Terraform, como: module \"common\" { source = \"./common\" environment_name = var.environment_name subscription = var.subscription } module \"network\" { source = \"./network\" vnet_name = module.common.vnet_name vnet_rg_name = module.common.vnet_rg_name } module \"kubernetes\" { source = \"./kubernetes\" aks_name = module.common.aks_name aks_rg = module.common.aks_rg_name }","title":"Usando o M\u00f3dulo Comum do Terraform"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#centralizando-as-definicoes-de-variaveis-de-entrada","text":"No caso de voc\u00ea optar por definir os valores das vari\u00e1veis diretamente no controle de origem (por exemplo, cen\u00e1rio gitops) usando arquivos de defini\u00e7\u00e3o de vari\u00e1veis ( .tfvars ), ter um m\u00f3dulo comum tamb\u00e9m ajudar\u00e1 a n\u00e3o duplicar as defini\u00e7\u00f5es de vari\u00e1veis comuns em todos os m\u00f3dulos. Na verdade, \u00e9 poss\u00edvel ter um arquivo global que seja definido uma vez, no n\u00edvel do m\u00f3dulo comum, e mescl\u00e1-lo com arquivos de defini\u00e7\u00f5es de vari\u00e1veis espec\u00edficas do m\u00f3dulo no momento do plan ou apply do Terraform. Considere a seguinte estrutura: modules \u251c\u2500\u2500 common \u2502 \u251c\u2500\u2500 dev.tfvars \u2502 \u251c\u2500\u2500 prod.tfvars \u2502 \u251c\u2500\u2500 output.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 kubernetes \u2502 \u251c\u2500\u2500 dev.tfvars \u2502 \u251c\u2500\u2500 prod.tfvars \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf \u251c\u2500\u2500 network \u2502 \u251c\u2500\u2500 dev.tfvars \u2502 \u251c\u2500\u2500 prod.tfvars \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u2514\u2500\u2500 variables.tf O m\u00f3dulo comum, assim como todos os outros m\u00f3dulos, cont\u00e9m arquivos de vari\u00e1veis para os ambientes dev e prod . Os arquivos tfvars do m\u00f3dulo comum definir\u00e3o todas as vari\u00e1veis globais que ser\u00e3o compartilhadas com outros m\u00f3dulos (como assinatura, nome do ambiente, etc.), e os arquivos .tfvars de cada m\u00f3dulo definir\u00e3o apenas os valores espec\u00edficos do m\u00f3dulo. Em seguida, \u00e9 poss\u00edvel mesclar esses arquivos ao executar os comandos terraform apply ou terraform plan , usando a seguinte sintaxe: terraform plan -var-file = < ( cat ../common/dev.tfvars ./dev.tf vars ) Observa\u00e7\u00e3o: ao usar isso, \u00e9 realmente importante garantir que voc\u00ea n\u00e3o tenha os mesmos nomes de vari\u00e1veis em ambos os arquivos, caso contr\u00e1rio, isso gerar\u00e1 um erro.","title":"Centralizando as Defini\u00e7\u00f5es de Vari\u00e1veis de Entrada"},{"location":"continuous-delivery/recipes/terraform/share-common-variables-naming-conventions/#conclusao","text":"Ao ter um m\u00f3dulo comum que possua vari\u00e1veis compartilhadas, bem como conven\u00e7\u00f5es de nomenclatura, agora \u00e9 mais f\u00e1cil refatorar o c\u00f3digo de configura\u00e7\u00e3o do Terraform. Imagine que, por algum motivo, voc\u00ea precisa alterar o padr\u00e3o usado para o nome da rede virtual: voc\u00ea o altera nos arquivos de sa\u00edda do m\u00f3dulo comum e s\u00f3 precisa reaplicar todos os m\u00f3dulos!","title":"Conclus\u00e3o"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/","text":"Diretrizes para Estruturar a Configura\u00e7\u00e3o do Terraform Contexto Ao criar uma configura\u00e7\u00e3o de infraestrutura, \u00e9 importante seguir uma estrutura consistente e organizada para garantir a manutenibilidade, escalabilidade e reutiliza\u00e7\u00e3o do c\u00f3digo. O objetivo desta se\u00e7\u00e3o \u00e9 descrever brevemente como estruturar sua configura\u00e7\u00e3o do Terraform para alcan\u00e7ar esses objetivos. Estruturando a Configura\u00e7\u00e3o do Terraform A estrutura recomendada \u00e9 a seguinte: Coloque cada componente que deseja configurar em sua pr\u00f3pria pasta de m\u00f3dulo. Analise o c\u00f3digo de sua infraestrutura e identifique os componentes l\u00f3gicos que podem ser separados em m\u00f3dulos reutiliz\u00e1veis. Isso dar\u00e1 a voc\u00ea uma clara separa\u00e7\u00e3o de preocupa\u00e7\u00f5es e tornar\u00e1 f\u00e1cil incluir novos recursos, atualizar os existentes ou reutiliz\u00e1-los no futuro. Para obter mais detalhes sobre m\u00f3dulos e quando us\u00e1-los, consulte o guia do Terraform . Coloque os arquivos de m\u00f3dulo .tf na raiz de cada pasta e certifique-se de incluir um arquivo README em formato markdown que pode ser gerado automaticamente com base no c\u00f3digo do m\u00f3dulo. \u00c9 recomend\u00e1vel seguir esta abordagem, pois essa estrutura de arquivo ser\u00e1 automaticamente reconhecida pelo Terraform Registry . Use um conjunto consistente de arquivos para estruturar seus m\u00f3dulos. Embora isso possa variar dependendo das necessidades espec\u00edficas do projeto, um bom exemplo pode ser o seguinte: provider.tf : define a lista de provedores de acordo com os plugins usados data.tf : define informa\u00e7\u00f5es lidas de diferentes fontes de dados main.tf : define os objetos de infraestrutura necess\u00e1rios para sua configura\u00e7\u00e3o (por exemplo, grupo de recursos, atribui\u00e7\u00e3o de fun\u00e7\u00e3o, registro de cont\u00eainer) backend.tf : arquivo de configura\u00e7\u00e3o de backend outputs.tf : define dados estruturados que s\u00e3o exportados variables.tf : define valores est\u00e1ticos e reutiliz\u00e1veis Inclua em cada m\u00f3dulo subpastas para documenta\u00e7\u00e3o, exemplos e testes. A documenta\u00e7\u00e3o inclui informa\u00e7\u00f5es b\u00e1sicas sobre o m\u00f3dulo: o que ele est\u00e1 instalando, quais s\u00e3o as op\u00e7\u00f5es, um exemplo de caso de uso, e assim por diante. Voc\u00ea tamb\u00e9m pode adicionar aqui quaisquer outros detalhes relevantes que possa ter. A pasta de exemplos pode incluir um ou mais exemplos de como usar o m\u00f3dulo, cada exemplo tendo o mesmo conjunto de arquivos de configura\u00e7\u00e3o decidido na etapa anterior. \u00c9 recomend\u00e1vel tamb\u00e9m incluir um README que forne\u00e7a uma compreens\u00e3o clara de como ele pode ser usado na pr\u00e1tica. A pasta de testes inclui um ou mais arquivos para testar o m\u00f3dulo de exemplo junto com um arquivo de documenta\u00e7\u00e3o com instru\u00e7\u00f5es sobre como esses testes podem ser executados . Coloque o m\u00f3dulo raiz em uma pasta separada chamada main : este \u00e9 o ponto de entrada principal para a configura\u00e7\u00e3o. Assim como nos outros m\u00f3dulos, ele conter\u00e1 seus arquivos de configura\u00e7\u00e3o correspondentes. Uma estrutura de configura\u00e7\u00e3o de exemplo obtida usando as diretrizes acima \u00e9: modules \u251c\u2500\u2500 mlops \u2502 \u251c\u2500\u2500 doc \u2502 \u251c\u2500\u2500 example \u2502 \u251c\u2500\u2500 test \u2502 \u251c\u2500\u2500 backend.tf \u2502 \u251c\u2500\u2500 data.tf \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 outputs.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u251c\u2500\u2500 variables.tf \u2502 \u251c\u2500\u2500 README.md \u251c\u2500\u2500 common \u251c\u2500\u2500 main Conven\u00e7\u00e3o de Nomenclatura Ao nomear vari\u00e1veis do Terraform, \u00e9 essencial usar conven\u00e7\u00f5es de nomenclatura claras e consistentes que sejam f\u00e1ceis de entender e seguir. A conven\u00e7\u00e3o geral \u00e9 usar letras min\u00fasculas e n\u00fameros, com underscores em vez de tra\u00e7os, por exemplo: \"azurerm_resource_group\". Ao nomear recursos, comece com o nome do provedor, seguido pelo recurso de destino, separado por underscores. Por exemplo, \"azurerm_postgresql_server\" \u00e9 um nome apropriado para um recurso de provedor Azure. Quando se trata de fontes de dados, use uma conven\u00e7\u00e3o de nomenclatura semelhante, mas certifique-se de usar nomes no plural para listas de itens. Por exemplo, \"azurerm_resource_groups\" \u00e9 um bom nome para uma fonte de dados que representa uma lista de grupos de recursos. Nomes de vari\u00e1veis e sa\u00eddas devem ser descritivos e refletir o prop\u00f3sito ou uso da vari\u00e1vel. Tamb\u00e9m \u00e9 \u00fatil agrupar itens relacionados usando um prefixo comum. Por exemplo, todas as vari\u00e1veis relacionadas a contas de armazenamento podem come\u00e7ar com \"storage_\". Tenha em mente que as sa\u00eddas devem ser compreens\u00edveis fora de seu escopo. Um padr\u00e3o de nomenclatura \u00fatil a seguir \u00e9 \"{nome}_{atributo}\", onde \"nome\" representa o nome de um recurso ou fonte de dados, e \"atributo\" \u00e9 o atributo retornado pela sa\u00edda. Por exemplo, \"storage_primary_connection_string\" poderia ser um nome de sa\u00edda v\u00e1lido. Certifique-se de incluir uma descri\u00e7\u00e3o para sa\u00eddas e vari\u00e1veis, al\u00e9m de marcar os valores como 'default' ou 'sensitive' quando necess\u00e1rio. Essas informa\u00e7\u00f5es ser\u00e3o capturadas na documenta\u00e7\u00e3o gerada. Gerando a Documenta\u00e7\u00e3o A documenta\u00e7\u00e3o pode ser gerada automaticamente com base no c\u00f3digo de configura\u00e7\u00e3o em seus m\u00f3dulos com a ajuda do terraform-docs . Para gerar a documenta\u00e7\u00e3o do m\u00f3dulo Terraform, v\u00e1 para a pasta do m\u00f3dulo e insira este comando: terraform-docs markdown table --output-file README.md --output-mode inject . Em seguida, a documenta\u00e7\u00e3o ser\u00e1 gerada dentro do diret\u00f3rio raiz do componente. Conclus\u00e3o A abordagem apresentada nesta se\u00e7\u00e3o foi projetada para ser flex\u00edvel e f\u00e1cil de usar, tornando simples adicionar novos recursos ou atualizar os existentes. A separa\u00e7\u00e3o de preocupa\u00e7\u00f5es tamb\u00e9m facilita a reutiliza\u00e7\u00e3o de componentes existentes em outros projetos, com todas as informa\u00e7\u00f5es (m\u00f3dulos, exemplos, documenta\u00e7\u00e3o e testes) localizadas em um s\u00f3 lugar. Refer\u00eancias e Leituras Adicionais Terraform-docs Terraform Registry Terraform Module Guidance Terratest Testing HashiCorp Terraform Build Infrastructure - Terraform Azure Example","title":"Diretrizes para Estruturar a Configura\u00e7\u00e3o do Terraform"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#diretrizes-para-estruturar-a-configuracao-do-terraform","text":"","title":"Diretrizes para Estruturar a Configura\u00e7\u00e3o do Terraform"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#contexto","text":"Ao criar uma configura\u00e7\u00e3o de infraestrutura, \u00e9 importante seguir uma estrutura consistente e organizada para garantir a manutenibilidade, escalabilidade e reutiliza\u00e7\u00e3o do c\u00f3digo. O objetivo desta se\u00e7\u00e3o \u00e9 descrever brevemente como estruturar sua configura\u00e7\u00e3o do Terraform para alcan\u00e7ar esses objetivos.","title":"Contexto"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#estruturando-a-configuracao-do-terraform","text":"A estrutura recomendada \u00e9 a seguinte: Coloque cada componente que deseja configurar em sua pr\u00f3pria pasta de m\u00f3dulo. Analise o c\u00f3digo de sua infraestrutura e identifique os componentes l\u00f3gicos que podem ser separados em m\u00f3dulos reutiliz\u00e1veis. Isso dar\u00e1 a voc\u00ea uma clara separa\u00e7\u00e3o de preocupa\u00e7\u00f5es e tornar\u00e1 f\u00e1cil incluir novos recursos, atualizar os existentes ou reutiliz\u00e1-los no futuro. Para obter mais detalhes sobre m\u00f3dulos e quando us\u00e1-los, consulte o guia do Terraform . Coloque os arquivos de m\u00f3dulo .tf na raiz de cada pasta e certifique-se de incluir um arquivo README em formato markdown que pode ser gerado automaticamente com base no c\u00f3digo do m\u00f3dulo. \u00c9 recomend\u00e1vel seguir esta abordagem, pois essa estrutura de arquivo ser\u00e1 automaticamente reconhecida pelo Terraform Registry . Use um conjunto consistente de arquivos para estruturar seus m\u00f3dulos. Embora isso possa variar dependendo das necessidades espec\u00edficas do projeto, um bom exemplo pode ser o seguinte: provider.tf : define a lista de provedores de acordo com os plugins usados data.tf : define informa\u00e7\u00f5es lidas de diferentes fontes de dados main.tf : define os objetos de infraestrutura necess\u00e1rios para sua configura\u00e7\u00e3o (por exemplo, grupo de recursos, atribui\u00e7\u00e3o de fun\u00e7\u00e3o, registro de cont\u00eainer) backend.tf : arquivo de configura\u00e7\u00e3o de backend outputs.tf : define dados estruturados que s\u00e3o exportados variables.tf : define valores est\u00e1ticos e reutiliz\u00e1veis Inclua em cada m\u00f3dulo subpastas para documenta\u00e7\u00e3o, exemplos e testes. A documenta\u00e7\u00e3o inclui informa\u00e7\u00f5es b\u00e1sicas sobre o m\u00f3dulo: o que ele est\u00e1 instalando, quais s\u00e3o as op\u00e7\u00f5es, um exemplo de caso de uso, e assim por diante. Voc\u00ea tamb\u00e9m pode adicionar aqui quaisquer outros detalhes relevantes que possa ter. A pasta de exemplos pode incluir um ou mais exemplos de como usar o m\u00f3dulo, cada exemplo tendo o mesmo conjunto de arquivos de configura\u00e7\u00e3o decidido na etapa anterior. \u00c9 recomend\u00e1vel tamb\u00e9m incluir um README que forne\u00e7a uma compreens\u00e3o clara de como ele pode ser usado na pr\u00e1tica. A pasta de testes inclui um ou mais arquivos para testar o m\u00f3dulo de exemplo junto com um arquivo de documenta\u00e7\u00e3o com instru\u00e7\u00f5es sobre como esses testes podem ser executados . Coloque o m\u00f3dulo raiz em uma pasta separada chamada main : este \u00e9 o ponto de entrada principal para a configura\u00e7\u00e3o. Assim como nos outros m\u00f3dulos, ele conter\u00e1 seus arquivos de configura\u00e7\u00e3o correspondentes. Uma estrutura de configura\u00e7\u00e3o de exemplo obtida usando as diretrizes acima \u00e9: modules \u251c\u2500\u2500 mlops \u2502 \u251c\u2500\u2500 doc \u2502 \u251c\u2500\u2500 example \u2502 \u251c\u2500\u2500 test \u2502 \u251c\u2500\u2500 backend.tf \u2502 \u251c\u2500\u2500 data.tf \u2502 \u251c\u2500\u2500 main.tf \u2502 \u251c\u2500\u2500 outputs.tf \u2502 \u251c\u2500\u2500 provider.tf \u2502 \u251c\u2500\u2500 variables.tf \u2502 \u251c\u2500\u2500 README.md \u251c\u2500\u2500 common \u251c\u2500\u2500 main","title":"Estruturando a Configura\u00e7\u00e3o do Terraform"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#convencao-de-nomenclatura","text":"Ao nomear vari\u00e1veis do Terraform, \u00e9 essencial usar conven\u00e7\u00f5es de nomenclatura claras e consistentes que sejam f\u00e1ceis de entender e seguir. A conven\u00e7\u00e3o geral \u00e9 usar letras min\u00fasculas e n\u00fameros, com underscores em vez de tra\u00e7os, por exemplo: \"azurerm_resource_group\". Ao nomear recursos, comece com o nome do provedor, seguido pelo recurso de destino, separado por underscores. Por exemplo, \"azurerm_postgresql_server\" \u00e9 um nome apropriado para um recurso de provedor Azure. Quando se trata de fontes de dados, use uma conven\u00e7\u00e3o de nomenclatura semelhante, mas certifique-se de usar nomes no plural para listas de itens. Por exemplo, \"azurerm_resource_groups\" \u00e9 um bom nome para uma fonte de dados que representa uma lista de grupos de recursos. Nomes de vari\u00e1veis e sa\u00eddas devem ser descritivos e refletir o prop\u00f3sito ou uso da vari\u00e1vel. Tamb\u00e9m \u00e9 \u00fatil agrupar itens relacionados usando um prefixo comum. Por exemplo, todas as vari\u00e1veis relacionadas a contas de armazenamento podem come\u00e7ar com \"storage_\". Tenha em mente que as sa\u00eddas devem ser compreens\u00edveis fora de seu escopo. Um padr\u00e3o de nomenclatura \u00fatil a seguir \u00e9 \"{nome}_{atributo}\", onde \"nome\" representa o nome de um recurso ou fonte de dados, e \"atributo\" \u00e9 o atributo retornado pela sa\u00edda. Por exemplo, \"storage_primary_connection_string\" poderia ser um nome de sa\u00edda v\u00e1lido. Certifique-se de incluir uma descri\u00e7\u00e3o para sa\u00eddas e vari\u00e1veis, al\u00e9m de marcar os valores como 'default' ou 'sensitive' quando necess\u00e1rio. Essas informa\u00e7\u00f5es ser\u00e3o capturadas na documenta\u00e7\u00e3o gerada.","title":"Conven\u00e7\u00e3o de Nomenclatura"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#gerando-a-documentacao","text":"A documenta\u00e7\u00e3o pode ser gerada automaticamente com base no c\u00f3digo de configura\u00e7\u00e3o em seus m\u00f3dulos com a ajuda do terraform-docs . Para gerar a documenta\u00e7\u00e3o do m\u00f3dulo Terraform, v\u00e1 para a pasta do m\u00f3dulo e insira este comando: terraform-docs markdown table --output-file README.md --output-mode inject . Em seguida, a documenta\u00e7\u00e3o ser\u00e1 gerada dentro do diret\u00f3rio raiz do componente.","title":"Gerando a Documenta\u00e7\u00e3o"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#conclusao","text":"A abordagem apresentada nesta se\u00e7\u00e3o foi projetada para ser flex\u00edvel e f\u00e1cil de usar, tornando simples adicionar novos recursos ou atualizar os existentes. A separa\u00e7\u00e3o de preocupa\u00e7\u00f5es tamb\u00e9m facilita a reutiliza\u00e7\u00e3o de componentes existentes em outros projetos, com todas as informa\u00e7\u00f5es (m\u00f3dulos, exemplos, documenta\u00e7\u00e3o e testes) localizadas em um s\u00f3 lugar.","title":"Conclus\u00e3o"},{"location":"continuous-delivery/recipes/terraform/terraform-structure-guidelines/#referencias-e-leituras-adicionais","text":"Terraform-docs Terraform Registry Terraform Module Guidance Terratest Testing HashiCorp Terraform Build Infrastructure - Terraform Azure Example","title":"Refer\u00eancias e Leituras Adicionais"},{"location":"continuous-delivery/secrets-management/","text":"Gerenciamento de Segredos O Gerenciamento de Segredos se refere \u00e0 maneira como protegemos configura\u00e7\u00f5es e outros dados sens\u00edveis que, se tornados p\u00fablicos, permitiriam o acesso n\u00e3o autorizado a recursos. Exemplos de segredos incluem nomes de usu\u00e1rio, senhas, chaves de API, tokens SAS, etc. Devemos assumir que qualquer reposit\u00f3rio em que trabalhamos pode se tornar p\u00fablico a qualquer momento e proteger nossos segredos, mesmo que o reposit\u00f3rio seja inicialmente privado. Abordagem Geral A abordagem geral \u00e9 manter segredos em arquivos de configura\u00e7\u00e3o separados que n\u00e3o s\u00e3o inclu\u00eddos no reposit\u00f3rio. Adicione os arquivos ao .gitignore para evitar que eles sejam inclu\u00eddos. Cada desenvolvedor mant\u00e9m sua pr\u00f3pria vers\u00e3o local do arquivo ou, se necess\u00e1rio, os distribui por canais privados, como um chat no Teams. Em um sistema de produ\u00e7\u00e3o, assumindo o uso do Azure, crie os segredos no ambiente em que o processo est\u00e1 em execu\u00e7\u00e3o. Isso pode ser feito editando manualmente a se\u00e7\u00e3o 'Configura\u00e7\u00f5es de Aplicativos' do recurso, mas um script usando o Azure CLI para fazer o mesmo \u00e9 uma ferramenta \u00fatil que economiza tempo. Consulte az webapp config appsettings para obter mais detalhes. \u00c9 uma boa pr\u00e1tica manter configura\u00e7\u00f5es de segredos separadas para cada ambiente que voc\u00ea utiliza, como desenvolvimento, teste, produ\u00e7\u00e3o, local, etc. A receita de segredos por ramifica\u00e7\u00e3o descreve uma maneira simples de gerenciar configura\u00e7\u00f5es de segredos separadas para cada ambiente. Observa\u00e7\u00e3o: mesmo que o segredo tenha sido apenas enviado para uma ramifica\u00e7\u00e3o de recurso e nunca mesclado, ele ainda faz parte do hist\u00f3rico do git. Siga essas instru\u00e7\u00f5es para remover quaisquer dados sens\u00edveis e/ou regenerar quaisquer chaves e outras informa\u00e7\u00f5es sens\u00edveis adicionadas ao reposit\u00f3rio. Se uma chave ou segredo foi inclu\u00eddo no c\u00f3digo-base, fa\u00e7a a rota\u00e7\u00e3o da chave/segredo para que ele n\u00e3o esteja mais ativo. Mantendo os Segredos em Sigilo O cuidado em proteger nossos segredos se aplica tanto \u00e0 forma como os obtemos e armazenamos quanto \u00e0 forma como os utilizamos. N\u00e3o registre segredos N\u00e3o os inclua em relat\u00f3rios N\u00e3o os envie para outras aplica\u00e7\u00f5es, como parte de URLs, formul\u00e1rios ou de qualquer outra forma, exceto para fazer uma solicita\u00e7\u00e3o ao servi\u00e7o que requer esse segredo Aplica\u00e7\u00f5es com Seguran\u00e7a Refor\u00e7ada As t\u00e9cnicas descritas abaixo fornecem boa seguran\u00e7a e um padr\u00e3o comum para uma ampla gama de linguagens. Elas dependem do fato de que o Azure mant\u00e9m as configura\u00e7\u00f5es de aplicativos (o ambiente) criptografadas at\u00e9 que seu aplicativo seja executado. Elas n\u00e3o impedem que os segredos existam em texto simples na mem\u00f3ria em tempo de execu\u00e7\u00e3o. Em particular, para linguagens com coleta de lixo, esses valores podem existir por mais tempo do que a vida \u00fatil da vari\u00e1vel e podem ser vis\u00edveis durante a depura\u00e7\u00e3o de um despejo de mem\u00f3ria do processo. Se voc\u00ea estiver trabalhando em um aplicativo com requisitos de seguran\u00e7a mais rigorosos, deve considerar o uso de t\u00e9cnicas adicionais para manter a criptografia dos segredos durante toda a vida \u00fatil do aplicativo. Sempre fa\u00e7a a rota\u00e7\u00e3o das chaves de criptografia regularmente. T\u00e9cnicas para o Gerenciamento de Segredos Essas t\u00e9cnicas tornam o carregamento de segredos transparente para o desenvolvedor. C#/.NET Solu\u00e7\u00e3o Moderna .NET Para o SDK .NET (vers\u00e3o 2.0 ou superior), temos o dotnet secrets , uma ferramenta fornecida pelo SDK .NET que permite gerenciar e proteger informa\u00e7\u00f5es sens\u00edveis, como chaves de API, strings de conex\u00e3o e outros segredos, durante o desenvolvimento. Os segredos s\u00e3o armazenados com seguran\u00e7a em sua m\u00e1quina e podem ser acessados por suas aplica\u00e7\u00f5es .NET. # Inicialize o dotnet secret dotnet user-secrets init # Adicione um segredo # dotnet user-secrets set <CHAVE> <VALOR> dotnet user-secrets set ExternalServiceApiKey minha-api-key-12345 # Atualize o segredo dotnet user-secrets set ExternalServiceApiKey api-key-atualizada-67890 Para acessar os segredos: using Microsoft.Extensions.Configuration ; var builder = new ConfigurationBuilder () . AddUserSecrets < Startup > (); var configuration = builder . Build (); var externalServiceApiKey = configuration [ \"ExternalServiceApiKey\" ]; Considera\u00e7\u00f5es de Implanta\u00e7\u00e3o Ao implantar sua aplica\u00e7\u00e3o em produ\u00e7\u00e3o, \u00e9 essencial garantir que seus segredos sejam gerenciados com seguran\u00e7a. Aqui est\u00e3o algumas implica\u00e7\u00f5es relacionadas \u00e0 implanta\u00e7\u00e3o: Remova Segredos de Desenvolvimento: Antes de implantar em produ\u00e7\u00e3o, remova quaisquer segredos de desenvolvimento da configura\u00e7\u00e3o de sua aplica\u00e7\u00e3o. Voc\u00ea pode usar vari\u00e1veis de ambiente ou uma solu\u00e7\u00e3o de gerenciamento de segredos mais segura, como o Azure Key Vault ou o AWS Secrets Manager em produ\u00e7\u00e3o. Implanta\u00e7\u00e3o Segura: Garanta que seu servidor de produ\u00e7\u00e3o seja seguro e que o acesso aos segredos seja controlado. Nunca armazene segredos diretamente no c\u00f3digo-fonte ou em arquivos de configura\u00e7\u00e3o. Rota\u00e7\u00e3o de Chaves: Considere implementar uma pol\u00edtica de rota\u00e7\u00e3o de segredos para atualizar regularmente seus segredos em produ\u00e7\u00e3o. Solu\u00e7\u00e3o .NET Framework Use o atributo file do elemento appSettings para carregar segredos de um arquivo local. <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <appSettings file= \"..\\..\\secrets.config\" > \u2026 </appSettings> <startup> <supportedRuntime version= \"v4.0\" sku= \".NETFramework,Version=v4.6.1\" /> </startup> \u2026 </configuration> Acesso aos segredos: static void Main ( string [] args ) { String mySecret = System . Configuration . ConfigurationManager . AppSettings [ \"mySecret\" ]; } Quando em execu\u00e7\u00e3o no Azure, o ConfigurationManager carregar\u00e1 essas configura\u00e7\u00f5es do ambiente do processo. N\u00e3o \u00e9 necess\u00e1rio fazer upload de arquivos de segredos para o servidor nem alterar o c\u00f3digo. Node Armazene segredos em vari\u00e1veis de ambiente ou em um arquivo .env $ cat .env MY_SECRET = mySecret Use o pacote dotenv para carregar e acessar vari\u00e1veis de ambiente require('dotenv').config() let mySecret = process.env.MY_SECRET Python Armazene segredos em vari\u00e1veis de ambiente ou em um arquivo .env $ cat .env MY_SECRET = mySecret Use o pacote dotenv para carregar e acessar vari\u00e1veis de ambiente import os from dotenv import load_dotenv load_dotenv () my_secret = os . getenv ( 'MY_SECRET' ) Outra boa biblioteca para ler vari\u00e1veis de ambiente \u00e9 environs from environs import Env env = Env () env . read_env () my_secret = os . environ [ \"MY_SECRET\" ] Databricks O Databricks oferece a op\u00e7\u00e3o de usar o dbutils como uma maneira segura de recuperar credenciais e n\u00e3o revel\u00e1-las nos notebooks em execu\u00e7\u00e3o no Databricks Os seguintes passos descrevem claramente como criar novos segredos e utiliz\u00e1-los em um notebook no Databricks: Instale e configure o Databricks CLI em sua m\u00e1quina local Obtenha o token de acesso pessoal do Databricks Crie um escopo para os segredos Crie segredos Valida\u00e7\u00e3o A verifica\u00e7\u00e3o automatizada de credenciais pode ser realizada no c\u00f3digo, independentemente da linguagem de programa\u00e7\u00e3o utilizada. Saiba mais sobre isso aqui","title":"Gerenciamento de Segredos"},{"location":"continuous-delivery/secrets-management/#gerenciamento-de-segredos","text":"O Gerenciamento de Segredos se refere \u00e0 maneira como protegemos configura\u00e7\u00f5es e outros dados sens\u00edveis que, se tornados p\u00fablicos, permitiriam o acesso n\u00e3o autorizado a recursos. Exemplos de segredos incluem nomes de usu\u00e1rio, senhas, chaves de API, tokens SAS, etc. Devemos assumir que qualquer reposit\u00f3rio em que trabalhamos pode se tornar p\u00fablico a qualquer momento e proteger nossos segredos, mesmo que o reposit\u00f3rio seja inicialmente privado.","title":"Gerenciamento de Segredos"},{"location":"continuous-delivery/secrets-management/#abordagem-geral","text":"A abordagem geral \u00e9 manter segredos em arquivos de configura\u00e7\u00e3o separados que n\u00e3o s\u00e3o inclu\u00eddos no reposit\u00f3rio. Adicione os arquivos ao .gitignore para evitar que eles sejam inclu\u00eddos. Cada desenvolvedor mant\u00e9m sua pr\u00f3pria vers\u00e3o local do arquivo ou, se necess\u00e1rio, os distribui por canais privados, como um chat no Teams. Em um sistema de produ\u00e7\u00e3o, assumindo o uso do Azure, crie os segredos no ambiente em que o processo est\u00e1 em execu\u00e7\u00e3o. Isso pode ser feito editando manualmente a se\u00e7\u00e3o 'Configura\u00e7\u00f5es de Aplicativos' do recurso, mas um script usando o Azure CLI para fazer o mesmo \u00e9 uma ferramenta \u00fatil que economiza tempo. Consulte az webapp config appsettings para obter mais detalhes. \u00c9 uma boa pr\u00e1tica manter configura\u00e7\u00f5es de segredos separadas para cada ambiente que voc\u00ea utiliza, como desenvolvimento, teste, produ\u00e7\u00e3o, local, etc. A receita de segredos por ramifica\u00e7\u00e3o descreve uma maneira simples de gerenciar configura\u00e7\u00f5es de segredos separadas para cada ambiente. Observa\u00e7\u00e3o: mesmo que o segredo tenha sido apenas enviado para uma ramifica\u00e7\u00e3o de recurso e nunca mesclado, ele ainda faz parte do hist\u00f3rico do git. Siga essas instru\u00e7\u00f5es para remover quaisquer dados sens\u00edveis e/ou regenerar quaisquer chaves e outras informa\u00e7\u00f5es sens\u00edveis adicionadas ao reposit\u00f3rio. Se uma chave ou segredo foi inclu\u00eddo no c\u00f3digo-base, fa\u00e7a a rota\u00e7\u00e3o da chave/segredo para que ele n\u00e3o esteja mais ativo.","title":"Abordagem Geral"},{"location":"continuous-delivery/secrets-management/#mantendo-os-segredos-em-sigilo","text":"O cuidado em proteger nossos segredos se aplica tanto \u00e0 forma como os obtemos e armazenamos quanto \u00e0 forma como os utilizamos. N\u00e3o registre segredos N\u00e3o os inclua em relat\u00f3rios N\u00e3o os envie para outras aplica\u00e7\u00f5es, como parte de URLs, formul\u00e1rios ou de qualquer outra forma, exceto para fazer uma solicita\u00e7\u00e3o ao servi\u00e7o que requer esse segredo","title":"Mantendo os Segredos em Sigilo"},{"location":"continuous-delivery/secrets-management/#aplicacoes-com-seguranca-reforcada","text":"As t\u00e9cnicas descritas abaixo fornecem boa seguran\u00e7a e um padr\u00e3o comum para uma ampla gama de linguagens. Elas dependem do fato de que o Azure mant\u00e9m as configura\u00e7\u00f5es de aplicativos (o ambiente) criptografadas at\u00e9 que seu aplicativo seja executado. Elas n\u00e3o impedem que os segredos existam em texto simples na mem\u00f3ria em tempo de execu\u00e7\u00e3o. Em particular, para linguagens com coleta de lixo, esses valores podem existir por mais tempo do que a vida \u00fatil da vari\u00e1vel e podem ser vis\u00edveis durante a depura\u00e7\u00e3o de um despejo de mem\u00f3ria do processo. Se voc\u00ea estiver trabalhando em um aplicativo com requisitos de seguran\u00e7a mais rigorosos, deve considerar o uso de t\u00e9cnicas adicionais para manter a criptografia dos segredos durante toda a vida \u00fatil do aplicativo. Sempre fa\u00e7a a rota\u00e7\u00e3o das chaves de criptografia regularmente.","title":"Aplica\u00e7\u00f5es com Seguran\u00e7a Refor\u00e7ada"},{"location":"continuous-delivery/secrets-management/#tecnicas-para-o-gerenciamento-de-segredos","text":"Essas t\u00e9cnicas tornam o carregamento de segredos transparente para o desenvolvedor.","title":"T\u00e9cnicas para o Gerenciamento de Segredos"},{"location":"continuous-delivery/secrets-management/#cnet","text":"","title":"C#/.NET"},{"location":"continuous-delivery/secrets-management/#solucao-moderna-net","text":"Para o SDK .NET (vers\u00e3o 2.0 ou superior), temos o dotnet secrets , uma ferramenta fornecida pelo SDK .NET que permite gerenciar e proteger informa\u00e7\u00f5es sens\u00edveis, como chaves de API, strings de conex\u00e3o e outros segredos, durante o desenvolvimento. Os segredos s\u00e3o armazenados com seguran\u00e7a em sua m\u00e1quina e podem ser acessados por suas aplica\u00e7\u00f5es .NET. # Inicialize o dotnet secret dotnet user-secrets init # Adicione um segredo # dotnet user-secrets set <CHAVE> <VALOR> dotnet user-secrets set ExternalServiceApiKey minha-api-key-12345 # Atualize o segredo dotnet user-secrets set ExternalServiceApiKey api-key-atualizada-67890 Para acessar os segredos: using Microsoft.Extensions.Configuration ; var builder = new ConfigurationBuilder () . AddUserSecrets < Startup > (); var configuration = builder . Build (); var externalServiceApiKey = configuration [ \"ExternalServiceApiKey\" ];","title":"Solu\u00e7\u00e3o Moderna .NET"},{"location":"continuous-delivery/secrets-management/#consideracoes-de-implantacao","text":"Ao implantar sua aplica\u00e7\u00e3o em produ\u00e7\u00e3o, \u00e9 essencial garantir que seus segredos sejam gerenciados com seguran\u00e7a. Aqui est\u00e3o algumas implica\u00e7\u00f5es relacionadas \u00e0 implanta\u00e7\u00e3o: Remova Segredos de Desenvolvimento: Antes de implantar em produ\u00e7\u00e3o, remova quaisquer segredos de desenvolvimento da configura\u00e7\u00e3o de sua aplica\u00e7\u00e3o. Voc\u00ea pode usar vari\u00e1veis de ambiente ou uma solu\u00e7\u00e3o de gerenciamento de segredos mais segura, como o Azure Key Vault ou o AWS Secrets Manager em produ\u00e7\u00e3o. Implanta\u00e7\u00e3o Segura: Garanta que seu servidor de produ\u00e7\u00e3o seja seguro e que o acesso aos segredos seja controlado. Nunca armazene segredos diretamente no c\u00f3digo-fonte ou em arquivos de configura\u00e7\u00e3o. Rota\u00e7\u00e3o de Chaves: Considere implementar uma pol\u00edtica de rota\u00e7\u00e3o de segredos para atualizar regularmente seus segredos em produ\u00e7\u00e3o.","title":"Considera\u00e7\u00f5es de Implanta\u00e7\u00e3o"},{"location":"continuous-delivery/secrets-management/#solucao-net-framework","text":"Use o atributo file do elemento appSettings para carregar segredos de um arquivo local. <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <appSettings file= \"..\\..\\secrets.config\" > \u2026 </appSettings> <startup> <supportedRuntime version= \"v4.0\" sku= \".NETFramework,Version=v4.6.1\" /> </startup> \u2026 </configuration> Acesso aos segredos: static void Main ( string [] args ) { String mySecret = System . Configuration . ConfigurationManager . AppSettings [ \"mySecret\" ]; } Quando em execu\u00e7\u00e3o no Azure, o ConfigurationManager carregar\u00e1 essas configura\u00e7\u00f5es do ambiente do processo. N\u00e3o \u00e9 necess\u00e1rio fazer upload de arquivos de segredos para o servidor nem alterar o c\u00f3digo.","title":"Solu\u00e7\u00e3o .NET Framework"},{"location":"continuous-delivery/secrets-management/#node","text":"Armazene segredos em vari\u00e1veis de ambiente ou em um arquivo .env $ cat .env MY_SECRET = mySecret Use o pacote dotenv para carregar e acessar vari\u00e1veis de ambiente require('dotenv').config() let mySecret = process.env.MY_SECRET","title":"Node"},{"location":"continuous-delivery/secrets-management/#python","text":"Armazene segredos em vari\u00e1veis de ambiente ou em um arquivo .env $ cat .env MY_SECRET = mySecret Use o pacote dotenv para carregar e acessar vari\u00e1veis de ambiente import os from dotenv import load_dotenv load_dotenv () my_secret = os . getenv ( 'MY_SECRET' ) Outra boa biblioteca para ler vari\u00e1veis de ambiente \u00e9 environs from environs import Env env = Env () env . read_env () my_secret = os . environ [ \"MY_SECRET\" ]","title":"Python"},{"location":"continuous-delivery/secrets-management/#databricks","text":"O Databricks oferece a op\u00e7\u00e3o de usar o dbutils como uma maneira segura de recuperar credenciais e n\u00e3o revel\u00e1-las nos notebooks em execu\u00e7\u00e3o no Databricks Os seguintes passos descrevem claramente como criar novos segredos e utiliz\u00e1-los em um notebook no Databricks: Instale e configure o Databricks CLI em sua m\u00e1quina local Obtenha o token de acesso pessoal do Databricks Crie um escopo para os segredos Crie segredos","title":"Databricks"},{"location":"continuous-delivery/secrets-management/#validacao","text":"A verifica\u00e7\u00e3o automatizada de credenciais pode ser realizada no c\u00f3digo, independentemente da linguagem de programa\u00e7\u00e3o utilizada. Saiba mais sobre isso aqui","title":"Valida\u00e7\u00e3o"},{"location":"continuous-integration/","text":"Integra\u00e7\u00e3o Cont\u00ednua Incentivamos equipes de engenharia a fazer um investimento inicial durante o Sprint 0 de um projeto para estabelecer um pipeline automatizado e repet\u00edvel que integre continuamente o c\u00f3digo e libere execut\u00e1veis do sistema para ambientes de nuvem espec\u00edficos. Cada integra\u00e7\u00e3o deve ser verificada por um processo de compila\u00e7\u00e3o automatizado que assegura que um conjunto de testes de valida\u00e7\u00e3o seja aprovado e identifica quaisquer erros para toda a equipe de desenvolvedores. Encorajamos as equipes a implementar os pipelines de CI/CD antes que qualquer c\u00f3digo de servi\u00e7o seja escrito para os clientes, o que geralmente acontece no Sprint 0(N). Dessa forma, a equipe de engenharia pode desenvolver e testar seu trabalho de forma isolada sem impactar outros desenvolvedores e promover um fluxo de trabalho DevOps consistente ao longo do envolvimento. Esses princ\u00edpios est\u00e3o diretamente alinhados com as pr\u00e1ticas do ciclo de vida de desenvolvimento de software \u00e1gil. Objetivos A automa\u00e7\u00e3o de integra\u00e7\u00e3o cont\u00ednua \u00e9 uma parte integral do ciclo de desenvolvimento de software destinada a reduzir erros de integra\u00e7\u00e3o de compila\u00e7\u00e3o e maximizar a velocidade em uma equipe de desenvolvimento. Um pipeline de automa\u00e7\u00e3o de compila\u00e7\u00e3o robusto deve: Acelerar a velocidade da equipe Evitar problemas de integra\u00e7\u00e3o Evitar caos de \u00faltima hora durante as datas de lan\u00e7amento Fornecer um ciclo de feedback r\u00e1pido para o impacto em todo o sistema das mudan\u00e7as locais Separar as etapas de compila\u00e7\u00e3o e implanta\u00e7\u00e3o Medir e relatar m\u00e9tricas sobre falhas/sucessos de compila\u00e7\u00e3o Aumentar a visibilidade entre a equipe, facilitando a comunica\u00e7\u00e3o Reduzir erros humanos, que \u00e9 provavelmente a parte mais importante da automa\u00e7\u00e3o de compila\u00e7\u00f5es Defini\u00e7\u00e3o de Compila\u00e7\u00e3o Gerenciada no Git C\u00f3digo / artefatos de manifesto necess\u00e1rios para compilar seu projeto devem ser mantidos dentro de seus reposit\u00f3rios Git de projeto As defini\u00e7\u00f5es de pipeline de compila\u00e7\u00e3o espec\u00edficas do provedor de CI devem residir dentro dos reposit\u00f3rios Git de projeto. Automa\u00e7\u00e3o de Compila\u00e7\u00e3o Uma compila\u00e7\u00e3o automatizada deve abranger os seguintes princ\u00edpios: Tarefa de Compila\u00e7\u00e3o Uma etapa \u00fanica dentro do seu pipeline de compila\u00e7\u00e3o que compila o projeto de c\u00f3digo em um \u00fanico artefato de compila\u00e7\u00e3o. Testes Unit\u00e1rios Sua defini\u00e7\u00e3o de compila\u00e7\u00e3o inclui etapas de valida\u00e7\u00e3o para executar um conjunto de testes unit\u00e1rios automatizados para garantir que os componentes da aplica\u00e7\u00e3o atendam ao seu design e se comportem conforme o esperado. Verifica\u00e7\u00e3o de Estilo de C\u00f3digo O c\u00f3digo em toda a equipe de engenharia deve estar formatado de acordo com os padr\u00f5es de codifica\u00e7\u00e3o acordados. Esses padr\u00f5es mant\u00eam o c\u00f3digo consistente e, o mais importante, f\u00e1cil para a equipe e os clientes lerem e refatorarem. A consist\u00eancia de estilo de c\u00f3digo incentiva a propriedade coletiva das equipes de scrum do projeto e nossos parceiros. Existem v\u00e1rias ferramentas de valida\u00e7\u00e3o de estilo de c\u00f3digo de c\u00f3digo aberto dispon\u00edveis para escolher ( verifica\u00e7\u00f5es de estilo de c\u00f3digo , StyleCop ). A se\u00e7\u00e3o Receitas de Revis\u00e3o de C\u00f3digo do guia tem sugest\u00f5es de linters e estilos preferidos para v\u00e1rias linguagens. Seu c\u00f3digo e documenta\u00e7\u00e3o devem evitar o uso de linguagem n\u00e3o inclusiva sempre que poss\u00edvel. Siga a se\u00e7\u00e3o Verifica\u00e7\u00e3o Inclusiva para garantir que seu projeto promova um ambiente de trabalho inclusivo tanto para a equipe quanto para os clientes. Recomendamos incorporar ferramentas de an\u00e1lise de seguran\u00e7a na fase de compila\u00e7\u00e3o de seu pipeline, como scanner de credenciais de c\u00f3digo, detec\u00e7\u00e3o de riscos de seguran\u00e7a, an\u00e1lise est\u00e1tica, etc. Para o Azure DevOps, voc\u00ea pode adicionar uma tarefa de an\u00e1lise de seguran\u00e7a ao seu pipeline instalando a Extens\u00e3o de An\u00e1lise de C\u00f3digo de Seguran\u00e7a da Microsoft . O GitHub Actions suporta uma extens\u00e3o semelhante com a solu\u00e7\u00e3o de an\u00e1lise de seguran\u00e7a RIPS . Os padr\u00f5es de c\u00f3digo s\u00e3o mantidos dentro de um \u00fanico arquivo de configura\u00e7\u00e3o. Deve haver uma etapa em seu pipeline de compila\u00e7\u00e3o que assegure que o c\u00f3digo no \u00faltimo commit esteja em conformidade com a defini\u00e7\u00e3o de estilo conhecida. Alvo do Script de Compila\u00e7\u00e3o Um \u00fanico comando deve ter a capacidade de compilar o sistema. Isso tamb\u00e9m \u00e9 verdade para compila\u00e7\u00f5es em um servidor de CI ou em uma m\u00e1quina local de desenvolvedores. Sem Depend\u00eancias de IDE \u00c9 essencial ter uma compila\u00e7\u00e3o que possa ser executada por meio de scripts independentes e n\u00e3o seja dependente de uma IDE espec\u00edfica. Os alvos do pipeline de compila\u00e7\u00e3o podem ser acionados localmente em suas esta\u00e7\u00f5es de trabalho por meio da IDE de sua escolha. O processo de compila\u00e7\u00e3o deve manter flexibilidade suficiente para ser executado em um servidor de CI tamb\u00e9m. Como exemplo, a dockeriza\u00e7\u00e3o do processo de compila\u00e7\u00e3o oferece esse n\u00edvel de flexibilidade, j\u00e1 que o VSCode e o IntelliJ suportam extens\u00f5es de plugin Docker . Verifica\u00e7\u00f5es de Seguran\u00e7a do DevOps Introduza seguran\u00e7a em seu projeto nas fases iniciais. Siga a se\u00e7\u00e3o DevSecOps para introduzir pr\u00e1ticas de seguran\u00e7a, automa\u00e7\u00e3o, ferramentas e estruturas como parte do CI. Depend\u00eancias do Ambiente de Compila\u00e7\u00e3o Configura\u00e7\u00e3o autom\u00e1tica do ambiente local Incentivamos manter uma experi\u00eancia de desenvolvedor consistente para todos os membros da equipe. Deve haver um manifesto/processo automatizado central que simplifica a instala\u00e7\u00e3o e configura\u00e7\u00e3o de quaisquer depend\u00eancias de software. Isso permite que os desenvolvedores repliquem o mesmo ambiente de compila\u00e7\u00e3o localmente que o ambiente em execu\u00e7\u00e3o em um servidor de CI. Os scripts de automa\u00e7\u00e3o de compila\u00e7\u00e3o frequentemente requerem pacotes de software espec\u00edficos e vers\u00f5es pr\u00e9-instaladas dentro do ambiente de tempo de execu\u00e7\u00e3o do sistema operacional. Isso apresenta alguns desafios, j\u00e1 que os processos de compila\u00e7\u00e3o geralmente travam essas depend\u00eancias em uma vers\u00e3o espec\u00edfica. Todos os desenvolvedores da equipe devem ser capazes de emular o ambiente de compila\u00e7\u00e3o de suas esta\u00e7\u00f5es de trabalho locais, independentemente do sistema operacional. Para projetos que usam o VS Code, aproveitar Cont\u00eaineres de Desenvolvedor pode realmente ajudar a padronizar a experi\u00eancia de desenvolvimento local em toda a equipe. Ferramentas de empacotamento de software bem estabelecidas, como Docker, Maven, npm, etc., devem ser consideradas ao projetar sua cadeia de ferramentas de automa\u00e7\u00e3o de compila\u00e7\u00e3o. Documenta\u00e7\u00e3o da configura\u00e7\u00e3o local O processo de configura\u00e7\u00e3o para configurar um ambiente de compila\u00e7\u00e3o local deve ser bem documentado e de f\u00e1cil acompanhamento para os desenvolvedores. Infraestrutura como C\u00f3digo Gerencie o m\u00e1ximo poss\u00edvel dos seguintes como c\u00f3digo: Arquivos de Configura\u00e7\u00e3o Gerenciamento de Configura\u00e7\u00e3o (automa\u00e7\u00e3o de vari\u00e1veis de ambiente via terraform ) Gerenciamento de Segredos (cria\u00e7\u00e3o de segredos Azure via terraform ) Provisionamento de Recursos de Nuvem Atribui\u00e7\u00f5es de Fun\u00e7\u00f5es Cen\u00e1rios de Teste de Carga Alertas de Disponibilidade / Regras e Condi\u00e7\u00f5es de Monitoramento Desacoplar a infraestrutura do c\u00f3digo da aplica\u00e7\u00e3o simplifica a transi\u00e7\u00e3o das equipes de engenharia para aplicativos nativos em nuvem. Provedores de recursos do Terraform, como Azure DevOps , est\u00e3o tornando mais f\u00e1cil para os desenvolvedores gerenciar vari\u00e1veis de pipeline de compila\u00e7\u00e3o, conex\u00f5es de servi\u00e7o e defini\u00e7\u00f5es de pipeline de CI/CD. Exemplo de Fluxo de Trabalho DevOps usando Terraform e Cobalt Por que Altera\u00e7\u00f5es repet\u00edveis e audit\u00e1veis na infraestrutura facilitam o retorno a configura\u00e7\u00f5es conhecidas e a expans\u00e3o r\u00e1pida para novos est\u00e1gios e regi\u00f5es sem a necessidade de configurar manualmente os recursos da nuvem. Projetos de refer\u00eancia testados e com modelos de IAC, como Cobalt e Bedrock , permitem que equipes de engenharia implementem solu\u00e7\u00f5es seguras e escal\u00e1veis de forma muito mais r\u00e1pida. Simplificar cen\u00e1rios de \"migrar e executar\" abstraindo as complexidades da computa\u00e7\u00e3o nativa em nuvem das equipes de desenvolvimento de aplicativos. IAC DevOPS: Opera\u00e7\u00f5es por Pull Request O processo de implanta\u00e7\u00e3o de infraestrutura \u00e9 baseado em um reposit\u00f3rio que mant\u00e9m o estado atual esperado do ambiente do sistema / ambiente Azure. As mudan\u00e7as operacionais s\u00e3o feitas no sistema em execu\u00e7\u00e3o, fazendo commits neste reposit\u00f3rio. O Git tamb\u00e9m fornece um modelo simples para auditoria de implanta\u00e7\u00f5es e retorno a um estado anterior. Padr\u00f5es de Infraestrutura Recomendados Defina a infraestrutura como c\u00f3digo em modelos Terraform / ARM / Ansible. Os modelos s\u00e3o pilhas repet\u00edveis de recursos de nuvem com foco em conjuntos de configura\u00e7\u00f5es alinhados com escalabilidade e necessidades de throughput da aplica\u00e7\u00e3o. Princ\u00edpios de IAC Automatize o Ambiente Azure Todos os recursos de nuvem s\u00e3o provisionados por meio de um conjunto de modelos de infraestrutura como c\u00f3digo. Isso inclui segredos, configura\u00e7\u00f5es de servi\u00e7o, atribui\u00e7\u00f5es de fun\u00e7\u00e3o e condi\u00e7\u00f5es de monitoramento. O Portal Azure deve fornecer uma visualiza\u00e7\u00e3o somente leitura dos recursos do ambiente. Qualquer altera\u00e7\u00e3o aplicada ao ambiente deve ser feita apenas por meio da cadeia de ferramentas de IAC. Fluxo de Trabalho de CI de IAC Quando os arquivos de modelo IAC mudam por meio de um fluxo de trabalho baseado em git, um pipeline de compila\u00e7\u00e3o CI constr\u00f3i, valida e concilia o estado atual do ambiente de infraestrutura de destino com o estado esperado. O plano de execu\u00e7\u00e3o de infraestrutura candidato para esses ambientes fixos \u00e9 revisado por um administrador de nuvem como uma verifica\u00e7\u00e3o de porta antes da etapa de implanta\u00e7\u00e3o do pipeline aplicar o plano de execu\u00e7\u00e3o. Acesso de Desenvolvedor Somente Leitura a Recursos de Nuvem Contas de desenvolvedores no portal Azure devem ter acesso somente leitura aos recursos de ambiente IAC no Azure. Automa\u00e7\u00e3o de Segredos Model os IAC s\u00e3o implantados por meio de um sistema CI/CD que possui automa\u00e7\u00e3o de segredos integrada. Evite aplicar altera\u00e7\u00f5es a segredos e/ou certificados diretamente no Portal Azure. Automa\u00e7\u00e3o de Testes de Integra\u00e7\u00e3o de Infraestrutura Testes de integra\u00e7\u00e3o de ponta a ponta s\u00e3o executados como parte de seu processo de CI IAC para inspecionar e validar que um ambiente Azure est\u00e1 pronto para uso. Documenta\u00e7\u00e3o de Infraestrutura A implanta\u00e7\u00e3o e a topologia de modelo de recurso em nuvem devem ser documentadas e bem compreendidas dentro do README do reposit\u00f3rio git IAC. As etapas de configura\u00e7\u00e3o do ambiente local e do fluxo de trabalho de CI devem ser documentadas. Valida\u00e7\u00e3o de Configura\u00e7\u00e3o As aplica\u00e7\u00f5es usam configura\u00e7\u00f5es para permitir diferentes comportamentos em tempo de execu\u00e7\u00e3o e \u00e9 bastante comum usar arquivos para armazenar essas configura\u00e7\u00f5es. Como desenvolvedores, podemos introduzir erros ao editar esses arquivos, o que causaria problemas para a inicializa\u00e7\u00e3o e/ou execu\u00e7\u00e3o correta da aplica\u00e7\u00e3o. Aplicando t\u00e9cnicas de valida\u00e7\u00e3o na sintaxe e sem\u00e2ntica de nossa configura\u00e7\u00e3o, podemos detectar erros antes que a aplica\u00e7\u00e3o seja implantada e executada, melhorando a experi\u00eancia do desenvolvedor (usu\u00e1rio). Exemplos de Arquivos de Configura\u00e7\u00e3o de Aplicativos JSON, com suporte para tipos de dados complexos e estruturas de dados complexas. YAML, um superconjunto de JSON com suporte para tipos de dados e estruturas complexas. TOML, um superconjunto de JSON e um formato de arquivo de configura\u00e7\u00e3o formalmente especificado. Por que Validar a Configura\u00e7\u00e3o da Aplica\u00e7\u00e3o como uma Etapa Separada? Facilita a Depura\u00e7\u00e3o e Economiza Tempo - Com uma etapa de valida\u00e7\u00e3o de configura\u00e7\u00e3o em nosso pipeline, podemos evitar a execu\u00e7\u00e3o da aplica\u00e7\u00e3o apenas para descobrir que ela falha. Isso economiza tempo ao evitar a implanta\u00e7\u00e3o e execu\u00e7\u00e3o, esperar e, em seguida, perceber que algo est\u00e1 errado na configura\u00e7\u00e3o. Al\u00e9m disso, economiza tempo ao passar pelos registros para descobrir o que deu errado e por qu\u00ea. Melhor experi\u00eancia do usu\u00e1rio/desenvolvedor - Um lembrete simples para o usu\u00e1rio de que algo na configura\u00e7\u00e3o n\u00e3o est\u00e1 no formato correto pode fazer toda a diferen\u00e7a entre a alegria de um processo de implanta\u00e7\u00e3o bem-sucedido e a intensa frustra\u00e7\u00e3o de ter que adivinhar o que deu errado. Por exemplo, quando se espera um valor booleano, ele pode ser uma string como \"True\" ou \"False\" ou um valor inteiro como \"0\" ou \"1\". Com a valida\u00e7\u00e3o da configura\u00e7\u00e3o, garantimos que o significado esteja correto para nossa aplica\u00e7\u00e3o. Evitar corrup\u00e7\u00e3o de dados e viola\u00e7\u00f5es de seguran\u00e7a - Como os dados v\u00eam de uma fonte n\u00e3o confi\u00e1vel, como um usu\u00e1rio ou um servi\u00e7o externo, \u00e9 especialmente importante validar a entrada. Caso contr\u00e1rio, ele correr\u00e1 o risco de executar erros, corromper dados ou, pior ainda, ser vulner\u00e1vel a uma s\u00e9rie de ataques de inje\u00e7\u00e3o. O que \u00e9 o Esquema JSON? JSON-Schema \u00e9 o padr\u00e3o de documentos JSON que descreve a estrutura e os requisitos dos seus dados JSON. Embora seja chamado de JSON-Schema, tamb\u00e9m \u00e9 comum usar esse m\u00e9todo para YAMLs, j\u00e1 que ele \u00e9 um superconjunto do JSON. O esquema \u00e9 muito simples: aponta quais campos podem existir, quais s\u00e3o obrigat\u00f3rios ou opcionais, que formato de dados eles usam. Outras regras de valida\u00e7\u00e3o podem ser adicionadas a essa premissa b\u00e1sica, juntamente com informa\u00e7\u00f5es leg\u00edveis por humanos. Os metadados ficam nos esquemas, que s\u00e3o arquivos .json tamb\u00e9m. Al\u00e9m disso, o esquema tem a maior ado\u00e7\u00e3o entre todos os padr\u00f5es de valida\u00e7\u00e3o JSON, pois cobre uma grande parte dos cen\u00e1rios de valida\u00e7\u00e3o. Ele usa documentos JSON f\u00e1ceis de analisar para esquemas e \u00e9 facilmente extens\u00edvel. Como Implementar a Valida\u00e7\u00e3o de Esquema? A implementa\u00e7\u00e3o da valida\u00e7\u00e3o de esquema \u00e9 dividida em duas partes: a gera\u00e7\u00e3o dos esquemas e a valida\u00e7\u00e3o de arquivos YAML/JSON com esses esquemas. Gera\u00e7\u00e3o Existem duas op\u00e7\u00f5es para gerar um esquema: A partir do c\u00f3digo - podemos aproveitar os modelos e objetos existentes no c\u00f3digo e gerar um esquema personalizado. A partir de dados - podemos pegar amostras de yaml/json que refletem a configura\u00e7\u00e3o em geral e usar v\u00e1rias ferramentas online para gerar um esquema. Valida\u00e7\u00e3o O esquema possui mais de 30 validadores para diferentes linguagens, incluindo mais de 10 para JavaScript, portanto, n\u00e3o \u00e9 necess\u00e1rio codific\u00e1-lo voc\u00ea mesmo. Valida\u00e7\u00e3o de Integra\u00e7\u00e3o Uma maneira eficaz de identificar erros em sua compila\u00e7\u00e3o rapidamente \u00e9 investir cedo em um conjunto confi\u00e1vel de testes automatizados que validem a funcionalidade b\u00e1sica do sistema: Testes de Integra\u00e7\u00e3o de Ponta a Ponta Inclua testes em seu pipeline para validar que o candidato \u00e0 compila\u00e7\u00e3o est\u00e1 em conformidade com as asser\u00e7\u00f5es automatizadas de funcionalidade de neg\u00f3cios. Quaisquer erros ou c\u00f3digo quebrado devem ser relatados nos resultados dos testes, incluindo o teste falhado e o rastreamento de pilha relevante. Todos os testes devem ser invocados por meio de um \u00fanico comando. Mantenha a compila\u00e7\u00e3o r\u00e1pida. Considere o tempo de execu\u00e7\u00e3o dos testes automatizados ao decidir trazer depend\u00eancias como bancos de dados, servi\u00e7os externos e carga de dados fict\u00edcios para o seu conjunto de testes. Compila\u00e7\u00f5es lentas frequentemente se tornam um gargalo para equipes de desenvolvimento quando compila\u00e7\u00f5es paralelas em um servidor de Integra\u00e7\u00e3o Cont\u00ednua n\u00e3o s\u00e3o uma op\u00e7\u00e3o. Considere adicionar limites m\u00e1ximos de tempo para valida\u00e7\u00f5es demoradas para falhar rapidamente e manter uma alta velocidade em toda a equipe. Evite enviar compila\u00e7\u00f5es quebradas Verifica\u00e7\u00f5es automatizadas de compila\u00e7\u00e3o, testes, execu\u00e7\u00f5es de an\u00e1lise de c\u00f3digo etc. devem ser validadas localmente antes de enviar suas altera\u00e7\u00f5es para o reposit\u00f3rio de controle de vers\u00e3o. A Desenvolvimento Orientado a Testes \u00e9 uma pr\u00e1tica que equipes de desenvolvimento devem considerar para ajudar a identificar erros e falhas o mais cedo poss\u00edvel no ciclo de desenvolvimento. Relatando falhas de compila\u00e7\u00e3o Se a etapa de compila\u00e7\u00e3o falhar, o status da execu\u00e7\u00e3o do pipeline de compila\u00e7\u00e3o deve ser relatado como falho, incluindo logs relevantes e rastreamentos de pilha. Depend\u00eancias de Dados de Automa\u00e7\u00e3o de Teste Qualquer conjunto de dados fict\u00edcios usado para testes unit\u00e1rios e de integra\u00e7\u00e3o de ponta a ponta deve ser inclu\u00eddo no reposit\u00f3rio principal. Minimize quaisquer depend\u00eancias de dados externos no processo de compila\u00e7\u00e3o. Verifica\u00e7\u00f5es de Cobertura de C\u00f3digo Recomendamos integrar ferramentas de cobertura de c\u00f3digo em sua etapa de compila\u00e7\u00e3o. A maioria das ferramentas de cobertura de c\u00f3digo falha nas compila\u00e7\u00f5es quando a cobertura de teste fica abaixo de um limite m\u00ednimo (80% de cobertura). O relat\u00f3rio de cobertura deve ser publicado em seu sistema de Integra\u00e7\u00e3o Cont\u00ednua para acompanhar uma s\u00e9rie temporal de varia\u00e7\u00f5es. Fluxo de Trabalho Orientado pelo Git Compila\u00e7\u00e3o na Confirma\u00e7\u00e3o Cada confirma\u00e7\u00e3o no reposit\u00f3rio base deve acionar o pipeline de Integra\u00e7\u00e3o Cont\u00ednua para criar um novo candidato \u00e0 compila\u00e7\u00e3o. Os artefatos de compila\u00e7\u00e3o s\u00e3o criados, empacotados, validados e implantados continuamente em um ambiente n\u00e3o produtivo por confirma\u00e7\u00e3o. Cada confirma\u00e7\u00e3o no reposit\u00f3rio resulta em uma execu\u00e7\u00e3o de Integra\u00e7\u00e3o Cont\u00ednua que verifica as fontes na m\u00e1quina de integra\u00e7\u00e3o, inicia uma compila\u00e7\u00e3o e notifica o autor da confirma\u00e7\u00e3o sobre o resultado da compila\u00e7\u00e3o. Evite comentar testes falhados Evite comentar testes na ramifica\u00e7\u00e3o principal. Ao comentar testes, obtemos uma indica\u00e7\u00e3o incorreta do estado da compila\u00e7\u00e3o. Aplica\u00e7\u00e3o da Pol\u00edtica de Ramifica\u00e7\u00e3o Pol\u00edticas de ramifica\u00e7\u00e3o protegidas devem ser configuradas na ramifica\u00e7\u00e3o principal para garantir que as etapas de Integra\u00e7\u00e3o Cont\u00ednua tenham sido conclu\u00eddas antes de iniciar uma revis\u00e3o de c\u00f3digo. Os aprovadores de revis\u00e3o de c\u00f3digo s\u00f3 iniciar\u00e3o a revis\u00e3o de uma solicita\u00e7\u00e3o de pull quando a execu\u00e7\u00e3o do pipeline de Integra\u00e7\u00e3o Cont\u00ednua for bem-sucedida para a confirma\u00e7\u00e3o mais recentemente enviada para o Git. Compila\u00e7\u00f5es quebradas devem bloquear revis\u00f5es de solicita\u00e7\u00f5es de pull. Evite confirma\u00e7\u00f5es diretas na ramifica\u00e7\u00e3o principal. Estrat\u00e9gia de Ramifica\u00e7\u00e3o Ramifica\u00e7\u00f5es de lan\u00e7amento devem acionar automaticamente a implanta\u00e7\u00e3o de um artefato de compila\u00e7\u00e3o em seu ambiente de nuvem de destino. Voc\u00ea pode encontrar orienta\u00e7\u00f5es adicionais no site de documenta\u00e7\u00e3o do Azure DevOps na se\u00e7\u00e3o Gerenciar implanta\u00e7\u00f5es . Entregar Rapidamente e Diariamente \"Ao confirmar regularmente, cada colaborador pode reduzir o n\u00famero de altera\u00e7\u00f5es conflitantes. Fazer confirma\u00e7\u00f5es semanais de trabalho corre o risco de entrar em conflito com outras funcionalidades e pode ser muito dif\u00edcil de resolver. Conflitos iniciais e pequenos em uma \u00e1rea do sistema fazem com que os membros da equipe se comuniquem sobre a altera\u00e7\u00e3o que est\u00e3o fazendo.\" No esp\u00edrito da transpar\u00eancia e da comunica\u00e7\u00e3o frequente em uma equipe de desenvolvimento, incentivamos os desenvolvedores a confirmar o c\u00f3digo diariamente. Essa abordagem fornece visibilidade ao progresso das funcionalidades e acelera a programa\u00e7\u00e3o em pares em toda a equipe. Aqui est\u00e3o alguns princ\u00edpios a serem considerados: Todos confirmam no reposit\u00f3rio git todos os dias No final do dia, o c\u00f3digo confirmado deve conter testes unit\u00e1rios no m\u00ednimo. Execute a compila\u00e7\u00e3o localmente antes de confirmar para evitar a satura\u00e7\u00e3o do pipeline de Integra\u00e7\u00e3o Cont\u00ednua. Voc\u00ea deve verificar o que causou o erro e tentar resolv\u00ea-lo o mais r\u00e1pido poss\u00edvel, em vez de confirmar o c\u00f3digo. Incentivamos os desenvolvedores a seguir princ\u00edpios de Desenvolvimento Lean . Isolar o trabalho em pequenos peda\u00e7os que se relacionam diretamente com o valor comercial e refatorar incrementalmente. Ambientes Isolados Um dos principais objetivos da valida\u00e7\u00e3o de compila\u00e7\u00e3o \u00e9 isolar e identificar falhas em ambientes de prepara\u00e7\u00e3o e minimizar qualquer interrup\u00e7\u00e3o no tr\u00e1fego de produ\u00e7\u00e3o ao vivo. Nossos testes automatizados de ponta a ponta devem ser executados em um ambiente que reproduza nosso ambiente de produ\u00e7\u00e3o (o m\u00e1ximo poss\u00edvel). Isso inclui vers\u00f5es de software consistent es, SO, simula\u00e7\u00f5es de volume de dados de teste, paridade de tr\u00e1fego de rede com produ\u00e7\u00e3o, etc. Teste em um clone da produ\u00e7\u00e3o O ambiente de produ\u00e7\u00e3o deve ser duplicado em um ambiente de prepara\u00e7\u00e3o (QA e/ou Pr\u00e9-Produ\u00e7\u00e3o) no m\u00ednimo. Atualiza\u00e7\u00f5es de solicita\u00e7\u00e3o de pull acionam lan\u00e7amentos em est\u00e1gios Novas confirma\u00e7\u00f5es relacionadas a uma solicita\u00e7\u00e3o de pull devem acionar uma compila\u00e7\u00e3o/libera\u00e7\u00e3o em um ambiente de integra\u00e7\u00e3o. O ambiente de produ\u00e7\u00e3o deve ser totalmente isolado desse processo. Promover altera\u00e7\u00f5es de infraestrutura em ambientes fixos Altera\u00e7\u00f5es de infraestrutura como c\u00f3digo devem ser testadas em um ambiente de integra\u00e7\u00e3o e promovidas para todos os ambientes de prepara\u00e7\u00e3o, depois migradas para produ\u00e7\u00e3o sem tempo de inatividade para os usu\u00e1rios do sistema. Testando em produ\u00e7\u00e3o Existem v\u00e1rias abordagens para realizar testes automatizados para implanta\u00e7\u00f5es em produ\u00e7\u00e3o com seguran\u00e7a. Algumas dessas abordagens podem incluir: Sinaliza\u00e7\u00e3o de recursos Teste A/B Deslocamento de tr\u00e1fego Acesso do Desenvolvedor aos \u00daltimos Artefatos de Lan\u00e7amento Nosso fluxo de trabalho de DevOps deve permitir que os desenvolvedores obtenham, instalem e executem o execut\u00e1vel do sistema mais recente. Os execut\u00e1veis de lan\u00e7amento devem ser gerados automaticamente como parte de nossos pipelines de CI/CD. Os desenvolvedores podem acessar o execut\u00e1vel mais recente O execut\u00e1vel do sistema mais recente est\u00e1 dispon\u00edvel para todos os desenvolvedores da equipe. Deve haver um local conhecido onde os desenvolvedores possam consultar o artefato de lan\u00e7amento. O artefato de lan\u00e7amento \u00e9 publicado para cada solicita\u00e7\u00e3o de pull ou mesclagem na ramifica\u00e7\u00e3o principal Observabilidade da Integra\u00e7\u00e3o As mudan\u00e7as de estado aplicadas \u00e0 compila\u00e7\u00e3o principal devem estar dispon\u00edveis e ser comunicadas em toda a equipe. Centralizar logs e status de falhas de pipeline de compila\u00e7\u00e3o e lan\u00e7amento \u00e9 essencial para desenvolvedores que investigam compila\u00e7\u00f5es quebradas. Recomendamos integrar Teams ou Slack com as execu\u00e7\u00f5es de pipeline de CI/CD, o que ajuda a manter a equipe constantemente informada sobre falhas e status de candidatos \u00e0 compila\u00e7\u00e3o. Painel de n\u00edvel superior de Integra\u00e7\u00e3o Cont\u00ednua Os provedores modernos de CI t\u00eam a capacidade de consolidar e relatar status de compila\u00e7\u00e3o em um painel espec\u00edfico. Seu painel de CI deve ser capaz de correlacionar uma falha de compila\u00e7\u00e3o com um commit do Git. Emblema de status de compila\u00e7\u00e3o no README do projeto Deve haver um emblema de status de compila\u00e7\u00e3o inclu\u00eddo no README raiz do projeto. Notifica\u00e7\u00f5es de compila\u00e7\u00e3o Seu processo de CI deve ser configurado para enviar notifica\u00e7\u00f5es para plataformas de mensagens como Teams/Slack assim que a compila\u00e7\u00e3o for conclu\u00edda. Recomendamos criar um canal separado para ajudar a consolidar e isolar essas notifica\u00e7\u00f5es. Recursos Melhores Pr\u00e1ticas de Integra\u00e7\u00e3o Cont\u00ednua de Martin Fowler Guia R\u00e1pido de In\u00edcio do Bedrock Guia R\u00e1pido do Cobalt Provedor Azure DevOps do Terraform Pipelines de V\u00e1rios Est\u00e1gios do Azure DevOps Conceitos Chave do Azure Pipeline Ambientes do Azure Pipeline Artefatos no Azure Pipelines Permiss\u00f5es e Fun\u00e7\u00f5es de Seguran\u00e7a do Azure Pipeline Aprova\u00e7\u00f5es e Verifica\u00e7\u00f5es de Ambiente do Azure Guia de In\u00edcio R\u00e1pido do Terraform com Azure Configura\u00e7\u00e3o Remota do Estado do Terraform no Azure Terratest - Framework de Infraestrutura de Testes Unit\u00e1rios e de Integra\u00e7\u00e3o","title":"Integra\u00e7\u00e3o Cont\u00ednua"},{"location":"continuous-integration/#integracao-continua","text":"Incentivamos equipes de engenharia a fazer um investimento inicial durante o Sprint 0 de um projeto para estabelecer um pipeline automatizado e repet\u00edvel que integre continuamente o c\u00f3digo e libere execut\u00e1veis do sistema para ambientes de nuvem espec\u00edficos. Cada integra\u00e7\u00e3o deve ser verificada por um processo de compila\u00e7\u00e3o automatizado que assegura que um conjunto de testes de valida\u00e7\u00e3o seja aprovado e identifica quaisquer erros para toda a equipe de desenvolvedores. Encorajamos as equipes a implementar os pipelines de CI/CD antes que qualquer c\u00f3digo de servi\u00e7o seja escrito para os clientes, o que geralmente acontece no Sprint 0(N). Dessa forma, a equipe de engenharia pode desenvolver e testar seu trabalho de forma isolada sem impactar outros desenvolvedores e promover um fluxo de trabalho DevOps consistente ao longo do envolvimento. Esses princ\u00edpios est\u00e3o diretamente alinhados com as pr\u00e1ticas do ciclo de vida de desenvolvimento de software \u00e1gil.","title":"Integra\u00e7\u00e3o Cont\u00ednua"},{"location":"continuous-integration/#objetivos","text":"A automa\u00e7\u00e3o de integra\u00e7\u00e3o cont\u00ednua \u00e9 uma parte integral do ciclo de desenvolvimento de software destinada a reduzir erros de integra\u00e7\u00e3o de compila\u00e7\u00e3o e maximizar a velocidade em uma equipe de desenvolvimento. Um pipeline de automa\u00e7\u00e3o de compila\u00e7\u00e3o robusto deve: Acelerar a velocidade da equipe Evitar problemas de integra\u00e7\u00e3o Evitar caos de \u00faltima hora durante as datas de lan\u00e7amento Fornecer um ciclo de feedback r\u00e1pido para o impacto em todo o sistema das mudan\u00e7as locais Separar as etapas de compila\u00e7\u00e3o e implanta\u00e7\u00e3o Medir e relatar m\u00e9tricas sobre falhas/sucessos de compila\u00e7\u00e3o Aumentar a visibilidade entre a equipe, facilitando a comunica\u00e7\u00e3o Reduzir erros humanos, que \u00e9 provavelmente a parte mais importante da automa\u00e7\u00e3o de compila\u00e7\u00f5es","title":"Objetivos"},{"location":"continuous-integration/#definicao-de-compilacao-gerenciada-no-git","text":"","title":"Defini\u00e7\u00e3o de Compila\u00e7\u00e3o Gerenciada no Git"},{"location":"continuous-integration/#codigo-artefatos-de-manifesto-necessarios-para-compilar-seu-projeto-devem-ser-mantidos-dentro-de-seus-repositorios-git-de-projeto","text":"As defini\u00e7\u00f5es de pipeline de compila\u00e7\u00e3o espec\u00edficas do provedor de CI devem residir dentro dos reposit\u00f3rios Git de projeto.","title":"C\u00f3digo / artefatos de manifesto necess\u00e1rios para compilar seu projeto devem ser mantidos dentro de seus reposit\u00f3rios Git de projeto"},{"location":"continuous-integration/#automacao-de-compilacao","text":"Uma compila\u00e7\u00e3o automatizada deve abranger os seguintes princ\u00edpios:","title":"Automa\u00e7\u00e3o de Compila\u00e7\u00e3o"},{"location":"continuous-integration/#tarefa-de-compilacao","text":"Uma etapa \u00fanica dentro do seu pipeline de compila\u00e7\u00e3o que compila o projeto de c\u00f3digo em um \u00fanico artefato de compila\u00e7\u00e3o.","title":"Tarefa de Compila\u00e7\u00e3o"},{"location":"continuous-integration/#testes-unitarios","text":"Sua defini\u00e7\u00e3o de compila\u00e7\u00e3o inclui etapas de valida\u00e7\u00e3o para executar um conjunto de testes unit\u00e1rios automatizados para garantir que os componentes da aplica\u00e7\u00e3o atendam ao seu design e se comportem conforme o esperado.","title":"Testes Unit\u00e1rios"},{"location":"continuous-integration/#verificacao-de-estilo-de-codigo","text":"O c\u00f3digo em toda a equipe de engenharia deve estar formatado de acordo com os padr\u00f5es de codifica\u00e7\u00e3o acordados. Esses padr\u00f5es mant\u00eam o c\u00f3digo consistente e, o mais importante, f\u00e1cil para a equipe e os clientes lerem e refatorarem. A consist\u00eancia de estilo de c\u00f3digo incentiva a propriedade coletiva das equipes de scrum do projeto e nossos parceiros. Existem v\u00e1rias ferramentas de valida\u00e7\u00e3o de estilo de c\u00f3digo de c\u00f3digo aberto dispon\u00edveis para escolher ( verifica\u00e7\u00f5es de estilo de c\u00f3digo , StyleCop ). A se\u00e7\u00e3o Receitas de Revis\u00e3o de C\u00f3digo do guia tem sugest\u00f5es de linters e estilos preferidos para v\u00e1rias linguagens. Seu c\u00f3digo e documenta\u00e7\u00e3o devem evitar o uso de linguagem n\u00e3o inclusiva sempre que poss\u00edvel. Siga a se\u00e7\u00e3o Verifica\u00e7\u00e3o Inclusiva para garantir que seu projeto promova um ambiente de trabalho inclusivo tanto para a equipe quanto para os clientes. Recomendamos incorporar ferramentas de an\u00e1lise de seguran\u00e7a na fase de compila\u00e7\u00e3o de seu pipeline, como scanner de credenciais de c\u00f3digo, detec\u00e7\u00e3o de riscos de seguran\u00e7a, an\u00e1lise est\u00e1tica, etc. Para o Azure DevOps, voc\u00ea pode adicionar uma tarefa de an\u00e1lise de seguran\u00e7a ao seu pipeline instalando a Extens\u00e3o de An\u00e1lise de C\u00f3digo de Seguran\u00e7a da Microsoft . O GitHub Actions suporta uma extens\u00e3o semelhante com a solu\u00e7\u00e3o de an\u00e1lise de seguran\u00e7a RIPS . Os padr\u00f5es de c\u00f3digo s\u00e3o mantidos dentro de um \u00fanico arquivo de configura\u00e7\u00e3o. Deve haver uma etapa em seu pipeline de compila\u00e7\u00e3o que assegure que o c\u00f3digo no \u00faltimo commit esteja em conformidade com a defini\u00e7\u00e3o de estilo conhecida.","title":"Verifica\u00e7\u00e3o de Estilo de C\u00f3digo"},{"location":"continuous-integration/#alvo-do-script-de-compilacao","text":"Um \u00fanico comando deve ter a capacidade de compilar o sistema. Isso tamb\u00e9m \u00e9 verdade para compila\u00e7\u00f5es em um servidor de CI ou em uma m\u00e1quina local de desenvolvedores.","title":"Alvo do Script de Compila\u00e7\u00e3o"},{"location":"continuous-integration/#sem-dependencias-de-ide","text":"\u00c9 essencial ter uma compila\u00e7\u00e3o que possa ser executada por meio de scripts independentes e n\u00e3o seja dependente de uma IDE espec\u00edfica. Os alvos do pipeline de compila\u00e7\u00e3o podem ser acionados localmente em suas esta\u00e7\u00f5es de trabalho por meio da IDE de sua escolha. O processo de compila\u00e7\u00e3o deve manter flexibilidade suficiente para ser executado em um servidor de CI tamb\u00e9m. Como exemplo, a dockeriza\u00e7\u00e3o do processo de compila\u00e7\u00e3o oferece esse n\u00edvel de flexibilidade, j\u00e1 que o VSCode e o IntelliJ suportam extens\u00f5es de plugin Docker .","title":"Sem Depend\u00eancias de IDE"},{"location":"continuous-integration/#verificacoes-de-seguranca-do-devops","text":"Introduza seguran\u00e7a em seu projeto nas fases iniciais. Siga a se\u00e7\u00e3o DevSecOps para introduzir pr\u00e1ticas de seguran\u00e7a, automa\u00e7\u00e3o, ferramentas e estruturas como parte do CI.","title":"Verifica\u00e7\u00f5es de Seguran\u00e7a do DevOps"},{"location":"continuous-integration/#dependencias-do-ambiente-de-compilacao","text":"","title":"Depend\u00eancias do Ambiente de Compila\u00e7\u00e3o"},{"location":"continuous-integration/#configuracao-automatica-do-ambiente-local","text":"Incentivamos manter uma experi\u00eancia de desenvolvedor consistente para todos os membros da equipe. Deve haver um manifesto/processo automatizado central que simplifica a instala\u00e7\u00e3o e configura\u00e7\u00e3o de quaisquer depend\u00eancias de software. Isso permite que os desenvolvedores repliquem o mesmo ambiente de compila\u00e7\u00e3o localmente que o ambiente em execu\u00e7\u00e3o em um servidor de CI. Os scripts de automa\u00e7\u00e3o de compila\u00e7\u00e3o frequentemente requerem pacotes de software espec\u00edficos e vers\u00f5es pr\u00e9-instaladas dentro do ambiente de tempo de execu\u00e7\u00e3o do sistema operacional. Isso apresenta alguns desafios, j\u00e1 que os processos de compila\u00e7\u00e3o geralmente travam essas depend\u00eancias em uma vers\u00e3o espec\u00edfica. Todos os desenvolvedores da equipe devem ser capazes de emular o ambiente de compila\u00e7\u00e3o de suas esta\u00e7\u00f5es de trabalho locais, independentemente do sistema operacional. Para projetos que usam o VS Code, aproveitar Cont\u00eaineres de Desenvolvedor pode realmente ajudar a padronizar a experi\u00eancia de desenvolvimento local em toda a equipe. Ferramentas de empacotamento de software bem estabelecidas, como Docker, Maven, npm, etc., devem ser consideradas ao projetar sua cadeia de ferramentas de automa\u00e7\u00e3o de compila\u00e7\u00e3o.","title":"Configura\u00e7\u00e3o autom\u00e1tica do ambiente local"},{"location":"continuous-integration/#documentacao-da-configuracao-local","text":"O processo de configura\u00e7\u00e3o para configurar um ambiente de compila\u00e7\u00e3o local deve ser bem documentado e de f\u00e1cil acompanhamento para os desenvolvedores.","title":"Documenta\u00e7\u00e3o da configura\u00e7\u00e3o local"},{"location":"continuous-integration/#infraestrutura-como-codigo","text":"Gerencie o m\u00e1ximo poss\u00edvel dos seguintes como c\u00f3digo: Arquivos de Configura\u00e7\u00e3o Gerenciamento de Configura\u00e7\u00e3o (automa\u00e7\u00e3o de vari\u00e1veis de ambiente via terraform ) Gerenciamento de Segredos (cria\u00e7\u00e3o de segredos Azure via terraform ) Provisionamento de Recursos de Nuvem Atribui\u00e7\u00f5es de Fun\u00e7\u00f5es Cen\u00e1rios de Teste de Carga Alertas de Disponibilidade / Regras e Condi\u00e7\u00f5es de Monitoramento Desacoplar a infraestrutura do c\u00f3digo da aplica\u00e7\u00e3o simplifica a transi\u00e7\u00e3o das equipes de engenharia para aplicativos nativos em nuvem. Provedores de recursos do Terraform, como Azure DevOps , est\u00e3o tornando mais f\u00e1cil para os desenvolvedores gerenciar vari\u00e1veis de pipeline de compila\u00e7\u00e3o, conex\u00f5es de servi\u00e7o e defini\u00e7\u00f5es de pipeline de CI/CD.","title":"Infraestrutura como C\u00f3digo"},{"location":"continuous-integration/#exemplo-de-fluxo-de-trabalho-devops-usando-terraform-e-cobalt","text":"","title":"Exemplo de Fluxo de Trabalho DevOps usando Terraform e Cobalt"},{"location":"continuous-integration/#por-que","text":"Altera\u00e7\u00f5es repet\u00edveis e audit\u00e1veis na infraestrutura facilitam o retorno a configura\u00e7\u00f5es conhecidas e a expans\u00e3o r\u00e1pida para novos est\u00e1gios e regi\u00f5es sem a necessidade de configurar manualmente os recursos da nuvem. Projetos de refer\u00eancia testados e com modelos de IAC, como Cobalt e Bedrock , permitem que equipes de engenharia implementem solu\u00e7\u00f5es seguras e escal\u00e1veis de forma muito mais r\u00e1pida. Simplificar cen\u00e1rios de \"migrar e executar\" abstraindo as complexidades da computa\u00e7\u00e3o nativa em nuvem das equipes de desenvolvimento de aplicativos.","title":"Por que"},{"location":"continuous-integration/#iac-devops-operacoes-por-pull-request","text":"O processo de implanta\u00e7\u00e3o de infraestrutura \u00e9 baseado em um reposit\u00f3rio que mant\u00e9m o estado atual esperado do ambiente do sistema / ambiente Azure. As mudan\u00e7as operacionais s\u00e3o feitas no sistema em execu\u00e7\u00e3o, fazendo commits neste reposit\u00f3rio. O Git tamb\u00e9m fornece um modelo simples para auditoria de implanta\u00e7\u00f5es e retorno a um estado anterior.","title":"IAC DevOPS: Opera\u00e7\u00f5es por Pull Request"},{"location":"continuous-integration/#padroes-de-infraestrutura-recomendados","text":"Defina a infraestrutura como c\u00f3digo em modelos Terraform / ARM / Ansible. Os modelos s\u00e3o pilhas repet\u00edveis de recursos de nuvem com foco em conjuntos de configura\u00e7\u00f5es alinhados com escalabilidade e necessidades de throughput da aplica\u00e7\u00e3o.","title":"Padr\u00f5es de Infraestrutura Recomendados"},{"location":"continuous-integration/#principios-de-iac","text":"","title":"Princ\u00edpios de IAC"},{"location":"continuous-integration/#automatize-o-ambiente-azure","text":"Todos os recursos de nuvem s\u00e3o provisionados por meio de um conjunto de modelos de infraestrutura como c\u00f3digo. Isso inclui segredos, configura\u00e7\u00f5es de servi\u00e7o, atribui\u00e7\u00f5es de fun\u00e7\u00e3o e condi\u00e7\u00f5es de monitoramento. O Portal Azure deve fornecer uma visualiza\u00e7\u00e3o somente leitura dos recursos do ambiente. Qualquer altera\u00e7\u00e3o aplicada ao ambiente deve ser feita apenas por meio da cadeia de ferramentas de IAC.","title":"Automatize o Ambiente Azure"},{"location":"continuous-integration/#fluxo-de-trabalho-de-ci-de-iac","text":"Quando os arquivos de modelo IAC mudam por meio de um fluxo de trabalho baseado em git, um pipeline de compila\u00e7\u00e3o CI constr\u00f3i, valida e concilia o estado atual do ambiente de infraestrutura de destino com o estado esperado. O plano de execu\u00e7\u00e3o de infraestrutura candidato para esses ambientes fixos \u00e9 revisado por um administrador de nuvem como uma verifica\u00e7\u00e3o de porta antes da etapa de implanta\u00e7\u00e3o do pipeline aplicar o plano de execu\u00e7\u00e3o.","title":"Fluxo de Trabalho de CI de IAC"},{"location":"continuous-integration/#acesso-de-desenvolvedor-somente-leitura-a-recursos-de-nuvem","text":"Contas de desenvolvedores no portal Azure devem ter acesso somente leitura aos recursos de ambiente IAC no Azure.","title":"Acesso de Desenvolvedor Somente Leitura a Recursos de Nuvem"},{"location":"continuous-integration/#automacao-de-segredos","text":"Model os IAC s\u00e3o implantados por meio de um sistema CI/CD que possui automa\u00e7\u00e3o de segredos integrada. Evite aplicar altera\u00e7\u00f5es a segredos e/ou certificados diretamente no Portal Azure.","title":"Automa\u00e7\u00e3o de Segredos"},{"location":"continuous-integration/#automacao-de-testes-de-integracao-de-infraestrutura","text":"Testes de integra\u00e7\u00e3o de ponta a ponta s\u00e3o executados como parte de seu processo de CI IAC para inspecionar e validar que um ambiente Azure est\u00e1 pronto para uso.","title":"Automa\u00e7\u00e3o de Testes de Integra\u00e7\u00e3o de Infraestrutura"},{"location":"continuous-integration/#documentacao-de-infraestrutura","text":"A implanta\u00e7\u00e3o e a topologia de modelo de recurso em nuvem devem ser documentadas e bem compreendidas dentro do README do reposit\u00f3rio git IAC. As etapas de configura\u00e7\u00e3o do ambiente local e do fluxo de trabalho de CI devem ser documentadas.","title":"Documenta\u00e7\u00e3o de Infraestrutura"},{"location":"continuous-integration/#validacao-de-configuracao","text":"As aplica\u00e7\u00f5es usam configura\u00e7\u00f5es para permitir diferentes comportamentos em tempo de execu\u00e7\u00e3o e \u00e9 bastante comum usar arquivos para armazenar essas configura\u00e7\u00f5es. Como desenvolvedores, podemos introduzir erros ao editar esses arquivos, o que causaria problemas para a inicializa\u00e7\u00e3o e/ou execu\u00e7\u00e3o correta da aplica\u00e7\u00e3o. Aplicando t\u00e9cnicas de valida\u00e7\u00e3o na sintaxe e sem\u00e2ntica de nossa configura\u00e7\u00e3o, podemos detectar erros antes que a aplica\u00e7\u00e3o seja implantada e executada, melhorando a experi\u00eancia do desenvolvedor (usu\u00e1rio).","title":"Valida\u00e7\u00e3o de Configura\u00e7\u00e3o"},{"location":"continuous-integration/#exemplos-de-arquivos-de-configuracao-de-aplicativos","text":"JSON, com suporte para tipos de dados complexos e estruturas de dados complexas. YAML, um superconjunto de JSON com suporte para tipos de dados e estruturas complexas. TOML, um superconjunto de JSON e um formato de arquivo de configura\u00e7\u00e3o formalmente especificado.","title":"Exemplos de Arquivos de Configura\u00e7\u00e3o de Aplicativos"},{"location":"continuous-integration/#por-que-validar-a-configuracao-da-aplicacao-como-uma-etapa-separada","text":"Facilita a Depura\u00e7\u00e3o e Economiza Tempo - Com uma etapa de valida\u00e7\u00e3o de configura\u00e7\u00e3o em nosso pipeline, podemos evitar a execu\u00e7\u00e3o da aplica\u00e7\u00e3o apenas para descobrir que ela falha. Isso economiza tempo ao evitar a implanta\u00e7\u00e3o e execu\u00e7\u00e3o, esperar e, em seguida, perceber que algo est\u00e1 errado na configura\u00e7\u00e3o. Al\u00e9m disso, economiza tempo ao passar pelos registros para descobrir o que deu errado e por qu\u00ea. Melhor experi\u00eancia do usu\u00e1rio/desenvolvedor - Um lembrete simples para o usu\u00e1rio de que algo na configura\u00e7\u00e3o n\u00e3o est\u00e1 no formato correto pode fazer toda a diferen\u00e7a entre a alegria de um processo de implanta\u00e7\u00e3o bem-sucedido e a intensa frustra\u00e7\u00e3o de ter que adivinhar o que deu errado. Por exemplo, quando se espera um valor booleano, ele pode ser uma string como \"True\" ou \"False\" ou um valor inteiro como \"0\" ou \"1\". Com a valida\u00e7\u00e3o da configura\u00e7\u00e3o, garantimos que o significado esteja correto para nossa aplica\u00e7\u00e3o. Evitar corrup\u00e7\u00e3o de dados e viola\u00e7\u00f5es de seguran\u00e7a - Como os dados v\u00eam de uma fonte n\u00e3o confi\u00e1vel, como um usu\u00e1rio ou um servi\u00e7o externo, \u00e9 especialmente importante validar a entrada. Caso contr\u00e1rio, ele correr\u00e1 o risco de executar erros, corromper dados ou, pior ainda, ser vulner\u00e1vel a uma s\u00e9rie de ataques de inje\u00e7\u00e3o.","title":"Por que Validar a Configura\u00e7\u00e3o da Aplica\u00e7\u00e3o como uma Etapa Separada?"},{"location":"continuous-integration/#o-que-e-o-esquema-json","text":"JSON-Schema \u00e9 o padr\u00e3o de documentos JSON que descreve a estrutura e os requisitos dos seus dados JSON. Embora seja chamado de JSON-Schema, tamb\u00e9m \u00e9 comum usar esse m\u00e9todo para YAMLs, j\u00e1 que ele \u00e9 um superconjunto do JSON. O esquema \u00e9 muito simples: aponta quais campos podem existir, quais s\u00e3o obrigat\u00f3rios ou opcionais, que formato de dados eles usam. Outras regras de valida\u00e7\u00e3o podem ser adicionadas a essa premissa b\u00e1sica, juntamente com informa\u00e7\u00f5es leg\u00edveis por humanos. Os metadados ficam nos esquemas, que s\u00e3o arquivos .json tamb\u00e9m. Al\u00e9m disso, o esquema tem a maior ado\u00e7\u00e3o entre todos os padr\u00f5es de valida\u00e7\u00e3o JSON, pois cobre uma grande parte dos cen\u00e1rios de valida\u00e7\u00e3o. Ele usa documentos JSON f\u00e1ceis de analisar para esquemas e \u00e9 facilmente extens\u00edvel.","title":"O que \u00e9 o Esquema JSON?"},{"location":"continuous-integration/#como-implementar-a-validacao-de-esquema","text":"A implementa\u00e7\u00e3o da valida\u00e7\u00e3o de esquema \u00e9 dividida em duas partes: a gera\u00e7\u00e3o dos esquemas e a valida\u00e7\u00e3o de arquivos YAML/JSON com esses esquemas.","title":"Como Implementar a Valida\u00e7\u00e3o de Esquema?"},{"location":"continuous-integration/#geracao","text":"Existem duas op\u00e7\u00f5es para gerar um esquema: A partir do c\u00f3digo - podemos aproveitar os modelos e objetos existentes no c\u00f3digo e gerar um esquema personalizado. A partir de dados - podemos pegar amostras de yaml/json que refletem a configura\u00e7\u00e3o em geral e usar v\u00e1rias ferramentas online para gerar um esquema.","title":"Gera\u00e7\u00e3o"},{"location":"continuous-integration/#validacao","text":"O esquema possui mais de 30 validadores para diferentes linguagens, incluindo mais de 10 para JavaScript, portanto, n\u00e3o \u00e9 necess\u00e1rio codific\u00e1-lo voc\u00ea mesmo. Valida\u00e7\u00e3o de Integra\u00e7\u00e3o Uma maneira eficaz de identificar erros em sua compila\u00e7\u00e3o rapidamente \u00e9 investir cedo em um conjunto confi\u00e1vel de testes automatizados que validem a funcionalidade b\u00e1sica do sistema: Testes de Integra\u00e7\u00e3o de Ponta a Ponta Inclua testes em seu pipeline para validar que o candidato \u00e0 compila\u00e7\u00e3o est\u00e1 em conformidade com as asser\u00e7\u00f5es automatizadas de funcionalidade de neg\u00f3cios. Quaisquer erros ou c\u00f3digo quebrado devem ser relatados nos resultados dos testes, incluindo o teste falhado e o rastreamento de pilha relevante. Todos os testes devem ser invocados por meio de um \u00fanico comando. Mantenha a compila\u00e7\u00e3o r\u00e1pida. Considere o tempo de execu\u00e7\u00e3o dos testes automatizados ao decidir trazer depend\u00eancias como bancos de dados, servi\u00e7os externos e carga de dados fict\u00edcios para o seu conjunto de testes. Compila\u00e7\u00f5es lentas frequentemente se tornam um gargalo para equipes de desenvolvimento quando compila\u00e7\u00f5es paralelas em um servidor de Integra\u00e7\u00e3o Cont\u00ednua n\u00e3o s\u00e3o uma op\u00e7\u00e3o. Considere adicionar limites m\u00e1ximos de tempo para valida\u00e7\u00f5es demoradas para falhar rapidamente e manter uma alta velocidade em toda a equipe. Evite enviar compila\u00e7\u00f5es quebradas Verifica\u00e7\u00f5es automatizadas de compila\u00e7\u00e3o, testes, execu\u00e7\u00f5es de an\u00e1lise de c\u00f3digo etc. devem ser validadas localmente antes de enviar suas altera\u00e7\u00f5es para o reposit\u00f3rio de controle de vers\u00e3o. A Desenvolvimento Orientado a Testes \u00e9 uma pr\u00e1tica que equipes de desenvolvimento devem considerar para ajudar a identificar erros e falhas o mais cedo poss\u00edvel no ciclo de desenvolvimento. Relatando falhas de compila\u00e7\u00e3o Se a etapa de compila\u00e7\u00e3o falhar, o status da execu\u00e7\u00e3o do pipeline de compila\u00e7\u00e3o deve ser relatado como falho, incluindo logs relevantes e rastreamentos de pilha. Depend\u00eancias de Dados de Automa\u00e7\u00e3o de Teste Qualquer conjunto de dados fict\u00edcios usado para testes unit\u00e1rios e de integra\u00e7\u00e3o de ponta a ponta deve ser inclu\u00eddo no reposit\u00f3rio principal. Minimize quaisquer depend\u00eancias de dados externos no processo de compila\u00e7\u00e3o. Verifica\u00e7\u00f5es de Cobertura de C\u00f3digo Recomendamos integrar ferramentas de cobertura de c\u00f3digo em sua etapa de compila\u00e7\u00e3o. A maioria das ferramentas de cobertura de c\u00f3digo falha nas compila\u00e7\u00f5es quando a cobertura de teste fica abaixo de um limite m\u00ednimo (80% de cobertura). O relat\u00f3rio de cobertura deve ser publicado em seu sistema de Integra\u00e7\u00e3o Cont\u00ednua para acompanhar uma s\u00e9rie temporal de varia\u00e7\u00f5es. Fluxo de Trabalho Orientado pelo Git Compila\u00e7\u00e3o na Confirma\u00e7\u00e3o Cada confirma\u00e7\u00e3o no reposit\u00f3rio base deve acionar o pipeline de Integra\u00e7\u00e3o Cont\u00ednua para criar um novo candidato \u00e0 compila\u00e7\u00e3o. Os artefatos de compila\u00e7\u00e3o s\u00e3o criados, empacotados, validados e implantados continuamente em um ambiente n\u00e3o produtivo por confirma\u00e7\u00e3o. Cada confirma\u00e7\u00e3o no reposit\u00f3rio resulta em uma execu\u00e7\u00e3o de Integra\u00e7\u00e3o Cont\u00ednua que verifica as fontes na m\u00e1quina de integra\u00e7\u00e3o, inicia uma compila\u00e7\u00e3o e notifica o autor da confirma\u00e7\u00e3o sobre o resultado da compila\u00e7\u00e3o. Evite comentar testes falhados Evite comentar testes na ramifica\u00e7\u00e3o principal. Ao comentar testes, obtemos uma indica\u00e7\u00e3o incorreta do estado da compila\u00e7\u00e3o. Aplica\u00e7\u00e3o da Pol\u00edtica de Ramifica\u00e7\u00e3o Pol\u00edticas de ramifica\u00e7\u00e3o protegidas devem ser configuradas na ramifica\u00e7\u00e3o principal para garantir que as etapas de Integra\u00e7\u00e3o Cont\u00ednua tenham sido conclu\u00eddas antes de iniciar uma revis\u00e3o de c\u00f3digo. Os aprovadores de revis\u00e3o de c\u00f3digo s\u00f3 iniciar\u00e3o a revis\u00e3o de uma solicita\u00e7\u00e3o de pull quando a execu\u00e7\u00e3o do pipeline de Integra\u00e7\u00e3o Cont\u00ednua for bem-sucedida para a confirma\u00e7\u00e3o mais recentemente enviada para o Git. Compila\u00e7\u00f5es quebradas devem bloquear revis\u00f5es de solicita\u00e7\u00f5es de pull. Evite confirma\u00e7\u00f5es diretas na ramifica\u00e7\u00e3o principal. Estrat\u00e9gia de Ramifica\u00e7\u00e3o Ramifica\u00e7\u00f5es de lan\u00e7amento devem acionar automaticamente a implanta\u00e7\u00e3o de um artefato de compila\u00e7\u00e3o em seu ambiente de nuvem de destino. Voc\u00ea pode encontrar orienta\u00e7\u00f5es adicionais no site de documenta\u00e7\u00e3o do Azure DevOps na se\u00e7\u00e3o Gerenciar implanta\u00e7\u00f5es . Entregar Rapidamente e Diariamente \"Ao confirmar regularmente, cada colaborador pode reduzir o n\u00famero de altera\u00e7\u00f5es conflitantes. Fazer confirma\u00e7\u00f5es semanais de trabalho corre o risco de entrar em conflito com outras funcionalidades e pode ser muito dif\u00edcil de resolver. Conflitos iniciais e pequenos em uma \u00e1rea do sistema fazem com que os membros da equipe se comuniquem sobre a altera\u00e7\u00e3o que est\u00e3o fazendo.\" No esp\u00edrito da transpar\u00eancia e da comunica\u00e7\u00e3o frequente em uma equipe de desenvolvimento, incentivamos os desenvolvedores a confirmar o c\u00f3digo diariamente. Essa abordagem fornece visibilidade ao progresso das funcionalidades e acelera a programa\u00e7\u00e3o em pares em toda a equipe. Aqui est\u00e3o alguns princ\u00edpios a serem considerados: Todos confirmam no reposit\u00f3rio git todos os dias No final do dia, o c\u00f3digo confirmado deve conter testes unit\u00e1rios no m\u00ednimo. Execute a compila\u00e7\u00e3o localmente antes de confirmar para evitar a satura\u00e7\u00e3o do pipeline de Integra\u00e7\u00e3o Cont\u00ednua. Voc\u00ea deve verificar o que causou o erro e tentar resolv\u00ea-lo o mais r\u00e1pido poss\u00edvel, em vez de confirmar o c\u00f3digo. Incentivamos os desenvolvedores a seguir princ\u00edpios de Desenvolvimento Lean . Isolar o trabalho em pequenos peda\u00e7os que se relacionam diretamente com o valor comercial e refatorar incrementalmente. Ambientes Isolados Um dos principais objetivos da valida\u00e7\u00e3o de compila\u00e7\u00e3o \u00e9 isolar e identificar falhas em ambientes de prepara\u00e7\u00e3o e minimizar qualquer interrup\u00e7\u00e3o no tr\u00e1fego de produ\u00e7\u00e3o ao vivo. Nossos testes automatizados de ponta a ponta devem ser executados em um ambiente que reproduza nosso ambiente de produ\u00e7\u00e3o (o m\u00e1ximo poss\u00edvel). Isso inclui vers\u00f5es de software consistent es, SO, simula\u00e7\u00f5es de volume de dados de teste, paridade de tr\u00e1fego de rede com produ\u00e7\u00e3o, etc. Teste em um clone da produ\u00e7\u00e3o O ambiente de produ\u00e7\u00e3o deve ser duplicado em um ambiente de prepara\u00e7\u00e3o (QA e/ou Pr\u00e9-Produ\u00e7\u00e3o) no m\u00ednimo. Atualiza\u00e7\u00f5es de solicita\u00e7\u00e3o de pull acionam lan\u00e7amentos em est\u00e1gios Novas confirma\u00e7\u00f5es relacionadas a uma solicita\u00e7\u00e3o de pull devem acionar uma compila\u00e7\u00e3o/libera\u00e7\u00e3o em um ambiente de integra\u00e7\u00e3o. O ambiente de produ\u00e7\u00e3o deve ser totalmente isolado desse processo. Promover altera\u00e7\u00f5es de infraestrutura em ambientes fixos Altera\u00e7\u00f5es de infraestrutura como c\u00f3digo devem ser testadas em um ambiente de integra\u00e7\u00e3o e promovidas para todos os ambientes de prepara\u00e7\u00e3o, depois migradas para produ\u00e7\u00e3o sem tempo de inatividade para os usu\u00e1rios do sistema. Testando em produ\u00e7\u00e3o Existem v\u00e1rias abordagens para realizar testes automatizados para implanta\u00e7\u00f5es em produ\u00e7\u00e3o com seguran\u00e7a. Algumas dessas abordagens podem incluir: Sinaliza\u00e7\u00e3o de recursos Teste A/B Deslocamento de tr\u00e1fego Acesso do Desenvolvedor aos \u00daltimos Artefatos de Lan\u00e7amento Nosso fluxo de trabalho de DevOps deve permitir que os desenvolvedores obtenham, instalem e executem o execut\u00e1vel do sistema mais recente. Os execut\u00e1veis de lan\u00e7amento devem ser gerados automaticamente como parte de nossos pipelines de CI/CD. Os desenvolvedores podem acessar o execut\u00e1vel mais recente O execut\u00e1vel do sistema mais recente est\u00e1 dispon\u00edvel para todos os desenvolvedores da equipe. Deve haver um local conhecido onde os desenvolvedores possam consultar o artefato de lan\u00e7amento. O artefato de lan\u00e7amento \u00e9 publicado para cada solicita\u00e7\u00e3o de pull ou mesclagem na ramifica\u00e7\u00e3o principal Observabilidade da Integra\u00e7\u00e3o As mudan\u00e7as de estado aplicadas \u00e0 compila\u00e7\u00e3o principal devem estar dispon\u00edveis e ser comunicadas em toda a equipe. Centralizar logs e status de falhas de pipeline de compila\u00e7\u00e3o e lan\u00e7amento \u00e9 essencial para desenvolvedores que investigam compila\u00e7\u00f5es quebradas. Recomendamos integrar Teams ou Slack com as execu\u00e7\u00f5es de pipeline de CI/CD, o que ajuda a manter a equipe constantemente informada sobre falhas e status de candidatos \u00e0 compila\u00e7\u00e3o. Painel de n\u00edvel superior de Integra\u00e7\u00e3o Cont\u00ednua Os provedores modernos de CI t\u00eam a capacidade de consolidar e relatar status de compila\u00e7\u00e3o em um painel espec\u00edfico. Seu painel de CI deve ser capaz de correlacionar uma falha de compila\u00e7\u00e3o com um commit do Git. Emblema de status de compila\u00e7\u00e3o no README do projeto Deve haver um emblema de status de compila\u00e7\u00e3o inclu\u00eddo no README raiz do projeto. Notifica\u00e7\u00f5es de compila\u00e7\u00e3o Seu processo de CI deve ser configurado para enviar notifica\u00e7\u00f5es para plataformas de mensagens como Teams/Slack assim que a compila\u00e7\u00e3o for conclu\u00edda. Recomendamos criar um canal separado para ajudar a consolidar e isolar essas notifica\u00e7\u00f5es. Recursos Melhores Pr\u00e1ticas de Integra\u00e7\u00e3o Cont\u00ednua de Martin Fowler Guia R\u00e1pido de In\u00edcio do Bedrock Guia R\u00e1pido do Cobalt Provedor Azure DevOps do Terraform Pipelines de V\u00e1rios Est\u00e1gios do Azure DevOps Conceitos Chave do Azure Pipeline Ambientes do Azure Pipeline Artefatos no Azure Pipelines Permiss\u00f5es e Fun\u00e7\u00f5es de Seguran\u00e7a do Azure Pipeline Aprova\u00e7\u00f5es e Verifica\u00e7\u00f5es de Ambiente do Azure Guia de In\u00edcio R\u00e1pido do Terraform com Azure Configura\u00e7\u00e3o Remota do Estado do Terraform no Azure Terratest - Framework de Infraestrutura de Testes Unit\u00e1rios e de Integra\u00e7\u00e3o","title":"Valida\u00e7\u00e3o"},{"location":"continuous-integration/CICD/","text":"Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua A Integra\u00e7\u00e3o Cont\u00ednua \u00e9 a pr\u00e1tica de engenharia de frequentemente enviar c\u00f3digo para um reposit\u00f3rio compartilhado, idealmente v\u00e1rias vezes ao dia, e realizar uma compila\u00e7\u00e3o automatizada desse c\u00f3digo. Essas mudan\u00e7as s\u00e3o compiladas junto com outras altera\u00e7\u00f5es simult\u00e2neas no sistema, o que permite a detec\u00e7\u00e3o precoce de problemas de integra\u00e7\u00e3o entre v\u00e1rios desenvolvedores que trabalham em um projeto. Quebras na compila\u00e7\u00e3o devido a falhas de integra\u00e7\u00e3o s\u00e3o tratadas como a quest\u00e3o de maior prioridade para todos os desenvolvedores de uma equipe, e geralmente o trabalho para at\u00e9 que sejam corrigidas. Associada a uma abordagem de teste automatizado, a integra\u00e7\u00e3o cont\u00ednua tamb\u00e9m nos permite testar a compila\u00e7\u00e3o integrada de forma a verificar n\u00e3o apenas se a base de c\u00f3digo ainda \u00e9 compilada corretamente, mas tamb\u00e9m se ainda \u00e9 funcionalmente correta. Isso tamb\u00e9m \u00e9 uma pr\u00e1tica recomendada para a constru\u00e7\u00e3o de sistemas de software robustos e flex\u00edveis. A Entrega Cont\u00ednua leva o conceito de Integra\u00e7\u00e3o Cont\u00ednua ainda mais longe, testando tamb\u00e9m implanta\u00e7\u00f5es da base de c\u00f3digo integrada em uma r\u00e9plica do ambiente em que ser\u00e1 finalmente implantada. Isso nos permite aprender antecipadamente sobre quaisquer problemas operacionais n\u00e3o previstos que surgem de nossas altera\u00e7\u00f5es o mais r\u00e1pido poss\u00edvel e tamb\u00e9m aprender sobre lacunas em nossa cobertura de teste. O objetivo de tudo isso \u00e9 garantir que o branch principal (main) esteja sempre pronto para ser entregue, ou seja, significa que poder\u00edamos, se necess\u00e1rio, pegar uma compila\u00e7\u00e3o do branch principal de nossa base de c\u00f3digo e implant\u00e1-la na produ\u00e7\u00e3o. Se esses conceitos s\u00e3o desconhecidos para voc\u00ea, reserve alguns minutos para ler Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua . Nossa expectativa \u00e9 que a IC/CD deve ser usada em todos os projetos de engenharia que fazemos com nossos clientes e que estamos construindo, testando e implantando cada altera\u00e7\u00e3o que fazemos em qualquer sistema de software que estamos desenvolvendo. Para uma compreens\u00e3o mais profunda de todos esses conceitos, os livros Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua fornecem um conhecimento abrangente. Ferramentas Azure Pipelines Nossa ferramenta na Microsoft tornou f\u00e1cil configurar sistemas de integra\u00e7\u00e3o e entrega como este. Se voc\u00ea n\u00e3o est\u00e1 familiarizado com ela, reserve alguns momentos agora para ler sobre Azure Pipelines (anteriormente VSTS). Para um exemplo pr\u00e1tico de como isso funciona na pr\u00e1tica, voc\u00ea pode ler IC/CD no Kubernetes com VSTS . Jenkins O Jenkins \u00e9 uma das ferramentas mais comumente usadas na comunidade de c\u00f3digo aberto. \u00c9 bem conhecido e possui centenas de plugins para atender a todos os requisitos de compila\u00e7\u00e3o. O Jenkins \u00e9 gratuito, mas requer um servidor dedicado. Voc\u00ea pode criar facilmente uma m\u00e1quina virtual Jenkins usando este modelo . Travis CI O Travis CI pode ser usado gratuitamente em projetos de c\u00f3digo aberto, mas os desenvolvedores devem adquirir um plano empresarial para projetos privados. Este servi\u00e7o \u00e9 ideal para valida\u00e7\u00e3o de PRs no GitHub, pois \u00e9 leve e f\u00e1cil de configurar, sem a necessidade de configura\u00e7\u00e3o de servidor dedicado. Ele tamb\u00e9m suporta uma caracter\u00edstica de matriz de compila\u00e7\u00e3o que permite acelerar o processo de compila\u00e7\u00e3o e teste dividindo-o em partes. CircleCI O CircleCI \u00e9 um servi\u00e7o gratuito para projetos de c\u00f3digo aberto, sem a necessidade de servidor dedicado. Tamb\u00e9m \u00e9 ideal para valida\u00e7\u00e3o de PRs no GitHub. O CircleCI tamb\u00e9m permite fluxos de trabalho, paralelismo e a divis\u00e3o de seus testes em qualquer n\u00famero de cont\u00eaineres com uma ampla variedade de pacotes pr\u00e9-instalados nos cont\u00eaineres de compila\u00e7\u00e3o. AppVeyor O AppVeyor \u00e9 outro servi\u00e7o de IC gratuito para projetos de c\u00f3digo aberto que tamb\u00e9m suporta compila\u00e7\u00f5es baseadas no Windows.","title":"Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua"},{"location":"continuous-integration/CICD/#integracao-continua-e-entrega-continua","text":"A Integra\u00e7\u00e3o Cont\u00ednua \u00e9 a pr\u00e1tica de engenharia de frequentemente enviar c\u00f3digo para um reposit\u00f3rio compartilhado, idealmente v\u00e1rias vezes ao dia, e realizar uma compila\u00e7\u00e3o automatizada desse c\u00f3digo. Essas mudan\u00e7as s\u00e3o compiladas junto com outras altera\u00e7\u00f5es simult\u00e2neas no sistema, o que permite a detec\u00e7\u00e3o precoce de problemas de integra\u00e7\u00e3o entre v\u00e1rios desenvolvedores que trabalham em um projeto. Quebras na compila\u00e7\u00e3o devido a falhas de integra\u00e7\u00e3o s\u00e3o tratadas como a quest\u00e3o de maior prioridade para todos os desenvolvedores de uma equipe, e geralmente o trabalho para at\u00e9 que sejam corrigidas. Associada a uma abordagem de teste automatizado, a integra\u00e7\u00e3o cont\u00ednua tamb\u00e9m nos permite testar a compila\u00e7\u00e3o integrada de forma a verificar n\u00e3o apenas se a base de c\u00f3digo ainda \u00e9 compilada corretamente, mas tamb\u00e9m se ainda \u00e9 funcionalmente correta. Isso tamb\u00e9m \u00e9 uma pr\u00e1tica recomendada para a constru\u00e7\u00e3o de sistemas de software robustos e flex\u00edveis. A Entrega Cont\u00ednua leva o conceito de Integra\u00e7\u00e3o Cont\u00ednua ainda mais longe, testando tamb\u00e9m implanta\u00e7\u00f5es da base de c\u00f3digo integrada em uma r\u00e9plica do ambiente em que ser\u00e1 finalmente implantada. Isso nos permite aprender antecipadamente sobre quaisquer problemas operacionais n\u00e3o previstos que surgem de nossas altera\u00e7\u00f5es o mais r\u00e1pido poss\u00edvel e tamb\u00e9m aprender sobre lacunas em nossa cobertura de teste. O objetivo de tudo isso \u00e9 garantir que o branch principal (main) esteja sempre pronto para ser entregue, ou seja, significa que poder\u00edamos, se necess\u00e1rio, pegar uma compila\u00e7\u00e3o do branch principal de nossa base de c\u00f3digo e implant\u00e1-la na produ\u00e7\u00e3o. Se esses conceitos s\u00e3o desconhecidos para voc\u00ea, reserve alguns minutos para ler Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua . Nossa expectativa \u00e9 que a IC/CD deve ser usada em todos os projetos de engenharia que fazemos com nossos clientes e que estamos construindo, testando e implantando cada altera\u00e7\u00e3o que fazemos em qualquer sistema de software que estamos desenvolvendo. Para uma compreens\u00e3o mais profunda de todos esses conceitos, os livros Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua fornecem um conhecimento abrangente.","title":"Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua"},{"location":"continuous-integration/CICD/#ferramentas","text":"","title":"Ferramentas"},{"location":"continuous-integration/CICD/#azure-pipelines","text":"Nossa ferramenta na Microsoft tornou f\u00e1cil configurar sistemas de integra\u00e7\u00e3o e entrega como este. Se voc\u00ea n\u00e3o est\u00e1 familiarizado com ela, reserve alguns momentos agora para ler sobre Azure Pipelines (anteriormente VSTS). Para um exemplo pr\u00e1tico de como isso funciona na pr\u00e1tica, voc\u00ea pode ler IC/CD no Kubernetes com VSTS .","title":"Azure Pipelines"},{"location":"continuous-integration/CICD/#jenkins","text":"O Jenkins \u00e9 uma das ferramentas mais comumente usadas na comunidade de c\u00f3digo aberto. \u00c9 bem conhecido e possui centenas de plugins para atender a todos os requisitos de compila\u00e7\u00e3o. O Jenkins \u00e9 gratuito, mas requer um servidor dedicado. Voc\u00ea pode criar facilmente uma m\u00e1quina virtual Jenkins usando este modelo .","title":"Jenkins"},{"location":"continuous-integration/CICD/#travis-ci","text":"O Travis CI pode ser usado gratuitamente em projetos de c\u00f3digo aberto, mas os desenvolvedores devem adquirir um plano empresarial para projetos privados. Este servi\u00e7o \u00e9 ideal para valida\u00e7\u00e3o de PRs no GitHub, pois \u00e9 leve e f\u00e1cil de configurar, sem a necessidade de configura\u00e7\u00e3o de servidor dedicado. Ele tamb\u00e9m suporta uma caracter\u00edstica de matriz de compila\u00e7\u00e3o que permite acelerar o processo de compila\u00e7\u00e3o e teste dividindo-o em partes.","title":"Travis CI"},{"location":"continuous-integration/CICD/#circleci","text":"O CircleCI \u00e9 um servi\u00e7o gratuito para projetos de c\u00f3digo aberto, sem a necessidade de servidor dedicado. Tamb\u00e9m \u00e9 ideal para valida\u00e7\u00e3o de PRs no GitHub. O CircleCI tamb\u00e9m permite fluxos de trabalho, paralelismo e a divis\u00e3o de seus testes em qualquer n\u00famero de cont\u00eaineres com uma ampla variedade de pacotes pr\u00e9-instalados nos cont\u00eaineres de compila\u00e7\u00e3o.","title":"CircleCI"},{"location":"continuous-integration/CICD/#appveyor","text":"O AppVeyor \u00e9 outro servi\u00e7o de IC gratuito para projetos de c\u00f3digo aberto que tamb\u00e9m suporta compila\u00e7\u00f5es baseadas no Windows.","title":"AppVeyor"},{"location":"continuous-integration/inclusive-linting/","text":"Inclus\u00e3o de Linting Como profissionais de software, devemos nos esfor\u00e7ar para promover um ambiente de trabalho inclusivo, o que naturalmente se estende ao c\u00f3digo e \u00e0 documenta\u00e7\u00e3o que escrevemos. \u00c9 importante manter o uso de linguagem inclusiva consistente em todo o projeto ou reposit\u00f3rio. Para alcan\u00e7ar isso, recomendamos o uso de uma ferramenta de an\u00e1lise de texto, como um linter inclusivo, e inclu\u00ed-lo como uma etapa em seus pipelines de Integra\u00e7\u00e3o Cont\u00ednua (CI). O que verificar com o Linter O objetivo principal de um inclusive linter \u00e9 identificar qualquer ocorr\u00eancia de linguagem n\u00e3o inclusiva no c\u00f3digo-fonte (e opcionalmente sugerir algumas alternativas). Palavras ou frases n\u00e3o inclusivas em um projeto podem ser encontradas em qualquer lugar, desde coment\u00e1rios e documenta\u00e7\u00e3o at\u00e9 nomes de vari\u00e1veis. Um inclusive linter pode incluir seu pr\u00f3prio dicion\u00e1rio de palavras e frases n\u00e3o inclusivas \"padr\u00e3o\" para verificar como um bom ponto de partida. Essas ferramentas tamb\u00e9m podem ser personaliz\u00e1veis, oferecendo frequentemente a capacidade de omitir alguns termos e/ou adicionar os seus pr\u00f3prios. A capacidade de adicionar termos adicionais ao seu linter tem o benef\u00edcio adicional de permitir a verifica\u00e7\u00e3o de linguagem sens\u00edvel, al\u00e9m da verifica\u00e7\u00e3o inclusiva. Isso pode evitar que coisas como nomes de clientes ou outras informa\u00e7\u00f5es n\u00e3o p\u00fablicas entrem em seu hist\u00f3rico do Git, por exemplo. Como Come\u00e7ar com um Inclusive Linter woke Um inclusive linter que recomendamos \u00e9 o woke . \u00c9 uma ferramenta CLI agn\u00f3stica a linguagens que detecta linguagem n\u00e3o inclusiva em seu c\u00f3digo-fonte e sugere alternativas. Embora o woke aplique automaticamente um conjunto de regras padr\u00e3o com termos n\u00e3o inclusivos para verificar, voc\u00ea tamb\u00e9m pode aplicar uma configura\u00e7\u00e3o de regra personalizada (por meio de um arquivo YAML) com termos adicionais para verificar. Veja example.yaml para um exemplo de adi\u00e7\u00e3o de regras personalizadas. Executar a ferramenta localmente em um arquivo ou diret\u00f3rio \u00e9 relativamente simples: $ woke test.txt test.txt:2:2-6: ` guys ` pode ser insens\u00edvel, use ` pessoas ` , ` indiv\u00edduos ` em vez disso ( aviso ) * guys ^ woke pode ser executado localmente em sua m\u00e1quina ou sistema CI/CD por meio da CLI e tamb\u00e9m est\u00e1 dispon\u00edvel como duas a\u00e7\u00f5es no GitHub: Executar woke Executar woke com o Reviewdog Para usar a a\u00e7\u00e3o padr\u00e3o \"Run woke\" do GitHub com o conjunto de regras padr\u00e3o em um pipeline de CI: Adicione a a\u00e7\u00e3o woke como uma etapa no arquivo YAML do pipeline de CI do seu projeto: name : ci on : - pull_request jobs : woke : name : woke runs-on : ubuntu-latest steps : - name : Checkout uses : actions/checkout@v2 - name : woke uses : get-woke/woke-action@v0 with : # Faz com que a verifica\u00e7\u00e3o falhe em qualquer regra quebrada fail-on-error : true Execute seu pipeline Veja a sa\u00edda na guia \"A\u00e7\u00f5es\" na visualiza\u00e7\u00e3o principal do reposit\u00f3rio Para obter mais informa\u00e7\u00f5es sobre configura\u00e7\u00e3o adicional e uso, consulte a documenta\u00e7\u00e3o oficial .","title":"Inclus\u00e3o de Linting"},{"location":"continuous-integration/inclusive-linting/#inclusao-de-linting","text":"Como profissionais de software, devemos nos esfor\u00e7ar para promover um ambiente de trabalho inclusivo, o que naturalmente se estende ao c\u00f3digo e \u00e0 documenta\u00e7\u00e3o que escrevemos. \u00c9 importante manter o uso de linguagem inclusiva consistente em todo o projeto ou reposit\u00f3rio. Para alcan\u00e7ar isso, recomendamos o uso de uma ferramenta de an\u00e1lise de texto, como um linter inclusivo, e inclu\u00ed-lo como uma etapa em seus pipelines de Integra\u00e7\u00e3o Cont\u00ednua (CI).","title":"Inclus\u00e3o de Linting"},{"location":"continuous-integration/inclusive-linting/#o-que-verificar-com-o-linter","text":"O objetivo principal de um inclusive linter \u00e9 identificar qualquer ocorr\u00eancia de linguagem n\u00e3o inclusiva no c\u00f3digo-fonte (e opcionalmente sugerir algumas alternativas). Palavras ou frases n\u00e3o inclusivas em um projeto podem ser encontradas em qualquer lugar, desde coment\u00e1rios e documenta\u00e7\u00e3o at\u00e9 nomes de vari\u00e1veis. Um inclusive linter pode incluir seu pr\u00f3prio dicion\u00e1rio de palavras e frases n\u00e3o inclusivas \"padr\u00e3o\" para verificar como um bom ponto de partida. Essas ferramentas tamb\u00e9m podem ser personaliz\u00e1veis, oferecendo frequentemente a capacidade de omitir alguns termos e/ou adicionar os seus pr\u00f3prios. A capacidade de adicionar termos adicionais ao seu linter tem o benef\u00edcio adicional de permitir a verifica\u00e7\u00e3o de linguagem sens\u00edvel, al\u00e9m da verifica\u00e7\u00e3o inclusiva. Isso pode evitar que coisas como nomes de clientes ou outras informa\u00e7\u00f5es n\u00e3o p\u00fablicas entrem em seu hist\u00f3rico do Git, por exemplo.","title":"O que verificar com o Linter"},{"location":"continuous-integration/inclusive-linting/#como-comecar-com-um-inclusive-linter","text":"woke Um inclusive linter que recomendamos \u00e9 o woke . \u00c9 uma ferramenta CLI agn\u00f3stica a linguagens que detecta linguagem n\u00e3o inclusiva em seu c\u00f3digo-fonte e sugere alternativas. Embora o woke aplique automaticamente um conjunto de regras padr\u00e3o com termos n\u00e3o inclusivos para verificar, voc\u00ea tamb\u00e9m pode aplicar uma configura\u00e7\u00e3o de regra personalizada (por meio de um arquivo YAML) com termos adicionais para verificar. Veja example.yaml para um exemplo de adi\u00e7\u00e3o de regras personalizadas. Executar a ferramenta localmente em um arquivo ou diret\u00f3rio \u00e9 relativamente simples: $ woke test.txt test.txt:2:2-6: ` guys ` pode ser insens\u00edvel, use ` pessoas ` , ` indiv\u00edduos ` em vez disso ( aviso ) * guys ^ woke pode ser executado localmente em sua m\u00e1quina ou sistema CI/CD por meio da CLI e tamb\u00e9m est\u00e1 dispon\u00edvel como duas a\u00e7\u00f5es no GitHub: Executar woke Executar woke com o Reviewdog Para usar a a\u00e7\u00e3o padr\u00e3o \"Run woke\" do GitHub com o conjunto de regras padr\u00e3o em um pipeline de CI: Adicione a a\u00e7\u00e3o woke como uma etapa no arquivo YAML do pipeline de CI do seu projeto: name : ci on : - pull_request jobs : woke : name : woke runs-on : ubuntu-latest steps : - name : Checkout uses : actions/checkout@v2 - name : woke uses : get-woke/woke-action@v0 with : # Faz com que a verifica\u00e7\u00e3o falhe em qualquer regra quebrada fail-on-error : true Execute seu pipeline Veja a sa\u00edda na guia \"A\u00e7\u00f5es\" na visualiza\u00e7\u00e3o principal do reposit\u00f3rio Para obter mais informa\u00e7\u00f5es sobre configura\u00e7\u00e3o adicional e uso, consulte a documenta\u00e7\u00e3o oficial .","title":"Como Come\u00e7ar com um Inclusive Linter"},{"location":"continuous-integration/ci-in-data-science/working-with-notebooks/","text":"Data Science Pipeline As Azure DevOps doesn't allow code reviewers to comment directly in Jupyter Notebooks, Data Scientists(DSs) have to convert the notebooks to scripts before they commit and push these files to the repository. This document aims to automate this process in Azure DevOps, so the DSs don't need to execute anything locally. Problem statement A Data Science repository has this folder structure: . \u251c\u2500\u2500 notebooks \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 00 .ipynb \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 01 .ipynb \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 02 .ipynb \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 03 .ipynb \u2514\u2500\u2500 scripts \u251c\u2500\u2500 Machine Learning Experiments - 00 .py \u251c\u2500\u2500 Machine Learning Experiments - 01 .py \u251c\u2500\u2500 Machine Learning Experiments - 02 .py \u2514\u2500\u2500 Machine Learning Experiments - 03 .py The python files are needed to allow Pull Request reviewers to add comments to the notebooks, they can add comments to the Python scripts and we apply these comments to the notebooks. Since we have to run this process manually before we add files to a commit, this manual process is error prone, e.g. If we create a notebook, generate the script from it, but later make some changes and forget to generate a new script for the changes. Solution One way to avoid this is to create the scripts in the repository from the commit. This document will describe this process. We can add a pipeline with the following steps to the repository to run in ipynb files: Go to the Project Settings -> Repositories -> Security -> User Permissions Add the Build Service in Users the permission to Contribute Create a new pipeline. In the newly created pipeline we add: Trigger to run on ipynb files: trigger: paths: include: - '*.ipynb' - '**/*.ipynb' Select the pool as Linux: pool: vmImage: ubuntu-latest Set the directory where we want to store the scripts: variables: REPO_URL: # Azure DevOps URL in the format: dev.azure.com/<Organization>/<Project>/_git/<RepoName> Now we will start the core of the pipeline: 1. Upgrade pip - script: | python -m pip install --upgrade pip displayName: 'Upgrade pip' 1. Install nbconvert and ipython : - script: | pip install nbconvert ipython displayName: 'install nbconvert & ipython' 1. Install pandoc : - script: | sudo apt install -y pandoc displayName: \"Install pandoc\" 1. Find the notebook files ( ipynb ) in the last commit to the repo and convert it to scripts ( py ): - task: Bash@3 inputs: targetType: 'inline' script: | IPYNB_PATH=($(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion) | grep '[.]ipynb$')) echo $IPYNB_PATH [ -z \"$IPYNB_PATH\" ] && echo \"Nothing to convert\" || jupyter nbconvert --to script $IPYNB_PATH displayName: \"Convert Notebook to script\" 1. Commit these changes to the repository: - bash: | git config --global user.email \"build@dev.azure.com\" git config --global user.name \"build\" git add . git commit -m 'Convert Jupyter notebooks' || echo \"No changes to commit\" && NO_CHANGES=1 [ -z \"$NO_CHANGES\" ] || git push https://$(System.AccessToken)@$(REPO_URL) HEAD:$(Build.SourceBranchName) displayName: \"Commit notebook to repository\" Now we have a pipeline that will generate the scripts as we commit our notebooks.","title":"Data Science Pipeline"},{"location":"continuous-integration/ci-in-data-science/working-with-notebooks/#data-science-pipeline","text":"As Azure DevOps doesn't allow code reviewers to comment directly in Jupyter Notebooks, Data Scientists(DSs) have to convert the notebooks to scripts before they commit and push these files to the repository. This document aims to automate this process in Azure DevOps, so the DSs don't need to execute anything locally.","title":"Data Science Pipeline"},{"location":"continuous-integration/ci-in-data-science/working-with-notebooks/#problem-statement","text":"A Data Science repository has this folder structure: . \u251c\u2500\u2500 notebooks \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 00 .ipynb \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 01 .ipynb \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 02 .ipynb \u2502 \u251c\u2500\u2500 Machine Learning Experiments - 03 .ipynb \u2514\u2500\u2500 scripts \u251c\u2500\u2500 Machine Learning Experiments - 00 .py \u251c\u2500\u2500 Machine Learning Experiments - 01 .py \u251c\u2500\u2500 Machine Learning Experiments - 02 .py \u2514\u2500\u2500 Machine Learning Experiments - 03 .py The python files are needed to allow Pull Request reviewers to add comments to the notebooks, they can add comments to the Python scripts and we apply these comments to the notebooks. Since we have to run this process manually before we add files to a commit, this manual process is error prone, e.g. If we create a notebook, generate the script from it, but later make some changes and forget to generate a new script for the changes.","title":"Problem statement"},{"location":"continuous-integration/ci-in-data-science/working-with-notebooks/#solution","text":"One way to avoid this is to create the scripts in the repository from the commit. This document will describe this process. We can add a pipeline with the following steps to the repository to run in ipynb files: Go to the Project Settings -> Repositories -> Security -> User Permissions Add the Build Service in Users the permission to Contribute Create a new pipeline. In the newly created pipeline we add: Trigger to run on ipynb files: trigger: paths: include: - '*.ipynb' - '**/*.ipynb' Select the pool as Linux: pool: vmImage: ubuntu-latest Set the directory where we want to store the scripts: variables: REPO_URL: # Azure DevOps URL in the format: dev.azure.com/<Organization>/<Project>/_git/<RepoName> Now we will start the core of the pipeline: 1. Upgrade pip - script: | python -m pip install --upgrade pip displayName: 'Upgrade pip' 1. Install nbconvert and ipython : - script: | pip install nbconvert ipython displayName: 'install nbconvert & ipython' 1. Install pandoc : - script: | sudo apt install -y pandoc displayName: \"Install pandoc\" 1. Find the notebook files ( ipynb ) in the last commit to the repo and convert it to scripts ( py ): - task: Bash@3 inputs: targetType: 'inline' script: | IPYNB_PATH=($(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion) | grep '[.]ipynb$')) echo $IPYNB_PATH [ -z \"$IPYNB_PATH\" ] && echo \"Nothing to convert\" || jupyter nbconvert --to script $IPYNB_PATH displayName: \"Convert Notebook to script\" 1. Commit these changes to the repository: - bash: | git config --global user.email \"build@dev.azure.com\" git config --global user.name \"build\" git add . git commit -m 'Convert Jupyter notebooks' || echo \"No changes to commit\" && NO_CHANGES=1 [ -z \"$NO_CHANGES\" ] || git push https://$(System.AccessToken)@$(REPO_URL) HEAD:$(Build.SourceBranchName) displayName: \"Commit notebook to repository\" Now we have a pipeline that will generate the scripts as we commit our notebooks.","title":"Solution"},{"location":"continuous-integration/dev-sec-ops/","text":"DevSecOps The concept of DevSecOps DevSecOps or DevOps security is about introducing security earlier in the life cycle of application development (a.k.a shift-left), thus minimizing the impact of vulnerabilities and bringing security closer to development team. Why By embracing shift-left mentality, DevSecOps encourages organizations to bridge the gap that often exists between development and security teams to the point where many of the security processes are automated and are effectively handled by the development team. DevSecOps Practices This section covers different tools, frameworks and resources allowing introduction of DevSecOps best practices to your project at early stages of development. Topics covered: Credential Scanning - automatically inspecting a project to ensure that no secrets are included in the project's source code. Secrets Rotation - automated process by which the secret, used by the application, is refreshed and replaced by a new secret. Static Code Analysis - analyze source code or compiled versions of code to help find security flaws. Penetration Testing - a simulated attack against your application to check for exploitable vulnerabilities. Container Dependencies Scanning - search for vulnerabilities in container operating systems, language packages and application dependencies.","title":"DevSecOps"},{"location":"continuous-integration/dev-sec-ops/#devsecops","text":"","title":"DevSecOps"},{"location":"continuous-integration/dev-sec-ops/#the-concept-of-devsecops","text":"DevSecOps or DevOps security is about introducing security earlier in the life cycle of application development (a.k.a shift-left), thus minimizing the impact of vulnerabilities and bringing security closer to development team.","title":"The concept of DevSecOps"},{"location":"continuous-integration/dev-sec-ops/#why","text":"By embracing shift-left mentality, DevSecOps encourages organizations to bridge the gap that often exists between development and security teams to the point where many of the security processes are automated and are effectively handled by the development team.","title":"Why"},{"location":"continuous-integration/dev-sec-ops/#devsecops-practices","text":"This section covers different tools, frameworks and resources allowing introduction of DevSecOps best practices to your project at early stages of development. Topics covered: Credential Scanning - automatically inspecting a project to ensure that no secrets are included in the project's source code. Secrets Rotation - automated process by which the secret, used by the application, is refreshed and replaced by a new secret. Static Code Analysis - analyze source code or compiled versions of code to help find security flaws. Penetration Testing - a simulated attack against your application to check for exploitable vulnerabilities. Container Dependencies Scanning - search for vulnerabilities in container operating systems, language packages and application dependencies.","title":"DevSecOps Practices"},{"location":"continuous-integration/dev-sec-ops/azure-devops/service-connection-security/","text":"Azure DevOps Service Connection Security Service Connections are used in Azure DevOps Pipelines to connect to external services, like Azure, GitHub, Docker, Kubernetes, and many other services. Service Connections can be used to authenticate to these external services and to invoke diverse types of commands, like create and update resources in Azure, upload container images to Docker, or deploy applications to Kubernetes. To be able to invoke these commands, Service Connections need to have the right permissions to do so, for most types of Service Connections the permissions can be scoped to a subset of resources to limit the access they have. To improve the principle of least privilege, it's often very common to have separate Service Connections for different environments like Dev/Test/QA/Prod. Secure Service Connection Securing Service Connections can be achieved by using several methods. User permissions can be configured to ensure only the correct users can create, view, use, and manage the Service Connection. Pipeline-level permissions can be configured to ensure only approved YAML pipelines are able to use the Service Connection. Project permissions can be configured to ensure only certain Azure DevOps projects are able to use the Service Connection. After using the above methods, what is secured is who can use the Service Connections. What still isn't secured however, is what can be done with the Service Connections. Because Service Connections have all the necessary permissions in the external services, it is crucial to secure Service Connections so they cannot be misused by accident or by malicious users. An example of this is a Azure DevOps Pipeline that uses a Service Connection to an Azure Resource Group (or entire subscription) to list all resources and then delete those resources. Without the correct security in place, it could be possible to execute this Pipeline, without any validation or reviews being done. pool : vmImage : ubuntu-latest steps : - task : AzureCLI@2 inputs : azureSubscription : 'Production Service Connection' scriptType : 'pscore' scriptLocation : 'inlineScript' inlineScript : | $resources = az resource list foreach ($resource in $resources) { az resource delete --ids $resource.id } Pipeline Security caveat YAML pipelines can be triggered without the need for a pull request, this introduces a security risk. In good practice, Pull Requests and Code Reviews should be used to ensure the code that is being deployed, is being reviewed by a second person and potentially automatically being checked for vulnerabilities and other security issues. However, YAML Pipelines can be executed without the need for a Pull Request and Code Reviews. This allows the (malicious) user to make changes using the Service Connection which would normally require a reviewer. The configuration of when a pipeline should be triggered is specified in the YAML Pipeline itself and therefore a pipeline can be configured to execute on changes in a temporary branch. In this temporary branch, any changes made to the pipeline itself will be executed without being reviewed. If the given pipeline has been granted Pipeline-level permissions to use a specific Service Connection, any command can be executed using that Service Connection, without anyone reviewing the command. Since Service Connections can have a lot of permissions in the external service, executing any pipeline without review could potentially have big consequences. Service Connection Checks To prevent accidental mis-use of Service Connections there are several checks that can be configured. These checks are configured on the Service Connection itself and therefore can only be configured by the owner or administrator of that Service Connection. A user of a certain YAML Pipeline cannot modify these checks since the checks are not defined in the YAML file itself. Configuration can be done in the Approvals and Checks menu on the Service Connection. Branch Control By configuring Branch Control on a Service Connection, you can control that the Service Connection can only be used in a YAML Pipeline if the pipeline is running from a specific branch. By configuring Branch Control to only allow the main branch (and potentially release branches) you can ensure a YAML Pipeline can only use the Service Connection after any changes to that pipeline have been merged into the main branch, and therefore has passed any Pull Requests checks and Code Reviews. As an additional check, Branch Control can verify if Branch Protections (like required Pull Requests and Code Reviews) are actually configured on the allowed branches. With Branch Control in place, in combination with Branch Protections, it is not possible anymore to run any commands against a Service Connection without having multiple persons review the commands. Therefore accidental, or malicious, mis-use of the permissions a Service Connection has is not possible anymore. * Note: When setting a wildcard for the Allowed Branches, anyone could still create a branch matching that wildcard and would be able to use the Service Connection. Using git permissions it can be configured so only administrators are allowed to create certain branches, like release branches.","title":"Azure DevOps Service Connection Security"},{"location":"continuous-integration/dev-sec-ops/azure-devops/service-connection-security/#azure-devops-service-connection-security","text":"Service Connections are used in Azure DevOps Pipelines to connect to external services, like Azure, GitHub, Docker, Kubernetes, and many other services. Service Connections can be used to authenticate to these external services and to invoke diverse types of commands, like create and update resources in Azure, upload container images to Docker, or deploy applications to Kubernetes. To be able to invoke these commands, Service Connections need to have the right permissions to do so, for most types of Service Connections the permissions can be scoped to a subset of resources to limit the access they have. To improve the principle of least privilege, it's often very common to have separate Service Connections for different environments like Dev/Test/QA/Prod.","title":"Azure DevOps Service Connection Security"},{"location":"continuous-integration/dev-sec-ops/azure-devops/service-connection-security/#secure-service-connection","text":"Securing Service Connections can be achieved by using several methods. User permissions can be configured to ensure only the correct users can create, view, use, and manage the Service Connection. Pipeline-level permissions can be configured to ensure only approved YAML pipelines are able to use the Service Connection. Project permissions can be configured to ensure only certain Azure DevOps projects are able to use the Service Connection. After using the above methods, what is secured is who can use the Service Connections. What still isn't secured however, is what can be done with the Service Connections. Because Service Connections have all the necessary permissions in the external services, it is crucial to secure Service Connections so they cannot be misused by accident or by malicious users. An example of this is a Azure DevOps Pipeline that uses a Service Connection to an Azure Resource Group (or entire subscription) to list all resources and then delete those resources. Without the correct security in place, it could be possible to execute this Pipeline, without any validation or reviews being done. pool : vmImage : ubuntu-latest steps : - task : AzureCLI@2 inputs : azureSubscription : 'Production Service Connection' scriptType : 'pscore' scriptLocation : 'inlineScript' inlineScript : | $resources = az resource list foreach ($resource in $resources) { az resource delete --ids $resource.id }","title":"Secure Service Connection"},{"location":"continuous-integration/dev-sec-ops/azure-devops/service-connection-security/#pipeline-security-caveat","text":"YAML pipelines can be triggered without the need for a pull request, this introduces a security risk. In good practice, Pull Requests and Code Reviews should be used to ensure the code that is being deployed, is being reviewed by a second person and potentially automatically being checked for vulnerabilities and other security issues. However, YAML Pipelines can be executed without the need for a Pull Request and Code Reviews. This allows the (malicious) user to make changes using the Service Connection which would normally require a reviewer. The configuration of when a pipeline should be triggered is specified in the YAML Pipeline itself and therefore a pipeline can be configured to execute on changes in a temporary branch. In this temporary branch, any changes made to the pipeline itself will be executed without being reviewed. If the given pipeline has been granted Pipeline-level permissions to use a specific Service Connection, any command can be executed using that Service Connection, without anyone reviewing the command. Since Service Connections can have a lot of permissions in the external service, executing any pipeline without review could potentially have big consequences.","title":"Pipeline Security caveat"},{"location":"continuous-integration/dev-sec-ops/azure-devops/service-connection-security/#service-connection-checks","text":"To prevent accidental mis-use of Service Connections there are several checks that can be configured. These checks are configured on the Service Connection itself and therefore can only be configured by the owner or administrator of that Service Connection. A user of a certain YAML Pipeline cannot modify these checks since the checks are not defined in the YAML file itself. Configuration can be done in the Approvals and Checks menu on the Service Connection.","title":"Service Connection Checks"},{"location":"continuous-integration/dev-sec-ops/azure-devops/service-connection-security/#branch-control","text":"By configuring Branch Control on a Service Connection, you can control that the Service Connection can only be used in a YAML Pipeline if the pipeline is running from a specific branch. By configuring Branch Control to only allow the main branch (and potentially release branches) you can ensure a YAML Pipeline can only use the Service Connection after any changes to that pipeline have been merged into the main branch, and therefore has passed any Pull Requests checks and Code Reviews. As an additional check, Branch Control can verify if Branch Protections (like required Pull Requests and Code Reviews) are actually configured on the allowed branches. With Branch Control in place, in combination with Branch Protections, it is not possible anymore to run any commands against a Service Connection without having multiple persons review the commands. Therefore accidental, or malicious, mis-use of the permissions a Service Connection has is not possible anymore. * Note: When setting a wildcard for the Allowed Branches, anyone could still create a branch matching that wildcard and would be able to use the Service Connection. Using git permissions it can be configured so only administrators are allowed to create certain branches, like release branches.","title":"Branch Control"},{"location":"continuous-integration/dev-sec-ops/dependency-container-scanning/dependency_container_scanning/","text":"Dependency and Container Scanning Dependency and Container scanning is performed in order to search for vulnerabilities in operating systems, language and application packages. Why Dependency and Container Scanning Container images are standard application delivery format in cloud-native environments. Having a broad selection of images from the community, we often choose a community base image, and then add packages that we need to it, which might also come from community sources. Those arbitrary dependencies might introduce vulnerabilities to our image and application. Applying Dependency and Container Scanning Images that contain software with security vulnerabilities become exploitable at runtime. When building an image in your CI pipeline, image scanning must be a requirement for a build to pass. Images that did not pass scanning should never be pushed to your production-accessible container registry. Dependency and Container scanning best practices: Base Image - if your image is built on top of a third-party base image, validate the following: The image comes from a well-known company or open-source group. It is hosted on a reputable registry. The Dockerfile is available, and check for dependencies installed in it. The image is frequently updated - old images might not contain the latest security updates. Remove Non-Essential Software - Start with a minimal base image and install only the tools, libraries and configuration files that are required by your application. Avoid installing the following tools or remove them if present: - Network tools and clients: e.g., wget, curl, netcat, ssh. - Shells: e.g. sh, bash. Note that removing shells also prevents the use of shell scripts at runtime. Instead, use an executable when possible. - Compilers and debuggers. These should be used only in build and development containers, but never in production containers. Container images should be immutable - download and include all the required dependencies during the image build. Scan for vulnerabilities in software dependencies - today there is likely no software project without some form of external libraries, dependencies or open source. While it allows the development team to focus on their application code, the dependency brings forth an expected downside where the security posture of the real application is now resting on it. To detect vulnerabilities contained within a project\u2019s dependencies use container scanning tools which as part of their analysis scan the software dependencies (see \"Dependency and Container Scanning Frameworks and Tools\"). Dependency and Container Scanning Frameworks and Tools Trivy - a simple and comprehensive vulnerability scanner for containers (doesn't support Windows containers) Aqua - dependency and container scanning for applications running on AKS, ACI and Windows Containers. Has an integration with AzDO pipelines. Dependency-Check Plugin for SonarQube - OnPrem dependency scanning Mend (previously WhiteSource) - Open Source Scanning Software Conclusion A powerful technology such as containers should be used carefully. Install the minimal requirements needed for your application, be aware of the software dependencies your application is using and make sure to maintain it over time by using container and dependencies scanning tools.","title":"Dependency and Container Scanning"},{"location":"continuous-integration/dev-sec-ops/dependency-container-scanning/dependency_container_scanning/#dependency-and-container-scanning","text":"Dependency and Container scanning is performed in order to search for vulnerabilities in operating systems, language and application packages.","title":"Dependency and Container Scanning"},{"location":"continuous-integration/dev-sec-ops/dependency-container-scanning/dependency_container_scanning/#why-dependency-and-container-scanning","text":"Container images are standard application delivery format in cloud-native environments. Having a broad selection of images from the community, we often choose a community base image, and then add packages that we need to it, which might also come from community sources. Those arbitrary dependencies might introduce vulnerabilities to our image and application.","title":"Why Dependency and Container Scanning"},{"location":"continuous-integration/dev-sec-ops/dependency-container-scanning/dependency_container_scanning/#applying-dependency-and-container-scanning","text":"Images that contain software with security vulnerabilities become exploitable at runtime. When building an image in your CI pipeline, image scanning must be a requirement for a build to pass. Images that did not pass scanning should never be pushed to your production-accessible container registry. Dependency and Container scanning best practices: Base Image - if your image is built on top of a third-party base image, validate the following: The image comes from a well-known company or open-source group. It is hosted on a reputable registry. The Dockerfile is available, and check for dependencies installed in it. The image is frequently updated - old images might not contain the latest security updates. Remove Non-Essential Software - Start with a minimal base image and install only the tools, libraries and configuration files that are required by your application. Avoid installing the following tools or remove them if present: - Network tools and clients: e.g., wget, curl, netcat, ssh. - Shells: e.g. sh, bash. Note that removing shells also prevents the use of shell scripts at runtime. Instead, use an executable when possible. - Compilers and debuggers. These should be used only in build and development containers, but never in production containers. Container images should be immutable - download and include all the required dependencies during the image build. Scan for vulnerabilities in software dependencies - today there is likely no software project without some form of external libraries, dependencies or open source. While it allows the development team to focus on their application code, the dependency brings forth an expected downside where the security posture of the real application is now resting on it. To detect vulnerabilities contained within a project\u2019s dependencies use container scanning tools which as part of their analysis scan the software dependencies (see \"Dependency and Container Scanning Frameworks and Tools\").","title":"Applying Dependency and Container Scanning"},{"location":"continuous-integration/dev-sec-ops/dependency-container-scanning/dependency_container_scanning/#dependency-and-container-scanning-frameworks-and-tools","text":"Trivy - a simple and comprehensive vulnerability scanner for containers (doesn't support Windows containers) Aqua - dependency and container scanning for applications running on AKS, ACI and Windows Containers. Has an integration with AzDO pipelines. Dependency-Check Plugin for SonarQube - OnPrem dependency scanning Mend (previously WhiteSource) - Open Source Scanning Software","title":"Dependency and Container Scanning Frameworks and Tools"},{"location":"continuous-integration/dev-sec-ops/dependency-container-scanning/dependency_container_scanning/#conclusion","text":"A powerful technology such as containers should be used carefully. Install the minimal requirements needed for your application, be aware of the software dependencies your application is using and make sure to maintain it over time by using container and dependencies scanning tools.","title":"Conclusion"},{"location":"continuous-integration/dev-sec-ops/penetration-testing/penetration_testing/","text":"Penetration Testing A penetration test is a simulated attack against your application to check for exploitable security issues. Why Penetration Testing Penetration testing performed on a running application. As such, it tests the application E2E with all of its layers. It's output is a real simulated attack on the application that succeeded, therefore it is a critical issue in your application and should be addressed as soon as possible. Applying Penetration Testing Many organizations perform manual penetration testing. But new vulnerabilities found every day. Therefore, it is a good practice to have an automated penetration testing performed. To achieve this automation use penetration testing tools to uncover vulnerabilities, such as unsanitized inputs that are susceptible to code injection attacks. Insights provided by the penetration test can then be used to fine-tune your WAF security policies and patch detected vulnerabilities. Penetration Testing Frameworks and Tools OWASP Zed Attack Proxy (ZAP) - OWASP penetration testing tool for web applications. Conclusion Penetration testing is essential to check for vulnerabilities in your application and protect it from simulated attacks. Insights provided by Penetration testing can identify weak spots in an organization's security posture, as well as measure the compliance of its security policy, test the staff's awareness of security issues and determine whether -- and how -- the organization would be subject to security disasters.","title":"Penetration Testing"},{"location":"continuous-integration/dev-sec-ops/penetration-testing/penetration_testing/#penetration-testing","text":"A penetration test is a simulated attack against your application to check for exploitable security issues.","title":"Penetration Testing"},{"location":"continuous-integration/dev-sec-ops/penetration-testing/penetration_testing/#why-penetration-testing","text":"Penetration testing performed on a running application. As such, it tests the application E2E with all of its layers. It's output is a real simulated attack on the application that succeeded, therefore it is a critical issue in your application and should be addressed as soon as possible.","title":"Why Penetration Testing"},{"location":"continuous-integration/dev-sec-ops/penetration-testing/penetration_testing/#applying-penetration-testing","text":"Many organizations perform manual penetration testing. But new vulnerabilities found every day. Therefore, it is a good practice to have an automated penetration testing performed. To achieve this automation use penetration testing tools to uncover vulnerabilities, such as unsanitized inputs that are susceptible to code injection attacks. Insights provided by the penetration test can then be used to fine-tune your WAF security policies and patch detected vulnerabilities.","title":"Applying Penetration Testing"},{"location":"continuous-integration/dev-sec-ops/penetration-testing/penetration_testing/#penetration-testing-frameworks-and-tools","text":"OWASP Zed Attack Proxy (ZAP) - OWASP penetration testing tool for web applications.","title":"Penetration Testing Frameworks and Tools"},{"location":"continuous-integration/dev-sec-ops/penetration-testing/penetration_testing/#conclusion","text":"Penetration testing is essential to check for vulnerabilities in your application and protect it from simulated attacks. Insights provided by Penetration testing can identify weak spots in an organization's security posture, as well as measure the compliance of its security policy, test the staff's awareness of security issues and determine whether -- and how -- the organization would be subject to security disasters.","title":"Conclusion"},{"location":"continuous-integration/dev-sec-ops/secret-management/credential_scanning/","text":"Credential Scanning Credential scanning is the practice of automatically inspecting a project to ensure that no secrets are included in the project's source code. Secrets include database passwords, storage connection strings, admin logins, service principals, etc. Why Credential scanning Including secrets in a project's source code is a significant risk, as it might make those secrets available to unwanted parties. Even if it seems that the source code is accessible to the same people who are privy to the secrets, this situation is likely to change as the project grows. Spreading secrets in different places makes them harder to manage, access control, and revoke efficiently. Secrets that are committed to source control are also harder to discard of, since they will persist in the source's history. Another consideration is that coupling the project's code to its infrastructure and deployment specifics is limiting and considered a bad practice. From a software design perspective, the code should be independent of the runtime configuration that will be used to run it, and that runtime configuration includes secrets. As such, there should be a clear boundary between code and secrets: secrets should be managed outside of the source code (read more here ) and credential scanning should be employed to ensure that this boundary is never violated. Applying Credential Scanning Ideally, credential scanning should be run as part of a developer's workflow (e.g. via a git pre-commit hook ), however, to protect against developer error, credential scanning must also be enforced as part of the continuous integration process to ensure that no credentials ever get merged to a project's main branch. To implement credential scanning for a project, consider the following: Store secrets in an external secure store that is meant to store sensitive information Use secrets scanning tools to asses your repositories current state by scanning it's full history for secrets Incorporate an automated secrets scanning tool into your CI pipeline to detect unintentional committing of secrets Avoid git add . commands on git Add sensitive files to .gitignore Credential Scanning Frameworks and Tools Recipes and Scenarios- detect-secrets is an aptly named module for detecting secrets within a code base. Use detect-secrets inside Azure DevOps Pipeline Microsoft Security Code Analysis extension Additional Tools - CodeQL \u2013 GitHub security. CodeQL lets you query code as if it was data. Write a query to find all variants of a vulnerability Git-secrets - Prevents you from committing passwords and other sensitive information to a git repository. Conclusion Secret management is essential to every project. Storing secrets in external secrets store and incorporating this mindset into your workflow will improve your security posture and will result in cleaner code.","title":"Credential Scanning"},{"location":"continuous-integration/dev-sec-ops/secret-management/credential_scanning/#credential-scanning","text":"Credential scanning is the practice of automatically inspecting a project to ensure that no secrets are included in the project's source code. Secrets include database passwords, storage connection strings, admin logins, service principals, etc.","title":"Credential Scanning"},{"location":"continuous-integration/dev-sec-ops/secret-management/credential_scanning/#why-credential-scanning","text":"Including secrets in a project's source code is a significant risk, as it might make those secrets available to unwanted parties. Even if it seems that the source code is accessible to the same people who are privy to the secrets, this situation is likely to change as the project grows. Spreading secrets in different places makes them harder to manage, access control, and revoke efficiently. Secrets that are committed to source control are also harder to discard of, since they will persist in the source's history. Another consideration is that coupling the project's code to its infrastructure and deployment specifics is limiting and considered a bad practice. From a software design perspective, the code should be independent of the runtime configuration that will be used to run it, and that runtime configuration includes secrets. As such, there should be a clear boundary between code and secrets: secrets should be managed outside of the source code (read more here ) and credential scanning should be employed to ensure that this boundary is never violated.","title":"Why Credential scanning"},{"location":"continuous-integration/dev-sec-ops/secret-management/credential_scanning/#applying-credential-scanning","text":"Ideally, credential scanning should be run as part of a developer's workflow (e.g. via a git pre-commit hook ), however, to protect against developer error, credential scanning must also be enforced as part of the continuous integration process to ensure that no credentials ever get merged to a project's main branch. To implement credential scanning for a project, consider the following: Store secrets in an external secure store that is meant to store sensitive information Use secrets scanning tools to asses your repositories current state by scanning it's full history for secrets Incorporate an automated secrets scanning tool into your CI pipeline to detect unintentional committing of secrets Avoid git add . commands on git Add sensitive files to .gitignore","title":"Applying Credential Scanning"},{"location":"continuous-integration/dev-sec-ops/secret-management/credential_scanning/#credential-scanning-frameworks-and-tools","text":"Recipes and Scenarios- detect-secrets is an aptly named module for detecting secrets within a code base. Use detect-secrets inside Azure DevOps Pipeline Microsoft Security Code Analysis extension Additional Tools - CodeQL \u2013 GitHub security. CodeQL lets you query code as if it was data. Write a query to find all variants of a vulnerability Git-secrets - Prevents you from committing passwords and other sensitive information to a git repository.","title":"Credential Scanning Frameworks and Tools"},{"location":"continuous-integration/dev-sec-ops/secret-management/credential_scanning/#conclusion","text":"Secret management is essential to every project. Storing secrets in external secrets store and incorporating this mindset into your workflow will improve your security posture and will result in cleaner code.","title":"Conclusion"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/","text":"Secrets Rotation Secret rotation is the process of refreshing the secrets that are used by the application. The best way to authenticate to Azure services is by using a managed identity, but there are some scenarios where that isn't an option. In those cases, access keys or secrets are used. You should periodically rotate access keys or secrets. Why Secrets Rotation Secrets are an asset and as such have a potential to be leaked or stolen. By rotating the secrets, we are revoking any secrets that may have been compromised. Therefore, secrets should be rotated frequently. Managed Identity Azure Managed identities are automatically issues by Azure in order to identify individual resources, and can be used for authentication in place of secrets and passwords. The appeal in using Managed Identities is the elimination of management of secrets and credentials. They are not required on developers machines or checked into source control, and they don't need to be rotated. Managed identities are considered safer than the alternatives and is the recommended choice. Applying Secrets Rotation If Azure Managed Identity can't be used. This and the following sections will explain how rotation of secrets can be achieved: To promote frequent rotation of a secret - define an automated periodic secret rotation process. The secret rotation process might result in a downtime when the application is restarted to introduce the new secret. A common solution for that is to have two versions of secret available, also referred to as Blue/Green Secret rotation. By having a second secret at hand, we can start a second instance of the application with that secret before the previous secret is revoked, thus avoiding any downtime. Secrets Rotation Frameworks and Tools For rotation of a secret for resources that use one set of authentication credentials click here For rotation of a secret for resources that have two sets of authentication credentials click here Conclusion Refreshing secrets is important to ensure that your secret stays a secret without causing downtime to your application.","title":"Secrets Rotation"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/#secrets-rotation","text":"Secret rotation is the process of refreshing the secrets that are used by the application. The best way to authenticate to Azure services is by using a managed identity, but there are some scenarios where that isn't an option. In those cases, access keys or secrets are used. You should periodically rotate access keys or secrets.","title":"Secrets Rotation"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/#why-secrets-rotation","text":"Secrets are an asset and as such have a potential to be leaked or stolen. By rotating the secrets, we are revoking any secrets that may have been compromised. Therefore, secrets should be rotated frequently.","title":"Why Secrets Rotation"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/#managed-identity","text":"Azure Managed identities are automatically issues by Azure in order to identify individual resources, and can be used for authentication in place of secrets and passwords. The appeal in using Managed Identities is the elimination of management of secrets and credentials. They are not required on developers machines or checked into source control, and they don't need to be rotated. Managed identities are considered safer than the alternatives and is the recommended choice.","title":"Managed Identity"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/#applying-secrets-rotation","text":"If Azure Managed Identity can't be used. This and the following sections will explain how rotation of secrets can be achieved: To promote frequent rotation of a secret - define an automated periodic secret rotation process. The secret rotation process might result in a downtime when the application is restarted to introduce the new secret. A common solution for that is to have two versions of secret available, also referred to as Blue/Green Secret rotation. By having a second secret at hand, we can start a second instance of the application with that secret before the previous secret is revoked, thus avoiding any downtime.","title":"Applying Secrets Rotation"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/#secrets-rotation-frameworks-and-tools","text":"For rotation of a secret for resources that use one set of authentication credentials click here For rotation of a secret for resources that have two sets of authentication credentials click here","title":"Secrets Rotation Frameworks and Tools"},{"location":"continuous-integration/dev-sec-ops/secret-management/secrets_rotation/#conclusion","text":"Refreshing secrets is important to ensure that your secret stays a secret without causing downtime to your application.","title":"Conclusion"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets-ado/","text":"Running detect-secrets in Azure DevOps Pipelines Overview In this article, you can find information on how to integrate YELP detect-secrets into your Azure DevOps Pipeline. The proposed code can be part of the classic CI process or (preferred way) build validation for PRs before merging to the main branch. Azure DevOps Pipeline Proposed Azure DevOps Pipeline contains multiple steps described below: Set Python 3 as default Install detect-secrets using pip Run detect-secrets tool Publish results in the Pipeline Artifact NOTE: It's an optional step, but for future investigation .json file with results may be helpful. Analyzing detect-secrets results NOTE: This step does a simple analysis of the .json file. If any secret has been detected, then break the build with exit code 1. NOTE: The below example has 2 jobs: for Linux and Windows agents. You do not have to use both jobs - just adjust the pipeline to your needs. NOTE: Windows example does not use the latest version of detect-secrets. It is related to the bug in the detect-secret tool (see more in Issue#452 ). It is highly recommended to monitor the fix for the issue and use the latest version if possible by removing version tag ==1.0.3 in the pip install command. trigger : - none jobs : - job : ubuntu displayName : \"detect-secrets on Ubuntu Linux agent\" pool : vmImage : ubuntu-latest steps : - task : UsePythonVersion@0 displayName : \"Set Python 3 as default\" inputs : versionSpec : \"3\" addToPath : true architecture : \"x64\" - bash : pip install detect-secrets displayName : \"Install detect-secrets using pip\" - bash : | detect-secrets --version detect-secrets scan --all-files --force-use-all-plugins --exclude-files FETCH_HEAD > $(Pipeline.Workspace)/detect-secrets.json displayName : \"Run detect-secrets tool\" - task : PublishPipelineArtifact@1 displayName : \"Publish results in the Pipeline Artifact\" inputs : targetPath : \"$(Pipeline.Workspace)/detect-secrets.json\" artifact : \"detect-secrets-ubuntu\" publishLocation : \"pipeline\" - bash : | dsjson=$(cat $(Pipeline.Workspace)/detect-secrets.json) echo \"${dsjson}\" count=$(echo \"${dsjson}\" | jq -c -r '.results | length') if [ $count -gt 0 ]; then msg=\"Secrets were detected in code. ${count} file(s) affected.\" echo \"##vso[task.logissue type=error]${msg}\" echo \"##vso[task.complete result=Failed;]${msg}.\" else echo \"##vso[task.complete result=Succeeded;]No secrets detected.\" fi displayName : \"Analyzing detect-secrets results\" - job : windows displayName : \"detect-secrets on Windows agent\" pool : vmImage : windows-latest steps : - task : UsePythonVersion@0 displayName : \"Set Python 3 as default\" inputs : versionSpec : \"3\" addToPath : true architecture : \"x64\" - script : pip install detect-secrets==1.0.3 displayName : \"Install detect-secrets using pip\" - script : | detect-secrets --version detect-secrets scan --all-files --force-use-all-plugins > $(Pipeline.Workspace)/detect-secrets.json displayName : \"Run detect-secrets tool\" - task : PublishPipelineArtifact@1 displayName : \"Publish results in the Pipeline Artifact\" inputs : targetPath : \"$(Pipeline.Workspace)/detect-secrets.json\" artifact : \"detect-secrets-windows\" publishLocation : \"pipeline\" - pwsh : | $dsjson = Get-Content $(Pipeline.Workspace)/detect-secrets.json Write-Output $dsjson $dsObj = $dsjson | ConvertFrom-Json $count = ($dsObj.results | Get-Member -MemberType NoteProperty).Count if ($count -gt 0) { $msg = \"Secrets were detected in code. $count file(s) affected. \" Write-Host \"##vso[task.logissue type=error]$msg\" Write-Host \"##vso[task.complete result=Failed;]$msg\" } else { Write-Host \"##vso[task.complete result=Succeeded;]No secrets detected.\" } displayName : \"Analyzing detect-secrets results\"","title":"Running detect-secrets in Azure DevOps Pipelines"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets-ado/#running-detect-secrets-in-azure-devops-pipelines","text":"","title":"Running detect-secrets in Azure DevOps Pipelines"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets-ado/#overview","text":"In this article, you can find information on how to integrate YELP detect-secrets into your Azure DevOps Pipeline. The proposed code can be part of the classic CI process or (preferred way) build validation for PRs before merging to the main branch.","title":"Overview"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets-ado/#azure-devops-pipeline","text":"Proposed Azure DevOps Pipeline contains multiple steps described below: Set Python 3 as default Install detect-secrets using pip Run detect-secrets tool Publish results in the Pipeline Artifact NOTE: It's an optional step, but for future investigation .json file with results may be helpful. Analyzing detect-secrets results NOTE: This step does a simple analysis of the .json file. If any secret has been detected, then break the build with exit code 1. NOTE: The below example has 2 jobs: for Linux and Windows agents. You do not have to use both jobs - just adjust the pipeline to your needs. NOTE: Windows example does not use the latest version of detect-secrets. It is related to the bug in the detect-secret tool (see more in Issue#452 ). It is highly recommended to monitor the fix for the issue and use the latest version if possible by removing version tag ==1.0.3 in the pip install command. trigger : - none jobs : - job : ubuntu displayName : \"detect-secrets on Ubuntu Linux agent\" pool : vmImage : ubuntu-latest steps : - task : UsePythonVersion@0 displayName : \"Set Python 3 as default\" inputs : versionSpec : \"3\" addToPath : true architecture : \"x64\" - bash : pip install detect-secrets displayName : \"Install detect-secrets using pip\" - bash : | detect-secrets --version detect-secrets scan --all-files --force-use-all-plugins --exclude-files FETCH_HEAD > $(Pipeline.Workspace)/detect-secrets.json displayName : \"Run detect-secrets tool\" - task : PublishPipelineArtifact@1 displayName : \"Publish results in the Pipeline Artifact\" inputs : targetPath : \"$(Pipeline.Workspace)/detect-secrets.json\" artifact : \"detect-secrets-ubuntu\" publishLocation : \"pipeline\" - bash : | dsjson=$(cat $(Pipeline.Workspace)/detect-secrets.json) echo \"${dsjson}\" count=$(echo \"${dsjson}\" | jq -c -r '.results | length') if [ $count -gt 0 ]; then msg=\"Secrets were detected in code. ${count} file(s) affected.\" echo \"##vso[task.logissue type=error]${msg}\" echo \"##vso[task.complete result=Failed;]${msg}.\" else echo \"##vso[task.complete result=Succeeded;]No secrets detected.\" fi displayName : \"Analyzing detect-secrets results\" - job : windows displayName : \"detect-secrets on Windows agent\" pool : vmImage : windows-latest steps : - task : UsePythonVersion@0 displayName : \"Set Python 3 as default\" inputs : versionSpec : \"3\" addToPath : true architecture : \"x64\" - script : pip install detect-secrets==1.0.3 displayName : \"Install detect-secrets using pip\" - script : | detect-secrets --version detect-secrets scan --all-files --force-use-all-plugins > $(Pipeline.Workspace)/detect-secrets.json displayName : \"Run detect-secrets tool\" - task : PublishPipelineArtifact@1 displayName : \"Publish results in the Pipeline Artifact\" inputs : targetPath : \"$(Pipeline.Workspace)/detect-secrets.json\" artifact : \"detect-secrets-windows\" publishLocation : \"pipeline\" - pwsh : | $dsjson = Get-Content $(Pipeline.Workspace)/detect-secrets.json Write-Output $dsjson $dsObj = $dsjson | ConvertFrom-Json $count = ($dsObj.results | Get-Member -MemberType NoteProperty).Count if ($count -gt 0) { $msg = \"Secrets were detected in code. $count file(s) affected. \" Write-Host \"##vso[task.logissue type=error]$msg\" Write-Host \"##vso[task.complete result=Failed;]$msg\" } else { Write-Host \"##vso[task.complete result=Succeeded;]No secrets detected.\" } displayName : \"Analyzing detect-secrets results\"","title":"Azure DevOps Pipeline"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets/","text":"Credential Scanning Tool: detect-secrets Background The detect-secrets tool is an open source project that uses heuristics and rules to scan for a wide range of secrets. We can extend the tool with custom rules and heuristics via a simple Python plugin API . Unlike other credential scanning tools, detect-secrets does not attempt to check a project's entire git history when invoked, but instead scans the project's current state. This means that the tool runs quickly which makes it ideal for use in continuous integration pipelines. detect-secrets employs the concept of a \"baseline file\", i.e. a list of known secrets already present in the repository, and we can configure it to ignore any of these pre-existing secrets when running. This makes it easy to gradually introduce the tool into a pre-existing project. The baseline file also provides a simple and convenient way of handling false positives. We can white-list the false positive in the baseline file to ignore it on future invocations of the tool. Setup # install system dependencies: diff, jq, python3 (if on Linux-based OS) apt-get install -y diffutils jq python3 python3-pip # install system dependencies: diff, jq, python3 (if on Windows) winget install Python.Python.3 choco install diffutils jq -y # install the detect-secrets tool python3 -m pip install detect-secrets # run the tool to establish a list of known secrets # review this file thoroughly and check it into the repository detect-secrets scan > .secrets.baseline Pre-commit hook It is recommended to use detect-secrets in your development environment as a Git pre-commit hook. First, follow the pre-commit installation instructions to install the tool in your development environment. Then, add the following to your .pre-commit-config.yaml : repos : - repo : https://github.com/Yelp/detect-secrets rev : v1.4.0 hooks : - id : detect-secrets args : [ '--baseline' , '.secrets.baseline' ] Usage in CI pipelines # backup the list of known secrets cp .secrets.baseline .secrets.new # find all the secrets in the repository detect-secrets scan --baseline .secrets.new $( find . -type f ! -name '.secrets.*' ! -path '*/.git*' ) # if there is any difference between the known and newly detected secrets, break the build list_secrets () { jq -r '.results | keys[] as $key | \"\\($key),\\(.[$key] | .[] | .hashed_secret)\"' \" $1 \" | sort ; } if ! diff < ( list_secrets .secrets.baseline ) < ( list_secrets .secrets.new ) > & 2 ; then echo \"Detected new secrets in the repo\" > & 2 exit 1 fi","title":"Credential Scanning Tool: detect-secrets"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets/#credential-scanning-tool-detect-secrets","text":"","title":"Credential Scanning Tool: detect-secrets"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets/#background","text":"The detect-secrets tool is an open source project that uses heuristics and rules to scan for a wide range of secrets. We can extend the tool with custom rules and heuristics via a simple Python plugin API . Unlike other credential scanning tools, detect-secrets does not attempt to check a project's entire git history when invoked, but instead scans the project's current state. This means that the tool runs quickly which makes it ideal for use in continuous integration pipelines. detect-secrets employs the concept of a \"baseline file\", i.e. a list of known secrets already present in the repository, and we can configure it to ignore any of these pre-existing secrets when running. This makes it easy to gradually introduce the tool into a pre-existing project. The baseline file also provides a simple and convenient way of handling false positives. We can white-list the false positive in the baseline file to ignore it on future invocations of the tool.","title":"Background"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets/#setup","text":"# install system dependencies: diff, jq, python3 (if on Linux-based OS) apt-get install -y diffutils jq python3 python3-pip # install system dependencies: diff, jq, python3 (if on Windows) winget install Python.Python.3 choco install diffutils jq -y # install the detect-secrets tool python3 -m pip install detect-secrets # run the tool to establish a list of known secrets # review this file thoroughly and check it into the repository detect-secrets scan > .secrets.baseline","title":"Setup"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets/#pre-commit-hook","text":"It is recommended to use detect-secrets in your development environment as a Git pre-commit hook. First, follow the pre-commit installation instructions to install the tool in your development environment. Then, add the following to your .pre-commit-config.yaml : repos : - repo : https://github.com/Yelp/detect-secrets rev : v1.4.0 hooks : - id : detect-secrets args : [ '--baseline' , '.secrets.baseline' ]","title":"Pre-commit hook"},{"location":"continuous-integration/dev-sec-ops/secret-management/recipes/detect-secrets/#usage-in-ci-pipelines","text":"# backup the list of known secrets cp .secrets.baseline .secrets.new # find all the secrets in the repository detect-secrets scan --baseline .secrets.new $( find . -type f ! -name '.secrets.*' ! -path '*/.git*' ) # if there is any difference between the known and newly detected secrets, break the build list_secrets () { jq -r '.results | keys[] as $key | \"\\($key),\\(.[$key] | .[] | .hashed_secret)\"' \" $1 \" | sort ; } if ! diff < ( list_secrets .secrets.baseline ) < ( list_secrets .secrets.new ) > & 2 ; then echo \"Detected new secrets in the repo\" > & 2 exit 1 fi","title":"Usage in CI pipelines"},{"location":"continuous-integration/dev-sec-ops/static-code-analysis/static_code_analysis/","text":"Static Code Analysis Static code analysis is a method of detecting security issues by examining the source code of the application. Why Static Code Analysis Compared to code reviews, Static code analysis tools are more fast, accurate and through. As it operates on the source code itself, it is a very early indicator for issues, and coding errors found earlier are less costly to fix. Applying Static Code Analysis Static Code Analysis should be integrated in your build process. There are many tools available for Static Code Analysis, choose the ones that meet your programming language and development techniques. Static Code Analysis Frameworks and Tools SonarCloud - static code analysis with cloud-based software as a service product. OWASP Source code Analysis - OWASP recommendations for source code analysis tools Conclusion Static code analysis is essential to identify potential problems and security issues in the code. It allows you to detect bugs and security issues at an early stage.","title":"Static Code Analysis"},{"location":"continuous-integration/dev-sec-ops/static-code-analysis/static_code_analysis/#static-code-analysis","text":"Static code analysis is a method of detecting security issues by examining the source code of the application.","title":"Static Code Analysis"},{"location":"continuous-integration/dev-sec-ops/static-code-analysis/static_code_analysis/#why-static-code-analysis","text":"Compared to code reviews, Static code analysis tools are more fast, accurate and through. As it operates on the source code itself, it is a very early indicator for issues, and coding errors found earlier are less costly to fix.","title":"Why Static Code Analysis"},{"location":"continuous-integration/dev-sec-ops/static-code-analysis/static_code_analysis/#applying-static-code-analysis","text":"Static Code Analysis should be integrated in your build process. There are many tools available for Static Code Analysis, choose the ones that meet your programming language and development techniques.","title":"Applying Static Code Analysis"},{"location":"continuous-integration/dev-sec-ops/static-code-analysis/static_code_analysis/#static-code-analysis-frameworks-and-tools","text":"SonarCloud - static code analysis with cloud-based software as a service product. OWASP Source code Analysis - OWASP recommendations for source code analysis tools","title":"Static Code Analysis Frameworks and Tools"},{"location":"continuous-integration/dev-sec-ops/static-code-analysis/static_code_analysis/#conclusion","text":"Static code analysis is essential to identify potential problems and security issues in the code. It allows you to detect bugs and security issues at an early stage.","title":"Conclusion"},{"location":"continuous-integration/devcontainers/","text":"Reusing dev containers within a pipeline Given a repository with a local development container aka dev container that contains all the tooling required for development, would it make sense to reuse that container for running the tooling in the Continuous Integration pipelines? Options for building devcontainers within pipeline There are three ways to build devcontainers within pipeline: With GitHub - devcontainers/ci builds the container with the devcontainer.json . Example here: devcontainers/ci \u00b7 Getting Started . With GitHub - devcontainers/cli , which is the same as the above, but using the underlying CLI directly without tasks. Building the DockerFile with docker build . This option excludes all configuration/features specified within the devcontainer.json . Considered Options Run CI pipelines in native environment Run CI pipelines in the dev container via building image locally Run CI pipelines in the dev container with a container registry Here are below pros and cons for both approaches: Run CI pipelines in native environment Pros Cons Can use any pipeline tasks available Need to keep two sets of tooling and their versions in sync No container registry Can take some time to start, based on tools/dependencies required Agent will always be up to date with security patches The dev container should always be built within each run of the CI pipeline, to verify the changes within the branch haven't broken anything Run CI pipelines in the dev container without image caching Pros Cons Utilities scripts will work out of the box Need to rebuild the container for each run, given that there may be changes within the branch being built Rules used (for linting or unit tests) will be the same on the CI Not everything in the container is needed for the CI pipeline\u00b9 No surprise for the developers, local outputs (of linting for instance) will be the same in the CI Some pipeline tasks will not be available All tooling and their versions defined in a single place Building the image for each pipeline run is slow\u00b2 Tools/dependencies are already present The dev container is being tested to include all new tooling in addition to not being broken \u00b9: container size can be reduces by exporting the layer that contains only the tooling needed for the CI pipeline \u00b2: could be mitigated via adding image caching without using a container registry Run CI pipelines in the dev container with image registry Pros Cons Utilities scripts will work out of the box Need to rebuild the container for each run, given that there may be changes within the branch being built No surprise for the developers, local outputs (of linting for instance) will be the same in the CI Not everything in the container is needed for the CI pipeline\u00b9 Rules used (for linting or unit tests) will be the same on the CI Some pipeline tasks will not be available \u00b2 All tooling and their versions defined in a single place Require access to a container registry to host the container within the pipeline\u00b3 Tools/dependencies are already present The dev container is being tested to include all new tooling in addition to not being broken Publishing the container built from devcontainer.json allows you to reference it in the cacheFrom in devcontainer.json (see docs ). By doing this, VS Code will use the published image as a layer cache when building \u00b9: container size can be reduces by exporting the layer that contains only the tooling needed for the CI pipeline. This would require building the image without tasks \u00b2: using container jobs in AzDO you can use all tasks (as far as I can tell). Reference: Dockerizing DevOps V2 - AzDO container jobs - DEV Community \u00b3: within GH actions, the default Github Actions token can be used for accessing GHCR without setting up separate registry, see the example below. NOTE: This does not build the Dockerfile together with the devcontainer.json - uses : whoan/docker-build-with-cache-action@v5 id : cache with : username : $GITHUB_ACTOR password : \"${{ secrets.GITHUB_TOKEN }}\" registry : docker.pkg.github.com image_name : devcontainer dockerfile : .devcontainer/Dockerfile","title":"Reusing dev containers within a pipeline"},{"location":"continuous-integration/devcontainers/#reusing-dev-containers-within-a-pipeline","text":"Given a repository with a local development container aka dev container that contains all the tooling required for development, would it make sense to reuse that container for running the tooling in the Continuous Integration pipelines?","title":"Reusing dev containers within a pipeline"},{"location":"continuous-integration/devcontainers/#options-for-building-devcontainers-within-pipeline","text":"There are three ways to build devcontainers within pipeline: With GitHub - devcontainers/ci builds the container with the devcontainer.json . Example here: devcontainers/ci \u00b7 Getting Started . With GitHub - devcontainers/cli , which is the same as the above, but using the underlying CLI directly without tasks. Building the DockerFile with docker build . This option excludes all configuration/features specified within the devcontainer.json .","title":"Options for building devcontainers within pipeline"},{"location":"continuous-integration/devcontainers/#considered-options","text":"Run CI pipelines in native environment Run CI pipelines in the dev container via building image locally Run CI pipelines in the dev container with a container registry Here are below pros and cons for both approaches:","title":"Considered Options"},{"location":"continuous-integration/devcontainers/#run-ci-pipelines-in-native-environment","text":"Pros Cons Can use any pipeline tasks available Need to keep two sets of tooling and their versions in sync No container registry Can take some time to start, based on tools/dependencies required Agent will always be up to date with security patches The dev container should always be built within each run of the CI pipeline, to verify the changes within the branch haven't broken anything","title":"Run CI pipelines in native environment"},{"location":"continuous-integration/devcontainers/#run-ci-pipelines-in-the-dev-container-without-image-caching","text":"Pros Cons Utilities scripts will work out of the box Need to rebuild the container for each run, given that there may be changes within the branch being built Rules used (for linting or unit tests) will be the same on the CI Not everything in the container is needed for the CI pipeline\u00b9 No surprise for the developers, local outputs (of linting for instance) will be the same in the CI Some pipeline tasks will not be available All tooling and their versions defined in a single place Building the image for each pipeline run is slow\u00b2 Tools/dependencies are already present The dev container is being tested to include all new tooling in addition to not being broken \u00b9: container size can be reduces by exporting the layer that contains only the tooling needed for the CI pipeline \u00b2: could be mitigated via adding image caching without using a container registry","title":"Run CI pipelines in the dev container without image caching"},{"location":"continuous-integration/devcontainers/#run-ci-pipelines-in-the-dev-container-with-image-registry","text":"Pros Cons Utilities scripts will work out of the box Need to rebuild the container for each run, given that there may be changes within the branch being built No surprise for the developers, local outputs (of linting for instance) will be the same in the CI Not everything in the container is needed for the CI pipeline\u00b9 Rules used (for linting or unit tests) will be the same on the CI Some pipeline tasks will not be available \u00b2 All tooling and their versions defined in a single place Require access to a container registry to host the container within the pipeline\u00b3 Tools/dependencies are already present The dev container is being tested to include all new tooling in addition to not being broken Publishing the container built from devcontainer.json allows you to reference it in the cacheFrom in devcontainer.json (see docs ). By doing this, VS Code will use the published image as a layer cache when building \u00b9: container size can be reduces by exporting the layer that contains only the tooling needed for the CI pipeline. This would require building the image without tasks \u00b2: using container jobs in AzDO you can use all tasks (as far as I can tell). Reference: Dockerizing DevOps V2 - AzDO container jobs - DEV Community \u00b3: within GH actions, the default Github Actions token can be used for accessing GHCR without setting up separate registry, see the example below. NOTE: This does not build the Dockerfile together with the devcontainer.json - uses : whoan/docker-build-with-cache-action@v5 id : cache with : username : $GITHUB_ACTOR password : \"${{ secrets.GITHUB_TOKEN }}\" registry : docker.pkg.github.com image_name : devcontainer dockerfile : .devcontainer/Dockerfile","title":"Run CI pipelines in the dev container with image registry"},{"location":"continuous-integration/markdown-linting/","text":"CI Pipeline for better documentation Introduction Most projects start with spikes, where developers and analysts produce lots of documentation. Sometimes, these documents don't have a standard and each team member writes them accordingly with their preference. Add to that the time a reviewer will spend confirming grammar, searching for typos or non-inclusive language. This pipeline helps address that! The Pipeline The pipeline uses the following npm modules: markdownlint : add standardization using rules markdown-link-check : check the links in the documentation and report broken ones write-good : linter for English prose We have been using this pipeline for more than one year in different engagements and always received great feedback from the customers! How does it work To start using this pipeline: Download the files from this repository Unzip the folders and files to your repository root if the repository is empty - if it's not brand new, copy the files and make the required adjustments: - check .azdo so it matches your repository standard - check package.json so you don't overwrite one you already have in the process. Also update the file if you changed the name of the .azdo folder. Create the pipeline in Azure DevOps or GitHub References Markdown Code Reviews in the Code With Engineering Playbook","title":"CI Pipeline for better documentation"},{"location":"continuous-integration/markdown-linting/#ci-pipeline-for-better-documentation","text":"","title":"CI Pipeline for better documentation"},{"location":"continuous-integration/markdown-linting/#introduction","text":"Most projects start with spikes, where developers and analysts produce lots of documentation. Sometimes, these documents don't have a standard and each team member writes them accordingly with their preference. Add to that the time a reviewer will spend confirming grammar, searching for typos or non-inclusive language. This pipeline helps address that!","title":"Introduction"},{"location":"continuous-integration/markdown-linting/#the-pipeline","text":"The pipeline uses the following npm modules: markdownlint : add standardization using rules markdown-link-check : check the links in the documentation and report broken ones write-good : linter for English prose We have been using this pipeline for more than one year in different engagements and always received great feedback from the customers!","title":"The Pipeline"},{"location":"continuous-integration/markdown-linting/#how-does-it-work","text":"To start using this pipeline: Download the files from this repository Unzip the folders and files to your repository root if the repository is empty - if it's not brand new, copy the files and make the required adjustments: - check .azdo so it matches your repository standard - check package.json so you don't overwrite one you already have in the process. Also update the file if you changed the name of the .azdo folder. Create the pipeline in Azure DevOps or GitHub","title":"How does it work"},{"location":"continuous-integration/markdown-linting/#references","text":"Markdown Code Reviews in the Code With Engineering Playbook","title":"References"},{"location":"design/readme/","text":"Design Projetar software de forma eficaz \u00e9 desafiador. A ISE coletou uma s\u00e9rie de pr\u00e1ticas que consideramos \u00fateis no processo de design. Isso abrange n\u00e3o apenas o design t\u00e9cnico de software, mas tamb\u00e9m o design de arquitetura e a coleta de requisitos n\u00e3o funcionais para novos projetos. Objetivos (Metas) Fornecer recomenda\u00e7\u00f5es sobre como projetar software para manutenibilidade, facilidade de extens\u00e3o, conformidade com as melhores pr\u00e1ticas e sustentabilidade. Referenciar ou definir processos ou listas de verifica\u00e7\u00e3o para ajudar a garantir software bem projetado. Consolidar e apontar para fontes de refer\u00eancia (guias, reposit\u00f3rios, artigos) que podem acelerar o processo de aprendizado. Se\u00e7\u00f5es (Se\u00e7\u00f5es) Tipos de Diagrama Padr\u00f5es de Design Revis\u00f5es de Design Orienta\u00e7\u00e3o de Requisitos N\u00e3o Funcionais Engenharia de Software Sustent\u00e1vel Receitas (Receitas) Receitas de Design Exemplos de C\u00f3digo (Exemplos de C\u00f3digo) Estrutura de Pasta Estrutura de Pasta para Reposit\u00f3rio Python Modelos de Projeto Rust Atix Web, Diesel ORM, Test Containers, Arquitetura de Cebola Python Flask, SQLAlchemy ORM, Test Containers, Arquitetura de Cebola","title":"Design"},{"location":"design/readme/#design","text":"Projetar software de forma eficaz \u00e9 desafiador. A ISE coletou uma s\u00e9rie de pr\u00e1ticas que consideramos \u00fateis no processo de design. Isso abrange n\u00e3o apenas o design t\u00e9cnico de software, mas tamb\u00e9m o design de arquitetura e a coleta de requisitos n\u00e3o funcionais para novos projetos.","title":"Design"},{"location":"design/readme/#objetivos-metas","text":"Fornecer recomenda\u00e7\u00f5es sobre como projetar software para manutenibilidade, facilidade de extens\u00e3o, conformidade com as melhores pr\u00e1ticas e sustentabilidade. Referenciar ou definir processos ou listas de verifica\u00e7\u00e3o para ajudar a garantir software bem projetado. Consolidar e apontar para fontes de refer\u00eancia (guias, reposit\u00f3rios, artigos) que podem acelerar o processo de aprendizado.","title":"Objetivos (Metas)"},{"location":"design/readme/#secoes-secoes","text":"Tipos de Diagrama Padr\u00f5es de Design Revis\u00f5es de Design Orienta\u00e7\u00e3o de Requisitos N\u00e3o Funcionais Engenharia de Software Sustent\u00e1vel","title":"Se\u00e7\u00f5es (Se\u00e7\u00f5es)"},{"location":"design/readme/#receitas-receitas","text":"Receitas de Design","title":"Receitas (Receitas)"},{"location":"design/readme/#exemplos-de-codigo-exemplos-de-codigo","text":"Estrutura de Pasta Estrutura de Pasta para Reposit\u00f3rio Python Modelos de Projeto Rust Atix Web, Diesel ORM, Test Containers, Arquitetura de Cebola Python Flask, SQLAlchemy ORM, Test Containers, Arquitetura de Cebola","title":"Exemplos de C\u00f3digo (Exemplos de C\u00f3digo)"},{"location":"design/design-patterns/","text":"Padr\u00f5es de Design (Design Patterns) A se\u00e7\u00e3o de padr\u00f5es de design recomenda padr\u00f5es de design de software e arquitetura. Esta se\u00e7\u00e3o fornece uma lista selecionada de padr\u00f5es comumente usados de fontes confi\u00e1veis. Em vez de duplicar ou substituir as fontes citadas, esta se\u00e7\u00e3o tem como objetivo complement\u00e1-las com sugest\u00f5es, orienta\u00e7\u00f5es e aprendizados com base em experi\u00eancias em primeira m\u00e3o. Subse\u00e7\u00f5es Orienta\u00e7\u00e3o para Design de Dados Pesados Refer\u00eancia de Design Orientado a Objetos Refer\u00eancia para Design de Sistemas Distribu\u00eddos Orienta\u00e7\u00e3o para Design de API REST Orienta\u00e7\u00e3o para Design de Recursos de Nuvem Orienta\u00e7\u00e3o para Arquitetura de Rede para Azure Orienta\u00e7\u00e3o para Arquitetura de Rede H\u00edbrida","title":"Padr\u00f5es de Design (Design Patterns)"},{"location":"design/design-patterns/#padroes-de-design-design-patterns","text":"A se\u00e7\u00e3o de padr\u00f5es de design recomenda padr\u00f5es de design de software e arquitetura. Esta se\u00e7\u00e3o fornece uma lista selecionada de padr\u00f5es comumente usados de fontes confi\u00e1veis. Em vez de duplicar ou substituir as fontes citadas, esta se\u00e7\u00e3o tem como objetivo complement\u00e1-las com sugest\u00f5es, orienta\u00e7\u00f5es e aprendizados com base em experi\u00eancias em primeira m\u00e3o.","title":"Padr\u00f5es de Design (Design Patterns)"},{"location":"design/design-patterns/#subsecoes","text":"Orienta\u00e7\u00e3o para Design de Dados Pesados Refer\u00eancia de Design Orientado a Objetos Refer\u00eancia para Design de Sistemas Distribu\u00eddos Orienta\u00e7\u00e3o para Design de API REST Orienta\u00e7\u00e3o para Design de Recursos de Nuvem Orienta\u00e7\u00e3o para Arquitetura de Rede para Azure Orienta\u00e7\u00e3o para Arquitetura de Rede H\u00edbrida","title":"Subse\u00e7\u00f5es"},{"location":"design/design-patterns/cloud-resource-design-guidance/","text":"Orienta\u00e7\u00e3o para Design de Recursos na Nuvem \u00c0 medida que o uso de nuvem aumenta, considera\u00e7\u00f5es sobre o design de assinaturas, grupos de gerenciamento e conven\u00e7\u00f5es de nomea\u00e7\u00e3o/marca\u00e7\u00e3o de recursos t\u00eam um impacto na governan\u00e7a, na gest\u00e3o de opera\u00e7\u00f5es e nos padr\u00f5es de ado\u00e7\u00e3o. NOTA: Sempre trabalhe com as partes interessadas relevantes para garantir que a introdu\u00e7\u00e3o de novos padr\u00f5es proporcione o valor pretendido. Ao trabalhar em um ambiente de nuvem existente, \u00e9 importante entender quaisquer padr\u00f5es atuais e como eles s\u00e3o usados antes de fazer uma altera\u00e7\u00e3o neles. Refer\u00eancias As seguintes refer\u00eancias podem ser usadas para entender as melhores pr\u00e1ticas mais recentes na organiza\u00e7\u00e3o de recursos na nuvem: Organiza\u00e7\u00e3o de Assinaturas Guia de Decis\u00e3o para Marca\u00e7\u00e3o de Recursos Conven\u00e7\u00f5es de Nomea\u00e7\u00e3o de Recursos Abrevia\u00e7\u00f5es Recomendadas para Recursos Azure Organiza\u00e7\u00e3o de Cargas de Trabalho de Desenvolvimento/Teste/Produ\u00e7\u00e3o Ferramentas Ferramenta de Nomenclatura de Recursos do Azure","title":"Orienta\u00e7\u00e3o para Design de Recursos na Nuvem"},{"location":"design/design-patterns/cloud-resource-design-guidance/#orientacao-para-design-de-recursos-na-nuvem","text":"\u00c0 medida que o uso de nuvem aumenta, considera\u00e7\u00f5es sobre o design de assinaturas, grupos de gerenciamento e conven\u00e7\u00f5es de nomea\u00e7\u00e3o/marca\u00e7\u00e3o de recursos t\u00eam um impacto na governan\u00e7a, na gest\u00e3o de opera\u00e7\u00f5es e nos padr\u00f5es de ado\u00e7\u00e3o. NOTA: Sempre trabalhe com as partes interessadas relevantes para garantir que a introdu\u00e7\u00e3o de novos padr\u00f5es proporcione o valor pretendido. Ao trabalhar em um ambiente de nuvem existente, \u00e9 importante entender quaisquer padr\u00f5es atuais e como eles s\u00e3o usados antes de fazer uma altera\u00e7\u00e3o neles.","title":"Orienta\u00e7\u00e3o para Design de Recursos na Nuvem"},{"location":"design/design-patterns/cloud-resource-design-guidance/#referencias","text":"As seguintes refer\u00eancias podem ser usadas para entender as melhores pr\u00e1ticas mais recentes na organiza\u00e7\u00e3o de recursos na nuvem: Organiza\u00e7\u00e3o de Assinaturas Guia de Decis\u00e3o para Marca\u00e7\u00e3o de Recursos Conven\u00e7\u00f5es de Nomea\u00e7\u00e3o de Recursos Abrevia\u00e7\u00f5es Recomendadas para Recursos Azure Organiza\u00e7\u00e3o de Cargas de Trabalho de Desenvolvimento/Teste/Produ\u00e7\u00e3o","title":"Refer\u00eancias"},{"location":"design/design-patterns/cloud-resource-design-guidance/#ferramentas","text":"Ferramenta de Nomenclatura de Recursos do Azure","title":"Ferramentas"},{"location":"design/design-patterns/data-heavy-design-guidance/","text":"Fundamentos de Dados e DataOps A maioria dos projetos envolve algum tipo de armazenamento de dados, processamento de dados e DataOps. Para esses projetos, assim como para todos os projetos, seguimos as diretrizes gerais apresentadas em outras se\u00e7\u00f5es sobre seguran\u00e7a, testes, observabilidade, CI/CD etc. Objetivo O objetivo desta se\u00e7\u00e3o \u00e9 descrever brevemente como aplicar os fundamentos a projetos de dados pesados ou a partes do projeto. Isolamento Por favor, tenha cuidado com os n\u00edveis de isolamento que voc\u00ea est\u00e1 usando. Mesmo com um banco de dados que oferece serializabilidade, \u00e9 poss\u00edvel que, dentro de uma transa\u00e7\u00e3o ou conex\u00e3o, voc\u00ea esteja usando um n\u00edvel de isolamento mais baixo do que o banco de dados oferece. Em particular, a leitura n\u00e3o confirmada (ou consist\u00eancia eventual) pode ter muitos efeitos colaterais imprevis\u00edveis e introduzir bugs dif\u00edceis de entender. Sistemas eventualmente consistentes devem ser tratados como \u00faltimo recurso para atender aos requisitos de escalabilidade; o uso de lotes, fragmenta\u00e7\u00e3o e armazenamento em cache s\u00e3o todas solu\u00e7\u00f5es recomendadas para aumentar a escalabilidade. Se nenhuma dessas op\u00e7\u00f5es for vi\u00e1vel, considere avaliar os bancos de dados \"New SQL\" como CockroachDB ou TiDB, antes de utilizar uma op\u00e7\u00e3o que dependa da consist\u00eancia eventual. Existem outros n\u00edveis de isolamento, fora dos n\u00edveis de isolamento mencionados no link acima. Alguns deles t\u00eam nuances diferentes dos 4 principais n\u00edveis e podem ser dif\u00edceis de comparar. Isolamento de Snapshot, serializa\u00e7\u00e3o estrita, \"ler o pr\u00f3prio escrito\", leituras monot\u00f4nicas, staleness limitada, consist\u00eancia causal e lineariza\u00e7\u00e3o s\u00e3o todos outros termos que voc\u00ea pode explorar para aprender mais sobre o assunto. Controle de Concorr\u00eancia Seus sistemas devem (quase sempre) aproveitar alguma forma de controle de concorr\u00eancia, para garantir a corre\u00e7\u00e3o entre solicita\u00e7\u00f5es concorrentes e evitar corridas de dados. As duas formas de controle de concorr\u00eancia s\u00e3o pessimista e otimista . Uma transa\u00e7\u00e3o pessimista envolve uma primeira solicita\u00e7\u00e3o para \"bloquear os dados\" e uma segunda solicita\u00e7\u00e3o para escrever os dados. Entre essas solicita\u00e7\u00f5es, nenhuma outra solicita\u00e7\u00e3o que acesse esses dados ter\u00e1 sucesso. Consulte 2 Phase Locking (tamb\u00e9m conhecido como 2 Phase Commit) para obter mais informa\u00e7\u00f5es. A abordagem (mais) recomendada \u00e9 a concorr\u00eancia otimista , onde um usu\u00e1rio pode ler o objeto em uma vers\u00e3o espec\u00edfica e atualizar o objeto apenas se ele n\u00e3o tiver sido alterado. Isso \u00e9 normalmente feito via Cabe\u00e7alho Etag . Uma maneira simples de fazer isso no lado do banco de dados \u00e9 incrementar um n\u00famero de vers\u00e3o em cada atualiza\u00e7\u00e3o. Isso pode ser feito em uma \u00fanica instru\u00e7\u00e3o executada da seguinte forma: AVISO: o c\u00f3digo abaixo n\u00e3o funcionar\u00e1 quando estiver usando um n\u00edvel de isolamento igual ou inferior ao \"read uncommitted\" (consist\u00eancia eventual). -- Trate isso como c\u00f3digo fict\u00edcio e ajuste conforme necess\u00e1rio. UPDATE < nome_da_tabela > SET campo1 = valor1 , ..., campoN = valorN , versao = $ nova_versao WHERE ID = $ id AND versao = $ versao Camadas de Dados (Qualidade de Dados) Desenvolva um entendimento comum da qualidade de seus conjuntos de dados, para que todos entendam a qualidade dos dados, os casos de uso esperados e as limita\u00e7\u00f5es. Um modelo comum de qualidade de dados \u00e9 Bronze , Silver , Gold Bronze: Esta \u00e9 uma \u00e1rea de desembarque para seus conjuntos de dados brutos com pouca ou nenhuma transforma\u00e7\u00e3o de dados aplicada, e, portanto, s\u00e3o otimizados para grava\u00e7\u00f5es / ingest\u00e3o. Trate esses conjuntos de dados como um armazenamento imut\u00e1vel, apenas para anexar. Silver: S\u00e3o conjuntos de dados limpos e semi-processados. Eles se conformam a um esquema conhecido e a invariantes de dados predefinidos e podem ter mais augmenta\u00e7\u00e3o de dados aplicada. Normalmente, s\u00e3o usados por cientistas de dados. Gold: S\u00e3o conjuntos de dados altamente processados e altamente otimizados para leitura, principalmente para o consumo de usu\u00e1rios de neg\u00f3cios. Normalmente, s\u00e3o estruturados em suas tabelas padr\u00e3o de fatos e dimens\u00f5es. Divida seu data lake em tr\u00eas grandes \u00e1reas contendo seus conjuntos de dados Bronze, Silver e Gold. Nota: \u00c1reas de armazenamento adicionais para dados malformados, dados intermedi\u00e1rios (sandbox) e bibliotecas/pacotes/bin\u00e1rios tamb\u00e9m s\u00e3o \u00fateis ao projetar a organiza\u00e7\u00e3o do armazenamento. Valida\u00e7\u00e3o de Dados Valide os dados no in\u00edcio do seu pipeline Adicione valida\u00e7\u00e3o de dados entre os conjuntos de dados Bronze e Silver. Validando no in\u00edcio do seu pipeline, voc\u00ea pode garantir que todos os conjuntos de dados estejam em conformidade com um esquema espec\u00edfico e invariantes de dados conhecidos. Isso tamb\u00e9m pode potencialmente evitar falhas no pipeline de dados em caso de altera\u00e7\u00f5es inesperadas nos dados de entrada. Os dados que n\u00e3o passam por esta etapa de valida\u00e7\u00e3o podem ser encaminhados para um registro dedicado de dados malformados para fins de diagn\u00f3stico. Pode ser tentador adicionar valida\u00e7\u00e3o antes de desembarcar na \u00e1rea Bronze do seu data lake. Isso geralmente n\u00e3o \u00e9 recomendado. Os conjuntos de dados Bronze existem para garantir que voc\u00ea tenha uma c\u00f3pia o mais pr\u00f3xima poss\u00edvel dos dados do sistema de origem. Isso pode ser usado para repetir o pipeline de dados tanto para testes (ou seja, testar a l\u00f3gica de valida\u00e7\u00e3o de dados) quanto para fins de recupera\u00e7\u00e3o de dados (ou seja, a corrup\u00e7\u00e3o de dados \u00e9 introduzida devido a um erro no c\u00f3digo de transforma\u00e7\u00e3o de dados e, portanto, o pipeline precisa ser repetido). Pipelines de Dados Idempotentes Torne seus pipelines de dados reutiliz\u00e1veis e idempotentes Conjuntos de dados Silver e Gold podem ser corrompidos por v\u00e1rios motivos, como bugs n\u00e3o intencionais, altera\u00e7\u00f5es inesperadas nos dados de entrada e outros. Ao tornar os pipelines de dados reutiliz\u00e1veis e idempotentes, voc\u00ea pode se recuperar desse estado por meio da implanta\u00e7\u00e3o de corre\u00e7\u00f5es de c\u00f3digo e repeti\u00e7\u00e3o dos pipelines de dados. - A idempot\u00eancia tamb\u00e9m garante que a duplica\u00e7\u00e3o de dados seja mitigada ao repetir seus pipelines de dados. Testes Garanta que o c\u00f3digo de transforma\u00e7\u00e3o de dados seja test\u00e1vel Abstrair o c\u00f3digo de transforma\u00e7\u00e3o de dados do c\u00f3digo de acesso aos dados \u00e9 fundamental para garantir que testes unit\u00e1rios possam ser escritos contra a l\u00f3gica de transforma\u00e7\u00e3o de dados. Um exemplo disso \u00e9 mover o c\u00f3digo de transforma\u00e7\u00e3o de dados de cadernos para pacotes. Embora seja poss\u00edvel executar testes em cadernos, ao extrair o c\u00f3digo para pacotes, voc\u00ea aumenta a produtividade do desenvolvedor, aumentando a velocidade do ciclo de feedback. CI/CD, Controle de Origem e Revis\u00f5es de C\u00f3digo Todos os artefatos necess\u00e1rios para construir o pipeline de dados do zero devem estar sob controle de origem. Isso inclui artefatos de infraestrutura como c\u00f3digo, objetos de banco de dados (defini\u00e7\u00f5es de esquema, fun\u00e7\u00f5es, procedimentos armazenados etc.), dados de refer\u00eancia/aplica\u00e7\u00e3o, defini\u00e7\u00f5es de pipeline de dados e l\u00f3gica de valida\u00e7\u00e3o e transforma\u00e7\u00e3o de dados. Quaisquer novos artefatos (c\u00f3digo) introduzidos no reposit\u00f3rio devem passar por revis\u00f5es de c\u00f3digo, tanto autom\u00e1ticas (verifica\u00e7\u00e3o de lint, verifica\u00e7\u00e3o de credenciais etc.) quanto revis\u00f5es por pares. Deve haver um processo seguro e repet\u00edvel (CI/CD) para mover as altera\u00e7\u00f5es por meio de desenvolvimento, teste e, finalmente, produ\u00e7\u00e3o. Seguran\u00e7a e Configura\u00e7\u00e3o Mantenha um local central e seguro para configura\u00e7\u00f5es sens\u00edveis, como strings de conex\u00e3o de banco de dados, que podem ser acessadas pelos servi\u00e7os apropriados dentro do ambiente espec\u00edfico. No Azure, isso geralmente \u00e9 resolvido por meio da seguran\u00e7a de segredos em um Key Vault por ambiente e, em seguida, os servi\u00e7os relevantes consultam o KeyVault para obter a configura\u00e7\u00e3o. Observabilidade Monitore infraestrutura, pipelines e dados Uma solu\u00e7\u00e3o de monitoramento adequada deve estar em vigor para garantir que as falhas sejam identificadas, diagnosticadas e abordadas de forma oportuna. Al\u00e9m da infraestrutura base e das execu\u00e7\u00f5es de pipelines, os dados tamb\u00e9m devem ser monitorados. Uma \u00e1rea comum que deve ter monitoramento de dados \u00e9 o registro de dados malformados. Amostras de Tecnologia de Ponta a Ponta e Azure O reposit\u00f3rio DataOps for the Modern Data Warehouse cont\u00e9m amostras de tecnologia espec\u00edficas e de ponta a ponta sobre como implementar o DataOps no Azure. Imagem: CI/CD para pipelines de dados no Azure - do reposit\u00f3rio DataOps para o Modern Data Warehouse","title":"Fundamentos de Dados e DataOps"},{"location":"design/design-patterns/data-heavy-design-guidance/#fundamentos-de-dados-e-dataops","text":"A maioria dos projetos envolve algum tipo de armazenamento de dados, processamento de dados e DataOps. Para esses projetos, assim como para todos os projetos, seguimos as diretrizes gerais apresentadas em outras se\u00e7\u00f5es sobre seguran\u00e7a, testes, observabilidade, CI/CD etc.","title":"Fundamentos de Dados e DataOps"},{"location":"design/design-patterns/data-heavy-design-guidance/#objetivo","text":"O objetivo desta se\u00e7\u00e3o \u00e9 descrever brevemente como aplicar os fundamentos a projetos de dados pesados ou a partes do projeto.","title":"Objetivo"},{"location":"design/design-patterns/data-heavy-design-guidance/#isolamento","text":"Por favor, tenha cuidado com os n\u00edveis de isolamento que voc\u00ea est\u00e1 usando. Mesmo com um banco de dados que oferece serializabilidade, \u00e9 poss\u00edvel que, dentro de uma transa\u00e7\u00e3o ou conex\u00e3o, voc\u00ea esteja usando um n\u00edvel de isolamento mais baixo do que o banco de dados oferece. Em particular, a leitura n\u00e3o confirmada (ou consist\u00eancia eventual) pode ter muitos efeitos colaterais imprevis\u00edveis e introduzir bugs dif\u00edceis de entender. Sistemas eventualmente consistentes devem ser tratados como \u00faltimo recurso para atender aos requisitos de escalabilidade; o uso de lotes, fragmenta\u00e7\u00e3o e armazenamento em cache s\u00e3o todas solu\u00e7\u00f5es recomendadas para aumentar a escalabilidade. Se nenhuma dessas op\u00e7\u00f5es for vi\u00e1vel, considere avaliar os bancos de dados \"New SQL\" como CockroachDB ou TiDB, antes de utilizar uma op\u00e7\u00e3o que dependa da consist\u00eancia eventual. Existem outros n\u00edveis de isolamento, fora dos n\u00edveis de isolamento mencionados no link acima. Alguns deles t\u00eam nuances diferentes dos 4 principais n\u00edveis e podem ser dif\u00edceis de comparar. Isolamento de Snapshot, serializa\u00e7\u00e3o estrita, \"ler o pr\u00f3prio escrito\", leituras monot\u00f4nicas, staleness limitada, consist\u00eancia causal e lineariza\u00e7\u00e3o s\u00e3o todos outros termos que voc\u00ea pode explorar para aprender mais sobre o assunto.","title":"Isolamento"},{"location":"design/design-patterns/data-heavy-design-guidance/#controle-de-concorrencia","text":"Seus sistemas devem (quase sempre) aproveitar alguma forma de controle de concorr\u00eancia, para garantir a corre\u00e7\u00e3o entre solicita\u00e7\u00f5es concorrentes e evitar corridas de dados. As duas formas de controle de concorr\u00eancia s\u00e3o pessimista e otimista . Uma transa\u00e7\u00e3o pessimista envolve uma primeira solicita\u00e7\u00e3o para \"bloquear os dados\" e uma segunda solicita\u00e7\u00e3o para escrever os dados. Entre essas solicita\u00e7\u00f5es, nenhuma outra solicita\u00e7\u00e3o que acesse esses dados ter\u00e1 sucesso. Consulte 2 Phase Locking (tamb\u00e9m conhecido como 2 Phase Commit) para obter mais informa\u00e7\u00f5es. A abordagem (mais) recomendada \u00e9 a concorr\u00eancia otimista , onde um usu\u00e1rio pode ler o objeto em uma vers\u00e3o espec\u00edfica e atualizar o objeto apenas se ele n\u00e3o tiver sido alterado. Isso \u00e9 normalmente feito via Cabe\u00e7alho Etag . Uma maneira simples de fazer isso no lado do banco de dados \u00e9 incrementar um n\u00famero de vers\u00e3o em cada atualiza\u00e7\u00e3o. Isso pode ser feito em uma \u00fanica instru\u00e7\u00e3o executada da seguinte forma: AVISO: o c\u00f3digo abaixo n\u00e3o funcionar\u00e1 quando estiver usando um n\u00edvel de isolamento igual ou inferior ao \"read uncommitted\" (consist\u00eancia eventual). -- Trate isso como c\u00f3digo fict\u00edcio e ajuste conforme necess\u00e1rio. UPDATE < nome_da_tabela > SET campo1 = valor1 , ..., campoN = valorN , versao = $ nova_versao WHERE ID = $ id AND versao = $ versao","title":"Controle de Concorr\u00eancia"},{"location":"design/design-patterns/data-heavy-design-guidance/#camadas-de-dados-qualidade-de-dados","text":"Desenvolva um entendimento comum da qualidade de seus conjuntos de dados, para que todos entendam a qualidade dos dados, os casos de uso esperados e as limita\u00e7\u00f5es. Um modelo comum de qualidade de dados \u00e9 Bronze , Silver , Gold Bronze: Esta \u00e9 uma \u00e1rea de desembarque para seus conjuntos de dados brutos com pouca ou nenhuma transforma\u00e7\u00e3o de dados aplicada, e, portanto, s\u00e3o otimizados para grava\u00e7\u00f5es / ingest\u00e3o. Trate esses conjuntos de dados como um armazenamento imut\u00e1vel, apenas para anexar. Silver: S\u00e3o conjuntos de dados limpos e semi-processados. Eles se conformam a um esquema conhecido e a invariantes de dados predefinidos e podem ter mais augmenta\u00e7\u00e3o de dados aplicada. Normalmente, s\u00e3o usados por cientistas de dados. Gold: S\u00e3o conjuntos de dados altamente processados e altamente otimizados para leitura, principalmente para o consumo de usu\u00e1rios de neg\u00f3cios. Normalmente, s\u00e3o estruturados em suas tabelas padr\u00e3o de fatos e dimens\u00f5es. Divida seu data lake em tr\u00eas grandes \u00e1reas contendo seus conjuntos de dados Bronze, Silver e Gold. Nota: \u00c1reas de armazenamento adicionais para dados malformados, dados intermedi\u00e1rios (sandbox) e bibliotecas/pacotes/bin\u00e1rios tamb\u00e9m s\u00e3o \u00fateis ao projetar a organiza\u00e7\u00e3o do armazenamento.","title":"Camadas de Dados (Qualidade de Dados)"},{"location":"design/design-patterns/data-heavy-design-guidance/#validacao-de-dados","text":"Valide os dados no in\u00edcio do seu pipeline Adicione valida\u00e7\u00e3o de dados entre os conjuntos de dados Bronze e Silver. Validando no in\u00edcio do seu pipeline, voc\u00ea pode garantir que todos os conjuntos de dados estejam em conformidade com um esquema espec\u00edfico e invariantes de dados conhecidos. Isso tamb\u00e9m pode potencialmente evitar falhas no pipeline de dados em caso de altera\u00e7\u00f5es inesperadas nos dados de entrada. Os dados que n\u00e3o passam por esta etapa de valida\u00e7\u00e3o podem ser encaminhados para um registro dedicado de dados malformados para fins de diagn\u00f3stico. Pode ser tentador adicionar valida\u00e7\u00e3o antes de desembarcar na \u00e1rea Bronze do seu data lake. Isso geralmente n\u00e3o \u00e9 recomendado. Os conjuntos de dados Bronze existem para garantir que voc\u00ea tenha uma c\u00f3pia o mais pr\u00f3xima poss\u00edvel dos dados do sistema de origem. Isso pode ser usado para repetir o pipeline de dados tanto para testes (ou seja, testar a l\u00f3gica de valida\u00e7\u00e3o de dados) quanto para fins de recupera\u00e7\u00e3o de dados (ou seja, a corrup\u00e7\u00e3o de dados \u00e9 introduzida devido a um erro no c\u00f3digo de transforma\u00e7\u00e3o de dados e, portanto, o pipeline precisa ser repetido).","title":"Valida\u00e7\u00e3o de Dados"},{"location":"design/design-patterns/data-heavy-design-guidance/#pipelines-de-dados-idempotentes","text":"Torne seus pipelines de dados reutiliz\u00e1veis e idempotentes Conjuntos de dados Silver e Gold podem ser corrompidos por v\u00e1rios motivos, como bugs n\u00e3o intencionais, altera\u00e7\u00f5es inesperadas nos dados de entrada e outros. Ao tornar os pipelines de dados reutiliz\u00e1veis e idempotentes, voc\u00ea pode se recuperar desse estado por meio da implanta\u00e7\u00e3o de corre\u00e7\u00f5es de c\u00f3digo e repeti\u00e7\u00e3o dos pipelines de dados. - A idempot\u00eancia tamb\u00e9m garante que a duplica\u00e7\u00e3o de dados seja mitigada ao repetir seus pipelines de dados.","title":"Pipelines de Dados Idempotentes"},{"location":"design/design-patterns/data-heavy-design-guidance/#testes","text":"Garanta que o c\u00f3digo de transforma\u00e7\u00e3o de dados seja test\u00e1vel Abstrair o c\u00f3digo de transforma\u00e7\u00e3o de dados do c\u00f3digo de acesso aos dados \u00e9 fundamental para garantir que testes unit\u00e1rios possam ser escritos contra a l\u00f3gica de transforma\u00e7\u00e3o de dados. Um exemplo disso \u00e9 mover o c\u00f3digo de transforma\u00e7\u00e3o de dados de cadernos para pacotes. Embora seja poss\u00edvel executar testes em cadernos, ao extrair o c\u00f3digo para pacotes, voc\u00ea aumenta a produtividade do desenvolvedor, aumentando a velocidade do ciclo de feedback.","title":"Testes"},{"location":"design/design-patterns/data-heavy-design-guidance/#cicd-controle-de-origem-e-revisoes-de-codigo","text":"Todos os artefatos necess\u00e1rios para construir o pipeline de dados do zero devem estar sob controle de origem. Isso inclui artefatos de infraestrutura como c\u00f3digo, objetos de banco de dados (defini\u00e7\u00f5es de esquema, fun\u00e7\u00f5es, procedimentos armazenados etc.), dados de refer\u00eancia/aplica\u00e7\u00e3o, defini\u00e7\u00f5es de pipeline de dados e l\u00f3gica de valida\u00e7\u00e3o e transforma\u00e7\u00e3o de dados. Quaisquer novos artefatos (c\u00f3digo) introduzidos no reposit\u00f3rio devem passar por revis\u00f5es de c\u00f3digo, tanto autom\u00e1ticas (verifica\u00e7\u00e3o de lint, verifica\u00e7\u00e3o de credenciais etc.) quanto revis\u00f5es por pares. Deve haver um processo seguro e repet\u00edvel (CI/CD) para mover as altera\u00e7\u00f5es por meio de desenvolvimento, teste e, finalmente, produ\u00e7\u00e3o.","title":"CI/CD, Controle de Origem e Revis\u00f5es de C\u00f3digo"},{"location":"design/design-patterns/data-heavy-design-guidance/#seguranca-e-configuracao","text":"Mantenha um local central e seguro para configura\u00e7\u00f5es sens\u00edveis, como strings de conex\u00e3o de banco de dados, que podem ser acessadas pelos servi\u00e7os apropriados dentro do ambiente espec\u00edfico. No Azure, isso geralmente \u00e9 resolvido por meio da seguran\u00e7a de segredos em um Key Vault por ambiente e, em seguida, os servi\u00e7os relevantes consultam o KeyVault para obter a configura\u00e7\u00e3o.","title":"Seguran\u00e7a e Configura\u00e7\u00e3o"},{"location":"design/design-patterns/data-heavy-design-guidance/#observabilidade","text":"Monitore infraestrutura, pipelines e dados Uma solu\u00e7\u00e3o de monitoramento adequada deve estar em vigor para garantir que as falhas sejam identificadas, diagnosticadas e abordadas de forma oportuna. Al\u00e9m da infraestrutura base e das execu\u00e7\u00f5es de pipelines, os dados tamb\u00e9m devem ser monitorados. Uma \u00e1rea comum que deve ter monitoramento de dados \u00e9 o registro de dados malformados.","title":"Observabilidade"},{"location":"design/design-patterns/data-heavy-design-guidance/#amostras-de-tecnologia-de-ponta-a-ponta-e-azure","text":"O reposit\u00f3rio DataOps for the Modern Data Warehouse cont\u00e9m amostras de tecnologia espec\u00edficas e de ponta a ponta sobre como implementar o DataOps no Azure. Imagem: CI/CD para pipelines de dados no Azure - do reposit\u00f3rio DataOps para o Modern Data Warehouse","title":"Amostras de Tecnologia de Ponta a Ponta e Azure"},{"location":"design/design-patterns/distributed-system-design-reference/","text":"Refer\u00eancia de Design de Sistemas Distribu\u00eddos Sistemas distribu\u00eddos introduzem problemas novos e interessantes que precisam ser abordados. A engenharia de software como campo lidou com esses problemas por anos, e existem recursos fenomenais dispon\u00edveis para refer\u00eancia ao criar um novo sistema distribu\u00eddo. Alguns que recomendamos s\u00e3o os seguintes: Padr\u00f5es de Sistemas Distribu\u00eddos de Martin Fowler microservices.io Padr\u00f5es de Design de Nuvem da Azure","title":"Refer\u00eancia de Design de Sistemas Distribu\u00eddos"},{"location":"design/design-patterns/distributed-system-design-reference/#referencia-de-design-de-sistemas-distribuidos","text":"Sistemas distribu\u00eddos introduzem problemas novos e interessantes que precisam ser abordados. A engenharia de software como campo lidou com esses problemas por anos, e existem recursos fenomenais dispon\u00edveis para refer\u00eancia ao criar um novo sistema distribu\u00eddo. Alguns que recomendamos s\u00e3o os seguintes: Padr\u00f5es de Sistemas Distribu\u00eddos de Martin Fowler microservices.io Padr\u00f5es de Design de Nuvem da Azure","title":"Refer\u00eancia de Design de Sistemas Distribu\u00eddos"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/","text":"Orienta\u00e7\u00f5es de Arquitetura de Rede para o Azure As seguintes s\u00e3o algumas das melhores pr\u00e1ticas ao configurar e trabalhar com recursos de rede em ambientes de nuvem do Azure. NOTA: Ao trabalhar em um ambiente de nuvem existente, \u00e9 importante entender quaisquer padr\u00f5es atuais e como eles s\u00e3o usados antes de fazer altera\u00e7\u00f5es neles. Voc\u00ea tamb\u00e9m deve trabalhar com as partes interessadas relevantes para garantir que quaisquer novos padr\u00f5es que voc\u00ea introduza proporcionem valor suficiente para justificar a mudan\u00e7a. Configura\u00e7\u00e3o de Rede e VNet Topologia de Concentrador e Filial A topologia de rede de concentrador e filial \u00e9 um padr\u00e3o de arquitetura comum usado no Azure para organizar e gerenciar recursos de rede. Baseia-se no conceito de um concentrador central que se conecta a v\u00e1rias redes de filiais. Esse modelo \u00e9 particularmente \u00fatil para organizar recursos, manter a seguran\u00e7a e simplificar o gerenciamento de rede. O modelo de concentrador e filial \u00e9 implementado usando Redes Virtuais (VNet) e interconex\u00e3o de VNets (VNet peering). O concentrador: A VNet central age como um concentrador, fornecendo servi\u00e7os compartilhados como seguran\u00e7a de rede, monitoramento e conectividade com ambientes locais ou outras nuvens. Componentes comuns no concentrador incluem Dispositivos Virtuais de Rede (NVA), Firewall do Azure, Gateway VPN e Gateway ExpressRoute. As filiais: As VNets de filial representam unidades separadas ou aplicativos dentro de uma organiza\u00e7\u00e3o, cada um com seu pr\u00f3prio conjunto de recursos e servi\u00e7os. Elas se conectam ao concentrador por meio de interconex\u00e3o de VNets (VNet peering), o que permite a comunica\u00e7\u00e3o entre as VNets do concentrador e da filial. A implementa\u00e7\u00e3o de um modelo de concentrador e filial no Azure oferece v\u00e1rias vantagens: Isolamento e segmenta\u00e7\u00e3o: Ao dividir recursos em VNets de filiais separadas, voc\u00ea pode isolar e segmentar cargas de trabalho, impedindo que poss\u00edveis problemas ou riscos de seguran\u00e7a afetem outras partes da rede. Gerenciamento centralizado: A VNet do concentrador atua como um ponto \u00fanico de gerenciamento para servi\u00e7os compartilhados, facilitando a manuten\u00e7\u00e3o, o monitoramento e a aplica\u00e7\u00e3o de pol\u00edticas em toda a rede. Conectividade simplificada: A interconex\u00e3o de VNets (VNet peering) permite a comunica\u00e7\u00e3o sem problemas entre as VNets do concentrador e da filial, sem a necessidade de roteamento complexo ou gateways adicionais, reduzindo a lat\u00eancia e a sobrecarga de gerenciamento. Escalabilidade: O modelo de concentrador e filial pode ser facilmente dimensionado para acomodar filiais adicionais \u00e0 medida que a organiza\u00e7\u00e3o cresce ou \u00e0 medida que novos aplicativos e servi\u00e7os s\u00e3o introduzidos. Economia de custos: Centralizando servi\u00e7os compartilhados no concentrador, as organiza\u00e7\u00f5es podem reduzir os custos associados \u00e0 implanta\u00e7\u00e3o e ao gerenciamento de v\u00e1rias inst\u00e2ncias dos mesmos servi\u00e7os em diferentes VNets. Saiba mais sobre topologia de concentrador e filial Ao implantar um modelo de concentrador/filial, \u00e9 recomend\u00e1vel faz\u00ea-lo em conjunto com zonas de pouso (landing zones) . Isso garante consist\u00eancia em todos os ambientes, bem como salvaguardas para garantir um alto n\u00edvel de seguran\u00e7a, ao mesmo tempo em que oferece liberdade aos desenvolvedores nos ambientes de desenvolvimento. Firewall e Seguran\u00e7a Ao usar uma topologia de concentrador e filial, \u00e9 poss\u00edvel implantar um firewall centralizado no Hub que controle todo o tr\u00e1fego de sa\u00edda ou o tr\u00e1fego de/para determinadas VNets. Isso permite prote\u00e7\u00e3o centralizada contra amea\u00e7as, minimizando os custos. DNS As melhores pr\u00e1ticas para o gerenciamento de DNS no Azure e em ambientes de nuvem em geral incluem o uso de servi\u00e7os de DNS gerenciados. Alguns dos benef\u00edcios de usar servi\u00e7os de DNS gerenciados s\u00e3o que os recursos s\u00e3o projetados para serem seguros, f\u00e1ceis de implantar e configurar. Encaminhamento de DNS: Configure o encaminhamento de DNS entre seus servidores de DNS locais e os servidores de DNS do Azure para resolu\u00e7\u00e3o de nomes em diferentes ambientes. Use zonas DNS Privadas do Azure para recursos do Azure: Configure zonas DNS Privadas do Azure para seus recursos do Azure para garantir que a resolu\u00e7\u00e3o de nomes seja mantida dentro da rede virtual. Saiba mais sobre infraestrutura de DNS h\u00edbrido/multi-cloud e infraestrutura de DNS do Azure Aloca\u00e7\u00e3o de IP Ao alocar espa\u00e7os de endere\u00e7o IP para Redes Virtuais do Azure (VNets), \u00e9 essencial seguir as melhores pr\u00e1ticas para um gerenciamento adequado e escalabilidade. Aqui est\u00e3o algumas recomenda\u00e7\u00f5es para aloca\u00e7\u00e3o de IP para VNets: Reserve endere\u00e7os IP: Reserve endere\u00e7os IP em seu espa\u00e7o de endere\u00e7o para recursos ou servi\u00e7os cr\u00edticos. Aloca\u00e7\u00e3o de IP p\u00fablica: Minimize o uso de endere\u00e7os IP p\u00fablicos e use o Azure Private Link sempre que poss\u00edvel para acessar servi\u00e7os por meio de uma conex\u00e3o privada. Gerenciamento de endere\u00e7os IP (IPAM): Use solu\u00e7\u00f5es de IPAM para gerenciar e acompanhar a aloca\u00e7\u00e3o de endere\u00e7os IP em todo o ambiente h\u00edbrido. Planeje seu espa\u00e7o de endere\u00e7o: Escolha um espa\u00e7o de endere\u00e7o IP privado apropriado (a partir do RFC 1918) para suas VNets que seja grande o suficiente para acomodar o crescimento futuro. Evite sobreposi\u00e7\u00e3o com redes locais ou de outras nuvens. Use nota\u00e7\u00e3o CIDR: Use a nota\u00e7\u00e3o CIDR (Classless Inter-Domain Routing) para definir o espa\u00e7o de endere\u00e7o da VNet, o que permite uma aloca\u00e7\u00e3o mais eficiente e impede o desperd\u00edcio de endere\u00e7os IP. Use sub-redes: Divida suas VNets em sub-redes menores com base em requisitos de seguran\u00e7a, aplica\u00e7\u00e3o ou ambiente. Isso permite um melhor gerenciamento e seguran\u00e7a de rede. Considere deixar um buffer entre as VNets: Embora n\u00e3o seja estritamente necess\u00e1rio, deixar um buffer entre as VNets pode ser ben\u00e9fico em alguns casos, especialmente quando voc\u00ea antecipa crescimento futuro ou a possibilidade de mesclar VNets. Isso pode ajudar a evitar conflitos de reendere\u00e7amento ao expandir ou mesclar redes. Reserve endere\u00e7os IP: Reserve uma faixa de endere\u00e7os IP dentro do espa\u00e7o de endere\u00e7o da sua VNet para recursos ou servi\u00e7os cr\u00edticos. Isso garante que eles tenham um endere\u00e7o IP est\u00e1tico, essencial para servi\u00e7os ou aplicativos espec\u00edficos. Planeje para cen\u00e1rios h\u00edbridos: Se voc\u00ea estiver trabalhando em um ambiente h\u00edbrido com redes locais ou multi-cloud, certifique-se de planejar a aloca\u00e7\u00e3o de endere\u00e7os IP em todos os ambientes. Isso inclui evitar sobreposi\u00e7\u00e3o de espa\u00e7os de endere\u00e7o e reservar endere\u00e7os IP para recursos espec\u00edficos, como gateways VPN ou circuitos ExpressRoute. Saiba mais em azure-best-practices/plan-for-ip-addressing Aloca\u00e7\u00e3o de Recursos Para aloca\u00e7\u00e3o de recursos, as melhores pr\u00e1ticas do Guia de Design de Recursos de Nuvem devem ser seguidas.","title":"Orienta\u00e7\u00f5es de Arquitetura de Rede para o Azure"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#orientacoes-de-arquitetura-de-rede-para-o-azure","text":"As seguintes s\u00e3o algumas das melhores pr\u00e1ticas ao configurar e trabalhar com recursos de rede em ambientes de nuvem do Azure. NOTA: Ao trabalhar em um ambiente de nuvem existente, \u00e9 importante entender quaisquer padr\u00f5es atuais e como eles s\u00e3o usados antes de fazer altera\u00e7\u00f5es neles. Voc\u00ea tamb\u00e9m deve trabalhar com as partes interessadas relevantes para garantir que quaisquer novos padr\u00f5es que voc\u00ea introduza proporcionem valor suficiente para justificar a mudan\u00e7a.","title":"Orienta\u00e7\u00f5es de Arquitetura de Rede para o Azure"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#configuracao-de-rede-e-vnet","text":"","title":"Configura\u00e7\u00e3o de Rede e VNet"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#topologia-de-concentrador-e-filial","text":"A topologia de rede de concentrador e filial \u00e9 um padr\u00e3o de arquitetura comum usado no Azure para organizar e gerenciar recursos de rede. Baseia-se no conceito de um concentrador central que se conecta a v\u00e1rias redes de filiais. Esse modelo \u00e9 particularmente \u00fatil para organizar recursos, manter a seguran\u00e7a e simplificar o gerenciamento de rede. O modelo de concentrador e filial \u00e9 implementado usando Redes Virtuais (VNet) e interconex\u00e3o de VNets (VNet peering). O concentrador: A VNet central age como um concentrador, fornecendo servi\u00e7os compartilhados como seguran\u00e7a de rede, monitoramento e conectividade com ambientes locais ou outras nuvens. Componentes comuns no concentrador incluem Dispositivos Virtuais de Rede (NVA), Firewall do Azure, Gateway VPN e Gateway ExpressRoute. As filiais: As VNets de filial representam unidades separadas ou aplicativos dentro de uma organiza\u00e7\u00e3o, cada um com seu pr\u00f3prio conjunto de recursos e servi\u00e7os. Elas se conectam ao concentrador por meio de interconex\u00e3o de VNets (VNet peering), o que permite a comunica\u00e7\u00e3o entre as VNets do concentrador e da filial. A implementa\u00e7\u00e3o de um modelo de concentrador e filial no Azure oferece v\u00e1rias vantagens: Isolamento e segmenta\u00e7\u00e3o: Ao dividir recursos em VNets de filiais separadas, voc\u00ea pode isolar e segmentar cargas de trabalho, impedindo que poss\u00edveis problemas ou riscos de seguran\u00e7a afetem outras partes da rede. Gerenciamento centralizado: A VNet do concentrador atua como um ponto \u00fanico de gerenciamento para servi\u00e7os compartilhados, facilitando a manuten\u00e7\u00e3o, o monitoramento e a aplica\u00e7\u00e3o de pol\u00edticas em toda a rede. Conectividade simplificada: A interconex\u00e3o de VNets (VNet peering) permite a comunica\u00e7\u00e3o sem problemas entre as VNets do concentrador e da filial, sem a necessidade de roteamento complexo ou gateways adicionais, reduzindo a lat\u00eancia e a sobrecarga de gerenciamento. Escalabilidade: O modelo de concentrador e filial pode ser facilmente dimensionado para acomodar filiais adicionais \u00e0 medida que a organiza\u00e7\u00e3o cresce ou \u00e0 medida que novos aplicativos e servi\u00e7os s\u00e3o introduzidos. Economia de custos: Centralizando servi\u00e7os compartilhados no concentrador, as organiza\u00e7\u00f5es podem reduzir os custos associados \u00e0 implanta\u00e7\u00e3o e ao gerenciamento de v\u00e1rias inst\u00e2ncias dos mesmos servi\u00e7os em diferentes VNets. Saiba mais sobre topologia de concentrador e filial Ao implantar um modelo de concentrador/filial, \u00e9 recomend\u00e1vel faz\u00ea-lo em conjunto com zonas de pouso (landing zones) . Isso garante consist\u00eancia em todos os ambientes, bem como salvaguardas para garantir um alto n\u00edvel de seguran\u00e7a, ao mesmo tempo em que oferece liberdade aos desenvolvedores nos ambientes de desenvolvimento.","title":"Topologia de Concentrador e Filial"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#firewall-e-seguranca","text":"Ao usar uma topologia de concentrador e filial, \u00e9 poss\u00edvel implantar um firewall centralizado no Hub que controle todo o tr\u00e1fego de sa\u00edda ou o tr\u00e1fego de/para determinadas VNets. Isso permite prote\u00e7\u00e3o centralizada contra amea\u00e7as, minimizando os custos.","title":"Firewall e Seguran\u00e7a"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#dns","text":"As melhores pr\u00e1ticas para o gerenciamento de DNS no Azure e em ambientes de nuvem em geral incluem o uso de servi\u00e7os de DNS gerenciados. Alguns dos benef\u00edcios de usar servi\u00e7os de DNS gerenciados s\u00e3o que os recursos s\u00e3o projetados para serem seguros, f\u00e1ceis de implantar e configurar. Encaminhamento de DNS: Configure o encaminhamento de DNS entre seus servidores de DNS locais e os servidores de DNS do Azure para resolu\u00e7\u00e3o de nomes em diferentes ambientes. Use zonas DNS Privadas do Azure para recursos do Azure: Configure zonas DNS Privadas do Azure para seus recursos do Azure para garantir que a resolu\u00e7\u00e3o de nomes seja mantida dentro da rede virtual. Saiba mais sobre infraestrutura de DNS h\u00edbrido/multi-cloud e infraestrutura de DNS do Azure","title":"DNS"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#alocacao-de-ip","text":"Ao alocar espa\u00e7os de endere\u00e7o IP para Redes Virtuais do Azure (VNets), \u00e9 essencial seguir as melhores pr\u00e1ticas para um gerenciamento adequado e escalabilidade. Aqui est\u00e3o algumas recomenda\u00e7\u00f5es para aloca\u00e7\u00e3o de IP para VNets: Reserve endere\u00e7os IP: Reserve endere\u00e7os IP em seu espa\u00e7o de endere\u00e7o para recursos ou servi\u00e7os cr\u00edticos. Aloca\u00e7\u00e3o de IP p\u00fablica: Minimize o uso de endere\u00e7os IP p\u00fablicos e use o Azure Private Link sempre que poss\u00edvel para acessar servi\u00e7os por meio de uma conex\u00e3o privada. Gerenciamento de endere\u00e7os IP (IPAM): Use solu\u00e7\u00f5es de IPAM para gerenciar e acompanhar a aloca\u00e7\u00e3o de endere\u00e7os IP em todo o ambiente h\u00edbrido. Planeje seu espa\u00e7o de endere\u00e7o: Escolha um espa\u00e7o de endere\u00e7o IP privado apropriado (a partir do RFC 1918) para suas VNets que seja grande o suficiente para acomodar o crescimento futuro. Evite sobreposi\u00e7\u00e3o com redes locais ou de outras nuvens. Use nota\u00e7\u00e3o CIDR: Use a nota\u00e7\u00e3o CIDR (Classless Inter-Domain Routing) para definir o espa\u00e7o de endere\u00e7o da VNet, o que permite uma aloca\u00e7\u00e3o mais eficiente e impede o desperd\u00edcio de endere\u00e7os IP. Use sub-redes: Divida suas VNets em sub-redes menores com base em requisitos de seguran\u00e7a, aplica\u00e7\u00e3o ou ambiente. Isso permite um melhor gerenciamento e seguran\u00e7a de rede. Considere deixar um buffer entre as VNets: Embora n\u00e3o seja estritamente necess\u00e1rio, deixar um buffer entre as VNets pode ser ben\u00e9fico em alguns casos, especialmente quando voc\u00ea antecipa crescimento futuro ou a possibilidade de mesclar VNets. Isso pode ajudar a evitar conflitos de reendere\u00e7amento ao expandir ou mesclar redes. Reserve endere\u00e7os IP: Reserve uma faixa de endere\u00e7os IP dentro do espa\u00e7o de endere\u00e7o da sua VNet para recursos ou servi\u00e7os cr\u00edticos. Isso garante que eles tenham um endere\u00e7o IP est\u00e1tico, essencial para servi\u00e7os ou aplicativos espec\u00edficos. Planeje para cen\u00e1rios h\u00edbridos: Se voc\u00ea estiver trabalhando em um ambiente h\u00edbrido com redes locais ou multi-cloud, certifique-se de planejar a aloca\u00e7\u00e3o de endere\u00e7os IP em todos os ambientes. Isso inclui evitar sobreposi\u00e7\u00e3o de espa\u00e7os de endere\u00e7o e reservar endere\u00e7os IP para recursos espec\u00edficos, como gateways VPN ou circuitos ExpressRoute. Saiba mais em azure-best-practices/plan-for-ip-addressing","title":"Aloca\u00e7\u00e3o de IP"},{"location":"design/design-patterns/network-architecture-guidance-for-azure/#alocacao-de-recursos","text":"Para aloca\u00e7\u00e3o de recursos, as melhores pr\u00e1ticas do Guia de Design de Recursos de Nuvem devem ser seguidas.","title":"Aloca\u00e7\u00e3o de Recursos"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/","text":"Orienta\u00e7\u00f5es de Arquitetura de Rede para Ambientes H\u00edbridos As seguintes s\u00e3o as melhores pr\u00e1ticas sobre como projetar e configurar recursos usados em ambientes h\u00edbridos e multi-cloud. NOTA: Ao trabalhar em um ambiente h\u00edbrido existente, \u00e9 importante entender quaisquer padr\u00f5es atuais e como eles s\u00e3o usados antes de fazer qualquer altera\u00e7\u00e3o. Topologia de Concentrador e Filial A topologia de concentrador e filial n\u00e3o muda muito ao usar nuvem/h\u00edbrido se configurada corretamente. A principal diferen\u00e7a \u00e9 que a VNet do concentrador est\u00e1 interconectada com a rede local por meio de um ExpressRoute e que todo o tr\u00e1fego do Azure pode sair via ExpressRoute e a conex\u00e3o com a Internet local. As melhores pr\u00e1ticas gerais est\u00e3o em Orienta\u00e7\u00f5es de Arquitetura de Rede para Azure#Topologia de Concentrador e Filial Aloca\u00e7\u00e3o de IP Ao trabalhar com implanta\u00e7\u00f5es h\u00edbridas, tome cuidado extra ao planejar a aloca\u00e7\u00e3o de IPs, pois existe um risco muito maior de sobreposi\u00e7\u00e3o de intervalos de rede. As melhores pr\u00e1ticas gerais est\u00e3o dispon\u00edveis em Orienta\u00e7\u00f5es de Arquitetura de Rede para Azure#Aloca\u00e7\u00e3o de IP Saiba mais sobre isso em Melhores Pr\u00e1ticas do Azure para Planejamento de Endere\u00e7amento IP ExpressRoute Ambientes que usam o ExpressRoute frequentemente direcionam todo o tr\u00e1fego do Azure por meio de uma conex\u00e3o privada (ExpressRoute) para um local local. Isso imp\u00f5e alguns problemas ao trabalhar com ofertas de PAAS, pois nem todas elas se conectam por meio de seu respectivo ponto de extremidade privado e, em vez disso, usam um IP externo para conex\u00f5es de sa\u00edda, ou algum tr\u00e1fego de PAAS para PAAS ocorre internamente no Azure e n\u00e3o funcionar\u00e1 com redes p\u00fablicas desativadas. Dois servi\u00e7os not\u00e1veis aqui s\u00e3o c\u00f3pias dos planos de dados de contas de armazenamento e muitos dos servi\u00e7os n\u00e3o suportam pontos de extremidade privados. Escolha o circuito ExpressRoute certo: selecione um SKU (Padr\u00e3o ou Premium) e largura de banda apropriados com base nos requisitos da sua organiza\u00e7\u00e3o. Redund\u00e2ncia: garanta redund\u00e2ncia provisionando dois circuitos ExpressRoute em locais de interconex\u00e3o diferentes. Monitoramento: use o Azure Monitor e o Network Performance Monitor (NPM) para monitorar a sa\u00fade e o desempenho de seus circuitos ExpressRoute. DNS As melhores pr\u00e1ticas gerais est\u00e3o dispon\u00edveis em Orienta\u00e7\u00f5es de Arquitetura de Rede para Azure#DNS Ao usar o Azure DNS em um ambiente h\u00edbrido ou multi-cloud, \u00e9 importante garantir uma configura\u00e7\u00e3o de DNS e encaminhamento consistente que garanta que os registros sejam atualizados automaticamente e que todos os servidores DNS estejam cientes uns dos outros e saibam qual servidor \u00e9 o autorizado para os diferentes registros. Saiba mais sobre Infraestrutura de DNS H\u00edbrida/Multi-Cloud Aloca\u00e7\u00e3o de Recursos Para aloca\u00e7\u00e3o de recursos, as melhores pr\u00e1ticas do Guia de Design de Recursos de Nuvem devem ser seguidas.","title":"Orienta\u00e7\u00f5es de Arquitetura de Rede para Ambientes H\u00edbridos"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/#orientacoes-de-arquitetura-de-rede-para-ambientes-hibridos","text":"As seguintes s\u00e3o as melhores pr\u00e1ticas sobre como projetar e configurar recursos usados em ambientes h\u00edbridos e multi-cloud. NOTA: Ao trabalhar em um ambiente h\u00edbrido existente, \u00e9 importante entender quaisquer padr\u00f5es atuais e como eles s\u00e3o usados antes de fazer qualquer altera\u00e7\u00e3o.","title":"Orienta\u00e7\u00f5es de Arquitetura de Rede para Ambientes H\u00edbridos"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/#topologia-de-concentrador-e-filial","text":"A topologia de concentrador e filial n\u00e3o muda muito ao usar nuvem/h\u00edbrido se configurada corretamente. A principal diferen\u00e7a \u00e9 que a VNet do concentrador est\u00e1 interconectada com a rede local por meio de um ExpressRoute e que todo o tr\u00e1fego do Azure pode sair via ExpressRoute e a conex\u00e3o com a Internet local. As melhores pr\u00e1ticas gerais est\u00e3o em Orienta\u00e7\u00f5es de Arquitetura de Rede para Azure#Topologia de Concentrador e Filial","title":"Topologia de Concentrador e Filial"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/#alocacao-de-ip","text":"Ao trabalhar com implanta\u00e7\u00f5es h\u00edbridas, tome cuidado extra ao planejar a aloca\u00e7\u00e3o de IPs, pois existe um risco muito maior de sobreposi\u00e7\u00e3o de intervalos de rede. As melhores pr\u00e1ticas gerais est\u00e3o dispon\u00edveis em Orienta\u00e7\u00f5es de Arquitetura de Rede para Azure#Aloca\u00e7\u00e3o de IP Saiba mais sobre isso em Melhores Pr\u00e1ticas do Azure para Planejamento de Endere\u00e7amento IP","title":"Aloca\u00e7\u00e3o de IP"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/#expressroute","text":"Ambientes que usam o ExpressRoute frequentemente direcionam todo o tr\u00e1fego do Azure por meio de uma conex\u00e3o privada (ExpressRoute) para um local local. Isso imp\u00f5e alguns problemas ao trabalhar com ofertas de PAAS, pois nem todas elas se conectam por meio de seu respectivo ponto de extremidade privado e, em vez disso, usam um IP externo para conex\u00f5es de sa\u00edda, ou algum tr\u00e1fego de PAAS para PAAS ocorre internamente no Azure e n\u00e3o funcionar\u00e1 com redes p\u00fablicas desativadas. Dois servi\u00e7os not\u00e1veis aqui s\u00e3o c\u00f3pias dos planos de dados de contas de armazenamento e muitos dos servi\u00e7os n\u00e3o suportam pontos de extremidade privados. Escolha o circuito ExpressRoute certo: selecione um SKU (Padr\u00e3o ou Premium) e largura de banda apropriados com base nos requisitos da sua organiza\u00e7\u00e3o. Redund\u00e2ncia: garanta redund\u00e2ncia provisionando dois circuitos ExpressRoute em locais de interconex\u00e3o diferentes. Monitoramento: use o Azure Monitor e o Network Performance Monitor (NPM) para monitorar a sa\u00fade e o desempenho de seus circuitos ExpressRoute.","title":"ExpressRoute"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/#dns","text":"As melhores pr\u00e1ticas gerais est\u00e3o dispon\u00edveis em Orienta\u00e7\u00f5es de Arquitetura de Rede para Azure#DNS Ao usar o Azure DNS em um ambiente h\u00edbrido ou multi-cloud, \u00e9 importante garantir uma configura\u00e7\u00e3o de DNS e encaminhamento consistente que garanta que os registros sejam atualizados automaticamente e que todos os servidores DNS estejam cientes uns dos outros e saibam qual servidor \u00e9 o autorizado para os diferentes registros. Saiba mais sobre Infraestrutura de DNS H\u00edbrida/Multi-Cloud","title":"DNS"},{"location":"design/design-patterns/network-architecture-guidance-for-hybrid/#alocacao-de-recursos","text":"Para aloca\u00e7\u00e3o de recursos, as melhores pr\u00e1ticas do Guia de Design de Recursos de Nuvem devem ser seguidas.","title":"Aloca\u00e7\u00e3o de Recursos"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/","text":"Captura de Requisitos N\u00e3o Funcionais Objetivos Em projetos de engenharia de software, caracter\u00edsticas importantes do sistema, como testabilidade, confiabilidade, escalabilidade, observabilidade, seguran\u00e7a, gerenciabilidade, entre outras, devem ser consideradas como requisitos n\u00e3o funcionais de primeira classe no processo de levantamento de requisitos. Ao definir esses requisitos n\u00e3o funcionais em detalhes no in\u00edcio do projeto, eles podem ser adequadamente avaliados quando o custo de seu impacto nas decis\u00f5es de design subsequentes \u00e9 comparativamente baixo. Para apoiar o processo de captura de requisitos n\u00e3o funcionais completos de um projeto, este documento oferece uma taxonomia para requisitos n\u00e3o funcionais e fornece um framework para sua identifica\u00e7\u00e3o, explora\u00e7\u00e3o, atribui\u00e7\u00e3o aos stakeholders do cliente e, finalmente, codifica\u00e7\u00e3o em requisitos de engenharia formais como entrada para o subsequente design da solu\u00e7\u00e3o. \u00c1reas de Investiga\u00e7\u00e3o Seguran\u00e7a Empresarial Privacidade PII (Informa\u00e7\u00f5es Pessoalmente Identific\u00e1veis) HIPAA Criptografia Mobilidade de Dados em repouso em tr\u00e2nsito em processo/mem\u00f3ria Gerenciamento de Chaves responsabilidade plataforma BYOK (Traga sua pr\u00f3pria chave) CMK (Chave de Gerenciamento de Cliente) Regulamenta\u00e7\u00f5es/normas de INFOSEC (Seguran\u00e7a da Informa\u00e7\u00e3o) por exemplo, FIPS-140-2 N\u00edvel 2 N\u00edvel 3 S\u00e9rie ISO 27000 NIST (Instituto Nacional de Padr\u00f5es e Tecnologia) Outros Seguran\u00e7a de Rede Limites/fluxo de tr\u00e1fego f\u00edsico/l\u00f3gico/topologia Azure <-- --> On-premises (Local) P\u00fablico <-- --> Azure VNET PIP (Endere\u00e7o IP P\u00fablico) Firewalls VPN (Rede Virtual Privada) ExpressRoute Topologia Seguran\u00e7a Certificados Emissor CA (Autoridade de Certifica\u00e7\u00e3o) Autoassinado Rota\u00e7\u00e3o/expira\u00e7\u00e3o Resposta a Incidentes de INFOSEC Processo Pessoas Responsabilidades Sistemas Jur\u00eddico/regulat\u00f3rio/conformidade Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o Empresariais Usu\u00e1rios Servi\u00e7os Autoridades/diret\u00f3rios Mecanismos/apertos de m\u00e3os (handshakes) Active Directory SAML (Linguagem de Marca\u00e7\u00e3o de Seguran\u00e7a) OAuth Outros Controle de Acesso Baseado em Fun\u00e7\u00f5es (RBAC - Role-Based Access Control) Modelo de heran\u00e7a de permiss\u00f5es Monitoramento/Opera\u00e7\u00f5es Empresariais Registro (Logging) Opera\u00e7\u00f5es Relat\u00f3rios Auditoria Monitoramento Diagn\u00f3stico/Alertas Opera\u00e7\u00f5es Alta disponibilidade/Recupera\u00e7\u00e3o de Desastres Redund\u00e2ncia Recupera\u00e7\u00e3o/Mitiga\u00e7\u00e3o Pr\u00e1ticas Princ\u00edpio do m\u00ednimo privil\u00e9gio Princ\u00edpio da separa\u00e7\u00e3o de responsabilidades Outras tecnologias/pr\u00e1ticas empresariais padr\u00e3o Ecossistema de Desenvolvedores Plataforma/Sistema Operacional Refor\u00e7ado Imagens base aprovadas Reposit\u00f3rio de imagens Ferramentas, linguagens Processo de aprova\u00e7\u00e3o Reposit\u00f3rios de c\u00f3digo Padr\u00f5es de gerenciamento de segredos Vari\u00e1veis de ambiente Arquivo(s) de configura\u00e7\u00e3o API de recupera\u00e7\u00e3o de segredos Origens de gerenciadores de pacotes Privadas P\u00fablicas Aprovadas/Confi\u00e1veis CI/CD (Integra\u00e7\u00e3o Cont\u00ednua/Entrega Cont\u00ednua) Reposit\u00f3rios de artefatos Ecossistema de Produ\u00e7\u00e3o Plataforma/Sistema Operacional Refor\u00e7ado Imagens base aprovadas Reposit\u00f3rio de imagens Longevidade/volatilidade da implanta\u00e7\u00e3o Automa\u00e7\u00e3o Reprodutibilidade IaC (Infraestrutura como C\u00f3digo) Scripting Outros Outras \u00e1reas/t\u00f3picos n\u00e3o abordados acima (requer entrada do cliente para enumerar de forma abrangente) Processo de Investiga\u00e7\u00e3o Identifique/brainstorm \u00e1reas/t\u00f3picos prov\u00e1veis que requerem investiga\u00e7\u00e3o/defini\u00e7\u00e3o adicional. Identifique os stakeholders do cliente respons\u00e1veis por cada \u00e1rea/t\u00f3pico identificado. Ag ende sess\u00f5es de defini\u00e7\u00e3o de requisitos/debrief com cada stakeholder conforme necess\u00e1rio para alcan\u00e7ar uma compreens\u00e3o suficiente do impacto prov\u00e1vel de cada requisito no projeto, tanto no marco atual/inicial quanto no roadmap de longo prazo. 1. Documente os requisitos/depend\u00eancias identificados e as restri\u00e7\u00f5es de design relacionadas. 1. Avalie os marcos atuais/near-term planejados atrav\u00e9s da lente dos requisitos/constrangimentos identificados. - Categorize cada requisito como afetando os marcos imediatos/near-termos ou como aplic\u00e1vel apenas ao roadmap de longo prazo/subsequentes marcos. 1. Adapte os planos para os marcos atuais/near-termos para acomodar os requisitos categorizados como imediatos/near-termos. Estrutura do Esbo\u00e7o/Atribui\u00e7\u00e3o do Stakeholder Respons\u00e1vel No esbo\u00e7o a seguir, atribua o nome/email do 'stakeholder respons\u00e1vel' para cada elemento ap\u00f3s o n\u00edvel apropriado na hierarquia do esbo\u00e7o. Assuma o modelo de atribui\u00e7\u00e3o de responsabilidade por heran\u00e7a: o stakeholder em qualquer n\u00edvel ancestral (pai) tamb\u00e9m \u00e9 respons\u00e1vel pelos elementos descendentes (filhos), a menos que seja substitu\u00eddo no n\u00edvel descendente. Exemplo: Pai1 [Susan/susan@dominio.com] filho1 filho2 [John/john@dominio.com] neto1 filho3 Pai2 [Sam/sam@dominio.com] filho1 filho2 No exemplo anterior, 'Susan' \u00e9 respons\u00e1vel por Pai1 e todos os seus descendentes, exceto por Pai1/filho2 e Pai1/filho2/neto1 (para os quais 'John' \u00e9 o stakeholder). 'Sam' \u00e9 respons\u00e1vel por Pai2 e todos os seus descendentes. Essa abordagem permite a reten\u00e7\u00e3o da hierarquia l\u00f3gica dos elementos em si, ao mesmo tempo em que intercala de forma flex\u00edvel as identifica\u00e7\u00f5es de 'stakeholder' dentro da hierarquia de t\u00f3picos, se e quando elas precisarem divergir devido a nuances organizacionais do cliente.","title":"Captura de Requisitos N\u00e3o Funcionais"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#captura-de-requisitos-nao-funcionais","text":"","title":"Captura de Requisitos N\u00e3o Funcionais"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#objetivos","text":"Em projetos de engenharia de software, caracter\u00edsticas importantes do sistema, como testabilidade, confiabilidade, escalabilidade, observabilidade, seguran\u00e7a, gerenciabilidade, entre outras, devem ser consideradas como requisitos n\u00e3o funcionais de primeira classe no processo de levantamento de requisitos. Ao definir esses requisitos n\u00e3o funcionais em detalhes no in\u00edcio do projeto, eles podem ser adequadamente avaliados quando o custo de seu impacto nas decis\u00f5es de design subsequentes \u00e9 comparativamente baixo. Para apoiar o processo de captura de requisitos n\u00e3o funcionais completos de um projeto, este documento oferece uma taxonomia para requisitos n\u00e3o funcionais e fornece um framework para sua identifica\u00e7\u00e3o, explora\u00e7\u00e3o, atribui\u00e7\u00e3o aos stakeholders do cliente e, finalmente, codifica\u00e7\u00e3o em requisitos de engenharia formais como entrada para o subsequente design da solu\u00e7\u00e3o.","title":"Objetivos"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#areas-de-investigacao","text":"","title":"\u00c1reas de Investiga\u00e7\u00e3o"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#seguranca-empresarial","text":"Privacidade PII (Informa\u00e7\u00f5es Pessoalmente Identific\u00e1veis) HIPAA Criptografia Mobilidade de Dados em repouso em tr\u00e2nsito em processo/mem\u00f3ria Gerenciamento de Chaves responsabilidade plataforma BYOK (Traga sua pr\u00f3pria chave) CMK (Chave de Gerenciamento de Cliente) Regulamenta\u00e7\u00f5es/normas de INFOSEC (Seguran\u00e7a da Informa\u00e7\u00e3o) por exemplo, FIPS-140-2 N\u00edvel 2 N\u00edvel 3 S\u00e9rie ISO 27000 NIST (Instituto Nacional de Padr\u00f5es e Tecnologia) Outros Seguran\u00e7a de Rede Limites/fluxo de tr\u00e1fego f\u00edsico/l\u00f3gico/topologia Azure <-- --> On-premises (Local) P\u00fablico <-- --> Azure VNET PIP (Endere\u00e7o IP P\u00fablico) Firewalls VPN (Rede Virtual Privada) ExpressRoute Topologia Seguran\u00e7a Certificados Emissor CA (Autoridade de Certifica\u00e7\u00e3o) Autoassinado Rota\u00e7\u00e3o/expira\u00e7\u00e3o Resposta a Incidentes de INFOSEC Processo Pessoas Responsabilidades Sistemas Jur\u00eddico/regulat\u00f3rio/conformidade","title":"Seguran\u00e7a Empresarial"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#autenticacao-e-autorizacao-empresariais","text":"Usu\u00e1rios Servi\u00e7os Autoridades/diret\u00f3rios Mecanismos/apertos de m\u00e3os (handshakes) Active Directory SAML (Linguagem de Marca\u00e7\u00e3o de Seguran\u00e7a) OAuth Outros Controle de Acesso Baseado em Fun\u00e7\u00f5es (RBAC - Role-Based Access Control) Modelo de heran\u00e7a de permiss\u00f5es","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o Empresariais"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#monitoramentooperacoes-empresariais","text":"Registro (Logging) Opera\u00e7\u00f5es Relat\u00f3rios Auditoria Monitoramento Diagn\u00f3stico/Alertas Opera\u00e7\u00f5es Alta disponibilidade/Recupera\u00e7\u00e3o de Desastres Redund\u00e2ncia Recupera\u00e7\u00e3o/Mitiga\u00e7\u00e3o Pr\u00e1ticas Princ\u00edpio do m\u00ednimo privil\u00e9gio Princ\u00edpio da separa\u00e7\u00e3o de responsabilidades","title":"Monitoramento/Opera\u00e7\u00f5es Empresariais"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#outras-tecnologiaspraticas-empresariais-padrao","text":"Ecossistema de Desenvolvedores Plataforma/Sistema Operacional Refor\u00e7ado Imagens base aprovadas Reposit\u00f3rio de imagens Ferramentas, linguagens Processo de aprova\u00e7\u00e3o Reposit\u00f3rios de c\u00f3digo Padr\u00f5es de gerenciamento de segredos Vari\u00e1veis de ambiente Arquivo(s) de configura\u00e7\u00e3o API de recupera\u00e7\u00e3o de segredos Origens de gerenciadores de pacotes Privadas P\u00fablicas Aprovadas/Confi\u00e1veis CI/CD (Integra\u00e7\u00e3o Cont\u00ednua/Entrega Cont\u00ednua) Reposit\u00f3rios de artefatos","title":"Outras tecnologias/pr\u00e1ticas empresariais padr\u00e3o"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#ecossistema-de-producao","text":"Plataforma/Sistema Operacional Refor\u00e7ado Imagens base aprovadas Reposit\u00f3rio de imagens Longevidade/volatilidade da implanta\u00e7\u00e3o Automa\u00e7\u00e3o Reprodutibilidade IaC (Infraestrutura como C\u00f3digo) Scripting Outros","title":"Ecossistema de Produ\u00e7\u00e3o"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#outras-areastopicos-nao-abordados-acima-requer-entrada-do-cliente-para-enumerar-de-forma-abrangente","text":"","title":"Outras \u00e1reas/t\u00f3picos n\u00e3o abordados acima (requer entrada do cliente para enumerar de forma abrangente)"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#processo-de-investigacao","text":"Identifique/brainstorm \u00e1reas/t\u00f3picos prov\u00e1veis que requerem investiga\u00e7\u00e3o/defini\u00e7\u00e3o adicional. Identifique os stakeholders do cliente respons\u00e1veis por cada \u00e1rea/t\u00f3pico identificado. Ag ende sess\u00f5es de defini\u00e7\u00e3o de requisitos/debrief com cada stakeholder conforme necess\u00e1rio para alcan\u00e7ar uma compreens\u00e3o suficiente do impacto prov\u00e1vel de cada requisito no projeto, tanto no marco atual/inicial quanto no roadmap de longo prazo. 1. Documente os requisitos/depend\u00eancias identificados e as restri\u00e7\u00f5es de design relacionadas. 1. Avalie os marcos atuais/near-term planejados atrav\u00e9s da lente dos requisitos/constrangimentos identificados. - Categorize cada requisito como afetando os marcos imediatos/near-termos ou como aplic\u00e1vel apenas ao roadmap de longo prazo/subsequentes marcos. 1. Adapte os planos para os marcos atuais/near-termos para acomodar os requisitos categorizados como imediatos/near-termos.","title":"Processo de Investiga\u00e7\u00e3o"},{"location":"design/design-patterns/non-functional-requirements-capture-guide/#estrutura-do-esbocoatribuicao-do-stakeholder-responsavel","text":"No esbo\u00e7o a seguir, atribua o nome/email do 'stakeholder respons\u00e1vel' para cada elemento ap\u00f3s o n\u00edvel apropriado na hierarquia do esbo\u00e7o. Assuma o modelo de atribui\u00e7\u00e3o de responsabilidade por heran\u00e7a: o stakeholder em qualquer n\u00edvel ancestral (pai) tamb\u00e9m \u00e9 respons\u00e1vel pelos elementos descendentes (filhos), a menos que seja substitu\u00eddo no n\u00edvel descendente. Exemplo: Pai1 [Susan/susan@dominio.com] filho1 filho2 [John/john@dominio.com] neto1 filho3 Pai2 [Sam/sam@dominio.com] filho1 filho2 No exemplo anterior, 'Susan' \u00e9 respons\u00e1vel por Pai1 e todos os seus descendentes, exceto por Pai1/filho2 e Pai1/filho2/neto1 (para os quais 'John' \u00e9 o stakeholder). 'Sam' \u00e9 respons\u00e1vel por Pai2 e todos os seus descendentes. Essa abordagem permite a reten\u00e7\u00e3o da hierarquia l\u00f3gica dos elementos em si, ao mesmo tempo em que intercala de forma flex\u00edvel as identifica\u00e7\u00f5es de 'stakeholder' dentro da hierarquia de t\u00f3picos, se e quando elas precisarem divergir devido a nuances organizacionais do cliente.","title":"Estrutura do Esbo\u00e7o/Atribui\u00e7\u00e3o do Stakeholder Respons\u00e1vel"},{"location":"design/design-patterns/object-oriented-design-reference/","text":"Refer\u00eancia de Design Orientado a Objetos Ao escrever software para projetos de grande porte, a parte mais desafiadora geralmente \u00e9 a comunica\u00e7\u00e3o e a manuten\u00e7\u00e3o. Seguir padr\u00f5es de design comprovados pode otimizar a manuten\u00e7\u00e3o, a legibilidade e a facilidade de extens\u00e3o. Em particular, os padr\u00f5es de design orientado a objetos s\u00e3o amplamente reconhecidos na ind\u00fastria. Por favor, consulte os seguintes recursos para criar designs orientados a objetos robustos: Wikipedia de Padr\u00f5es de Design Site de Design Orientado a Objetos","title":"Refer\u00eancia de Design Orientado a Objetos"},{"location":"design/design-patterns/object-oriented-design-reference/#referencia-de-design-orientado-a-objetos","text":"Ao escrever software para projetos de grande porte, a parte mais desafiadora geralmente \u00e9 a comunica\u00e7\u00e3o e a manuten\u00e7\u00e3o. Seguir padr\u00f5es de design comprovados pode otimizar a manuten\u00e7\u00e3o, a legibilidade e a facilidade de extens\u00e3o. Em particular, os padr\u00f5es de design orientado a objetos s\u00e3o amplamente reconhecidos na ind\u00fastria. Por favor, consulte os seguintes recursos para criar designs orientados a objetos robustos: Wikipedia de Padr\u00f5es de Design Site de Design Orientado a Objetos","title":"Refer\u00eancia de Design Orientado a Objetos"},{"location":"design/design-patterns/rest-api-design-guidance/","text":"Orienta\u00e7\u00f5es de Design de REST API Objetivos Elevar as diretrizes de design de REST API publicadas pela Microsoft . Destacar decis\u00f5es de design comuns e fatores a serem considerados ao projetar. Fornecer recursos adicionais para informar o design de API em \u00e1reas n\u00e3o abordadas diretamente pelas diretrizes da Microsoft. Decis\u00f5es Comuns de Design de API As diretrizes da Microsoft para REST API fornecem orienta\u00e7\u00f5es de design que abrangem uma variedade de casos de uso. As seguintes se\u00e7\u00f5es s\u00e3o um bom ponto de partida, pois s\u00e3o considera\u00e7\u00f5es provavelmente necess\u00e1rias em qualquer design de REST API: Estrutura de URL M\u00e9todos HTTP C\u00f3digos de Status HTTP Cole\u00e7\u00f5es Padroniza\u00e7\u00f5es JSON Versionamento Nomenclatura Criando Contratos de API \u00c0 medida que diferentes equipes de desenvolvimento exp\u00f5em APIs para acessar v\u00e1rios servi\u00e7os baseados em REST, \u00e9 importante ter um contrato de API para compartilhar entre os produtores e consumidores de APIs. O formato Open API \u00e9 um dos formatos de descri\u00e7\u00e3o de API mais populares. Este documento Open API pode ser produzido de duas maneiras: Abordagem Design-First - A equipe come\u00e7a a desenvolver APIs descrevendo primeiro os designs da API como um documento Open API e posteriormente gera o c\u00f3digo de boilerplate do lado do servidor com a ajuda deste documento. Abordagem Code-First - A equipe come\u00e7a escrevendo o c\u00f3digo da interface da API do lado do servidor, como controladores, DTOs, etc., e posteriormente gera um documento Open API a partir dele. Abordagem Design-First Uma abordagem Design-First significa que as APIs s\u00e3o tratadas como \"cidad\u00e3os de primeira classe\" e tudo em torno de um projeto gira em torno da ideia de que, no final, essas APIs ser\u00e3o consumidas por clientes. Com base nos requisitos de neg\u00f3cios, a equipe de desenvolvimento de API come\u00e7a descrevendo primeiro os designs da API como um documento Open API e colabora com as partes interessadas para obter feedback. Essa abordagem \u00e9 bastante \u00fatil se um projeto envolver o desenvolvimento de um conjunto de APIs externamente expostas que ser\u00e3o consumidas por parceiros. Nessa abordagem, concordamos primeiro com um contrato de API (documento Open API), criando expectativas claras tanto para o produtor quanto para o consumidor da API, para que ambas as equipes possam come\u00e7ar a trabalhar em paralelo de acordo com o design da API pr\u00e9-acordado. Principais benef\u00edcios desta abordagem: Feedback precoce sobre o design da API. Expectativas claramente estabelecidas tanto para o consumidor quanto para o produtor, j\u00e1 que ambos concordaram com um contrato de API. As equipes de desenvolvimento podem trabalhar em paralelo. A equipe de testes pode usar os contratos de API para escrever testes antecipados, mesmo antes que a l\u00f3gica de neg\u00f3cios esteja implementada. Ao examinar modelos, caminhos, atributos e outros aspectos da API, os testadores podem fornecer seu feedback, o que pode ser muito valioso. Durante um ciclo de desenvolvimento \u00e1gil, as defini\u00e7\u00f5es de API n\u00e3o s\u00e3o impactadas por altera\u00e7\u00f5es incrementais. O design da API n\u00e3o \u00e9 influenciado por limita\u00e7\u00f5es de implementa\u00e7\u00e3o real e estrutura de c\u00f3digo. O c\u00f3digo de boilerplate do lado do servidor, como controladores, DTOs, etc., pode ser gerado automaticamente a partir dos contratos de API. Pode melhorar a colabora\u00e7\u00e3o entre as equipes de produtor e consumidor da API. Planejando um Desenvolvimento Design-First: Identifique casos de uso e servi\u00e7os-chave que a API deve oferecer. Identifique as principais partes interessadas da API e tente inclu\u00ed-las na fase de design da API para obter feedback cont\u00ednuo. Escreva defini\u00e7\u00f5es de contrato de API. Mantenha um estilo consistente para c\u00f3digos de status da API, versionamento, respostas de erro, etc. Incentive revis\u00f5es por pares por meio de solicita\u00e7\u00f5es de pull. Gere o c\u00f3digo de boilerplate do lado do servidor e os SDKs do cliente a partir das defini\u00e7\u00f5es de contrato de API. Pontos importantes a considerar: Se os requisitos da API mudarem com frequ\u00eancia durante a fase inicial de desenvolvimento, a abordagem Design-First pode n\u00e3o ser adequada, pois isso introduzir\u00e1 uma sobrecarga adicional, exigindo atualiza\u00e7\u00f5es e manuten\u00e7\u00e3o repetidas das defini\u00e7\u00f5es de contrato da API. Pode ser \u00fatil primeiro experimentar o gerador de c\u00f3digo espec\u00edfico da plataforma e avaliar quanto trabalho adicional ser\u00e1 necess\u00e1rio para atender aos requisitos e diretrizes de codifica\u00e7\u00e3o do projeto, pois \u00e9 poss\u00edvel que um gerador de c\u00f3digo espec\u00edfico da plataforma n\u00e3o consiga gerar uma implementa\u00e7\u00e3o flex\u00edvel e mantida do c\u00f3digo real. Por exemplo, se o seu framework web exigir que anota\u00e7\u00f5es estejam presentes em suas classes de controlador (por exemplo, para versionamento de API ou autentica\u00e7\u00e3o), certifique-se de que a ferramenta de gera\u00e7\u00e3o de c\u00f3digo que voc\u00ea usa as suporta totalmente. Microsoft TypeSpec \u00e9 uma ferramenta valiosa para desenvolvedores que trabalham com APIs complexas. Fornecendo padr\u00f5es reutiliz\u00e1veis, ele pode simplificar o desenvolvimento de APIs e promover as melhores pr\u00e1ticas. Criamos alguns exemplos de como aplicar uma abordagem de desenvolvimento Design-First em um pipeline de CI/CD do GitHub para ajudar a acelerar sua ado\u00e7\u00e3o em um Desenvolvimento Design-First. Abordagem Code-First Uma abordagem Code-First significa que as equipes de desenvolvimento primeiro implementam o c\u00f3digo da interface da API do lado do servidor, como controladores, DTOs, etc., e depois geram as defini\u00e7\u00f5es de contrato de API a partir dele. Nos tempos atuais, essa abordagem \u00e9 mais amplamente popular na comunidade de desenvolvedores do que a Abordagem Design-First. Essa abordagem tem a vantagem de permitir que a equipe implemente rapidamente as APIs e tamb\u00e9m fornece a flexibilidade de reagir muito rapidamente a quaisquer mudan\u00e7as inesperadas nos requisitos da API. Principais benef\u00edcios desta abordagem: Desenvolvimento r\u00e1pido de APIs, pois a equipe de desenvolvimento pode come\u00e7ar a implementar as APIs muito mais rapidamente ap\u00f3s entender os requisitos e casos de uso-chave. A equipe de desenvolvimento tem melhor controle e flexibilidade para implementar interfaces de API do lado do servidor da maneira que melhor se adapte \u00e0 estrutura do projeto. Mais popular entre as equipes de desenvolvimento, tornando mais f\u00e1cil obter consenso sobre t\u00f3picos relacionados e tamb\u00e9m possui mais exemplos de c\u00f3digo prontos para uso dispon\u00edveis em v\u00e1rios blogs ou f\u00f3runs de desenvolvedores sobre como gerar defini\u00e7\u00f5es Open API a partir do c\u00f3digo real. Pontos importantes a considerar: Uma defini\u00e7\u00e3o Open API gerada pode ficar desatualizada, portanto, \u00e9 importante ter verifica\u00e7\u00f5es automatizadas para evitar isso, caso contr\u00e1rio, os SDKs de cliente gerados estar\u00e3o desatualizados e podem causar problemas para os consumidores da API. Com o desenvolvimento \u00e1gil, \u00e9 dif\u00edcil garantir que as defini\u00e7\u00f5es incorporadas no c\u00f3digo em tempo de execu\u00e7\u00e3o permane\u00e7am est\u00e1veis, especialmente em rodadas de refatora\u00e7\u00e3o e ao atender v\u00e1rias vers\u00f5es concorrentes da API. Pode ser \u00fatil gerar regularmente a defini\u00e7\u00e3o Open API e armazen\u00e1-la em um sistema de controle de vers\u00e3o; caso contr\u00e1rio, gerar a defini\u00e7\u00e3o Open API em tempo de execu\u00e7\u00e3o pode tornar mais complexo em cen\u00e1rios em que essa defini\u00e7\u00e3o \u00e9 necess\u00e1ria durante o desenvolvimento/tempo de CI. Como Interpretar e Aplicar as Diretrizes O documento de diretrizes de API inclui uma se\u00e7\u00e3o sobre como aplicar as diretrizes , dependendo se a API \u00e9 nova ou existente. Em particular, ao trabalhar em um ecossistema de API existente, certifique-se de alinhar com as partes interessadas uma defini\u00e7\u00e3o do que constitui uma mudan\u00e7a quebra para entender o impacto da implementa\u00e7\u00e3o de determinadas melhores pr\u00e1ticas. N\u00e3o recomendamos fazer uma mudan\u00e7a quebra em um servi\u00e7o que antecede estas diretrizes simplesmente para cumprir. Recursos Adicionais Lista de Leitura Recomendada da Microsoft para REST APIs Documenta\u00e7\u00e3o - Orienta\u00e7\u00e3o - REST APIs Defini\u00e7\u00f5es detalhadas de c\u00f3digos de status HTTP Versionamento Sem\u00e2ntico Outras Diretrizes P\u00fablicas de API Pr\u00e1ticas de Design OpenAPI Microsoft TypeSpec Exemplos de Fluxo de Trabalho do GitHub Microsoft TypeSpec","title":"Orienta\u00e7\u00f5es de Design de REST API"},{"location":"design/design-patterns/rest-api-design-guidance/#orientacoes-de-design-de-rest-api","text":"","title":"Orienta\u00e7\u00f5es de Design de REST API"},{"location":"design/design-patterns/rest-api-design-guidance/#objetivos","text":"Elevar as diretrizes de design de REST API publicadas pela Microsoft . Destacar decis\u00f5es de design comuns e fatores a serem considerados ao projetar. Fornecer recursos adicionais para informar o design de API em \u00e1reas n\u00e3o abordadas diretamente pelas diretrizes da Microsoft.","title":"Objetivos"},{"location":"design/design-patterns/rest-api-design-guidance/#decisoes-comuns-de-design-de-api","text":"As diretrizes da Microsoft para REST API fornecem orienta\u00e7\u00f5es de design que abrangem uma variedade de casos de uso. As seguintes se\u00e7\u00f5es s\u00e3o um bom ponto de partida, pois s\u00e3o considera\u00e7\u00f5es provavelmente necess\u00e1rias em qualquer design de REST API: Estrutura de URL M\u00e9todos HTTP C\u00f3digos de Status HTTP Cole\u00e7\u00f5es Padroniza\u00e7\u00f5es JSON Versionamento Nomenclatura","title":"Decis\u00f5es Comuns de Design de API"},{"location":"design/design-patterns/rest-api-design-guidance/#criando-contratos-de-api","text":"\u00c0 medida que diferentes equipes de desenvolvimento exp\u00f5em APIs para acessar v\u00e1rios servi\u00e7os baseados em REST, \u00e9 importante ter um contrato de API para compartilhar entre os produtores e consumidores de APIs. O formato Open API \u00e9 um dos formatos de descri\u00e7\u00e3o de API mais populares. Este documento Open API pode ser produzido de duas maneiras: Abordagem Design-First - A equipe come\u00e7a a desenvolver APIs descrevendo primeiro os designs da API como um documento Open API e posteriormente gera o c\u00f3digo de boilerplate do lado do servidor com a ajuda deste documento. Abordagem Code-First - A equipe come\u00e7a escrevendo o c\u00f3digo da interface da API do lado do servidor, como controladores, DTOs, etc., e posteriormente gera um documento Open API a partir dele.","title":"Criando Contratos de API"},{"location":"design/design-patterns/rest-api-design-guidance/#abordagem-design-first","text":"Uma abordagem Design-First significa que as APIs s\u00e3o tratadas como \"cidad\u00e3os de primeira classe\" e tudo em torno de um projeto gira em torno da ideia de que, no final, essas APIs ser\u00e3o consumidas por clientes. Com base nos requisitos de neg\u00f3cios, a equipe de desenvolvimento de API come\u00e7a descrevendo primeiro os designs da API como um documento Open API e colabora com as partes interessadas para obter feedback. Essa abordagem \u00e9 bastante \u00fatil se um projeto envolver o desenvolvimento de um conjunto de APIs externamente expostas que ser\u00e3o consumidas por parceiros. Nessa abordagem, concordamos primeiro com um contrato de API (documento Open API), criando expectativas claras tanto para o produtor quanto para o consumidor da API, para que ambas as equipes possam come\u00e7ar a trabalhar em paralelo de acordo com o design da API pr\u00e9-acordado. Principais benef\u00edcios desta abordagem: Feedback precoce sobre o design da API. Expectativas claramente estabelecidas tanto para o consumidor quanto para o produtor, j\u00e1 que ambos concordaram com um contrato de API. As equipes de desenvolvimento podem trabalhar em paralelo. A equipe de testes pode usar os contratos de API para escrever testes antecipados, mesmo antes que a l\u00f3gica de neg\u00f3cios esteja implementada. Ao examinar modelos, caminhos, atributos e outros aspectos da API, os testadores podem fornecer seu feedback, o que pode ser muito valioso. Durante um ciclo de desenvolvimento \u00e1gil, as defini\u00e7\u00f5es de API n\u00e3o s\u00e3o impactadas por altera\u00e7\u00f5es incrementais. O design da API n\u00e3o \u00e9 influenciado por limita\u00e7\u00f5es de implementa\u00e7\u00e3o real e estrutura de c\u00f3digo. O c\u00f3digo de boilerplate do lado do servidor, como controladores, DTOs, etc., pode ser gerado automaticamente a partir dos contratos de API. Pode melhorar a colabora\u00e7\u00e3o entre as equipes de produtor e consumidor da API. Planejando um Desenvolvimento Design-First: Identifique casos de uso e servi\u00e7os-chave que a API deve oferecer. Identifique as principais partes interessadas da API e tente inclu\u00ed-las na fase de design da API para obter feedback cont\u00ednuo. Escreva defini\u00e7\u00f5es de contrato de API. Mantenha um estilo consistente para c\u00f3digos de status da API, versionamento, respostas de erro, etc. Incentive revis\u00f5es por pares por meio de solicita\u00e7\u00f5es de pull. Gere o c\u00f3digo de boilerplate do lado do servidor e os SDKs do cliente a partir das defini\u00e7\u00f5es de contrato de API. Pontos importantes a considerar: Se os requisitos da API mudarem com frequ\u00eancia durante a fase inicial de desenvolvimento, a abordagem Design-First pode n\u00e3o ser adequada, pois isso introduzir\u00e1 uma sobrecarga adicional, exigindo atualiza\u00e7\u00f5es e manuten\u00e7\u00e3o repetidas das defini\u00e7\u00f5es de contrato da API. Pode ser \u00fatil primeiro experimentar o gerador de c\u00f3digo espec\u00edfico da plataforma e avaliar quanto trabalho adicional ser\u00e1 necess\u00e1rio para atender aos requisitos e diretrizes de codifica\u00e7\u00e3o do projeto, pois \u00e9 poss\u00edvel que um gerador de c\u00f3digo espec\u00edfico da plataforma n\u00e3o consiga gerar uma implementa\u00e7\u00e3o flex\u00edvel e mantida do c\u00f3digo real. Por exemplo, se o seu framework web exigir que anota\u00e7\u00f5es estejam presentes em suas classes de controlador (por exemplo, para versionamento de API ou autentica\u00e7\u00e3o), certifique-se de que a ferramenta de gera\u00e7\u00e3o de c\u00f3digo que voc\u00ea usa as suporta totalmente. Microsoft TypeSpec \u00e9 uma ferramenta valiosa para desenvolvedores que trabalham com APIs complexas. Fornecendo padr\u00f5es reutiliz\u00e1veis, ele pode simplificar o desenvolvimento de APIs e promover as melhores pr\u00e1ticas. Criamos alguns exemplos de como aplicar uma abordagem de desenvolvimento Design-First em um pipeline de CI/CD do GitHub para ajudar a acelerar sua ado\u00e7\u00e3o em um Desenvolvimento Design-First.","title":"Abordagem Design-First"},{"location":"design/design-patterns/rest-api-design-guidance/#abordagem-code-first","text":"Uma abordagem Code-First significa que as equipes de desenvolvimento primeiro implementam o c\u00f3digo da interface da API do lado do servidor, como controladores, DTOs, etc., e depois geram as defini\u00e7\u00f5es de contrato de API a partir dele. Nos tempos atuais, essa abordagem \u00e9 mais amplamente popular na comunidade de desenvolvedores do que a Abordagem Design-First. Essa abordagem tem a vantagem de permitir que a equipe implemente rapidamente as APIs e tamb\u00e9m fornece a flexibilidade de reagir muito rapidamente a quaisquer mudan\u00e7as inesperadas nos requisitos da API. Principais benef\u00edcios desta abordagem: Desenvolvimento r\u00e1pido de APIs, pois a equipe de desenvolvimento pode come\u00e7ar a implementar as APIs muito mais rapidamente ap\u00f3s entender os requisitos e casos de uso-chave. A equipe de desenvolvimento tem melhor controle e flexibilidade para implementar interfaces de API do lado do servidor da maneira que melhor se adapte \u00e0 estrutura do projeto. Mais popular entre as equipes de desenvolvimento, tornando mais f\u00e1cil obter consenso sobre t\u00f3picos relacionados e tamb\u00e9m possui mais exemplos de c\u00f3digo prontos para uso dispon\u00edveis em v\u00e1rios blogs ou f\u00f3runs de desenvolvedores sobre como gerar defini\u00e7\u00f5es Open API a partir do c\u00f3digo real. Pontos importantes a considerar: Uma defini\u00e7\u00e3o Open API gerada pode ficar desatualizada, portanto, \u00e9 importante ter verifica\u00e7\u00f5es automatizadas para evitar isso, caso contr\u00e1rio, os SDKs de cliente gerados estar\u00e3o desatualizados e podem causar problemas para os consumidores da API. Com o desenvolvimento \u00e1gil, \u00e9 dif\u00edcil garantir que as defini\u00e7\u00f5es incorporadas no c\u00f3digo em tempo de execu\u00e7\u00e3o permane\u00e7am est\u00e1veis, especialmente em rodadas de refatora\u00e7\u00e3o e ao atender v\u00e1rias vers\u00f5es concorrentes da API. Pode ser \u00fatil gerar regularmente a defini\u00e7\u00e3o Open API e armazen\u00e1-la em um sistema de controle de vers\u00e3o; caso contr\u00e1rio, gerar a defini\u00e7\u00e3o Open API em tempo de execu\u00e7\u00e3o pode tornar mais complexo em cen\u00e1rios em que essa defini\u00e7\u00e3o \u00e9 necess\u00e1ria durante o desenvolvimento/tempo de CI.","title":"Abordagem Code-First"},{"location":"design/design-patterns/rest-api-design-guidance/#como-interpretar-e-aplicar-as-diretrizes","text":"O documento de diretrizes de API inclui uma se\u00e7\u00e3o sobre como aplicar as diretrizes , dependendo se a API \u00e9 nova ou existente. Em particular, ao trabalhar em um ecossistema de API existente, certifique-se de alinhar com as partes interessadas uma defini\u00e7\u00e3o do que constitui uma mudan\u00e7a quebra para entender o impacto da implementa\u00e7\u00e3o de determinadas melhores pr\u00e1ticas. N\u00e3o recomendamos fazer uma mudan\u00e7a quebra em um servi\u00e7o que antecede estas diretrizes simplesmente para cumprir.","title":"Como Interpretar e Aplicar as Diretrizes"},{"location":"design/design-patterns/rest-api-design-guidance/#recursos-adicionais","text":"Lista de Leitura Recomendada da Microsoft para REST APIs Documenta\u00e7\u00e3o - Orienta\u00e7\u00e3o - REST APIs Defini\u00e7\u00f5es detalhadas de c\u00f3digos de status HTTP Versionamento Sem\u00e2ntico Outras Diretrizes P\u00fablicas de API Pr\u00e1ticas de Design OpenAPI Microsoft TypeSpec Exemplos de Fluxo de Trabalho do GitHub Microsoft TypeSpec","title":"Recursos Adicionais"},{"location":"design/design-reviews/","text":"Revis\u00f5es de Design Sum\u00e1rio Objetivos Medidas Impacto Participa\u00e7\u00e3o Orienta\u00e7\u00e3o para Facilita\u00e7\u00e3o Avalia\u00e7\u00e3o T\u00e9cnica Objetivos Reduzir a d\u00edvida t\u00e9cnica para nossos clientes. Continuar a iterar no design ap\u00f3s a revis\u00e3o do Plano de Jogo. Gerar artefatos t\u00e9cnicos \u00fateis que possam ser referenciados pela Microsoft e pelos clientes. Medidas Custo da Mudan\u00e7a Ao incorporar revis\u00f5es de design como parte do processo de engenharia, as decis\u00f5es s\u00e3o tomadas antecipadamente antes do in\u00edcio da implementa\u00e7\u00e3o. Tomar a decis\u00e3o de usar o Azure Kubernetes Service em vez dos Servi\u00e7os de Aplicativos na fase de design provavelmente requer apenas a atualiza\u00e7\u00e3o da documenta\u00e7\u00e3o. No entanto, fazer essa mudan\u00e7a ap\u00f3s o in\u00edcio da implementa\u00e7\u00e3o ou ap\u00f3s a solu\u00e7\u00e3o estar em uso \u00e9 muito mais custoso. Essas mudan\u00e7as est\u00e3o ocorrendo antes ou depois da implementa\u00e7\u00e3o? Qual \u00e9 o esfor\u00e7o normalmente envolvido? Participa\u00e7\u00e3o dos Revisores Quantas pessoas participam das revis\u00f5es dos designs criados? Cumulativamente, se esse n\u00famero for maior, isso indicaria uma maior contribui\u00e7\u00e3o de ideias e perspectivas. Um n\u00famero menor (ou seja, as mesmas 2 pessoas apenas em cada revis\u00e3o) pode indicar um conjunto limitado de perspectivas. Algu\u00e9m est\u00e1 participando de fora da equipe central de desenvolvimento? Tempo para Solu\u00e7\u00f5es Potenciais Quanto tempo normalmente leva para ir dos requisitos \u00e0s op\u00e7\u00f5es de solu\u00e7\u00e3o (m\u00faltiplas)? H\u00e1 um equil\u00edbrio saud\u00e1vel entre gastar muito ou muito pouco tempo avaliando diferentes solu\u00e7\u00f5es potenciais. Muito pouco tempo aumenta o risco de mudan\u00e7as custosas necess\u00e1rias ap\u00f3s a implementa\u00e7\u00e3o. Muito tempo atrasa a entrega do valor-alvo e das funcionalidades subsequentes na fila. No entanto, quanto mais r\u00e1pido a equipe puder identificar as informa\u00e7\u00f5es mais cr\u00edticas necess\u00e1rias para tomar uma decis\u00e3o informada , mais r\u00e1pido o valor pode ser entregue com menor risco de mudan\u00e7as custosas no futuro. Tempo para Decis\u00f5es Quanto tempo leva para tomar uma decis\u00e3o sobre qual solu\u00e7\u00e3o implementar? Tamb\u00e9m h\u00e1 um equil\u00edbrio saud\u00e1vel em apoiar um debate saud\u00e1vel sem prejudicar a entrega da equipe. O caso ideal \u00e9 que a equipe assimile rapidamente as op\u00e7\u00f5es de solu\u00e7\u00e3o apresentadas, fa\u00e7a perguntas e debata antes de finalmente alcan\u00e7ar um consenso sobre uma abordagem espec\u00edfica. Nos casos em que n\u00e3o houver consenso, a pessoa com mais contexto sobre o problema (geralmente o propriet\u00e1rio da hist\u00f3ria) deve tomar a decis\u00e3o final. Priorize a entrega de valor e aprendizado. Discordem e comprometam-se! Impacto As solu\u00e7\u00f5es podem ser rapidamente implementadas no ambiente de produ\u00e7\u00e3o do cliente. \u00c9 mais f\u00e1cil para outras equipes de desenvolvimento aproveitar o trabalho de sua equipe. \u00c9 mais f\u00e1cil para os engenheiros se envolverem em projetos. Aumento da velocidade da equipe ao antecipar mudan\u00e7as e decis\u00f5es quando elas custam menos. Maior engajamento e transpar\u00eancia da equipe ao solicitar ampla participa\u00e7\u00e3o dos revisores. Participa\u00e7\u00e3o Equipe de Desenvolvimento A equipe de desenvolvimento deve sempre participar de todas as sess\u00f5es de revis\u00e3o de design. Engenharia do ISE (Intelligent Security Engineering) Engenharia de Clientes Especialistas em Dom\u00ednio Os especialistas em dom\u00ednio devem participar das sess\u00f5es de revis\u00e3o de design conforme necess\u00e1rio. Dom\u00ednios T\u00e9cnicos do ISE Especialistas em assuntos do cliente (SME - Subject Matter Experts) Lideran\u00e7a S\u00eanior Orienta\u00e7\u00e3o para Facilita\u00e7\u00e3o Receitas Consulte nossas Receitas de Revis\u00e3o de Design para orienta\u00e7\u00f5es sobre o processo de design. Sincroniza\u00e7\u00e3o de Revis\u00f5es de Design via Reuni\u00f5es Presenciais/Virtuais Reuni\u00f5es conjuntas com a equipe de desenvolvimento, especialistas em dom\u00ednio e engenheiros do cliente. Revis\u00f5es de Design Ass\u00edncronas via Pull Requests Consulte a receita de revis\u00e3o de design ass\u00edncrona para orienta\u00e7\u00f5es sobre a facilita\u00e7\u00e3o de revis\u00f5es de design ass\u00edncronas. Isso pode ser \u00fatil para equipes que est\u00e3o geograficamente distribu\u00eddas em diferentes fusos hor\u00e1rios. Avalia\u00e7\u00e3o T\u00e9cnica Um spike t\u00e9cnico \u00e9 mais frequentemente usado para avaliar o impacto que uma nova tecnologia tem na implementa\u00e7\u00e3o atual. Leia mais aqui . Documenta\u00e7\u00e3o de Design Documentar e atualizar o design de arquitetura na documenta\u00e7\u00e3o de design do projeto. Rastrear e documentar decis\u00f5es de design em um registro de decis\u00f5es . Documentar o processo de decis\u00e3o em estudos de troca quando v\u00e1rias solu\u00e7\u00f5es existem para o problema dado. No in\u00edcio das colabora\u00e7\u00f5es, a equipe deve decidir onde armazenar os artefatos gerados pelas revis\u00f5es de design. Normalmente, nos encontramos com o cliente onde eles preferem (por exemplo, usando sua inst\u00e2ncia Confluence para armazenar a documenta\u00e7\u00e3o, se essa for a prefer\u00eancia deles). No entanto, semelhante ao armazenamento de registros de decis\u00f5es, estudos de troca, etc., no reposit\u00f3rio de desenvolvimento, tamb\u00e9m existem grandes benef\u00edcios em manter os artefatos de revis\u00e3o de design no pr\u00f3prio reposit\u00f3rio. Normalmente, esses artefatos podem ser adicionados ao diret\u00f3rio de documenta\u00e7\u00e3o de n\u00edvel superior ou at\u00e9 mesmo \u00e0 raiz do projeto correspondente, se o reposit\u00f3rio for monol\u00edtico. Ao adicion\u00e1-los ao reposit\u00f3rio do projeto, esses artefatos devem ser revisados em Pull Requests (normalmente precedendo, mas \u00e0s vezes acompanhando a implementa\u00e7\u00e3o), o que permite a revis\u00e3o/discuss\u00e3o ass\u00edncrona. Al\u00e9m disso, os artefatos podem ser facilmente vinculados a outras se\u00e7\u00f5es do reposit\u00f3rio e a arquivos de c\u00f3digo-fonte (por meio de links em Markdown ).","title":"Revis\u00f5es de Design"},{"location":"design/design-reviews/#revisoes-de-design","text":"","title":"Revis\u00f5es de Design"},{"location":"design/design-reviews/#sumario","text":"Objetivos Medidas Impacto Participa\u00e7\u00e3o Orienta\u00e7\u00e3o para Facilita\u00e7\u00e3o Avalia\u00e7\u00e3o T\u00e9cnica","title":"Sum\u00e1rio"},{"location":"design/design-reviews/#objetivos","text":"Reduzir a d\u00edvida t\u00e9cnica para nossos clientes. Continuar a iterar no design ap\u00f3s a revis\u00e3o do Plano de Jogo. Gerar artefatos t\u00e9cnicos \u00fateis que possam ser referenciados pela Microsoft e pelos clientes.","title":"Objetivos"},{"location":"design/design-reviews/#medidas","text":"","title":"Medidas"},{"location":"design/design-reviews/#custo-da-mudanca","text":"Ao incorporar revis\u00f5es de design como parte do processo de engenharia, as decis\u00f5es s\u00e3o tomadas antecipadamente antes do in\u00edcio da implementa\u00e7\u00e3o. Tomar a decis\u00e3o de usar o Azure Kubernetes Service em vez dos Servi\u00e7os de Aplicativos na fase de design provavelmente requer apenas a atualiza\u00e7\u00e3o da documenta\u00e7\u00e3o. No entanto, fazer essa mudan\u00e7a ap\u00f3s o in\u00edcio da implementa\u00e7\u00e3o ou ap\u00f3s a solu\u00e7\u00e3o estar em uso \u00e9 muito mais custoso. Essas mudan\u00e7as est\u00e3o ocorrendo antes ou depois da implementa\u00e7\u00e3o? Qual \u00e9 o esfor\u00e7o normalmente envolvido?","title":"Custo da Mudan\u00e7a"},{"location":"design/design-reviews/#participacao-dos-revisores","text":"Quantas pessoas participam das revis\u00f5es dos designs criados? Cumulativamente, se esse n\u00famero for maior, isso indicaria uma maior contribui\u00e7\u00e3o de ideias e perspectivas. Um n\u00famero menor (ou seja, as mesmas 2 pessoas apenas em cada revis\u00e3o) pode indicar um conjunto limitado de perspectivas. Algu\u00e9m est\u00e1 participando de fora da equipe central de desenvolvimento?","title":"Participa\u00e7\u00e3o dos Revisores"},{"location":"design/design-reviews/#tempo-para-solucoes-potenciais","text":"Quanto tempo normalmente leva para ir dos requisitos \u00e0s op\u00e7\u00f5es de solu\u00e7\u00e3o (m\u00faltiplas)? H\u00e1 um equil\u00edbrio saud\u00e1vel entre gastar muito ou muito pouco tempo avaliando diferentes solu\u00e7\u00f5es potenciais. Muito pouco tempo aumenta o risco de mudan\u00e7as custosas necess\u00e1rias ap\u00f3s a implementa\u00e7\u00e3o. Muito tempo atrasa a entrega do valor-alvo e das funcionalidades subsequentes na fila. No entanto, quanto mais r\u00e1pido a equipe puder identificar as informa\u00e7\u00f5es mais cr\u00edticas necess\u00e1rias para tomar uma decis\u00e3o informada , mais r\u00e1pido o valor pode ser entregue com menor risco de mudan\u00e7as custosas no futuro.","title":"Tempo para Solu\u00e7\u00f5es Potenciais"},{"location":"design/design-reviews/#tempo-para-decisoes","text":"Quanto tempo leva para tomar uma decis\u00e3o sobre qual solu\u00e7\u00e3o implementar? Tamb\u00e9m h\u00e1 um equil\u00edbrio saud\u00e1vel em apoiar um debate saud\u00e1vel sem prejudicar a entrega da equipe. O caso ideal \u00e9 que a equipe assimile rapidamente as op\u00e7\u00f5es de solu\u00e7\u00e3o apresentadas, fa\u00e7a perguntas e debata antes de finalmente alcan\u00e7ar um consenso sobre uma abordagem espec\u00edfica. Nos casos em que n\u00e3o houver consenso, a pessoa com mais contexto sobre o problema (geralmente o propriet\u00e1rio da hist\u00f3ria) deve tomar a decis\u00e3o final. Priorize a entrega de valor e aprendizado. Discordem e comprometam-se!","title":"Tempo para Decis\u00f5es"},{"location":"design/design-reviews/#impacto","text":"As solu\u00e7\u00f5es podem ser rapidamente implementadas no ambiente de produ\u00e7\u00e3o do cliente. \u00c9 mais f\u00e1cil para outras equipes de desenvolvimento aproveitar o trabalho de sua equipe. \u00c9 mais f\u00e1cil para os engenheiros se envolverem em projetos. Aumento da velocidade da equipe ao antecipar mudan\u00e7as e decis\u00f5es quando elas custam menos. Maior engajamento e transpar\u00eancia da equipe ao solicitar ampla participa\u00e7\u00e3o dos revisores.","title":"Impacto"},{"location":"design/design-reviews/#participacao","text":"","title":"Participa\u00e7\u00e3o"},{"location":"design/design-reviews/#equipe-de-desenvolvimento","text":"A equipe de desenvolvimento deve sempre participar de todas as sess\u00f5es de revis\u00e3o de design. Engenharia do ISE (Intelligent Security Engineering) Engenharia de Clientes","title":"Equipe de Desenvolvimento"},{"location":"design/design-reviews/#especialistas-em-dominio","text":"Os especialistas em dom\u00ednio devem participar das sess\u00f5es de revis\u00e3o de design conforme necess\u00e1rio. Dom\u00ednios T\u00e9cnicos do ISE Especialistas em assuntos do cliente (SME - Subject Matter Experts) Lideran\u00e7a S\u00eanior","title":"Especialistas em Dom\u00ednio"},{"location":"design/design-reviews/#orientacao-para-facilitacao","text":"","title":"Orienta\u00e7\u00e3o para Facilita\u00e7\u00e3o"},{"location":"design/design-reviews/#receitas","text":"Consulte nossas Receitas de Revis\u00e3o de Design para orienta\u00e7\u00f5es sobre o processo de design.","title":"Receitas"},{"location":"design/design-reviews/#sincronizacao-de-revisoes-de-design-via-reunioes-presenciaisvirtuais","text":"Reuni\u00f5es conjuntas com a equipe de desenvolvimento, especialistas em dom\u00ednio e engenheiros do cliente.","title":"Sincroniza\u00e7\u00e3o de Revis\u00f5es de Design via Reuni\u00f5es Presenciais/Virtuais"},{"location":"design/design-reviews/#revisoes-de-design-assincronas-via-pull-requests","text":"Consulte a receita de revis\u00e3o de design ass\u00edncrona para orienta\u00e7\u00f5es sobre a facilita\u00e7\u00e3o de revis\u00f5es de design ass\u00edncronas. Isso pode ser \u00fatil para equipes que est\u00e3o geograficamente distribu\u00eddas em diferentes fusos hor\u00e1rios.","title":"Revis\u00f5es de Design Ass\u00edncronas via Pull Requests"},{"location":"design/design-reviews/#avaliacao-tecnica","text":"Um spike t\u00e9cnico \u00e9 mais frequentemente usado para avaliar o impacto que uma nova tecnologia tem na implementa\u00e7\u00e3o atual. Leia mais aqui .","title":"Avalia\u00e7\u00e3o T\u00e9cnica"},{"location":"design/design-reviews/#documentacao-de-design","text":"Documentar e atualizar o design de arquitetura na documenta\u00e7\u00e3o de design do projeto. Rastrear e documentar decis\u00f5es de design em um registro de decis\u00f5es . Documentar o processo de decis\u00e3o em estudos de troca quando v\u00e1rias solu\u00e7\u00f5es existem para o problema dado. No in\u00edcio das colabora\u00e7\u00f5es, a equipe deve decidir onde armazenar os artefatos gerados pelas revis\u00f5es de design. Normalmente, nos encontramos com o cliente onde eles preferem (por exemplo, usando sua inst\u00e2ncia Confluence para armazenar a documenta\u00e7\u00e3o, se essa for a prefer\u00eancia deles). No entanto, semelhante ao armazenamento de registros de decis\u00f5es, estudos de troca, etc., no reposit\u00f3rio de desenvolvimento, tamb\u00e9m existem grandes benef\u00edcios em manter os artefatos de revis\u00e3o de design no pr\u00f3prio reposit\u00f3rio. Normalmente, esses artefatos podem ser adicionados ao diret\u00f3rio de documenta\u00e7\u00e3o de n\u00edvel superior ou at\u00e9 mesmo \u00e0 raiz do projeto correspondente, se o reposit\u00f3rio for monol\u00edtico. Ao adicion\u00e1-los ao reposit\u00f3rio do projeto, esses artefatos devem ser revisados em Pull Requests (normalmente precedendo, mas \u00e0s vezes acompanhando a implementa\u00e7\u00e3o), o que permite a revis\u00e3o/discuss\u00e3o ass\u00edncrona. Al\u00e9m disso, os artefatos podem ser facilmente vinculados a outras se\u00e7\u00f5es do reposit\u00f3rio e a arquivos de c\u00f3digo-fonte (por meio de links em Markdown ).","title":"Documenta\u00e7\u00e3o de Design"},{"location":"design/design-reviews/decision-log/","text":"Registro de Decis\u00f5es de Design Nem todos os requisitos podem ser capturados no in\u00edcio de um projeto \u00e1gil durante uma ou mais sess\u00f5es de design. O design inicial da arquitetura pode evoluir ou mudar durante o projeto, especialmente se houver v\u00e1rias escolhas tecnol\u00f3gicas poss\u00edveis. Acompanhar essas mudan\u00e7as em um documento extenso geralmente n\u00e3o \u00e9 o ideal, pois voc\u00ea pode perder a vis\u00e3o geral das mudan\u00e7as de design feitas em qual ponto no tempo. Ter que percorrer um documento grande para encontrar um conte\u00fado espec\u00edfico leva tempo e, na maioria dos casos, as consequ\u00eancias de uma decis\u00e3o n\u00e3o s\u00e3o documentadas. Por que \u00e9 importante rastrear decis\u00f5es de design Rastrear uma decis\u00e3o de design de arquitetura pode ter muitas vantagens: Os desenvolvedores e partes interessadas do projeto podem ver o registro de decis\u00f5es e acompanhar as altera\u00e7\u00f5es, mesmo quando a composi\u00e7\u00e3o da equipe muda ao longo do tempo. O registro \u00e9 mantido atualizado. O contexto de uma decis\u00e3o, incluindo as consequ\u00eancias para a equipe, \u00e9 documentado junto com a decis\u00e3o. \u00c9 mais f\u00e1cil encontrar a decis\u00e3o de design em um registro do que ter que ler um documento grande. Qual \u00e9 o formato recomendado para rastrear decis\u00f5es Al\u00e9m de incorporar uma decis\u00e3o de design como uma atualiza\u00e7\u00e3o na documenta\u00e7\u00e3o de design geral do projeto, as decis\u00f5es podem ser rastreadas como Registros de Decis\u00f5es de Arquitetura conforme Michael Nygard prop\u00f4s em seu blog. O esfor\u00e7o investido em revis\u00f5es e discuss\u00f5es de design pode ser diferente ao longo do projeto. \u00c0s vezes, decis\u00f5es s\u00e3o tomadas rapidamente sem a necessidade de fazer uma compara\u00e7\u00e3o detalhada entre tecnologias concorrentes. Em alguns casos, \u00e9 necess\u00e1rio realizar um estudo mais elaborado das vantagens e desvantagens, conforme descrito na documenta\u00e7\u00e3o dos Estudos de Troca . Em outros casos, pode ser \u00fatil realizar Spikes de Viabilidade de Engenharia . Um ADR pode incorporar cada uma dessas abordagens diferentes. Registro de Decis\u00e3o de Arquitetura (ADR) Um registro de decis\u00e3o de arquitetura tem a estrutura [N\u00famero Crescente]. [T\u00edtulo da decis\u00e3o] O t\u00edtulo deve fornecer ao leitor informa\u00e7\u00f5es sobre o que foi decidido. Exemplo: 001. Registro de log no n\u00edvel do aplicativo com Serilog e Application Insights Data: A data em que a decis\u00e3o foi tomada. Status: Proposto/Aceito/Descontinuado/Substitu\u00eddo Um design proposto pode ser revisado pela equipe de desenvolvimento antes de ser aceito. Uma decis\u00e3o anterior pode ser substitu\u00edda por uma nova ou o registro ADR pode ser marcado como descontinuado caso n\u00e3o seja mais v\u00e1lido. Contexto: O texto deve fornecer ao leitor uma compreens\u00e3o do problema ou, como Michael Nygard coloca, uma descri\u00e7\u00e3o [objetiva] e neutra em valor das for\u00e7as em jogo. Exemplo: Devido ao design de microsservi\u00e7os da plataforma, precisamos garantir a consist\u00eancia do registro em cada servi\u00e7o para que o rastreamento de uso, desempenho, erros etc. possa ser realizado de ponta a ponta. Deve ser usado um \u00fanico framework de registro/monitoramento, onde poss\u00edvel, para alcan\u00e7ar isso, permitindo ao mesmo tempo a flexibilidade para integra\u00e7\u00e3o/exporta\u00e7\u00e3o em outras ferramentas em uma etapa posterior. Os desenvolvedores devem ter uma interface simples para registrar mensagens e m\u00e9tricas. Se a equipe de desenvolvimento adotou uma abordagem baseada em dados para apoiar a decis\u00e3o, ou seja, um estudo que avalia as escolhas potenciais em rela\u00e7\u00e3o a um conjunto de crit\u00e9rios objetivos seguindo a orienta\u00e7\u00e3o em Estudos de Troca , o estudo deve ser mencionado nesta se\u00e7\u00e3o. Decis\u00e3o: A decis\u00e3o tomada, deve come\u00e7ar com 'Vamos...' ou 'Concordamos em...'. Exemplo: Concordamos em utilizar o Serilog como o framework de registro do Dotnet de escolha no n\u00edvel do aplicativo, com integra\u00e7\u00e3o ao Log Analytics e Application Insights para an\u00e1lise. Consequ\u00eancias: O contexto resultante ap\u00f3s a aplica\u00e7\u00e3o da decis\u00e3o. Exemplo: > *A amostragem precisar\u00e1 ser configurada no Application Insights para que ela n\u00e3o fique excessivamente cara ao receber milh\u00f5es de mensagens, mas tamb\u00e9m n\u00e3o impe\u00e7a a captura de informa\u00e7\u00f5es essenciais. A equipe precisar\u00e1 registrar apenas o que foi acordado como essencial para monitoramento durante as revis\u00f5es de design, a fim de reduzir o ru\u00eddo e os n\u00edveis desnecess\u00e1rios de amostragem.* Onde armazenar ADRs ADRs podem ser armazenados e rastreados em qualquer sistema de controle de vers\u00e3o, como o Git. Como pr\u00e1tica recomendada, ADRs podem ser adicionados como pull requests no status proposto para serem discutidos pela equipe at\u00e9 que sejam atualizados para aceitos e mesclados com o ramo principal. Eles geralmente s\u00e3o armazenados em uma estrutura de pasta doc/adr ou doc/arch . Al\u00e9m disso, pode ser \u00fatil rastrear ADRs em um decision-log.md para fornecer metadados \u00fateis em um formato \u00f3bvio. Registros de Decis\u00e3o Um registro de decis\u00e3o \u00e9 um arquivo Markdown que cont\u00e9m uma tabela que fornece resumos executivos das decis\u00f5es contidas nos ADRs, bem como alguns outros metadados. Voc\u00ea pode ver um modelo de tabela em doc/decision-log.md . Quando rastrear ADRs As decis\u00f5es de design de arquitetura geralmente s\u00e3o rastreadas sempre que decis\u00f5es significativas s\u00e3o tomadas que afetam a estrutura e as caracter\u00edsticas da solu\u00e7\u00e3o ou framework que estamos construindo. ADRs tamb\u00e9m podem ser usados para documentar resultados de spikes ao avaliar diferentes escolhas tecnol\u00f3gicas. Exemplos de ADRs O primeiro ADR poderia ser a decis\u00e3o de usar ADRs para rastrear decis\u00f5es de design, 0001-registrar-decisoes-arquitetura.md , seguido por decis\u00f5es reais no engajamento, como no exemplo usado acima, 0002-registro-log-nivel-aplicativo.md .","title":"Registro de Decis\u00f5es de Design"},{"location":"design/design-reviews/decision-log/#registro-de-decisoes-de-design","text":"Nem todos os requisitos podem ser capturados no in\u00edcio de um projeto \u00e1gil durante uma ou mais sess\u00f5es de design. O design inicial da arquitetura pode evoluir ou mudar durante o projeto, especialmente se houver v\u00e1rias escolhas tecnol\u00f3gicas poss\u00edveis. Acompanhar essas mudan\u00e7as em um documento extenso geralmente n\u00e3o \u00e9 o ideal, pois voc\u00ea pode perder a vis\u00e3o geral das mudan\u00e7as de design feitas em qual ponto no tempo. Ter que percorrer um documento grande para encontrar um conte\u00fado espec\u00edfico leva tempo e, na maioria dos casos, as consequ\u00eancias de uma decis\u00e3o n\u00e3o s\u00e3o documentadas.","title":"Registro de Decis\u00f5es de Design"},{"location":"design/design-reviews/decision-log/#por-que-e-importante-rastrear-decisoes-de-design","text":"Rastrear uma decis\u00e3o de design de arquitetura pode ter muitas vantagens: Os desenvolvedores e partes interessadas do projeto podem ver o registro de decis\u00f5es e acompanhar as altera\u00e7\u00f5es, mesmo quando a composi\u00e7\u00e3o da equipe muda ao longo do tempo. O registro \u00e9 mantido atualizado. O contexto de uma decis\u00e3o, incluindo as consequ\u00eancias para a equipe, \u00e9 documentado junto com a decis\u00e3o. \u00c9 mais f\u00e1cil encontrar a decis\u00e3o de design em um registro do que ter que ler um documento grande.","title":"Por que \u00e9 importante rastrear decis\u00f5es de design"},{"location":"design/design-reviews/decision-log/#qual-e-o-formato-recomendado-para-rastrear-decisoes","text":"Al\u00e9m de incorporar uma decis\u00e3o de design como uma atualiza\u00e7\u00e3o na documenta\u00e7\u00e3o de design geral do projeto, as decis\u00f5es podem ser rastreadas como Registros de Decis\u00f5es de Arquitetura conforme Michael Nygard prop\u00f4s em seu blog. O esfor\u00e7o investido em revis\u00f5es e discuss\u00f5es de design pode ser diferente ao longo do projeto. \u00c0s vezes, decis\u00f5es s\u00e3o tomadas rapidamente sem a necessidade de fazer uma compara\u00e7\u00e3o detalhada entre tecnologias concorrentes. Em alguns casos, \u00e9 necess\u00e1rio realizar um estudo mais elaborado das vantagens e desvantagens, conforme descrito na documenta\u00e7\u00e3o dos Estudos de Troca . Em outros casos, pode ser \u00fatil realizar Spikes de Viabilidade de Engenharia . Um ADR pode incorporar cada uma dessas abordagens diferentes.","title":"Qual \u00e9 o formato recomendado para rastrear decis\u00f5es"},{"location":"design/design-reviews/decision-log/#registro-de-decisao-de-arquitetura-adr","text":"Um registro de decis\u00e3o de arquitetura tem a estrutura [N\u00famero Crescente]. [T\u00edtulo da decis\u00e3o] O t\u00edtulo deve fornecer ao leitor informa\u00e7\u00f5es sobre o que foi decidido. Exemplo: 001. Registro de log no n\u00edvel do aplicativo com Serilog e Application Insights Data: A data em que a decis\u00e3o foi tomada. Status: Proposto/Aceito/Descontinuado/Substitu\u00eddo Um design proposto pode ser revisado pela equipe de desenvolvimento antes de ser aceito. Uma decis\u00e3o anterior pode ser substitu\u00edda por uma nova ou o registro ADR pode ser marcado como descontinuado caso n\u00e3o seja mais v\u00e1lido. Contexto: O texto deve fornecer ao leitor uma compreens\u00e3o do problema ou, como Michael Nygard coloca, uma descri\u00e7\u00e3o [objetiva] e neutra em valor das for\u00e7as em jogo. Exemplo: Devido ao design de microsservi\u00e7os da plataforma, precisamos garantir a consist\u00eancia do registro em cada servi\u00e7o para que o rastreamento de uso, desempenho, erros etc. possa ser realizado de ponta a ponta. Deve ser usado um \u00fanico framework de registro/monitoramento, onde poss\u00edvel, para alcan\u00e7ar isso, permitindo ao mesmo tempo a flexibilidade para integra\u00e7\u00e3o/exporta\u00e7\u00e3o em outras ferramentas em uma etapa posterior. Os desenvolvedores devem ter uma interface simples para registrar mensagens e m\u00e9tricas. Se a equipe de desenvolvimento adotou uma abordagem baseada em dados para apoiar a decis\u00e3o, ou seja, um estudo que avalia as escolhas potenciais em rela\u00e7\u00e3o a um conjunto de crit\u00e9rios objetivos seguindo a orienta\u00e7\u00e3o em Estudos de Troca , o estudo deve ser mencionado nesta se\u00e7\u00e3o. Decis\u00e3o: A decis\u00e3o tomada, deve come\u00e7ar com 'Vamos...' ou 'Concordamos em...'. Exemplo: Concordamos em utilizar o Serilog como o framework de registro do Dotnet de escolha no n\u00edvel do aplicativo, com integra\u00e7\u00e3o ao Log Analytics e Application Insights para an\u00e1lise. Consequ\u00eancias: O contexto resultante ap\u00f3s a aplica\u00e7\u00e3o da decis\u00e3o. Exemplo: > *A amostragem precisar\u00e1 ser configurada no Application Insights para que ela n\u00e3o fique excessivamente cara ao receber milh\u00f5es de mensagens, mas tamb\u00e9m n\u00e3o impe\u00e7a a captura de informa\u00e7\u00f5es essenciais. A equipe precisar\u00e1 registrar apenas o que foi acordado como essencial para monitoramento durante as revis\u00f5es de design, a fim de reduzir o ru\u00eddo e os n\u00edveis desnecess\u00e1rios de amostragem.*","title":"Registro de Decis\u00e3o de Arquitetura (ADR)"},{"location":"design/design-reviews/decision-log/#onde-armazenar-adrs","text":"ADRs podem ser armazenados e rastreados em qualquer sistema de controle de vers\u00e3o, como o Git. Como pr\u00e1tica recomendada, ADRs podem ser adicionados como pull requests no status proposto para serem discutidos pela equipe at\u00e9 que sejam atualizados para aceitos e mesclados com o ramo principal. Eles geralmente s\u00e3o armazenados em uma estrutura de pasta doc/adr ou doc/arch . Al\u00e9m disso, pode ser \u00fatil rastrear ADRs em um decision-log.md para fornecer metadados \u00fateis em um formato \u00f3bvio.","title":"Onde armazenar ADRs"},{"location":"design/design-reviews/decision-log/#registros-de-decisao","text":"Um registro de decis\u00e3o \u00e9 um arquivo Markdown que cont\u00e9m uma tabela que fornece resumos executivos das decis\u00f5es contidas nos ADRs, bem como alguns outros metadados. Voc\u00ea pode ver um modelo de tabela em doc/decision-log.md .","title":"Registros de Decis\u00e3o"},{"location":"design/design-reviews/decision-log/#quando-rastrear-adrs","text":"As decis\u00f5es de design de arquitetura geralmente s\u00e3o rastreadas sempre que decis\u00f5es significativas s\u00e3o tomadas que afetam a estrutura e as caracter\u00edsticas da solu\u00e7\u00e3o ou framework que estamos construindo. ADRs tamb\u00e9m podem ser usados para documentar resultados de spikes ao avaliar diferentes escolhas tecnol\u00f3gicas.","title":"Quando rastrear ADRs"},{"location":"design/design-reviews/decision-log/#exemplos-de-adrs","text":"O primeiro ADR poderia ser a decis\u00e3o de usar ADRs para rastrear decis\u00f5es de design, 0001-registrar-decisoes-arquitetura.md , seguido por decis\u00f5es reais no engajamento, como no exemplo usado acima, 0002-registro-log-nivel-aplicativo.md .","title":"Exemplos de ADRs"},{"location":"design/design-reviews/decision-log/doc/decision-log/","text":"Registro de Decis\u00f5es Este documento \u00e9 usado para rastrear as principais decis\u00f5es tomadas durante o curso do projeto. Isso pode ser usado em um est\u00e1gio posterior para entender por que as decis\u00f5es foram tomadas e por quem. Decis\u00e3o Data Alternativas Consideradas Justificativa Documento Detalhado Tomada Por Trabalho Requerido Um resumo de uma senten\u00e7a da decis\u00e3o tomada. Data em que a decis\u00e3o foi tomada. Uma lista das outras abordagens consideradas. Um resumo de duas a tr\u00eas frases sobre por que a decis\u00e3o foi tomada. Um link para o ADR no formato [T\u00edtulo] DR. Quem tomou essa decis\u00e3o? Um link para o item de trabalho para o ADR vinculado.","title":"Registro de Decis\u00f5es"},{"location":"design/design-reviews/decision-log/doc/decision-log/#registro-de-decisoes","text":"Este documento \u00e9 usado para rastrear as principais decis\u00f5es tomadas durante o curso do projeto. Isso pode ser usado em um est\u00e1gio posterior para entender por que as decis\u00f5es foram tomadas e por quem. Decis\u00e3o Data Alternativas Consideradas Justificativa Documento Detalhado Tomada Por Trabalho Requerido Um resumo de uma senten\u00e7a da decis\u00e3o tomada. Data em que a decis\u00e3o foi tomada. Uma lista das outras abordagens consideradas. Um resumo de duas a tr\u00eas frases sobre por que a decis\u00e3o foi tomada. Um link para o ADR no formato [T\u00edtulo] DR. Quem tomou essa decis\u00e3o? Um link para o item de trabalho para o ADR vinculado.","title":"Registro de Decis\u00f5es"},{"location":"design/design-reviews/decision-log/doc/adr/0001-record-architecture-decisions/","text":"1. Registro de decis\u00f5es de arquitetura Data: 20 de mar\u00e7o de 2020 Status Aceito Contexto Precisamos registrar as decis\u00f5es arquitet\u00f4nicas tomadas neste projeto. Decis\u00e3o Usaremos Registros de Decis\u00f5es de Arquitetura, conforme descrito por Michael Nygard . Consequ\u00eancias Consulte o artigo de Michael Nygard, vinculado acima. Para uma ferramenta ADR leve, consulte adr-tools de Nat Pryce.","title":"1. Registro de decis\u00f5es de arquitetura"},{"location":"design/design-reviews/decision-log/doc/adr/0001-record-architecture-decisions/#1-registro-de-decisoes-de-arquitetura","text":"Data: 20 de mar\u00e7o de 2020","title":"1. Registro de decis\u00f5es de arquitetura"},{"location":"design/design-reviews/decision-log/doc/adr/0001-record-architecture-decisions/#status","text":"Aceito","title":"Status"},{"location":"design/design-reviews/decision-log/doc/adr/0001-record-architecture-decisions/#contexto","text":"Precisamos registrar as decis\u00f5es arquitet\u00f4nicas tomadas neste projeto.","title":"Contexto"},{"location":"design/design-reviews/decision-log/doc/adr/0001-record-architecture-decisions/#decisao","text":"Usaremos Registros de Decis\u00f5es de Arquitetura, conforme descrito por Michael Nygard .","title":"Decis\u00e3o"},{"location":"design/design-reviews/decision-log/doc/adr/0001-record-architecture-decisions/#consequencias","text":"Consulte o artigo de Michael Nygard, vinculado acima. Para uma ferramenta ADR leve, consulte adr-tools de Nat Pryce.","title":"Consequ\u00eancias"},{"location":"design/design-reviews/decision-log/doc/adr/0002-app-level-logging/","text":"2. Registro de Log no N\u00edvel de Aplicativo com Serilog e Application Insights Data: 8 de abril de 2020 Status Aceito Contexto Devido ao design de microservices da plataforma, precisamos garantir a consist\u00eancia do registro em cada servi\u00e7o para que o rastreamento de uso, desempenho, erros, etc., possa ser realizado de ponta a ponta. Deve ser utilizado um \u00fanico framework de registro/monitoramento sempre que poss\u00edvel para alcan\u00e7ar isso, permitindo ao mesmo tempo a flexibilidade para integra\u00e7\u00e3o/exporta\u00e7\u00e3o em outras ferramentas em um est\u00e1gio posterior. Os desenvolvedores devem ter uma interface simples para registrar mensagens e m\u00e9tricas. Decis\u00e3o Concordamos em utilizar o Serilog como o framework de registro preferido do Dotnet no n\u00edvel da aplica\u00e7\u00e3o, com integra\u00e7\u00e3o ao Log Analytics e Application Insights para an\u00e1lise. Consequ\u00eancias Ser\u00e1 necess\u00e1rio configurar a amostragem no Application Insights para que ele n\u00e3o se torne excessivamente caro ao receber milh\u00f5es de mensagens, mas tamb\u00e9m n\u00e3o impe\u00e7a a captura de informa\u00e7\u00f5es essenciais. A equipe precisar\u00e1 registrar apenas o que foi acordado como essencial para monitoramento como parte das revis\u00f5es de design, a fim de reduzir o ru\u00eddo e os n\u00edveis desnecess\u00e1rios de amostragem.","title":"2. Registro de Log no N\u00edvel de Aplicativo com Serilog e Application Insights"},{"location":"design/design-reviews/decision-log/doc/adr/0002-app-level-logging/#2-registro-de-log-no-nivel-de-aplicativo-com-serilog-e-application-insights","text":"Data: 8 de abril de 2020","title":"2. Registro de Log no N\u00edvel de Aplicativo com Serilog e Application Insights"},{"location":"design/design-reviews/decision-log/doc/adr/0002-app-level-logging/#status","text":"Aceito","title":"Status"},{"location":"design/design-reviews/decision-log/doc/adr/0002-app-level-logging/#contexto","text":"Devido ao design de microservices da plataforma, precisamos garantir a consist\u00eancia do registro em cada servi\u00e7o para que o rastreamento de uso, desempenho, erros, etc., possa ser realizado de ponta a ponta. Deve ser utilizado um \u00fanico framework de registro/monitoramento sempre que poss\u00edvel para alcan\u00e7ar isso, permitindo ao mesmo tempo a flexibilidade para integra\u00e7\u00e3o/exporta\u00e7\u00e3o em outras ferramentas em um est\u00e1gio posterior. Os desenvolvedores devem ter uma interface simples para registrar mensagens e m\u00e9tricas.","title":"Contexto"},{"location":"design/design-reviews/decision-log/doc/adr/0002-app-level-logging/#decisao","text":"Concordamos em utilizar o Serilog como o framework de registro preferido do Dotnet no n\u00edvel da aplica\u00e7\u00e3o, com integra\u00e7\u00e3o ao Log Analytics e Application Insights para an\u00e1lise.","title":"Decis\u00e3o"},{"location":"design/design-reviews/decision-log/doc/adr/0002-app-level-logging/#consequencias","text":"Ser\u00e1 necess\u00e1rio configurar a amostragem no Application Insights para que ele n\u00e3o se torne excessivamente caro ao receber milh\u00f5es de mensagens, mas tamb\u00e9m n\u00e3o impe\u00e7a a captura de informa\u00e7\u00f5es essenciais. A equipe precisar\u00e1 registrar apenas o que foi acordado como essencial para monitoramento como parte das revis\u00f5es de design, a fim de reduzir o ru\u00eddo e os n\u00edveis desnecess\u00e1rios de amostragem.","title":"Consequ\u00eancias"},{"location":"design/design-reviews/decision-log/examples/memory/","text":"Memory Esses exemplos foram retirados do projeto Memory, uma ferramenta interna para acompanhar as realiza\u00e7\u00f5es de um indiv\u00edduo. O exemplo principal aqui \u00e9 o Registro de Decis\u00f5es . Como este registro foi usado desde o in\u00edcio, as decis\u00f5es s\u00e3o principalmente baseadas nas escolhas de tecnologia feitas no in\u00edcio do projeto. Todos os itens da lista t\u00eam um link para os estudos de trade feitos para cada escolha de tecnologia.","title":"Memory"},{"location":"design/design-reviews/decision-log/examples/memory/#memory","text":"Esses exemplos foram retirados do projeto Memory, uma ferramenta interna para acompanhar as realiza\u00e7\u00f5es de um indiv\u00edduo. O exemplo principal aqui \u00e9 o Registro de Decis\u00f5es . Como este registro foi usado desde o in\u00edcio, as decis\u00f5es s\u00e3o principalmente baseadas nas escolhas de tecnologia feitas no in\u00edcio do projeto. Todos os itens da lista t\u00eam um link para os estudos de trade feitos para cada escolha de tecnologia.","title":"Memory"},{"location":"design/design-reviews/decision-log/examples/memory/Decision-Log/","text":"Registro de Decis\u00f5es Este documento \u00e9 usado para rastrear as principais decis\u00f5es tomadas durante o curso do projeto. Isso pode ser usado em um est\u00e1gio posterior para entender por que decis\u00f5es foram tomadas e por quem. Decis\u00e3o Data Alternativas Consideradas Justificativa Documento Detalhado Tomada Por Trabalho Requerido Usar Registros de Decis\u00f5es de Arquitetura 25/01/2021 Documentos de Design Padr\u00e3o Uma solu\u00e7\u00e3o f\u00e1cil e de baixo custo para rastrear as decis\u00f5es arquitet\u00f4nicas ao longo da vida de um projeto. Registro de Decis\u00f5es de Arquitetura Equipe de Desenvolvimento #21654 Usar ArgoCD 26/01/2021 FluxCD ArgoCD \u00e9 mais rico em recursos, suportar\u00e1 mais cen\u00e1rios e ser\u00e1 uma melhor ferramenta para colocar em nossos cintos de ferramentas. Por isso, decidimos neste ponto usar o ArgoCD. Estudo de Trade GitOps Equipe de Desenvolvimento #21672 Usar Helm 28/01/2021 Kustomize, Kubes, Gitkube, Draft Maturidade da plataforma, modelagem, suporte ao ArgoCD Estudo de Gerenciamento de Pacotes K8s Equipe de Desenvolvimento #21674 Usar o CosmosDB 29/01/2021 Blob Storage, CosmosDB, SQL Server, Neo4j, JanusGraph, ArangoDB O CosmosDB tem uma melhor integra\u00e7\u00e3o com o Azure, identidade gerenciada e a API Gremlin \u00e9 poderosa. Estudo e Decis\u00e3o de Armazenamento de Gr\u00e1fico Equipe de Desenvolvimento #21650 Usar o Azure Traffic Manager 02/02/2021 Azure Front Door Uma solu\u00e7\u00e3o leve para rotear o tr\u00e1fego entre m\u00faltiplos clusters regionais do k8s Estudo de Roteamento Equipe de Desenvolvimento #21673 Usar Linkerd + Contour 02/02/2021 Istio, Consul, Ambassador, Traefik Uma pilha nativa da nuvem CNCF para fornecer service mesh, gateway de API e ingress Estudo de Roteamento Equipe de Desenvolvimento #21673 Usar Modelos ARM 02/02/2021 Terraform, Pulumi, Az CLI Azure Native, Suporte ao Monitoramento Az e atualiza\u00e7\u00f5es incrementais Estudo de Implanta\u00e7\u00e3o Automatizada Equipe de Desenvolvimento #21651 Usar 99designs/gqlgen 04/02/2021 graphql, graphql-go, thunder Seguran\u00e7a de tipo, registro autom\u00e1tico e gera\u00e7\u00e3o de c\u00f3digo Estudo de GraphQL Golang Equipe de Desenvolvimento #21775 Criar um modelo de dados de papel normalizado 25/03/2021 Perfis de Est\u00e1gio de Carreira (CSP), Microsoft Role Library Requer um modelo de dados que suporte os requisitos de dados de ambos os sistemas de fun\u00e7\u00e3o Esquema de Modelo de Dados de Fun\u00e7\u00e3o Equipe de Desenvolvimento #22035 Projetar para arestas e v\u00e9rtices 25/03/2021 N/A N/A Modelo de Dados Equipe de Desenvolvimento #21976 Usar o grammes 29/03/2021 Gremlin, gremgo, gremcos Equil\u00edbrio entre documenta\u00e7\u00e3o e maturidade Estudo de Biblioteca de API do Gremlin Equipe de Desenvolvimento #21870 Projetar para implementa\u00e7\u00e3o do Gremlin 02/04/2021 N/A N/A Gremlin Equipe de Desenvolvimento #21980 Projetar para implementa\u00e7\u00e3o do Gremlin 02/04/2021 N/A N/A Gremlin Equipe de Desenvolvimento #21980 Expor um modelo de dados 1:1 da API para o BD 02/04/2021 Expondo uma vers\u00e3o simplificada do contrato do modelo de dados A equipe decidiu que n\u00e3o h\u00e1 pe\u00e7as de dados que possamos descartar como \u00fateis. Ser\u00e1 atualizado se o modelo de dados se tornar muito complexo README da API Equipe de Desenvolvimento #21658 Descontinuar o SonarCloud 05/04/ 2021 | Checkstyle, PMD, FindBugs | Requer um plano pago para uso em um reposit\u00f3rio privado | Qualidade e Seguran\u00e7a de C\u00f3digo | Equipe de Desenvolvimento | #22090 | | Adotou Estrat\u00e9gia de Marca\u00e7\u00e3o Est\u00e1vel | 08/04/2021 | N/A | A equipe alinhou-se com a estrat\u00e9gia de marca\u00e7\u00e3o de cont\u00eaineres Docker proposta | Estrat\u00e9gia de Marca\u00e7\u00e3o | Equipe de Desenvolvimento | #22005 |","title":"Registro de Decis\u00f5es"},{"location":"design/design-reviews/decision-log/examples/memory/Decision-Log/#registro-de-decisoes","text":"Este documento \u00e9 usado para rastrear as principais decis\u00f5es tomadas durante o curso do projeto. Isso pode ser usado em um est\u00e1gio posterior para entender por que decis\u00f5es foram tomadas e por quem. Decis\u00e3o Data Alternativas Consideradas Justificativa Documento Detalhado Tomada Por Trabalho Requerido Usar Registros de Decis\u00f5es de Arquitetura 25/01/2021 Documentos de Design Padr\u00e3o Uma solu\u00e7\u00e3o f\u00e1cil e de baixo custo para rastrear as decis\u00f5es arquitet\u00f4nicas ao longo da vida de um projeto. Registro de Decis\u00f5es de Arquitetura Equipe de Desenvolvimento #21654 Usar ArgoCD 26/01/2021 FluxCD ArgoCD \u00e9 mais rico em recursos, suportar\u00e1 mais cen\u00e1rios e ser\u00e1 uma melhor ferramenta para colocar em nossos cintos de ferramentas. Por isso, decidimos neste ponto usar o ArgoCD. Estudo de Trade GitOps Equipe de Desenvolvimento #21672 Usar Helm 28/01/2021 Kustomize, Kubes, Gitkube, Draft Maturidade da plataforma, modelagem, suporte ao ArgoCD Estudo de Gerenciamento de Pacotes K8s Equipe de Desenvolvimento #21674 Usar o CosmosDB 29/01/2021 Blob Storage, CosmosDB, SQL Server, Neo4j, JanusGraph, ArangoDB O CosmosDB tem uma melhor integra\u00e7\u00e3o com o Azure, identidade gerenciada e a API Gremlin \u00e9 poderosa. Estudo e Decis\u00e3o de Armazenamento de Gr\u00e1fico Equipe de Desenvolvimento #21650 Usar o Azure Traffic Manager 02/02/2021 Azure Front Door Uma solu\u00e7\u00e3o leve para rotear o tr\u00e1fego entre m\u00faltiplos clusters regionais do k8s Estudo de Roteamento Equipe de Desenvolvimento #21673 Usar Linkerd + Contour 02/02/2021 Istio, Consul, Ambassador, Traefik Uma pilha nativa da nuvem CNCF para fornecer service mesh, gateway de API e ingress Estudo de Roteamento Equipe de Desenvolvimento #21673 Usar Modelos ARM 02/02/2021 Terraform, Pulumi, Az CLI Azure Native, Suporte ao Monitoramento Az e atualiza\u00e7\u00f5es incrementais Estudo de Implanta\u00e7\u00e3o Automatizada Equipe de Desenvolvimento #21651 Usar 99designs/gqlgen 04/02/2021 graphql, graphql-go, thunder Seguran\u00e7a de tipo, registro autom\u00e1tico e gera\u00e7\u00e3o de c\u00f3digo Estudo de GraphQL Golang Equipe de Desenvolvimento #21775 Criar um modelo de dados de papel normalizado 25/03/2021 Perfis de Est\u00e1gio de Carreira (CSP), Microsoft Role Library Requer um modelo de dados que suporte os requisitos de dados de ambos os sistemas de fun\u00e7\u00e3o Esquema de Modelo de Dados de Fun\u00e7\u00e3o Equipe de Desenvolvimento #22035 Projetar para arestas e v\u00e9rtices 25/03/2021 N/A N/A Modelo de Dados Equipe de Desenvolvimento #21976 Usar o grammes 29/03/2021 Gremlin, gremgo, gremcos Equil\u00edbrio entre documenta\u00e7\u00e3o e maturidade Estudo de Biblioteca de API do Gremlin Equipe de Desenvolvimento #21870 Projetar para implementa\u00e7\u00e3o do Gremlin 02/04/2021 N/A N/A Gremlin Equipe de Desenvolvimento #21980 Projetar para implementa\u00e7\u00e3o do Gremlin 02/04/2021 N/A N/A Gremlin Equipe de Desenvolvimento #21980 Expor um modelo de dados 1:1 da API para o BD 02/04/2021 Expondo uma vers\u00e3o simplificada do contrato do modelo de dados A equipe decidiu que n\u00e3o h\u00e1 pe\u00e7as de dados que possamos descartar como \u00fateis. Ser\u00e1 atualizado se o modelo de dados se tornar muito complexo README da API Equipe de Desenvolvimento #21658 Descontinuar o SonarCloud 05/04/ 2021 | Checkstyle, PMD, FindBugs | Requer um plano pago para uso em um reposit\u00f3rio privado | Qualidade e Seguran\u00e7a de C\u00f3digo | Equipe de Desenvolvimento | #22090 | | Adotou Estrat\u00e9gia de Marca\u00e7\u00e3o Est\u00e1vel | 08/04/2021 | N/A | A equipe alinhou-se com a estrat\u00e9gia de marca\u00e7\u00e3o de cont\u00eaineres Docker proposta | Estrat\u00e9gia de Marca\u00e7\u00e3o | Equipe de Desenvolvimento | #22005 |","title":"Registro de Decis\u00f5es"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/","text":"Modelo de Dados Tabela de Conte\u00fado V\u00e9rtices e Arestas do Grafo Propriedades do Grafo Descri\u00e7\u00f5es dos V\u00e9rtices Exemplo Completo em JSON de um Papel Modelo de Dados da API Modelo de Grafo V\u00e9rtices e Arestas do Grafo O conjunto de v\u00e9rtices (entidades) e arestas (relacionamentos) do modelo de grafo V\u00e9rtice (Fonte) Tipo de Aresta Tipo de Relacionamento V\u00e9rtice (Destino) Notas Obrigat\u00f3rio Profiss\u00e3o Aplica 1: muitos Disciplina N\u00edvel mais alto de categoriza\u00e7\u00e3o * Disciplina Define 1: muitos Papel Grupos de pap\u00e9is relacionados dentro de uma profiss\u00e3o * AplicadoPor 1: 1 Profiss\u00e3o 1 Papel Requer 1: muitos Responsabilidade Papel individual mapeado para um funcion\u00e1rio 1+ Requer 1: muitos Compet\u00eancia 1+ RequeridoPor 1: 1 Disciplina 1 Sucessor 1: 1 Papel Suporta a progress\u00e3o na carreira entre pap\u00e9is 1 Predecessor 1: 1 Papel Suporta a progress\u00e3o na carreira entre pap\u00e9is 1 Atribu\u00eddoPara 1: muitos Perfil de Usu\u00e1rio * Responsabilidade Espera 1: muitos Resultado-chave Um grupo de resultados esperados e resultados-chave para funcion\u00e1rios dentro de um papel 1+ EsperadoPor 1: 1 Papel 1 Compet\u00eancia Descreve 1: muitos Comportamento Um conjunto de comportamentos que contribuem para o sucesso 1+ DescritoPor 1: 1 Papel 1 Resultado-chave EsperadoPor 1: 1 Responsabilidade O resultado esperado da realiza\u00e7\u00e3o de uma responsabilidade 1 Comportamento ContribuiPara 1: 1 Compet\u00eancia A maneira como algu\u00e9m age ou se conduz 1 Perfil de Usu\u00e1rio Cumpre muitos: 1 Papel 1+ \u00c9AutorDe 1: muitos Entrada * L\u00ea muitos: muitos Entrada * Entrada CompartilhadoCom muitos: muitos Perfil de Usu\u00e1rio A l\u00f3gica de neg\u00f3cios deve adicionar o gerente a esta lista por padr\u00e3o. Esses usu\u00e1rios s\u00f3 devem ter acesso de leitura. * Demonstra muitos: muitos Compet\u00eancia * Demonstra muitos: muitos Comportamento * Demonstra muitos: muitos Responsabilidade * Demonstra muitos: muitos Resultado-chave * AutorizadoPor muitos: 1 Perfil de Usu\u00e1rio 1+ DiscutidoPor 1: muitos Coment\u00e1rio * ReferenciadoPor muitos: muitos Artefato * Compet\u00eancia DemonstradoPor muitos: muitos Entrada * Comportamento DemonstradoPor muitos: muitos Entrada * Responsabilidade DemonstradoPor muitos: muitos Entrada * Resultado-chave DemonstradoPor muitos: muitos Entrada * Coment\u00e1rio Discute muitos: 1 Entrada * Artefato ReferenciadoPor muitos: muitos Entrada 1+ Propriedades do Grafo O conjunto completo de propriedades de dados dispon\u00edveis em cada v\u00e9rtice e aresta V\u00e9rtice/Aresta Propriedade Tipo de Dados Observa\u00e7\u00f5es Obrigat\u00f3rio (Qualquer) ID guid 1 Profiss\u00e3o T\u00edtulo String 1 Descri\u00e7\u00e3o String 0 Disciplina T\u00edtulo String 1 Descri\u00e7\u00e3o String 0 Papel T\u00edtulo String 1 Descri\u00e7\u00e3o String 0 N\u00edvel Band String SDE, SDE II, Senior, etc 1 | | Responsabilidade | T\u00edtulo | String | | 1 | | | Descri\u00e7\u00e3o | String | | 0 | | Compet\u00eancia | T\u00edtulo | String | | 1 | | | Descri\u00e7\u00e3o | String | | 0 | | Resultado-chave | Descri\u00e7\u00e3o | String | | 1 | | Comportamento | Descri\u00e7\u00e3o | String | | 1 | | Perfil de Usu\u00e1rio| Sele\u00e7\u00e3o de Tema | string | Existem apenas 2: escuro, claro | 1 | | | PersonaId | guid[] | Existem apenas 2: Usu\u00e1rio, Admin | 1+ | | | UserId | guid | Aponta para objeto AAD | 1 | | | DeploymentRing | string[] | \u00c9 usado para implantar novas vers\u00f5es | 1 | | | Projeto | string[] | lista de projetos criados pelo usu\u00e1rio | * | | Entrada | T\u00edtulo | string | | 1 | | | DataCriada | date | | 1 | | | ProntoParaCompartilhar | boolean | falso se rascunho | 1 | | | \u00c1reaDeImpacto | string[] | 3 op\u00e7\u00f5es: self, contribuir para outros, alavancar outros | * | | Coment\u00e1rio | Dados | string | | 1 | | | DataCriada | date | | 1 | | Artefato | Dados | string | | 1 | | | DataCriada | date | | 1 | | | TipoDeArtefato | string | descreve o tipo de artefato: markdown, link blob | 1 | Descri\u00e7\u00f5es dos V\u00e9rtices Profiss\u00e3o N\u00edvel mais alto de categoriza\u00e7\u00e3o { \"t\u00edtulo\" : \"Engenharia de Software\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o da profiss\u00e3o\" , \"disciplinas\" : [] } Disciplina Grupos de pap\u00e9is relacionados dentro de uma profiss\u00e3o { \"t\u00edtulo\" : \"Engenharia de Confiabilidade de Sites\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o da disciplina\" , \"pap\u00e9is\" : [] } Papel Papel individual mapeado para um funcion\u00e1rio { \"t\u00edtulo\" : \"Engenheiro de Confiabilidade de Sites IC2\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o detalhada do papel\" , \"responsabilidades\" : [], \"compet\u00eancias\" : [] } Responsabilidade Um grupo de resultados esperados e resultados-chave para funcion\u00e1rios dentro de um papel { \"t\u00edtulo\" : \"Conhecimento T\u00e9cnico e Especializa\u00e7\u00e3o em Dom\u00ednio\" , \"resultados\" : [] } Compet\u00eancia Um conjunto de comportamentos que contribuem para o sucesso { \"t\u00edtulo\" : \"Adaptabilidade\" , \"comportamentos\" : [] } Resultado-chave O resultado esperado da realiza\u00e7\u00e3o de uma responsabilidade { \"descri\u00e7\u00e3o\" : \"Desenvolve uma compreens\u00e3o fundamental do design de sistemas distribu\u00eddos...\" } Comportamento A maneira como algu\u00e9m age ou se conduz { \"descri\u00e7\u00e3o\" : \"Busca ativamente informa\u00e7\u00f5es e testa suposi\u00e7\u00f5es.\" } Perfil de Usu\u00e1rio O objeto de usu\u00e1rio refere-se a quem uma pessoa \u00e9. N\u00e3o armazenamos os nossos pr\u00f3prios, preferimos usar Azure OIDs. Perfil de Usu\u00e1rio O perfil de usu\u00e1rio cont\u00e9m configura\u00e7\u00f5es espec\u00edficas do usu\u00e1rio e arestas espec\u00edficas para Memory. Persona Um usu\u00e1rio pode ter v\u00e1rias personas. Entrada O mesmo objeto de entrada pode conter muitos tipos de dados, e nesta fase do projeto, decidimos que n\u00e3o armazenaremos dados externos, portanto, cabe ao usu\u00e1rio fornecer um link para os dados para que o leitor possa clicar e ser redirecionado para uma nova aba. Nota: Isso significa que no aplicativo da web, precisamos garantir que os links sejam abertos em novas abas. Projeto Projetos s\u00e3o apenas campos de texto para representar como o usu\u00e1rio deseja agrupar suas entradas. \u00c1rea de Impacto Isso se refere \u00e0s 3 \u00e1reas de impacto no diagrama estilo Venn na ferramenta de RH. As op\u00e7\u00f5es s\u00e3o: pr\u00f3prio, contribuindo para o impacto dos outros, construindo sobre o trabalho dos outros. Coment\u00e1rio Um coment\u00e1rio \u00e9 essencialmente um peda\u00e7o de texto. No entanto, qualquer pessoa com quem uma entrada seja compartilhada pode adicionar coment\u00e1rios a essa entrada. Artefato O objeto de artefato cont\u00e9m os dados relevantes como markdown ou um link para os dados relevantes. Exemplo Completo em JSON de um Papel { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Engenheiro de Confiabilidade de Sites IC2\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o detalhada do papel\" , \"responsabilidades\" : [ { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Conhecimento T\u00e9cnico e Especializa\u00e7\u00e3o em Dom\u00ednio\" , \"resultados\" : [ { \"descri\u00e7\u00e3o\" : \"Desenvolve uma compreens\u00e3o fundamental do design de sistemas distribu\u00eddos...\" }, { \"descri\u00e7\u00e3o\" : \"Desenvolve uma compreens\u00e3o do c\u00f3digo, recursos e opera\u00e7\u00f5es de produtos espec\u00edficos...\" } ] }, { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Contribui\u00e7\u00f5es para Desenvolvimento e Design\" , \"resultados\" : [ { \"descri\u00e7\u00e3o\" : \"Desenvolve e testa mudan\u00e7as b\u00e1sicas para otimizar o c\u00f3digo...\" }, { \"descri\u00e7\u00e3o\" : \"D\u00e1 suporte a engajamentos cont\u00ednuos com equipes de engenharia de produtos...\" } ] } ], \"compet\u00eancias\" : [ { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Adaptabilidade\" , \"comportamentos\" : [ { \"descri\u00e7\u00e3o\" : \"Busca ativamente informa\u00e7\u00f5es e testa suposi\u00e7\u00f5es.\" }, { \"descri\u00e7\u00e3o\" : \"Muda sua abordagem em resposta \u00e0s demandas de uma situa\u00e7\u00e3o em mudan\u00e7a.\" } ] }, { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Colabora\u00e7\u00e3o \" , \"comportamentos\" : [ { \"descri\u00e7\u00e3o\" : \"Remove barreiras trabalhando com outras pessoas em torno de uma necessidade ou benef\u00edcio compartilhado do cliente.\" }, { \"descri\u00e7\u00e3o\" : \"Incorpora perspectivas diversas para abordar completamente quest\u00f5es comerciais complexas.\" } ] } ] } Modelo de Dados da API Como n\u00e3o h\u00e1 v\u00e9rtices internos ou v\u00e9rtices que precisam ser ocultos dos consumidores da API, a API expor\u00e1 um mapeamento 1:1 do modelo de dados atual para consumo. Isso est\u00e1 sujeito a altera\u00e7\u00f5es se nosso modelo de dados se tornar muito complexo para os usu\u00e1rios finais.","title":"Modelo de Dados"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#modelo-de-dados","text":"","title":"Modelo de Dados"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#tabela-de-conteudo","text":"V\u00e9rtices e Arestas do Grafo Propriedades do Grafo Descri\u00e7\u00f5es dos V\u00e9rtices Exemplo Completo em JSON de um Papel Modelo de Dados da API","title":"Tabela de Conte\u00fado"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#modelo-de-grafo","text":"","title":"Modelo de Grafo"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#vertices-e-arestas-do-grafo","text":"O conjunto de v\u00e9rtices (entidades) e arestas (relacionamentos) do modelo de grafo V\u00e9rtice (Fonte) Tipo de Aresta Tipo de Relacionamento V\u00e9rtice (Destino) Notas Obrigat\u00f3rio Profiss\u00e3o Aplica 1: muitos Disciplina N\u00edvel mais alto de categoriza\u00e7\u00e3o * Disciplina Define 1: muitos Papel Grupos de pap\u00e9is relacionados dentro de uma profiss\u00e3o * AplicadoPor 1: 1 Profiss\u00e3o 1 Papel Requer 1: muitos Responsabilidade Papel individual mapeado para um funcion\u00e1rio 1+ Requer 1: muitos Compet\u00eancia 1+ RequeridoPor 1: 1 Disciplina 1 Sucessor 1: 1 Papel Suporta a progress\u00e3o na carreira entre pap\u00e9is 1 Predecessor 1: 1 Papel Suporta a progress\u00e3o na carreira entre pap\u00e9is 1 Atribu\u00eddoPara 1: muitos Perfil de Usu\u00e1rio * Responsabilidade Espera 1: muitos Resultado-chave Um grupo de resultados esperados e resultados-chave para funcion\u00e1rios dentro de um papel 1+ EsperadoPor 1: 1 Papel 1 Compet\u00eancia Descreve 1: muitos Comportamento Um conjunto de comportamentos que contribuem para o sucesso 1+ DescritoPor 1: 1 Papel 1 Resultado-chave EsperadoPor 1: 1 Responsabilidade O resultado esperado da realiza\u00e7\u00e3o de uma responsabilidade 1 Comportamento ContribuiPara 1: 1 Compet\u00eancia A maneira como algu\u00e9m age ou se conduz 1 Perfil de Usu\u00e1rio Cumpre muitos: 1 Papel 1+ \u00c9AutorDe 1: muitos Entrada * L\u00ea muitos: muitos Entrada * Entrada CompartilhadoCom muitos: muitos Perfil de Usu\u00e1rio A l\u00f3gica de neg\u00f3cios deve adicionar o gerente a esta lista por padr\u00e3o. Esses usu\u00e1rios s\u00f3 devem ter acesso de leitura. * Demonstra muitos: muitos Compet\u00eancia * Demonstra muitos: muitos Comportamento * Demonstra muitos: muitos Responsabilidade * Demonstra muitos: muitos Resultado-chave * AutorizadoPor muitos: 1 Perfil de Usu\u00e1rio 1+ DiscutidoPor 1: muitos Coment\u00e1rio * ReferenciadoPor muitos: muitos Artefato * Compet\u00eancia DemonstradoPor muitos: muitos Entrada * Comportamento DemonstradoPor muitos: muitos Entrada * Responsabilidade DemonstradoPor muitos: muitos Entrada * Resultado-chave DemonstradoPor muitos: muitos Entrada * Coment\u00e1rio Discute muitos: 1 Entrada * Artefato ReferenciadoPor muitos: muitos Entrada 1+","title":"V\u00e9rtices e Arestas do Grafo"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#propriedades-do-grafo","text":"O conjunto completo de propriedades de dados dispon\u00edveis em cada v\u00e9rtice e aresta V\u00e9rtice/Aresta Propriedade Tipo de Dados Observa\u00e7\u00f5es Obrigat\u00f3rio (Qualquer) ID guid 1 Profiss\u00e3o T\u00edtulo String 1 Descri\u00e7\u00e3o String 0 Disciplina T\u00edtulo String 1 Descri\u00e7\u00e3o String 0 Papel T\u00edtulo String 1 Descri\u00e7\u00e3o String 0 N\u00edvel Band String SDE, SDE II, Senior, etc 1 | | Responsabilidade | T\u00edtulo | String | | 1 | | | Descri\u00e7\u00e3o | String | | 0 | | Compet\u00eancia | T\u00edtulo | String | | 1 | | | Descri\u00e7\u00e3o | String | | 0 | | Resultado-chave | Descri\u00e7\u00e3o | String | | 1 | | Comportamento | Descri\u00e7\u00e3o | String | | 1 | | Perfil de Usu\u00e1rio| Sele\u00e7\u00e3o de Tema | string | Existem apenas 2: escuro, claro | 1 | | | PersonaId | guid[] | Existem apenas 2: Usu\u00e1rio, Admin | 1+ | | | UserId | guid | Aponta para objeto AAD | 1 | | | DeploymentRing | string[] | \u00c9 usado para implantar novas vers\u00f5es | 1 | | | Projeto | string[] | lista de projetos criados pelo usu\u00e1rio | * | | Entrada | T\u00edtulo | string | | 1 | | | DataCriada | date | | 1 | | | ProntoParaCompartilhar | boolean | falso se rascunho | 1 | | | \u00c1reaDeImpacto | string[] | 3 op\u00e7\u00f5es: self, contribuir para outros, alavancar outros | * | | Coment\u00e1rio | Dados | string | | 1 | | | DataCriada | date | | 1 | | Artefato | Dados | string | | 1 | | | DataCriada | date | | 1 | | | TipoDeArtefato | string | descreve o tipo de artefato: markdown, link blob | 1 |","title":"Propriedades do Grafo"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#descricoes-dos-vertices","text":"","title":"Descri\u00e7\u00f5es dos V\u00e9rtices"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#profissao","text":"N\u00edvel mais alto de categoriza\u00e7\u00e3o { \"t\u00edtulo\" : \"Engenharia de Software\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o da profiss\u00e3o\" , \"disciplinas\" : [] }","title":"Profiss\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#disciplina","text":"Grupos de pap\u00e9is relacionados dentro de uma profiss\u00e3o { \"t\u00edtulo\" : \"Engenharia de Confiabilidade de Sites\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o da disciplina\" , \"pap\u00e9is\" : [] }","title":"Disciplina"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#papel","text":"Papel individual mapeado para um funcion\u00e1rio { \"t\u00edtulo\" : \"Engenheiro de Confiabilidade de Sites IC2\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o detalhada do papel\" , \"responsabilidades\" : [], \"compet\u00eancias\" : [] }","title":"Papel"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#responsabilidade","text":"Um grupo de resultados esperados e resultados-chave para funcion\u00e1rios dentro de um papel { \"t\u00edtulo\" : \"Conhecimento T\u00e9cnico e Especializa\u00e7\u00e3o em Dom\u00ednio\" , \"resultados\" : [] }","title":"Responsabilidade"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#competencia","text":"Um conjunto de comportamentos que contribuem para o sucesso { \"t\u00edtulo\" : \"Adaptabilidade\" , \"comportamentos\" : [] }","title":"Compet\u00eancia"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#resultado-chave","text":"O resultado esperado da realiza\u00e7\u00e3o de uma responsabilidade { \"descri\u00e7\u00e3o\" : \"Desenvolve uma compreens\u00e3o fundamental do design de sistemas distribu\u00eddos...\" }","title":"Resultado-chave"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#comportamento","text":"A maneira como algu\u00e9m age ou se conduz { \"descri\u00e7\u00e3o\" : \"Busca ativamente informa\u00e7\u00f5es e testa suposi\u00e7\u00f5es.\" }","title":"Comportamento"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#perfil-de-usuario","text":"O objeto de usu\u00e1rio refere-se a quem uma pessoa \u00e9. N\u00e3o armazenamos os nossos pr\u00f3prios, preferimos usar Azure OIDs.","title":"Perfil de Usu\u00e1rio"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#perfil-de-usuario_1","text":"O perfil de usu\u00e1rio cont\u00e9m configura\u00e7\u00f5es espec\u00edficas do usu\u00e1rio e arestas espec\u00edficas para Memory.","title":"Perfil de Usu\u00e1rio"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#persona","text":"Um usu\u00e1rio pode ter v\u00e1rias personas.","title":"Persona"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#entrada","text":"O mesmo objeto de entrada pode conter muitos tipos de dados, e nesta fase do projeto, decidimos que n\u00e3o armazenaremos dados externos, portanto, cabe ao usu\u00e1rio fornecer um link para os dados para que o leitor possa clicar e ser redirecionado para uma nova aba. Nota: Isso significa que no aplicativo da web, precisamos garantir que os links sejam abertos em novas abas.","title":"Entrada"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#projeto","text":"Projetos s\u00e3o apenas campos de texto para representar como o usu\u00e1rio deseja agrupar suas entradas.","title":"Projeto"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#area-de-impacto","text":"Isso se refere \u00e0s 3 \u00e1reas de impacto no diagrama estilo Venn na ferramenta de RH. As op\u00e7\u00f5es s\u00e3o: pr\u00f3prio, contribuindo para o impacto dos outros, construindo sobre o trabalho dos outros.","title":"\u00c1rea de Impacto"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#comentario","text":"Um coment\u00e1rio \u00e9 essencialmente um peda\u00e7o de texto. No entanto, qualquer pessoa com quem uma entrada seja compartilhada pode adicionar coment\u00e1rios a essa entrada.","title":"Coment\u00e1rio"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#artefato","text":"O objeto de artefato cont\u00e9m os dados relevantes como markdown ou um link para os dados relevantes.","title":"Artefato"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#exemplo-completo-em-json-de-um-papel","text":"{ \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Engenheiro de Confiabilidade de Sites IC2\" , \"descri\u00e7\u00e3o\" : \"Descri\u00e7\u00e3o detalhada do papel\" , \"responsabilidades\" : [ { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Conhecimento T\u00e9cnico e Especializa\u00e7\u00e3o em Dom\u00ednio\" , \"resultados\" : [ { \"descri\u00e7\u00e3o\" : \"Desenvolve uma compreens\u00e3o fundamental do design de sistemas distribu\u00eddos...\" }, { \"descri\u00e7\u00e3o\" : \"Desenvolve uma compreens\u00e3o do c\u00f3digo, recursos e opera\u00e7\u00f5es de produtos espec\u00edficos...\" } ] }, { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Contribui\u00e7\u00f5es para Desenvolvimento e Design\" , \"resultados\" : [ { \"descri\u00e7\u00e3o\" : \"Desenvolve e testa mudan\u00e7as b\u00e1sicas para otimizar o c\u00f3digo...\" }, { \"descri\u00e7\u00e3o\" : \"D\u00e1 suporte a engajamentos cont\u00ednuos com equipes de engenharia de produtos...\" } ] } ], \"compet\u00eancias\" : [ { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Adaptabilidade\" , \"comportamentos\" : [ { \"descri\u00e7\u00e3o\" : \"Busca ativamente informa\u00e7\u00f5es e testa suposi\u00e7\u00f5es.\" }, { \"descri\u00e7\u00e3o\" : \"Muda sua abordagem em resposta \u00e0s demandas de uma situa\u00e7\u00e3o em mudan\u00e7a.\" } ] }, { \"id\" : \"abc123\" , \"t\u00edtulo\" : \"Colabora\u00e7\u00e3o \" , \"comportamentos\" : [ { \"descri\u00e7\u00e3o\" : \"Remove barreiras trabalhando com outras pessoas em torno de uma necessidade ou benef\u00edcio compartilhado do cliente.\" }, { \"descri\u00e7\u00e3o\" : \"Incorpora perspectivas diversas para abordar completamente quest\u00f5es comerciais complexas.\" } ] } ] }","title":"Exemplo Completo em JSON de um Papel"},{"location":"design/design-reviews/decision-log/examples/memory/Architecture/Data-Model/#modelo-de-dados-da-api","text":"Como n\u00e3o h\u00e1 v\u00e9rtices internos ou v\u00e9rtices que precisam ser ocultos dos consumidores da API, a API expor\u00e1 um mapeamento 1:1 do modelo de dados atual para consumo. Isso est\u00e1 sujeito a altera\u00e7\u00f5es se nosso modelo de dados se tornar muito complexo para os usu\u00e1rios finais.","title":"Modelo de Dados da API"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/","text":"Implanta\u00e7\u00e3o da Aplica\u00e7\u00e3o A aplica\u00e7\u00e3o Memory utiliza o Azure DevOps para rastreamento de itens de trabalho, bem como integra\u00e7\u00e3o cont\u00ednua (CI) e implanta\u00e7\u00e3o cont\u00ednua (CD). Ambientes O projeto Memory utiliza v\u00e1rios ambientes para isolar e testar altera\u00e7\u00f5es antes de promover lan\u00e7amentos para a base de usu\u00e1rios global. A implanta\u00e7\u00e3o de novos ambientes \u00e9 acionada automaticamente com base em uma implanta\u00e7\u00e3o bem-sucedida do est\u00e1gio / ambiente anterior. Os ambientes de desenvolvimento , staging e produ\u00e7\u00e3o utilizam a implanta\u00e7\u00e3o de slot durante uma implanta\u00e7\u00e3o de ambiente. Ap\u00f3s a implanta\u00e7\u00e3o de um novo lan\u00e7amento em um slot de staging, ele \u00e9 validado por meio de uma s\u00e9rie de testes de integra\u00e7\u00e3o funcional. Ap\u00f3s uma taxa de aprova\u00e7\u00e3o de 100% de todos os testes, os slots de staging e produ\u00e7\u00e3o s\u00e3o trocados, tornando efetivamente as atualiza\u00e7\u00f5es no ambiente dispon\u00edveis. Quaisquer erros ou testes falhados interrompem a implanta\u00e7\u00e3o no est\u00e1gio atual e impedem altera\u00e7\u00f5es em est\u00e1gios posteriores. Cada ambiente implantado \u00e9 completamente isolado e n\u00e3o compartilha nenhum componente. Cada um possui inst\u00e2ncias de recursos exclusivos, como Azure Traffic Manager, Cosmos DB, etc. Depend\u00eancias de Implanta\u00e7\u00e3o Desenvolvimento Staging Produ\u00e7\u00e3o Port\u00f5es de Qualidade da CI Desenvolvimento Staging Aprova\u00e7\u00e3o Manual Local O ambiente local \u00e9 usado por engenheiros de software individuais durante o desenvolvimento de novos recursos e componentes. Os engenheiros utilizam alguns componentes do ambiente de desenvolvimento implantado que n\u00e3o est\u00e3o dispon\u00edveis em determinadas plataformas ou n\u00e3o podem ser executados localmente. CosmosDB O emulador s\u00f3 existe para Windows O ambiente local tamb\u00e9m n\u00e3o utiliza o Azure Traffic Manager. O aplicativo web frontend se comunica diretamente com a API REST de backend, normalmente em uma porta localhost separada. Desenvolvimento O ambiente de desenvolvimento \u00e9 usado como o primeiro port\u00e3o de qualidade. Todo o c\u00f3digo verificado no branch main \u00e9 implantado automaticamente neste ambiente ap\u00f3s a passagem de todos os port\u00f5es de qualidade da CI. Regi\u00f5es de Desenvolvimento West US (westus) Staging O ambiente de staging \u00e9 usado para validar novos recursos, componentes e outras altera\u00e7\u00f5es antes da implanta\u00e7\u00e3o em produ\u00e7\u00e3o. Este ambiente \u00e9 usado principalmente por desenvolvedores, QA e outros stakeholders da empresa. Regi\u00f5es de Staging West US (westus) East US (eastus) Produ\u00e7\u00e3o O ambiente de produ\u00e7\u00e3o \u00e9 usado pela base de usu\u00e1rios em todo o mundo. As altera\u00e7\u00f5es neste ambiente s\u00e3o controladas por aprova\u00e7\u00e3o manual pela equipe de lideran\u00e7a do produto, al\u00e9m de outros port\u00f5es de qualidade autom\u00e1ticos. Regi\u00f5es de Produ\u00e7\u00e3o West US (westus) Central US (centralus) East US (eastus) Grupo de Vari\u00e1veis de Ambiente Configura\u00e7\u00e3o de Infraestrutura (memory-common) appName businessUnit serviceConnection subscriptionId Configura\u00e7\u00e3o de Desenvolvimento (memory-dev) environmentName (espa\u00e7o reservado) Configura\u00e7\u00e3o de Staging (memory-staging) environmentName (espa\u00e7o reservado) Configura\u00e7\u00e3o de Produ\u00e7\u00e3o (memory-prod) environmentName (espa\u00e7o reservado)","title":"Implanta\u00e7\u00e3o da Aplica\u00e7\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#implantacao-da-aplicacao","text":"A aplica\u00e7\u00e3o Memory utiliza o Azure DevOps para rastreamento de itens de trabalho, bem como integra\u00e7\u00e3o cont\u00ednua (CI) e implanta\u00e7\u00e3o cont\u00ednua (CD).","title":"Implanta\u00e7\u00e3o da Aplica\u00e7\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#ambientes","text":"O projeto Memory utiliza v\u00e1rios ambientes para isolar e testar altera\u00e7\u00f5es antes de promover lan\u00e7amentos para a base de usu\u00e1rios global. A implanta\u00e7\u00e3o de novos ambientes \u00e9 acionada automaticamente com base em uma implanta\u00e7\u00e3o bem-sucedida do est\u00e1gio / ambiente anterior. Os ambientes de desenvolvimento , staging e produ\u00e7\u00e3o utilizam a implanta\u00e7\u00e3o de slot durante uma implanta\u00e7\u00e3o de ambiente. Ap\u00f3s a implanta\u00e7\u00e3o de um novo lan\u00e7amento em um slot de staging, ele \u00e9 validado por meio de uma s\u00e9rie de testes de integra\u00e7\u00e3o funcional. Ap\u00f3s uma taxa de aprova\u00e7\u00e3o de 100% de todos os testes, os slots de staging e produ\u00e7\u00e3o s\u00e3o trocados, tornando efetivamente as atualiza\u00e7\u00f5es no ambiente dispon\u00edveis. Quaisquer erros ou testes falhados interrompem a implanta\u00e7\u00e3o no est\u00e1gio atual e impedem altera\u00e7\u00f5es em est\u00e1gios posteriores. Cada ambiente implantado \u00e9 completamente isolado e n\u00e3o compartilha nenhum componente. Cada um possui inst\u00e2ncias de recursos exclusivos, como Azure Traffic Manager, Cosmos DB, etc.","title":"Ambientes"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#dependencias-de-implantacao","text":"Desenvolvimento Staging Produ\u00e7\u00e3o Port\u00f5es de Qualidade da CI Desenvolvimento Staging Aprova\u00e7\u00e3o Manual","title":"Depend\u00eancias de Implanta\u00e7\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#local","text":"O ambiente local \u00e9 usado por engenheiros de software individuais durante o desenvolvimento de novos recursos e componentes. Os engenheiros utilizam alguns componentes do ambiente de desenvolvimento implantado que n\u00e3o est\u00e3o dispon\u00edveis em determinadas plataformas ou n\u00e3o podem ser executados localmente. CosmosDB O emulador s\u00f3 existe para Windows O ambiente local tamb\u00e9m n\u00e3o utiliza o Azure Traffic Manager. O aplicativo web frontend se comunica diretamente com a API REST de backend, normalmente em uma porta localhost separada.","title":"Local"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#desenvolvimento","text":"O ambiente de desenvolvimento \u00e9 usado como o primeiro port\u00e3o de qualidade. Todo o c\u00f3digo verificado no branch main \u00e9 implantado automaticamente neste ambiente ap\u00f3s a passagem de todos os port\u00f5es de qualidade da CI.","title":"Desenvolvimento"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#regioes-de-desenvolvimento","text":"West US (westus)","title":"Regi\u00f5es de Desenvolvimento"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#staging","text":"O ambiente de staging \u00e9 usado para validar novos recursos, componentes e outras altera\u00e7\u00f5es antes da implanta\u00e7\u00e3o em produ\u00e7\u00e3o. Este ambiente \u00e9 usado principalmente por desenvolvedores, QA e outros stakeholders da empresa.","title":"Staging"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#regioes-de-staging","text":"West US (westus) East US (eastus)","title":"Regi\u00f5es de Staging"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#producao","text":"O ambiente de produ\u00e7\u00e3o \u00e9 usado pela base de usu\u00e1rios em todo o mundo. As altera\u00e7\u00f5es neste ambiente s\u00e3o controladas por aprova\u00e7\u00e3o manual pela equipe de lideran\u00e7a do produto, al\u00e9m de outros port\u00f5es de qualidade autom\u00e1ticos.","title":"Produ\u00e7\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#regioes-de-producao","text":"West US (westus) Central US (centralus) East US (eastus)","title":"Regi\u00f5es de Produ\u00e7\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#grupo-de-variaveis-de-ambiente","text":"","title":"Grupo de Vari\u00e1veis de Ambiente"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#configuracao-de-infraestrutura-memory-common","text":"appName businessUnit serviceConnection subscriptionId","title":"Configura\u00e7\u00e3o de Infraestrutura (memory-common)"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#configuracao-de-desenvolvimento-memory-dev","text":"environmentName (espa\u00e7o reservado)","title":"Configura\u00e7\u00e3o de Desenvolvimento (memory-dev)"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#configuracao-de-staging-memory-staging","text":"environmentName (espa\u00e7o reservado)","title":"Configura\u00e7\u00e3o de Staging (memory-staging)"},{"location":"design/design-reviews/decision-log/examples/memory/Deployment/Environments/#configuracao-de-producao-memory-prod","text":"environmentName (espa\u00e7o reservado)","title":"Configura\u00e7\u00e3o de Produ\u00e7\u00e3o (memory-prod)"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/","text":"An\u00e1lise de Op\u00e7\u00f5es: GitOps Conduzido por: Tess e Jeff Item de Trabalho no Backlog: #21672 Tomadores de Decis\u00e3o: Wallace, equipe inteira Vis\u00e3o Geral Para o Memory, estaremos criando uma aplica\u00e7\u00e3o nativa em nuvem com infraestrutura como c\u00f3digo. Usaremos o GitOps para Implanta\u00e7\u00e3o Cont\u00ednua, por meio de solicita\u00e7\u00f5es pull para refletir as altera\u00e7\u00f5es na infraestrutura. Em geral, entre nossas duas op\u00e7\u00f5es, uma delas \u00e9 mais simples e direcionada de uma maneira que acreditamos que atenderia aos requisitos deste projeto. A outra faz o mesmo, com recursos adicionais que podem ou n\u00e3o valer a configura\u00e7\u00e3o e a instala\u00e7\u00e3o extras. Crit\u00e9rios de Avalia\u00e7\u00e3o Estilo do reposit\u00f3rio: mono versus multi Aplica\u00e7\u00e3o de Pol\u00edticas M\u00e9todos de Implanta\u00e7\u00e3o Monitoramento de Implanta\u00e7\u00e3o Controle de Admiss\u00e3o Disponibilidade de Documenta\u00e7\u00e3o Azure Manutenibilidade Maturidade Interface do Usu\u00e1rio Solu\u00e7\u00f5es Flux Flux \u00e9 uma ferramenta criada pela Waveworks e \u00e9 constru\u00edda em cima do sistema de extens\u00e3o da API do Kubernetes, suporta multiloca\u00e7\u00e3o e integra-se perfeitamente a ferramentas populares como Prometheus. Avalia\u00e7\u00e3o dos Crit\u00e9rios de Aceita\u00e7\u00e3o do Flux Estilo do reposit\u00f3rio: mono versus multi O Flux suporta ambos a partir da vers\u00e3o 2 Aplica\u00e7\u00e3o de Pol\u00edticas A Pol\u00edtica Azure est\u00e1 em pr\u00e9via M\u00e9todos de Implanta\u00e7\u00e3o Defina um release Helm usando Controladores Helm Kustomization descreve implanta\u00e7\u00f5es Monitoramento de Implanta\u00e7\u00e3o O Flux funciona com o Prometheus para monitoramento de implanta\u00e7\u00e3o, bem como pain\u00e9is do Grafana. Controle de Admiss\u00e3o O Flux usa o RBAC do Kubernetes para restringir permiss\u00f5es de sincroniza\u00e7\u00e3o. Usa a conta de servi\u00e7o para acessar segredos de imagem Disponibilidade de Documenta\u00e7\u00e3o Azure Boa, melhor quando usado com Operadores Helm Manutenibilidade Gerenciado por meio de arquivos YAML no reposit\u00f3rio Git Maturidade A vers\u00e3o 2 \u00e9 publicada sob a licen\u00e7a Apache no GitHub , funciona com Helm v3 e tem commits de PR t\u00e3o recentes quanto hoje 945 estrelas, 94 forks Interface do Usu\u00e1rio CLI, a op\u00e7\u00e3o mais simples e leve Outros recursos a serem observados (veja mais no site) O Flux suporta apenas implanta\u00e7\u00f5es baseadas em pull, o que significa que deve ser combinado com um operador. O Flux pode enviar notifica\u00e7\u00f5es e receber webhooks para sincroniza\u00e7\u00e3o. Avalia\u00e7\u00f5es de sa\u00fade. Gerenciamento de depend\u00eancias. Implanta\u00e7\u00e3o autom\u00e1tica. Coleta de lixo. Implanta\u00e7\u00e3o ao confirmar. Varia\u00e7\u00f5es Controladores Ambas as op\u00e7\u00f5es de controlador s\u00e3o opcionais. O Controlador Helm busca adicionalmente artefatos do Helm para publica\u00e7\u00e3o, veja o diagrama abaixo. O Controlador Kustomize gerencia o estado e a implanta\u00e7\u00e3o cont\u00ednua. N\u00e3o decidiremos aqui qual controlador usar, pois isso \u00e9 um estudo de escolha separado, no entanto, observaremos que o Helm \u00e9 mais amplamente documentado na documenta\u00e7\u00e3o do Flux. Flux v1 Flux v1 est\u00e1 apenas em modo de manuten\u00e7\u00e3o e n\u00e3o deve ser mais usado. Portanto, esta se\u00e7\u00e3o n\u00e3o considera a op\u00e7\u00e3o v1 como v\u00e1lida. GitOps Toolkit O Flux v2 \u00e9 constru\u00eddo em cima do GitOps Toolkit , no entanto, n\u00e3o avaliamos o uso do GitOps Toolkit sozinho, pois isso \u00e9 para quando voc\u00ea deseja criar seu pr\u00f3prio sistema de CD, o que n\u00e3o \u00e9 o que queremos. ArgoCD com Helm Charts O ArgoCD \u00e9 uma ferramenta de Entrega Cont\u00ednua (CD) declarativa baseada em GitOps para Kubernetes. Avalia\u00e7\u00e3o dos Crit\u00e9rios de Aceita\u00e7\u00e3o do ArgoCD com Helm Estilo do reposit\u00f3rio: mono versus multi O ArgoCD suporta ambos Aplica\u00e7\u00e3o de Pol\u00edticas A Pol\u00edtica Azure est\u00e1 em pr\u00e9via M\u00e9todos de Implanta\u00e7\u00e3o Implanta\u00e7\u00e3o com Helm Chart Use o Kustomize para aplicar algumas p\u00f3s-renderiza\u00e7\u00f5es aos modelos de lan\u00e7amento Helm Monitoramento de Implanta\u00e7\u00e3o O Argo CD exp\u00f5e dois conjuntos de m\u00e9tricas do Prometheus (m\u00e9tricas de aplicativo e m\u00e9tricas do servidor de API) para monitoramento de implanta\u00e7\u00e3o. Controle de Admiss\u00e3o O ArgoCD usa o recurso RBAC. RBAC requer configura\u00e7\u00e3o SSO ou configura\u00e7\u00e3o de um ou mais usu\u00e1rios locais. Uma vez configurado o SSO ou os usu\u00e1rios locais, \u00e9 poss\u00edvel definir fun\u00e7\u00f5es RBAC adicionais O Argo CD n\u00e3o possui seu pr\u00f3prio sistema de gerenciamento de usu\u00e1rios e possui apenas um usu\u00e1rio integrado, o administrador. O usu\u00e1rio administrador \u00e9 um superusu\u00e1rio e tem acesso irrestrito ao sistema A autoriza\u00e7\u00e3o \u00e9 tratada por meio de tokens JWT e verifica\u00e7\u00e3o de grupos neles 6 . Disponibilidade de Documenta\u00e7\u00e3o Azure - O Argo tem documenta\u00e7\u00e3o sobre o Azure AD 7. Maturidade - Tem commits de PR t\u00e3o recentes quanto hoje - 5.000 estrelas, 1.100 forks 8. Manutenibilidade - Pode ser gerenciado por meio do GitOps 9. Interface do Usu\u00e1rio - O ArgoCD tem uma GUI e pode ser usado em v\u00e1rios clusters Outros recursos a serem observados (veja mais no site) O ArgoCD suporta tanto o modelo pull quanto o modelo push para entrega cont\u00ednua. O Argo pode enviar notifica\u00e7\u00f5es, mas voc\u00ea precisa de uma ferramenta separada para isso. O Argo pode receber webhooks. Avalia\u00e7\u00f5es de sa\u00fade. Ferramentas de multiloca\u00e7\u00e3o potencialmente muito mais \u00fateis. Gerencia v\u00e1rios projetos, mapeia-os para equipes, etc. Integra\u00e7\u00e3o SSO. Coleta de lixo. Resultados Esta se\u00e7\u00e3o deve conter uma tabela que classifica cada solu\u00e7\u00e3o em rela\u00e7\u00e3o a cada um dos crit\u00e9rios de avalia\u00e7\u00e3o: Solu\u00e7\u00e3o Estilo de Reposit\u00f3rio Aplica\u00e7\u00e3o de Pol\u00edticas M\u00e9todos de Implanta\u00e7\u00e3o Monitoramento de Implanta\u00e7\u00e3o Controle de Admiss\u00e3o Documenta\u00e7\u00e3o Azure Manutenibilidade Maturidade Interface do Usu\u00e1rio Flux mono, multi Pol\u00edtica Azure, pr\u00e9via Helm, Kustomize Prometheus, Grafana RBAC Sim, na Azure YAML no reposit\u00f3rio Git 945 estrelas, 94 forks, atualmente mantido CLI ArgoCD mono, multi Pol\u00edtica Azure, pr\u00e9via Helm, Kustomize, KSonnet, ... Prometheus, Grafana RBAC Apenas em seus pr\u00f3prios docs Manifestos no reposit\u00f3rio Git 5.000 estrelas, 1.100 forks GUI, v\u00e1rios clusters na mesma GUI Decis\u00e3o O ArgoCD \u00e9 mais rico em recursos, suportar\u00e1 mais cen\u00e1rios e ser\u00e1 uma ferramenta melhor para colocarmos em nosso arsenal. Portanto, decidimos neste momento seguir com o ArgoCD. Refer\u00eancias GitOps Pol\u00edtica Monitoramento Pol\u00edticas Implanta\u00e7\u00e3o Push com ArgoCD no Azure DevOps","title":"An\u00e1lise de Op\u00e7\u00f5es: GitOps"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#analise-de-opcoes-gitops","text":"Conduzido por: Tess e Jeff Item de Trabalho no Backlog: #21672 Tomadores de Decis\u00e3o: Wallace, equipe inteira","title":"An\u00e1lise de Op\u00e7\u00f5es: GitOps"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#visao-geral","text":"Para o Memory, estaremos criando uma aplica\u00e7\u00e3o nativa em nuvem com infraestrutura como c\u00f3digo. Usaremos o GitOps para Implanta\u00e7\u00e3o Cont\u00ednua, por meio de solicita\u00e7\u00f5es pull para refletir as altera\u00e7\u00f5es na infraestrutura. Em geral, entre nossas duas op\u00e7\u00f5es, uma delas \u00e9 mais simples e direcionada de uma maneira que acreditamos que atenderia aos requisitos deste projeto. A outra faz o mesmo, com recursos adicionais que podem ou n\u00e3o valer a configura\u00e7\u00e3o e a instala\u00e7\u00e3o extras.","title":"Vis\u00e3o Geral"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#criterios-de-avaliacao","text":"Estilo do reposit\u00f3rio: mono versus multi Aplica\u00e7\u00e3o de Pol\u00edticas M\u00e9todos de Implanta\u00e7\u00e3o Monitoramento de Implanta\u00e7\u00e3o Controle de Admiss\u00e3o Disponibilidade de Documenta\u00e7\u00e3o Azure Manutenibilidade Maturidade Interface do Usu\u00e1rio","title":"Crit\u00e9rios de Avalia\u00e7\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#solucoes","text":"","title":"Solu\u00e7\u00f5es"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#flux","text":"Flux \u00e9 uma ferramenta criada pela Waveworks e \u00e9 constru\u00edda em cima do sistema de extens\u00e3o da API do Kubernetes, suporta multiloca\u00e7\u00e3o e integra-se perfeitamente a ferramentas populares como Prometheus.","title":"Flux"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#avaliacao-dos-criterios-de-aceitacao-do-flux","text":"Estilo do reposit\u00f3rio: mono versus multi O Flux suporta ambos a partir da vers\u00e3o 2 Aplica\u00e7\u00e3o de Pol\u00edticas A Pol\u00edtica Azure est\u00e1 em pr\u00e9via M\u00e9todos de Implanta\u00e7\u00e3o Defina um release Helm usando Controladores Helm Kustomization descreve implanta\u00e7\u00f5es Monitoramento de Implanta\u00e7\u00e3o O Flux funciona com o Prometheus para monitoramento de implanta\u00e7\u00e3o, bem como pain\u00e9is do Grafana. Controle de Admiss\u00e3o O Flux usa o RBAC do Kubernetes para restringir permiss\u00f5es de sincroniza\u00e7\u00e3o. Usa a conta de servi\u00e7o para acessar segredos de imagem Disponibilidade de Documenta\u00e7\u00e3o Azure Boa, melhor quando usado com Operadores Helm Manutenibilidade Gerenciado por meio de arquivos YAML no reposit\u00f3rio Git Maturidade A vers\u00e3o 2 \u00e9 publicada sob a licen\u00e7a Apache no GitHub , funciona com Helm v3 e tem commits de PR t\u00e3o recentes quanto hoje 945 estrelas, 94 forks Interface do Usu\u00e1rio CLI, a op\u00e7\u00e3o mais simples e leve Outros recursos a serem observados (veja mais no site) O Flux suporta apenas implanta\u00e7\u00f5es baseadas em pull, o que significa que deve ser combinado com um operador. O Flux pode enviar notifica\u00e7\u00f5es e receber webhooks para sincroniza\u00e7\u00e3o. Avalia\u00e7\u00f5es de sa\u00fade. Gerenciamento de depend\u00eancias. Implanta\u00e7\u00e3o autom\u00e1tica. Coleta de lixo. Implanta\u00e7\u00e3o ao confirmar.","title":"Avalia\u00e7\u00e3o dos Crit\u00e9rios de Aceita\u00e7\u00e3o do Flux"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#variacoes","text":"","title":"Varia\u00e7\u00f5es"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#controladores","text":"Ambas as op\u00e7\u00f5es de controlador s\u00e3o opcionais. O Controlador Helm busca adicionalmente artefatos do Helm para publica\u00e7\u00e3o, veja o diagrama abaixo. O Controlador Kustomize gerencia o estado e a implanta\u00e7\u00e3o cont\u00ednua. N\u00e3o decidiremos aqui qual controlador usar, pois isso \u00e9 um estudo de escolha separado, no entanto, observaremos que o Helm \u00e9 mais amplamente documentado na documenta\u00e7\u00e3o do Flux.","title":"Controladores"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#flux-v1","text":"Flux v1 est\u00e1 apenas em modo de manuten\u00e7\u00e3o e n\u00e3o deve ser mais usado. Portanto, esta se\u00e7\u00e3o n\u00e3o considera a op\u00e7\u00e3o v1 como v\u00e1lida.","title":"Flux v1"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#gitops-toolkit","text":"O Flux v2 \u00e9 constru\u00eddo em cima do GitOps Toolkit , no entanto, n\u00e3o avaliamos o uso do GitOps Toolkit sozinho, pois isso \u00e9 para quando voc\u00ea deseja criar seu pr\u00f3prio sistema de CD, o que n\u00e3o \u00e9 o que queremos.","title":"GitOps Toolkit"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#argocd-com-helm-charts","text":"O ArgoCD \u00e9 uma ferramenta de Entrega Cont\u00ednua (CD) declarativa baseada em GitOps para Kubernetes.","title":"ArgoCD com Helm Charts"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#avaliacao-dos-criterios-de-aceitacao-do-argocd-com-helm","text":"Estilo do reposit\u00f3rio: mono versus multi O ArgoCD suporta ambos Aplica\u00e7\u00e3o de Pol\u00edticas A Pol\u00edtica Azure est\u00e1 em pr\u00e9via M\u00e9todos de Implanta\u00e7\u00e3o Implanta\u00e7\u00e3o com Helm Chart Use o Kustomize para aplicar algumas p\u00f3s-renderiza\u00e7\u00f5es aos modelos de lan\u00e7amento Helm Monitoramento de Implanta\u00e7\u00e3o O Argo CD exp\u00f5e dois conjuntos de m\u00e9tricas do Prometheus (m\u00e9tricas de aplicativo e m\u00e9tricas do servidor de API) para monitoramento de implanta\u00e7\u00e3o. Controle de Admiss\u00e3o O ArgoCD usa o recurso RBAC. RBAC requer configura\u00e7\u00e3o SSO ou configura\u00e7\u00e3o de um ou mais usu\u00e1rios locais. Uma vez configurado o SSO ou os usu\u00e1rios locais, \u00e9 poss\u00edvel definir fun\u00e7\u00f5es RBAC adicionais O Argo CD n\u00e3o possui seu pr\u00f3prio sistema de gerenciamento de usu\u00e1rios e possui apenas um usu\u00e1rio integrado, o administrador. O usu\u00e1rio administrador \u00e9 um superusu\u00e1rio e tem acesso irrestrito ao sistema A autoriza\u00e7\u00e3o \u00e9 tratada por meio de tokens JWT e verifica\u00e7\u00e3o de grupos neles 6 . Disponibilidade de Documenta\u00e7\u00e3o Azure - O Argo tem documenta\u00e7\u00e3o sobre o Azure AD 7. Maturidade - Tem commits de PR t\u00e3o recentes quanto hoje - 5.000 estrelas, 1.100 forks 8. Manutenibilidade - Pode ser gerenciado por meio do GitOps 9. Interface do Usu\u00e1rio - O ArgoCD tem uma GUI e pode ser usado em v\u00e1rios clusters Outros recursos a serem observados (veja mais no site) O ArgoCD suporta tanto o modelo pull quanto o modelo push para entrega cont\u00ednua. O Argo pode enviar notifica\u00e7\u00f5es, mas voc\u00ea precisa de uma ferramenta separada para isso. O Argo pode receber webhooks. Avalia\u00e7\u00f5es de sa\u00fade. Ferramentas de multiloca\u00e7\u00e3o potencialmente muito mais \u00fateis. Gerencia v\u00e1rios projetos, mapeia-os para equipes, etc. Integra\u00e7\u00e3o SSO. Coleta de lixo.","title":"Avalia\u00e7\u00e3o dos Crit\u00e9rios de Aceita\u00e7\u00e3o do ArgoCD com Helm"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#resultados","text":"Esta se\u00e7\u00e3o deve conter uma tabela que classifica cada solu\u00e7\u00e3o em rela\u00e7\u00e3o a cada um dos crit\u00e9rios de avalia\u00e7\u00e3o: Solu\u00e7\u00e3o Estilo de Reposit\u00f3rio Aplica\u00e7\u00e3o de Pol\u00edticas M\u00e9todos de Implanta\u00e7\u00e3o Monitoramento de Implanta\u00e7\u00e3o Controle de Admiss\u00e3o Documenta\u00e7\u00e3o Azure Manutenibilidade Maturidade Interface do Usu\u00e1rio Flux mono, multi Pol\u00edtica Azure, pr\u00e9via Helm, Kustomize Prometheus, Grafana RBAC Sim, na Azure YAML no reposit\u00f3rio Git 945 estrelas, 94 forks, atualmente mantido CLI ArgoCD mono, multi Pol\u00edtica Azure, pr\u00e9via Helm, Kustomize, KSonnet, ... Prometheus, Grafana RBAC Apenas em seus pr\u00f3prios docs Manifestos no reposit\u00f3rio Git 5.000 estrelas, 1.100 forks GUI, v\u00e1rios clusters na mesma GUI","title":"Resultados"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#decisao","text":"O ArgoCD \u00e9 mais rico em recursos, suportar\u00e1 mais cen\u00e1rios e ser\u00e1 uma ferramenta melhor para colocarmos em nosso arsenal. Portanto, decidimos neste momento seguir com o ArgoCD.","title":"Decis\u00e3o"},{"location":"design/design-reviews/decision-log/examples/memory/Trade-Studies/GitOps/#referencias","text":"GitOps Pol\u00edtica Monitoramento Pol\u00edticas Implanta\u00e7\u00e3o Push com ArgoCD no Azure DevOps","title":"Refer\u00eancias"},{"location":"design/design-reviews/recipes/","text":"Receitas para Revis\u00e3o de Design As revis\u00f5es de design podem variar em formato e tamanho. Tamb\u00e9m existem diferentes aspectos a considerar ao criar um design em diferentes est\u00e1gios durante um projeto. Processo de Revis\u00e3o de Design Incorpore revis\u00f5es de design ao longo da vida \u00fatil de um projeto Modelos de Revis\u00e3o de Design Plano de Jogo O mesmo modelo j\u00e1 em uso hoje Arquitetura e design de alto n\u00edvel Inclui tecnologias, linguagens e produtos para cumprir o objetivo do projeto Revis\u00e3o de Design de Marco/\u00c9pico Deve ser considerada quando um projeto cont\u00e9m v\u00e1rios marcos ou \u00e9picos O design deve ser mais detalhado do que o plano de jogo Pode exigir caracter\u00edsticas de implanta\u00e7\u00e3o, seguran\u00e7a e/ou privacidade exclusivas de outros marcos Revis\u00e3o de Design de Funcionalidade/Hist\u00f3ria Design para funcionalidades ou hist\u00f3rias complexas Reutilizar\u00e1 caracter\u00edsticas de implanta\u00e7\u00e3o, seguran\u00e7a e outras definidas no plano de jogo ou marco Pode exigir novas bibliotecas, software de c\u00f3digo aberto ou padr\u00f5es para alcan\u00e7ar os objetivos Revis\u00e3o de Design de Tarefa Design altamente detalhado para tarefas complexas com muitas incertezas Integrar\u00e1 designs de n\u00edvel superior de funcionalidade/componente","title":"Receitas para Revis\u00e3o de Design"},{"location":"design/design-reviews/recipes/#receitas-para-revisao-de-design","text":"As revis\u00f5es de design podem variar em formato e tamanho. Tamb\u00e9m existem diferentes aspectos a considerar ao criar um design em diferentes est\u00e1gios durante um projeto.","title":"Receitas para Revis\u00e3o de Design"},{"location":"design/design-reviews/recipes/#processo-de-revisao-de-design","text":"Incorpore revis\u00f5es de design ao longo da vida \u00fatil de um projeto","title":"Processo de Revis\u00e3o de Design"},{"location":"design/design-reviews/recipes/#modelos-de-revisao-de-design","text":"","title":"Modelos de Revis\u00e3o de Design"},{"location":"design/design-reviews/recipes/#plano-de-jogo","text":"O mesmo modelo j\u00e1 em uso hoje Arquitetura e design de alto n\u00edvel Inclui tecnologias, linguagens e produtos para cumprir o objetivo do projeto","title":"Plano de Jogo"},{"location":"design/design-reviews/recipes/#revisao-de-design-de-marcoepico","text":"Deve ser considerada quando um projeto cont\u00e9m v\u00e1rios marcos ou \u00e9picos O design deve ser mais detalhado do que o plano de jogo Pode exigir caracter\u00edsticas de implanta\u00e7\u00e3o, seguran\u00e7a e/ou privacidade exclusivas de outros marcos","title":"Revis\u00e3o de Design de Marco/\u00c9pico"},{"location":"design/design-reviews/recipes/#revisao-de-design-de-funcionalidadehistoria","text":"Design para funcionalidades ou hist\u00f3rias complexas Reutilizar\u00e1 caracter\u00edsticas de implanta\u00e7\u00e3o, seguran\u00e7a e outras definidas no plano de jogo ou marco Pode exigir novas bibliotecas, software de c\u00f3digo aberto ou padr\u00f5es para alcan\u00e7ar os objetivos","title":"Revis\u00e3o de Design de Funcionalidade/Hist\u00f3ria"},{"location":"design/design-reviews/recipes/#revisao-de-design-de-tarefa","text":"Design altamente detalhado para tarefas complexas com muitas incertezas Integrar\u00e1 designs de n\u00edvel superior de funcionalidade/componente","title":"Revis\u00e3o de Design de Tarefa"},{"location":"design/design-reviews/recipes/async-design-reviews/","text":"Revis\u00f5es de Design Ass\u00edncronas Objetivos Permitir que os membros da equipe revisem os designs conforme a disponibilidade em suas agendas de trabalho. Impacto Isso resulta nos seguintes benef\u00edcios: Maior Participa\u00e7\u00e3o e Acessibilidade . Eles n\u00e3o precisam estar online e dispon\u00edveis ao mesmo tempo que outros para revisar. Menos Restri\u00e7\u00e3o de Tempo . Os revisores podem gastar mais tempo do que a dura\u00e7\u00e3o de uma \u00fanica reuni\u00e3o para pensar na abordagem e fornecer feedback. Medidas As m\u00e9tricas e/ou KPIs usados para revis\u00f5es de design em geral ainda se aplicariam. Consulte revis\u00f5es de design para orienta\u00e7\u00f5es sobre medidas. Participa\u00e7\u00e3o A participa\u00e7\u00e3o deve ser a mesma de qualquer revis\u00e3o de design. Consulte revis\u00f5es de design para orienta\u00e7\u00f5es sobre a participa\u00e7\u00e3o. Orienta\u00e7\u00f5es para Facilita\u00e7\u00e3o O conceito \u00e9 fazer com que o design siga o mesmo fluxo de trabalho das mudan\u00e7as de c\u00f3digo para implementar uma hist\u00f3ria ou tarefa. Em vez de c\u00f3digo, no entanto, os artefatos adicionados ou alterados s\u00e3o documentos Markdown, bem como quaisquer outros artefatos de suporte (prot\u00f3tipos, exemplos de c\u00f3digo, diagramas, etc). Pr\u00e9-requisitos Documentos de Design Controlados por Origem A documenta\u00e7\u00e3o de design deve estar em um reposit\u00f3rio de controle de origem que suporta pull requests (ou seja, git). As diretrizes a seguir podem ser usadas para determinar em qual reposit\u00f3rio os documentos devem estar. Manter os documentos no mesmo reposit\u00f3rio do c\u00f3digo afetado permite que os documentos sejam atualizados atomicamente junto com o c\u00f3digo no mesmo pull request. Se a documenta\u00e7\u00e3o representar c\u00f3digo que est\u00e1 em muitos reposit\u00f3rios diferentes, pode ser mais sensato manter os documentos em seu pr\u00f3prio reposit\u00f3rio. Coloque os documentos de forma que eles n\u00e3o acionem compila\u00e7\u00f5es de CI para o c\u00f3digo afetado (supondo que a documenta\u00e7\u00e3o tenha sido a \u00fanica altera\u00e7\u00e3o). Isso pode ser feito colocando-os em um diret\u00f3rio isolado, caso eles estejam junto com o c\u00f3digo que representam. Veja o exemplo de estrutura de diret\u00f3rios abaixo. -root --src --docs <-- exclu\u00eddo do gatilho de compila\u00e7\u00e3o CI --design Fluxo de Trabalho O designer cria um branch no reposit\u00f3rio com a documenta\u00e7\u00e3o. O designer trabalha na adi\u00e7\u00e3o ou atualiza\u00e7\u00e3o da documenta\u00e7\u00e3o relevante para o design. O designer envia uma solicita\u00e7\u00e3o de pull e solicita a revis\u00e3o de membros espec\u00edficos da equipe. Os revisores fornecem feedback ao designer, que incorpora o feedback. (OPCIONAL) Pode ser realizada uma reuni\u00e3o de revis\u00e3o de design para fornecer uma explica\u00e7\u00e3o mais detalhada do design aos revisores. O design \u00e9 aprovado/aceito e mesclado no branch principal. Dicas para Ciclos de Revis\u00e3o Mais R\u00e1pidos Para garantir que um design seja revisado em tempo h\u00e1bil, \u00e9 importante solicitar diretamente as revis\u00f5es dos membros da equipe. Se os membros da equipe forem designados sem perguntar, ou se ningu\u00e9m for designado, \u00e9 prov\u00e1vel que o design fique mais tempo sem revis\u00e3o. Tente as seguintes a\u00e7\u00f5es: Fa\u00e7a com que seja responsabilidade do designer encontrar revisores para seu design. O designer deve perguntar diretamente a um membro da equipe (conversa face a face, mensagens ass\u00edncronas, etc.) se ele est\u00e1 dispon\u00edvel para revisar. Somente se concordar, ent\u00e3o atribua-o como revisor. Indique se o design est\u00e1 pronto para ser mesclado ap\u00f3s a aprova\u00e7\u00e3o. Indicar Completude do Design Isso ajuda o revisor a entender se o design est\u00e1 pronto para ser aceito ou se ainda est\u00e1 em andamento. O n\u00edvel e o tipo de feedback que o revisor fornece provavelmente ser\u00e3o diferentes, dependendo do estado do design. Tente as seguintes a\u00e7\u00f5es para indicar o estado do design: Marque a PR como um Rascunho (Draft). Algumas ferramentas de ALM suportam a abertura de uma solicita\u00e7\u00e3o de pull como um Rascunho, como o Azure DevOps. Coloque um prefixo no t\u00edtulo como \"RASCUNHO\", \"EM ANDAMENTO\" ou \"trabalho em andamento\". Configure a solicita\u00e7\u00e3o de pull para mesclar automaticamente ap\u00f3s aprova\u00e7\u00f5es e verifica\u00e7\u00f5es bem-sucedidas. Isso pode indicar ao revisor que o design est\u00e1 completo do ponto de vista do designer. Praticar Comportamentos Inclusivos Os revisores designados n\u00e3o s\u00e3o os \u00fanicos membros da equipe que podem fornecer feedback sobre o design. Se outros membros da equipe voluntariamente dedicaram tempo para fornecer feedback ou fazer perguntas, certifique-se de responder. Utilize a conversa face a face (presencial ou virtual) para resolver feedback ou perguntas de outros conforme necess\u00e1rio. Isso ajuda a construir a coes\u00e3o da equipe para garantir que todos entendam e estejam dispostos a se comprometer com um determinado design. Essa pr\u00e1tica demonstra um comportamento inclusivo , o que promover\u00e1 confian\u00e7a e respeito dentro da equipe. Responda a todos os coment\u00e1rios da PR de forma objetiva e respeitosa , independentemente do n\u00edvel, posi\u00e7\u00e3o ou t\u00edtulo do autor. Ap\u00f3s duas rodadas de perguntas/respostas, recorra \u00e0 comunica\u00e7\u00e3o s\u00edncrona para a resolu\u00e7\u00e3o (ou seja, conversa face a face virtual ou presencial).","title":"Revis\u00f5es de Design Ass\u00edncronas"},{"location":"design/design-reviews/recipes/async-design-reviews/#revisoes-de-design-assincronas","text":"","title":"Revis\u00f5es de Design Ass\u00edncronas"},{"location":"design/design-reviews/recipes/async-design-reviews/#objetivos","text":"Permitir que os membros da equipe revisem os designs conforme a disponibilidade em suas agendas de trabalho.","title":"Objetivos"},{"location":"design/design-reviews/recipes/async-design-reviews/#impacto","text":"Isso resulta nos seguintes benef\u00edcios: Maior Participa\u00e7\u00e3o e Acessibilidade . Eles n\u00e3o precisam estar online e dispon\u00edveis ao mesmo tempo que outros para revisar. Menos Restri\u00e7\u00e3o de Tempo . Os revisores podem gastar mais tempo do que a dura\u00e7\u00e3o de uma \u00fanica reuni\u00e3o para pensar na abordagem e fornecer feedback.","title":"Impacto"},{"location":"design/design-reviews/recipes/async-design-reviews/#medidas","text":"As m\u00e9tricas e/ou KPIs usados para revis\u00f5es de design em geral ainda se aplicariam. Consulte revis\u00f5es de design para orienta\u00e7\u00f5es sobre medidas.","title":"Medidas"},{"location":"design/design-reviews/recipes/async-design-reviews/#participacao","text":"A participa\u00e7\u00e3o deve ser a mesma de qualquer revis\u00e3o de design. Consulte revis\u00f5es de design para orienta\u00e7\u00f5es sobre a participa\u00e7\u00e3o.","title":"Participa\u00e7\u00e3o"},{"location":"design/design-reviews/recipes/async-design-reviews/#orientacoes-para-facilitacao","text":"O conceito \u00e9 fazer com que o design siga o mesmo fluxo de trabalho das mudan\u00e7as de c\u00f3digo para implementar uma hist\u00f3ria ou tarefa. Em vez de c\u00f3digo, no entanto, os artefatos adicionados ou alterados s\u00e3o documentos Markdown, bem como quaisquer outros artefatos de suporte (prot\u00f3tipos, exemplos de c\u00f3digo, diagramas, etc).","title":"Orienta\u00e7\u00f5es para Facilita\u00e7\u00e3o"},{"location":"design/design-reviews/recipes/async-design-reviews/#pre-requisitos","text":"","title":"Pr\u00e9-requisitos"},{"location":"design/design-reviews/recipes/async-design-reviews/#documentos-de-design-controlados-por-origem","text":"A documenta\u00e7\u00e3o de design deve estar em um reposit\u00f3rio de controle de origem que suporta pull requests (ou seja, git). As diretrizes a seguir podem ser usadas para determinar em qual reposit\u00f3rio os documentos devem estar. Manter os documentos no mesmo reposit\u00f3rio do c\u00f3digo afetado permite que os documentos sejam atualizados atomicamente junto com o c\u00f3digo no mesmo pull request. Se a documenta\u00e7\u00e3o representar c\u00f3digo que est\u00e1 em muitos reposit\u00f3rios diferentes, pode ser mais sensato manter os documentos em seu pr\u00f3prio reposit\u00f3rio. Coloque os documentos de forma que eles n\u00e3o acionem compila\u00e7\u00f5es de CI para o c\u00f3digo afetado (supondo que a documenta\u00e7\u00e3o tenha sido a \u00fanica altera\u00e7\u00e3o). Isso pode ser feito colocando-os em um diret\u00f3rio isolado, caso eles estejam junto com o c\u00f3digo que representam. Veja o exemplo de estrutura de diret\u00f3rios abaixo. -root --src --docs <-- exclu\u00eddo do gatilho de compila\u00e7\u00e3o CI --design","title":"Documentos de Design Controlados por Origem"},{"location":"design/design-reviews/recipes/async-design-reviews/#fluxo-de-trabalho","text":"O designer cria um branch no reposit\u00f3rio com a documenta\u00e7\u00e3o. O designer trabalha na adi\u00e7\u00e3o ou atualiza\u00e7\u00e3o da documenta\u00e7\u00e3o relevante para o design. O designer envia uma solicita\u00e7\u00e3o de pull e solicita a revis\u00e3o de membros espec\u00edficos da equipe. Os revisores fornecem feedback ao designer, que incorpora o feedback. (OPCIONAL) Pode ser realizada uma reuni\u00e3o de revis\u00e3o de design para fornecer uma explica\u00e7\u00e3o mais detalhada do design aos revisores. O design \u00e9 aprovado/aceito e mesclado no branch principal.","title":"Fluxo de Trabalho"},{"location":"design/design-reviews/recipes/async-design-reviews/#dicas-para-ciclos-de-revisao-mais-rapidos","text":"Para garantir que um design seja revisado em tempo h\u00e1bil, \u00e9 importante solicitar diretamente as revis\u00f5es dos membros da equipe. Se os membros da equipe forem designados sem perguntar, ou se ningu\u00e9m for designado, \u00e9 prov\u00e1vel que o design fique mais tempo sem revis\u00e3o. Tente as seguintes a\u00e7\u00f5es: Fa\u00e7a com que seja responsabilidade do designer encontrar revisores para seu design. O designer deve perguntar diretamente a um membro da equipe (conversa face a face, mensagens ass\u00edncronas, etc.) se ele est\u00e1 dispon\u00edvel para revisar. Somente se concordar, ent\u00e3o atribua-o como revisor. Indique se o design est\u00e1 pronto para ser mesclado ap\u00f3s a aprova\u00e7\u00e3o.","title":"Dicas para Ciclos de Revis\u00e3o Mais R\u00e1pidos"},{"location":"design/design-reviews/recipes/async-design-reviews/#indicar-completude-do-design","text":"Isso ajuda o revisor a entender se o design est\u00e1 pronto para ser aceito ou se ainda est\u00e1 em andamento. O n\u00edvel e o tipo de feedback que o revisor fornece provavelmente ser\u00e3o diferentes, dependendo do estado do design. Tente as seguintes a\u00e7\u00f5es para indicar o estado do design: Marque a PR como um Rascunho (Draft). Algumas ferramentas de ALM suportam a abertura de uma solicita\u00e7\u00e3o de pull como um Rascunho, como o Azure DevOps. Coloque um prefixo no t\u00edtulo como \"RASCUNHO\", \"EM ANDAMENTO\" ou \"trabalho em andamento\". Configure a solicita\u00e7\u00e3o de pull para mesclar automaticamente ap\u00f3s aprova\u00e7\u00f5es e verifica\u00e7\u00f5es bem-sucedidas. Isso pode indicar ao revisor que o design est\u00e1 completo do ponto de vista do designer.","title":"Indicar Completude do Design"},{"location":"design/design-reviews/recipes/async-design-reviews/#praticar-comportamentos-inclusivos","text":"Os revisores designados n\u00e3o s\u00e3o os \u00fanicos membros da equipe que podem fornecer feedback sobre o design. Se outros membros da equipe voluntariamente dedicaram tempo para fornecer feedback ou fazer perguntas, certifique-se de responder. Utilize a conversa face a face (presencial ou virtual) para resolver feedback ou perguntas de outros conforme necess\u00e1rio. Isso ajuda a construir a coes\u00e3o da equipe para garantir que todos entendam e estejam dispostos a se comprometer com um determinado design. Essa pr\u00e1tica demonstra um comportamento inclusivo , o que promover\u00e1 confian\u00e7a e respeito dentro da equipe. Responda a todos os coment\u00e1rios da PR de forma objetiva e respeitosa , independentemente do n\u00edvel, posi\u00e7\u00e3o ou t\u00edtulo do autor. Ap\u00f3s duas rodadas de perguntas/respostas, recorra \u00e0 comunica\u00e7\u00e3o s\u00edncrona para a resolu\u00e7\u00e3o (ou seja, conversa face a face virtual ou presencial).","title":"Praticar Comportamentos Inclusivos"},{"location":"design/design-reviews/recipes/engagement-process/","text":"Incorporando Revis\u00f5es de Design em um Engajamento Introdu\u00e7\u00e3o As revis\u00f5es de design n\u00e3o devem parecer um fardo. As revis\u00f5es de design podem ser facilmente incorporadas ao processo de desenvolvimento da equipe com um m\u00ednimo de sobrecarga. Crie revis\u00f5es de design apenas quando necess\u00e1rio. Nem toda hist\u00f3ria ou tarefa requer uma revis\u00e3o de design completa. Utilize este guia para fazer altera\u00e7\u00f5es que se adaptem melhor \u00e0 equipe. Cada equipe trabalha de maneira diferente. Recorra aos especialistas em determinados assuntos da Microsoft (SME) conforme necess\u00e1rio durante as revis\u00f5es de design. Nem toda hist\u00f3ria precisa de um SME ou da aprova\u00e7\u00e3o da lideran\u00e7a. A maioria das revis\u00f5es de design pode ser totalmente executada dentro de uma equipe de desenvolvimento. Use diagramas para visualizar conceitos e arquitetura. As seguintes diretrizes descrevem como a Microsoft e o cliente podem incorporar revis\u00f5es de design em seu processo \u00e1gil do dia a dia. Vis\u00e3o Geral / Sess\u00e3o de Design de Arquitetura (ADS) No in\u00edcio de um engajamento, a Microsoft trabalha com os clientes para entender seus objetivos e metas exclusivos e estabelecer uma defini\u00e7\u00e3o de feito. A Microsoft mergulha profundamente na infraestrutura e arquitetura existentes do cliente para entender as poss\u00edveis restri\u00e7\u00f5es. Al\u00e9m disso, buscamos compreender e descobrir requisitos n\u00e3o funcionais espec\u00edficos que influenciam a solu\u00e7\u00e3o. Durante esse per\u00edodo, a equipe descobre muitos desconhecidos, aproveitando todas as informa\u00e7\u00f5es rec\u00e9m-descobertas, a fim de ajudar a gerar um design impactante que atenda aos objetivos do cliente. Ap\u00f3s a ADS, pode ser \u00fatil realizar Engenharia de Viabilidade (Engineering Feasibility Spikes) para reduzir ainda mais os riscos das tecnologias consideradas para o engajamento. Dica : Todos os desconhecidos ainda n\u00e3o foram abordados neste ponto. Planejamento do Sprint Em muitos engajamentos, a Microsoft trabalha com os clientes usando um processo de desenvolvimento \u00e1gil SCRUM que come\u00e7a com o planejamento do sprint. O planejamento do sprint \u00e9 uma \u00f3tima oportunidade para mergulhar profundamente no pr\u00f3ximo conjunto de trabalho de alta prioridade. Alguns pontos-chave a serem abordados s\u00e3o os seguintes: Identificar hist\u00f3rias que exigem revis\u00f5es de design. Separar o design da implementa\u00e7\u00e3o para hist\u00f3rias complexas. Atribuir um respons\u00e1vel para cada hist\u00f3ria de design. Hist\u00f3rias que se beneficiar\u00e3o com revis\u00f5es de design t\u00eam uma ou mais das seguintes caracter\u00edsticas em comum: Existem muitos requisitos desconhecidos ou pouco claros. H\u00e1 uma ampla distribui\u00e7\u00e3o da carga de trabalho prevista, ou pontos de hist\u00f3ria, em toda a equipe de desenvolvimento. O desenvolvedor n\u00e3o consegue ilustrar claramente todas as tarefas necess\u00e1rias para a hist\u00f3ria. Dica : Ap\u00f3s o planejamento do sprint estar conclu\u00eddo, a equipe deve considerar a realiza\u00e7\u00e3o de uma discuss\u00e3o inicial de revis\u00e3o de design para aprofundar os requisitos de design das hist\u00f3rias que foram identificadas. Isso fornecer\u00e1 mais clareza para que a equipe possa avan\u00e7ar com uma revis\u00e3o de design, de forma s\u00edncrona ou ass\u00edncrona, e concluir as tarefas. Refinamento do Backlog do Sprint Se sua equipe ainda n\u00e3o realiza uma sess\u00e3o de Refinamento do Backlog do Sprint pelo menos uma vez por semana, voc\u00ea deve considerar faz\u00ea-lo. \u00c9 uma \u00f3tima oportunidade para: Manter o backlog limpo. Repriorizar o trabalho com base nas mudan\u00e7as nas prioridades do neg\u00f3cio. Preencher descri\u00e7\u00f5es e crit\u00e9rios de aceita\u00e7\u00e3o ausentes. Identificar hist\u00f3rias que exigem revis\u00f5es de design. A equipe pode seguir as mesmas etapas do planejamento do sprint para ajudar a identificar quais hist\u00f3rias exigem revis\u00f5es de design. Isso muitas vezes pode economizar muito tempo durante as pr\u00f3prias reuni\u00f5es de planejamento do sprint para se concentrar na tarefa em quest\u00e3o. Retrospectivas do Sprint As retrospectivas do sprint s\u00e3o um \u00f3timo momento para fazer check-in com a equipe de desenvolvimento, identificar o que est\u00e1 funcionando ou n\u00e3o, e propor mudan\u00e7as para continuar melhorando. Tamb\u00e9m \u00e9 um \u00f3timo momento para verificar as revis\u00f5es de design: Os designs mudaram desde o \u00faltimo sprint? Como as mudan\u00e7as de design impactaram o engajamento? Os artefatos de design anteriores foram atualizados para refletir novas mudan\u00e7as? Todos os artefatos de design devem ser tratados como documentos vivos. \u00c0 medida que os requisitos mudam ou mais desconhecidos s\u00e3o descobertos, a equipe de desenvolvimento deve atualizar retroativamente todos os artefatos de design. N\u00e3o cumprir esta etapa cr\u00edtica pode fazer com que o cliente incorra em d\u00edvida t\u00e9cnica futura. Artefatos que n\u00e3o est\u00e3o atualizados s\u00e3o bugs no design. Dica : Mantenha seus artefatos atualizados adicionando-os \u00e0 Defini\u00e7\u00e3o de Feito (Definition of Done) de sua equipe para todas as hist\u00f3rias de usu\u00e1rio. Revis\u00f5es de Design S\u00edncronas \u00c9 frequentemente \u00fatil agendar 1-2 sess\u00f5es de design por sprint como parte da cad\u00eancia de reuni\u00f5es mencionada anteriormente. Ao longo do sprint, as pessoas podem adicionar t\u00f3picos de design \u00e0 pauta da reuni\u00e3o e, se n\u00e3o houver nada a discutir para uma determinada reuni\u00e3o, ela pode ser simplesmente cancelada. Embora essas sess\u00f5es nem sempre sejam usadas, elas ajudam os membros do projeto a se alinharem quanto ao tempo e ao prop\u00f3sito desde cedo, estabelecendo um precedente e incentivando a participa\u00e7\u00e3o para que os t\u00f3picos de design n\u00e3o sejam negligenciados. Muitas vezes, \u00e9 \u00fatil que os membros do projeto que pretendem apresentar seu design ao grupo mais amplo distribuam a documenta\u00e7\u00e3o sobre seu design antes da sess\u00e3o, para que os outros participantes possam se preparar com contexto antes da reuni\u00e3o. Deve-se observar que a necessidade dessas sess\u00f5es certamente evolui ao longo do engajamento. No in\u00edcio, ou em outros momentos de maior ambiguidade, essas reuni\u00f5es s\u00e3o geralmente usadas com mais frequ\u00eancia e de maneira mais completa. Por fim, embora seja sugerido que as revis\u00f5es de design s\u00edncronas sejam agendadas durante a cad\u00eancia normal do sprint, n\u00e3o deve haver desencorajamento ao agendamento de sess\u00f5es ad hoc - mesmo que essas revis\u00f5es se limitem aos participantes de um fluxo de trabalho espec\u00edfico. Sprints de Encerramento Os sprints de encerramento s\u00e3o um \u00f3timo momento para amarrar pontas soltas com o cliente e entregar a solu\u00e7\u00e3o. A entrega ao cliente fica muito mais f\u00e1cil quando h\u00e1 artefatos de design para referenciar e entregar junto com a solu\u00e7\u00e3o conclu\u00edda. Durante seus sprints de encerramento, a equipe de desenvolvimento deve considerar o seguinte: Os artefatos de design est\u00e3o atualizados? Os artefatos de design est\u00e3o armazenados em um local acess\u00edvel?","title":"Incorporando Revis\u00f5es de Design em um Engajamento"},{"location":"design/design-reviews/recipes/engagement-process/#incorporando-revisoes-de-design-em-um-engajamento","text":"","title":"Incorporando Revis\u00f5es de Design em um Engajamento"},{"location":"design/design-reviews/recipes/engagement-process/#introducao","text":"As revis\u00f5es de design n\u00e3o devem parecer um fardo. As revis\u00f5es de design podem ser facilmente incorporadas ao processo de desenvolvimento da equipe com um m\u00ednimo de sobrecarga. Crie revis\u00f5es de design apenas quando necess\u00e1rio. Nem toda hist\u00f3ria ou tarefa requer uma revis\u00e3o de design completa. Utilize este guia para fazer altera\u00e7\u00f5es que se adaptem melhor \u00e0 equipe. Cada equipe trabalha de maneira diferente. Recorra aos especialistas em determinados assuntos da Microsoft (SME) conforme necess\u00e1rio durante as revis\u00f5es de design. Nem toda hist\u00f3ria precisa de um SME ou da aprova\u00e7\u00e3o da lideran\u00e7a. A maioria das revis\u00f5es de design pode ser totalmente executada dentro de uma equipe de desenvolvimento. Use diagramas para visualizar conceitos e arquitetura. As seguintes diretrizes descrevem como a Microsoft e o cliente podem incorporar revis\u00f5es de design em seu processo \u00e1gil do dia a dia.","title":"Introdu\u00e7\u00e3o"},{"location":"design/design-reviews/recipes/engagement-process/#visao-geral-sessao-de-design-de-arquitetura-ads","text":"No in\u00edcio de um engajamento, a Microsoft trabalha com os clientes para entender seus objetivos e metas exclusivos e estabelecer uma defini\u00e7\u00e3o de feito. A Microsoft mergulha profundamente na infraestrutura e arquitetura existentes do cliente para entender as poss\u00edveis restri\u00e7\u00f5es. Al\u00e9m disso, buscamos compreender e descobrir requisitos n\u00e3o funcionais espec\u00edficos que influenciam a solu\u00e7\u00e3o. Durante esse per\u00edodo, a equipe descobre muitos desconhecidos, aproveitando todas as informa\u00e7\u00f5es rec\u00e9m-descobertas, a fim de ajudar a gerar um design impactante que atenda aos objetivos do cliente. Ap\u00f3s a ADS, pode ser \u00fatil realizar Engenharia de Viabilidade (Engineering Feasibility Spikes) para reduzir ainda mais os riscos das tecnologias consideradas para o engajamento. Dica : Todos os desconhecidos ainda n\u00e3o foram abordados neste ponto.","title":"Vis\u00e3o Geral / Sess\u00e3o de Design de Arquitetura (ADS)"},{"location":"design/design-reviews/recipes/engagement-process/#planejamento-do-sprint","text":"Em muitos engajamentos, a Microsoft trabalha com os clientes usando um processo de desenvolvimento \u00e1gil SCRUM que come\u00e7a com o planejamento do sprint. O planejamento do sprint \u00e9 uma \u00f3tima oportunidade para mergulhar profundamente no pr\u00f3ximo conjunto de trabalho de alta prioridade. Alguns pontos-chave a serem abordados s\u00e3o os seguintes: Identificar hist\u00f3rias que exigem revis\u00f5es de design. Separar o design da implementa\u00e7\u00e3o para hist\u00f3rias complexas. Atribuir um respons\u00e1vel para cada hist\u00f3ria de design. Hist\u00f3rias que se beneficiar\u00e3o com revis\u00f5es de design t\u00eam uma ou mais das seguintes caracter\u00edsticas em comum: Existem muitos requisitos desconhecidos ou pouco claros. H\u00e1 uma ampla distribui\u00e7\u00e3o da carga de trabalho prevista, ou pontos de hist\u00f3ria, em toda a equipe de desenvolvimento. O desenvolvedor n\u00e3o consegue ilustrar claramente todas as tarefas necess\u00e1rias para a hist\u00f3ria. Dica : Ap\u00f3s o planejamento do sprint estar conclu\u00eddo, a equipe deve considerar a realiza\u00e7\u00e3o de uma discuss\u00e3o inicial de revis\u00e3o de design para aprofundar os requisitos de design das hist\u00f3rias que foram identificadas. Isso fornecer\u00e1 mais clareza para que a equipe possa avan\u00e7ar com uma revis\u00e3o de design, de forma s\u00edncrona ou ass\u00edncrona, e concluir as tarefas.","title":"Planejamento do Sprint"},{"location":"design/design-reviews/recipes/engagement-process/#refinamento-do-backlog-do-sprint","text":"Se sua equipe ainda n\u00e3o realiza uma sess\u00e3o de Refinamento do Backlog do Sprint pelo menos uma vez por semana, voc\u00ea deve considerar faz\u00ea-lo. \u00c9 uma \u00f3tima oportunidade para: Manter o backlog limpo. Repriorizar o trabalho com base nas mudan\u00e7as nas prioridades do neg\u00f3cio. Preencher descri\u00e7\u00f5es e crit\u00e9rios de aceita\u00e7\u00e3o ausentes. Identificar hist\u00f3rias que exigem revis\u00f5es de design. A equipe pode seguir as mesmas etapas do planejamento do sprint para ajudar a identificar quais hist\u00f3rias exigem revis\u00f5es de design. Isso muitas vezes pode economizar muito tempo durante as pr\u00f3prias reuni\u00f5es de planejamento do sprint para se concentrar na tarefa em quest\u00e3o.","title":"Refinamento do Backlog do Sprint"},{"location":"design/design-reviews/recipes/engagement-process/#retrospectivas-do-sprint","text":"As retrospectivas do sprint s\u00e3o um \u00f3timo momento para fazer check-in com a equipe de desenvolvimento, identificar o que est\u00e1 funcionando ou n\u00e3o, e propor mudan\u00e7as para continuar melhorando. Tamb\u00e9m \u00e9 um \u00f3timo momento para verificar as revis\u00f5es de design: Os designs mudaram desde o \u00faltimo sprint? Como as mudan\u00e7as de design impactaram o engajamento? Os artefatos de design anteriores foram atualizados para refletir novas mudan\u00e7as? Todos os artefatos de design devem ser tratados como documentos vivos. \u00c0 medida que os requisitos mudam ou mais desconhecidos s\u00e3o descobertos, a equipe de desenvolvimento deve atualizar retroativamente todos os artefatos de design. N\u00e3o cumprir esta etapa cr\u00edtica pode fazer com que o cliente incorra em d\u00edvida t\u00e9cnica futura. Artefatos que n\u00e3o est\u00e3o atualizados s\u00e3o bugs no design. Dica : Mantenha seus artefatos atualizados adicionando-os \u00e0 Defini\u00e7\u00e3o de Feito (Definition of Done) de sua equipe para todas as hist\u00f3rias de usu\u00e1rio.","title":"Retrospectivas do Sprint"},{"location":"design/design-reviews/recipes/engagement-process/#revisoes-de-design-sincronas","text":"\u00c9 frequentemente \u00fatil agendar 1-2 sess\u00f5es de design por sprint como parte da cad\u00eancia de reuni\u00f5es mencionada anteriormente. Ao longo do sprint, as pessoas podem adicionar t\u00f3picos de design \u00e0 pauta da reuni\u00e3o e, se n\u00e3o houver nada a discutir para uma determinada reuni\u00e3o, ela pode ser simplesmente cancelada. Embora essas sess\u00f5es nem sempre sejam usadas, elas ajudam os membros do projeto a se alinharem quanto ao tempo e ao prop\u00f3sito desde cedo, estabelecendo um precedente e incentivando a participa\u00e7\u00e3o para que os t\u00f3picos de design n\u00e3o sejam negligenciados. Muitas vezes, \u00e9 \u00fatil que os membros do projeto que pretendem apresentar seu design ao grupo mais amplo distribuam a documenta\u00e7\u00e3o sobre seu design antes da sess\u00e3o, para que os outros participantes possam se preparar com contexto antes da reuni\u00e3o. Deve-se observar que a necessidade dessas sess\u00f5es certamente evolui ao longo do engajamento. No in\u00edcio, ou em outros momentos de maior ambiguidade, essas reuni\u00f5es s\u00e3o geralmente usadas com mais frequ\u00eancia e de maneira mais completa. Por fim, embora seja sugerido que as revis\u00f5es de design s\u00edncronas sejam agendadas durante a cad\u00eancia normal do sprint, n\u00e3o deve haver desencorajamento ao agendamento de sess\u00f5es ad hoc - mesmo que essas revis\u00f5es se limitem aos participantes de um fluxo de trabalho espec\u00edfico.","title":"Revis\u00f5es de Design S\u00edncronas"},{"location":"design/design-reviews/recipes/engagement-process/#sprints-de-encerramento","text":"Os sprints de encerramento s\u00e3o um \u00f3timo momento para amarrar pontas soltas com o cliente e entregar a solu\u00e7\u00e3o. A entrega ao cliente fica muito mais f\u00e1cil quando h\u00e1 artefatos de design para referenciar e entregar junto com a solu\u00e7\u00e3o conclu\u00edda. Durante seus sprints de encerramento, a equipe de desenvolvimento deve considerar o seguinte: Os artefatos de design est\u00e3o atualizados? Os artefatos de design est\u00e3o armazenados em um local acess\u00edvel?","title":"Sprints de Encerramento"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/","text":"Engenharia de Investiga\u00e7\u00e3o de Viabilidade: Identifica\u00e7\u00e3o e Mitiga\u00e7\u00e3o de Riscos Introdu\u00e7\u00e3o Alguns compromissos requerem mais redu\u00e7\u00e3o de riscos do que outros. Mesmo ap\u00f3s Sess\u00f5es de Design Arquitet\u00f4nico (ADS), um compromisso pode ainda ter incertezas t\u00e9cnicas substanciais. Esses tipos de compromissos justificam uma fase explorat\u00f3ria/valida\u00e7\u00e3o em que as Investiga\u00e7\u00f5es de Viabilidade de Engenharia podem ser conduzidas imediatamente ap\u00f3s a vis\u00e3o/ADS e antes dos sprints de engenharia. Investiga\u00e7\u00f5es de Viabilidade de Engenharia S\u00e3o atividades investigativas com limite de tempo regulamentadas, mas colaborativas, conduzidas em um ciclo de feedback para aproveitar as aprendizagens individuais para informar a equipe. Aumentam o conhecimento e a compreens\u00e3o da equipe, ao mesmo tempo que minimizam os riscos do compromisso. As diretrizes a seguir detalham como a Microsoft e o cliente podem incorporar as investiga\u00e7\u00f5es de viabilidade de engenharia nos processos \u00e1geis do dia a dia. Pr\u00e9-Mortem Uma boa maneira de avaliar quais investiga\u00e7\u00f5es de engenharia conduzir \u00e9 fazer um pr\u00e9-mortem . O que \u00e9 um pr\u00e9-mortem? Uma reuni\u00e3o de 90 minutos ap\u00f3s a vis\u00e3o/ADS que inclui toda a equipe (e tamb\u00e9m pode incluir o cliente) que responde a \"Imagine que o projeto falhou. Quais problemas e desafios causaram esse fracasso?\" Permite que toda a equipe levante inicialmente preocupa\u00e7\u00f5es e riscos no in\u00edcio do compromisso. Essa entrada \u00e9 usada para decidir quais riscos abordar como investiga\u00e7\u00f5es de engenharia. Compartilhamento de Aprendizados e Progresso Atual Ciclo de Feedback O elemento-chave da condu\u00e7\u00e3o das investiga\u00e7\u00f5es de viabilidade de engenharia \u00e9 compartilhar os resultados em andamento. A equipe se re\u00fane e compartilha o aprendizado em uma base semanal (ou com mais frequ\u00eancia, se necess\u00e1rio). O compartilhamento \u00e9 feito por meio de uma chamada de 30 minutos. Todos na Equipe de Desenvolvimento participam da chamada (mesmo que nem todos tenham uma hist\u00f3ria de investiga\u00e7\u00e3o de viabilidade de engenharia atribu\u00edda ou mesmo se o trabalho de investiga\u00e7\u00e3o estiver em andamento e n\u00e3o estiver totalmente conclu\u00eddo). O ciclo de feedback \u00e9 significativamente mais curto do que no processo \u00e1gil baseado em sprint. Em vez de usar o Sprint como a fun\u00e7\u00e3o for\u00e7adora para ajustar/pivotar/repriorizar, as sess\u00f5es de compartilhamento intermedi\u00e1rio eram o gatilho. Reprioriza\u00e7\u00e3o das pr\u00f3ximas investiga\u00e7\u00f5es Depois que a equipe compartilha o progresso atual, outra rodada de planejamento \u00e9 feita. Isso permite que a equipe: Estabele\u00e7a um ciclo de feedback muito mais curto. Repriorize a(s) pr\u00f3xima(s) investiga\u00e7\u00e3o(\u00f5es) com base no resultado das investiga\u00e7\u00f5es de viabilidade de engenharia atuais. Ajustando com base no contexto Durante a chamada de compartilhamento e quando a equipe acredita ter informa\u00e7\u00f5es suficientes, a equipe \u00e0s vezes percebe que os crit\u00e9rios de aceita\u00e7\u00e3o originais da investiga\u00e7\u00e3o j\u00e1 n\u00e3o s\u00e3o v\u00e1lidos. A equipe muda para outra \u00e1rea que fornece mais valor. Um registro de decis\u00f5es pode ser usado para rastrear resultados. Diagrama de Sprints de Investiga\u00e7\u00e3o de Viabilidade de Engenharia O processo \u00e9 representado no diagrama abaixo. Benef\u00edcios Cria\u00e7\u00e3o de exemplos de c\u00f3digo para comprovar ideias \u00c9 importante observar que \u00e9 necess\u00e1rio ser intencional sobre as investiga\u00e7\u00f5es n\u00e3o visarem produzir c\u00f3digo de produ\u00e7\u00e3o. \u00c0s vezes, a equipe deve escrever c\u00f3digo para chegar \u00e0 aprendizagem t\u00e9cnica. A equipe deve estar ciente de que o c\u00f3digo escrito para as investiga\u00e7\u00f5es n\u00e3o servir\u00e1 como c\u00f3digo para a solu\u00e7\u00e3o final. O c\u00f3digo escrito \u00e9 apenas o suficiente para impulsionar a investiga\u00e7\u00e3o com maior confian\u00e7a. Por exemplo, suponha que a equipe estava explorando a coreografia de API na cria\u00e7\u00e3o de um cliente do Microsoft Graph com v\u00e1rios fluxos de autentica\u00e7\u00e3o e permiss\u00f5es do Azure Active Directory (AAD). O c\u00f3digo para demonstrar isso \u00e9 implementado em um aplicativo de console, mas poderia ter sido feito por meio de um servidor Express, etc. O fato de ser um aplicativo de console n\u00e3o era importante, mas sim a capacidade do cliente do Microsoft Graph de realizar opera\u00e7\u00f5es no endpoint da API do Microsoft Graph com o n\u00famero m\u00ednimo de permiss\u00f5es \u00e9 o principal objetivo de aprendizado. Conversas direcionadas Ao compartilhar o progresso da investiga\u00e7\u00e3o, o conhecimento coletivo da equipe aumenta. As investiga\u00e7\u00f5es permitem que a equipe conduza conversas concisas com v\u00e1rios Grupos de Produtos (PGs) e outros especialistas em assuntos (SMEs). Em vez de falar em um n\u00edvel hipot\u00e9tico, a equipe apresenta preocupa\u00e7\u00f5es de projeto/arquitetura concretas e aponta de forma concreta por que algo \u00e9 um obst\u00e1culo ou n\u00e3o \u00e9 uma maneira vi\u00e1vel de avan\u00e7ar. Aumento da confian\u00e7a do cliente Esse processo leva ao aumento da confian\u00e7a do cliente. Usando esse processo, a equipe: Leva o cliente junto no processo de tomada de decis\u00e3o e o orienta sobre como prosseguir. Fornece respostas com confian\u00e7a e sugere designs arquitet\u00f4nicos s\u00f3lidos. A condu\u00e7\u00e3o das investiga\u00e7\u00f5es de viabilidade de engenharia prepara a equipe e o cliente para o sucesso, especialmente se destacar aprendizados tecnol\u00f3gicos que ajudem o cliente a entender completamente a viabilidade de uma solu\u00e7\u00e3o de engenharia. Resumo dos principais pontos Um pr\u00e9-mortem pode envolver toda a equipe na identifica\u00e7\u00e3o de riscos de neg\u00f3cios e t\u00e9cnicos. O objetivo principal da investiga\u00e7\u00e3o de viabilidade de engenharia \u00e9 a aprendizagem. A aprendizagem ocorre tanto durante a condu\u00e7\u00e3o quanto no compartilhamento de insights das investiga\u00e7\u00f5es. Use novas aprendizagens obtidas por meio das investiga\u00e7\u00f5es para revisar, refinar, repriorizar ou criar o pr\u00f3ximo conjunto de investiga\u00e7\u00f5es. Quando as investiga\u00e7\u00f5es s\u00e3o conclu\u00eddas, procure novos ritmos sem anais, como adicionar uma coluna de 'risco' ao quadro de retrospectiva ou levantar t\u00f3picos na standup di\u00e1ria para identificar riscos emergentes.","title":"Engenharia de Investiga\u00e7\u00e3o de Viabilidade: Identifica\u00e7\u00e3o e Mitiga\u00e7\u00e3o de Riscos"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#engenharia-de-investigacao-de-viabilidade-identificacao-e-mitigacao-de-riscos","text":"","title":"Engenharia de Investiga\u00e7\u00e3o de Viabilidade: Identifica\u00e7\u00e3o e Mitiga\u00e7\u00e3o de Riscos"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#introducao","text":"Alguns compromissos requerem mais redu\u00e7\u00e3o de riscos do que outros. Mesmo ap\u00f3s Sess\u00f5es de Design Arquitet\u00f4nico (ADS), um compromisso pode ainda ter incertezas t\u00e9cnicas substanciais. Esses tipos de compromissos justificam uma fase explorat\u00f3ria/valida\u00e7\u00e3o em que as Investiga\u00e7\u00f5es de Viabilidade de Engenharia podem ser conduzidas imediatamente ap\u00f3s a vis\u00e3o/ADS e antes dos sprints de engenharia.","title":"Introdu\u00e7\u00e3o"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#investigacoes-de-viabilidade-de-engenharia","text":"S\u00e3o atividades investigativas com limite de tempo regulamentadas, mas colaborativas, conduzidas em um ciclo de feedback para aproveitar as aprendizagens individuais para informar a equipe. Aumentam o conhecimento e a compreens\u00e3o da equipe, ao mesmo tempo que minimizam os riscos do compromisso. As diretrizes a seguir detalham como a Microsoft e o cliente podem incorporar as investiga\u00e7\u00f5es de viabilidade de engenharia nos processos \u00e1geis do dia a dia.","title":"Investiga\u00e7\u00f5es de Viabilidade de Engenharia"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#pre-mortem","text":"Uma boa maneira de avaliar quais investiga\u00e7\u00f5es de engenharia conduzir \u00e9 fazer um pr\u00e9-mortem .","title":"Pr\u00e9-Mortem"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#o-que-e-um-pre-mortem","text":"Uma reuni\u00e3o de 90 minutos ap\u00f3s a vis\u00e3o/ADS que inclui toda a equipe (e tamb\u00e9m pode incluir o cliente) que responde a \"Imagine que o projeto falhou. Quais problemas e desafios causaram esse fracasso?\" Permite que toda a equipe levante inicialmente preocupa\u00e7\u00f5es e riscos no in\u00edcio do compromisso. Essa entrada \u00e9 usada para decidir quais riscos abordar como investiga\u00e7\u00f5es de engenharia.","title":"O que \u00e9 um pr\u00e9-mortem?"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#compartilhamento-de-aprendizados-e-progresso-atual","text":"","title":"Compartilhamento de Aprendizados e Progresso Atual"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#ciclo-de-feedback","text":"O elemento-chave da condu\u00e7\u00e3o das investiga\u00e7\u00f5es de viabilidade de engenharia \u00e9 compartilhar os resultados em andamento. A equipe se re\u00fane e compartilha o aprendizado em uma base semanal (ou com mais frequ\u00eancia, se necess\u00e1rio). O compartilhamento \u00e9 feito por meio de uma chamada de 30 minutos. Todos na Equipe de Desenvolvimento participam da chamada (mesmo que nem todos tenham uma hist\u00f3ria de investiga\u00e7\u00e3o de viabilidade de engenharia atribu\u00edda ou mesmo se o trabalho de investiga\u00e7\u00e3o estiver em andamento e n\u00e3o estiver totalmente conclu\u00eddo). O ciclo de feedback \u00e9 significativamente mais curto do que no processo \u00e1gil baseado em sprint. Em vez de usar o Sprint como a fun\u00e7\u00e3o for\u00e7adora para ajustar/pivotar/repriorizar, as sess\u00f5es de compartilhamento intermedi\u00e1rio eram o gatilho.","title":"Ciclo de Feedback"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#repriorizacao-das-proximas-investigacoes","text":"Depois que a equipe compartilha o progresso atual, outra rodada de planejamento \u00e9 feita. Isso permite que a equipe: Estabele\u00e7a um ciclo de feedback muito mais curto. Repriorize a(s) pr\u00f3xima(s) investiga\u00e7\u00e3o(\u00f5es) com base no resultado das investiga\u00e7\u00f5es de viabilidade de engenharia atuais.","title":"Reprioriza\u00e7\u00e3o das pr\u00f3ximas investiga\u00e7\u00f5es"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#ajustando-com-base-no-contexto","text":"Durante a chamada de compartilhamento e quando a equipe acredita ter informa\u00e7\u00f5es suficientes, a equipe \u00e0s vezes percebe que os crit\u00e9rios de aceita\u00e7\u00e3o originais da investiga\u00e7\u00e3o j\u00e1 n\u00e3o s\u00e3o v\u00e1lidos. A equipe muda para outra \u00e1rea que fornece mais valor. Um registro de decis\u00f5es pode ser usado para rastrear resultados.","title":"Ajustando com base no contexto"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#diagrama-de-sprints-de-investigacao-de-viabilidade-de-engenharia","text":"O processo \u00e9 representado no diagrama abaixo.","title":"Diagrama de Sprints de Investiga\u00e7\u00e3o de Viabilidade de Engenharia"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#beneficios","text":"","title":"Benef\u00edcios"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#criacao-de-exemplos-de-codigo-para-comprovar-ideias","text":"\u00c9 importante observar que \u00e9 necess\u00e1rio ser intencional sobre as investiga\u00e7\u00f5es n\u00e3o visarem produzir c\u00f3digo de produ\u00e7\u00e3o. \u00c0s vezes, a equipe deve escrever c\u00f3digo para chegar \u00e0 aprendizagem t\u00e9cnica. A equipe deve estar ciente de que o c\u00f3digo escrito para as investiga\u00e7\u00f5es n\u00e3o servir\u00e1 como c\u00f3digo para a solu\u00e7\u00e3o final. O c\u00f3digo escrito \u00e9 apenas o suficiente para impulsionar a investiga\u00e7\u00e3o com maior confian\u00e7a. Por exemplo, suponha que a equipe estava explorando a coreografia de API na cria\u00e7\u00e3o de um cliente do Microsoft Graph com v\u00e1rios fluxos de autentica\u00e7\u00e3o e permiss\u00f5es do Azure Active Directory (AAD). O c\u00f3digo para demonstrar isso \u00e9 implementado em um aplicativo de console, mas poderia ter sido feito por meio de um servidor Express, etc. O fato de ser um aplicativo de console n\u00e3o era importante, mas sim a capacidade do cliente do Microsoft Graph de realizar opera\u00e7\u00f5es no endpoint da API do Microsoft Graph com o n\u00famero m\u00ednimo de permiss\u00f5es \u00e9 o principal objetivo de aprendizado.","title":"Cria\u00e7\u00e3o de exemplos de c\u00f3digo para comprovar ideias"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#conversas-direcionadas","text":"Ao compartilhar o progresso da investiga\u00e7\u00e3o, o conhecimento coletivo da equipe aumenta. As investiga\u00e7\u00f5es permitem que a equipe conduza conversas concisas com v\u00e1rios Grupos de Produtos (PGs) e outros especialistas em assuntos (SMEs). Em vez de falar em um n\u00edvel hipot\u00e9tico, a equipe apresenta preocupa\u00e7\u00f5es de projeto/arquitetura concretas e aponta de forma concreta por que algo \u00e9 um obst\u00e1culo ou n\u00e3o \u00e9 uma maneira vi\u00e1vel de avan\u00e7ar.","title":"Conversas direcionadas"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#aumento-da-confianca-do-cliente","text":"Esse processo leva ao aumento da confian\u00e7a do cliente. Usando esse processo, a equipe: Leva o cliente junto no processo de tomada de decis\u00e3o e o orienta sobre como prosseguir. Fornece respostas com confian\u00e7a e sugere designs arquitet\u00f4nicos s\u00f3lidos. A condu\u00e7\u00e3o das investiga\u00e7\u00f5es de viabilidade de engenharia prepara a equipe e o cliente para o sucesso, especialmente se destacar aprendizados tecnol\u00f3gicos que ajudem o cliente a entender completamente a viabilidade de uma solu\u00e7\u00e3o de engenharia.","title":"Aumento da confian\u00e7a do cliente"},{"location":"design/design-reviews/recipes/engineering-feasibility-spikes/#resumo-dos-principais-pontos","text":"Um pr\u00e9-mortem pode envolver toda a equipe na identifica\u00e7\u00e3o de riscos de neg\u00f3cios e t\u00e9cnicos. O objetivo principal da investiga\u00e7\u00e3o de viabilidade de engenharia \u00e9 a aprendizagem. A aprendizagem ocorre tanto durante a condu\u00e7\u00e3o quanto no compartilhamento de insights das investiga\u00e7\u00f5es. Use novas aprendizagens obtidas por meio das investiga\u00e7\u00f5es para revisar, refinar, repriorizar ou criar o pr\u00f3ximo conjunto de investiga\u00e7\u00f5es. Quando as investiga\u00e7\u00f5es s\u00e3o conclu\u00eddas, procure novos ritmos sem anais, como adicionar uma coluna de 'risco' ao quadro de retrospectiva ou levantar t\u00f3picos na standup di\u00e1ria para identificar riscos emergentes.","title":"Resumo dos principais pontos"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/","text":"T\u00edtulo do Design de Funcionalidade ou Hist\u00f3ria Aqui (prefixado com DRAFT/WIP para indicar o n\u00edvel de completude) A funcionalidade reutiliza ou estende padr\u00f5es/interfaces j\u00e1 estabelecidos para o projeto? A funcionalidade exp\u00f5e novos padr\u00f5es ou interfaces que estabelecer\u00e3o um novo padr\u00e3o para desenvolvimentos futuros? Nome da Funcionalidade/Hist\u00f3ria Engajamento: [Engajamento] Cliente: [Cliente] Autores: [Autor1, Autor2, etc.] Vis\u00e3o/Declara\u00e7\u00e3o do Problema Tamb\u00e9m pode ser um link para o item de trabalho . Descreva a funcionalidade/hist\u00f3ria com um resumo de alto n\u00edvel. Considere informa\u00e7\u00f5es adicionais e justificativas, para posteridade e contexto hist\u00f3rico. Liste quaisquer suposi\u00e7\u00f5es que foram feitas para este design. Metas/Dentro do Escopo Liste as metas que a funcionalidade/hist\u00f3ria ajudar\u00e1 a alcan\u00e7ar e que s\u00e3o mais relevantes para a discuss\u00e3o de revis\u00e3o de design. Isso deve incluir crit\u00e9rios de aceita\u00e7\u00e3o necess\u00e1rios para atender \u00e0 defini\u00e7\u00e3o de pronto . N\u00e3o-Metas/Fora do Escopo Liste as n\u00e3o-metas para a funcionalidade/hist\u00f3ria. Isso inclui trabalhos que est\u00e3o al\u00e9m do escopo do que a funcionalidade/componente/servi\u00e7o se destina. Design Proposto Descreva brevemente a arquitetura de alto n\u00edvel para a funcionalidade/hist\u00f3ria. Diagramas relevantes (por exemplo, de sequ\u00eancia, componente, contexto, implanta\u00e7\u00e3o) devem ser inclu\u00eddos aqui. Tecnologia Descreva o sistema operacional relevante, servidor da Web, camada de apresenta\u00e7\u00e3o, camada de persist\u00eancia, armazenamento em cache, eventos/mensagens/trabalhos, etc. - tudo o que for aplic\u00e1vel \u00e0 solu\u00e7\u00e3o tecnol\u00f3gica geral e como eles ser\u00e3o usados. Descreva o uso de quaisquer bibliotecas ou componentes de c\u00f3digo aberto (OSS). Liste brevemente a(s) linguagem(ns) e plataforma(s) que comp\u00f5em a pilha. Requisitos N\u00e3o-Funcionais Quais s\u00e3o as principais preocupa\u00e7\u00f5es de desempenho e escalabilidade para esta funcionalidade/hist\u00f3ria? Existem objetivos espec\u00edficos de lat\u00eancia, disponibilidade e RTO/RPO que devem ser atendidos? Existem gargalos espec\u00edficos ou \u00e1reas problem\u00e1ticas potenciais? Por exemplo, as opera\u00e7\u00f5es s\u00e3o limitadas por CPU ou I/O (rede, disco)? Qu\u00e3o grandes s\u00e3o os conjuntos de dados e o qu\u00e3o r\u00e1pido eles crescem? Qual \u00e9 o padr\u00e3o de uso esperado do servi\u00e7o? Por exemplo, haver\u00e1 picos e vales de uso simult\u00e2neo intenso? Existem restri\u00e7\u00f5es de custo espec\u00edficas? (por exemplo, $ por transa\u00e7\u00e3o/dispositivo/usu\u00e1rio) Depend\u00eancias Essa funcionalidade/hist\u00f3ria precisa ser sequenciada ap\u00f3s outra funcionalidade/hist\u00f3ria atribu\u00edda \u00e0 mesma equipe e por qu\u00ea? A funcionalidade/hist\u00f3ria depende de outro trabalho que outra equipe est\u00e1 realizando? A equipe precisar\u00e1 esperar que esse trabalho seja conclu\u00eddo ou o trabalho pode prosseguir em paralelo? Riscos e Mitiga\u00e7\u00f5es A equipe precisa de assist\u00eancia de especialistas no assunto? Quais s\u00e3o as preocupa\u00e7\u00f5es de seguran\u00e7a e privacidade deste marco/\u00e9pico? Todas as informa\u00e7\u00f5es confidenciais e segredos s\u00e3o tratados de maneira segura e protegida? Perguntas em Aberto Liste quaisquer perguntas ou preocupa\u00e7\u00f5es em aberto aqui. Refer\u00eancias Adicionais Liste quaisquer refer\u00eancias adicionais aqui, incluindo links para itens de backlog, itens de trabalho ou outros documentos.","title":"T\u00edtulo do Design de Funcionalidade ou Hist\u00f3ria Aqui (prefixado com DRAFT/WIP para indicar o n\u00edvel de completude)"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#titulo-do-design-de-funcionalidade-ou-historia-aqui-prefixado-com-draftwip-para-indicar-o-nivel-de-completude","text":"A funcionalidade reutiliza ou estende padr\u00f5es/interfaces j\u00e1 estabelecidos para o projeto? A funcionalidade exp\u00f5e novos padr\u00f5es ou interfaces que estabelecer\u00e3o um novo padr\u00e3o para desenvolvimentos futuros? Nome da Funcionalidade/Hist\u00f3ria Engajamento: [Engajamento] Cliente: [Cliente] Autores: [Autor1, Autor2, etc.]","title":"T\u00edtulo do Design de Funcionalidade ou Hist\u00f3ria Aqui (prefixado com DRAFT/WIP para indicar o n\u00edvel de completude)"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#visaodeclaracao-do-problema","text":"Tamb\u00e9m pode ser um link para o item de trabalho . Descreva a funcionalidade/hist\u00f3ria com um resumo de alto n\u00edvel. Considere informa\u00e7\u00f5es adicionais e justificativas, para posteridade e contexto hist\u00f3rico. Liste quaisquer suposi\u00e7\u00f5es que foram feitas para este design.","title":"Vis\u00e3o/Declara\u00e7\u00e3o do Problema"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#metasdentro-do-escopo","text":"Liste as metas que a funcionalidade/hist\u00f3ria ajudar\u00e1 a alcan\u00e7ar e que s\u00e3o mais relevantes para a discuss\u00e3o de revis\u00e3o de design. Isso deve incluir crit\u00e9rios de aceita\u00e7\u00e3o necess\u00e1rios para atender \u00e0 defini\u00e7\u00e3o de pronto .","title":"Metas/Dentro do Escopo"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#nao-metasfora-do-escopo","text":"Liste as n\u00e3o-metas para a funcionalidade/hist\u00f3ria. Isso inclui trabalhos que est\u00e3o al\u00e9m do escopo do que a funcionalidade/componente/servi\u00e7o se destina.","title":"N\u00e3o-Metas/Fora do Escopo"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#design-proposto","text":"Descreva brevemente a arquitetura de alto n\u00edvel para a funcionalidade/hist\u00f3ria. Diagramas relevantes (por exemplo, de sequ\u00eancia, componente, contexto, implanta\u00e7\u00e3o) devem ser inclu\u00eddos aqui.","title":"Design Proposto"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#tecnologia","text":"Descreva o sistema operacional relevante, servidor da Web, camada de apresenta\u00e7\u00e3o, camada de persist\u00eancia, armazenamento em cache, eventos/mensagens/trabalhos, etc. - tudo o que for aplic\u00e1vel \u00e0 solu\u00e7\u00e3o tecnol\u00f3gica geral e como eles ser\u00e3o usados. Descreva o uso de quaisquer bibliotecas ou componentes de c\u00f3digo aberto (OSS). Liste brevemente a(s) linguagem(ns) e plataforma(s) que comp\u00f5em a pilha.","title":"Tecnologia"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#requisitos-nao-funcionais","text":"Quais s\u00e3o as principais preocupa\u00e7\u00f5es de desempenho e escalabilidade para esta funcionalidade/hist\u00f3ria? Existem objetivos espec\u00edficos de lat\u00eancia, disponibilidade e RTO/RPO que devem ser atendidos? Existem gargalos espec\u00edficos ou \u00e1reas problem\u00e1ticas potenciais? Por exemplo, as opera\u00e7\u00f5es s\u00e3o limitadas por CPU ou I/O (rede, disco)? Qu\u00e3o grandes s\u00e3o os conjuntos de dados e o qu\u00e3o r\u00e1pido eles crescem? Qual \u00e9 o padr\u00e3o de uso esperado do servi\u00e7o? Por exemplo, haver\u00e1 picos e vales de uso simult\u00e2neo intenso? Existem restri\u00e7\u00f5es de custo espec\u00edficas? (por exemplo, $ por transa\u00e7\u00e3o/dispositivo/usu\u00e1rio)","title":"Requisitos N\u00e3o-Funcionais"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#dependencias","text":"Essa funcionalidade/hist\u00f3ria precisa ser sequenciada ap\u00f3s outra funcionalidade/hist\u00f3ria atribu\u00edda \u00e0 mesma equipe e por qu\u00ea? A funcionalidade/hist\u00f3ria depende de outro trabalho que outra equipe est\u00e1 realizando? A equipe precisar\u00e1 esperar que esse trabalho seja conclu\u00eddo ou o trabalho pode prosseguir em paralelo?","title":"Depend\u00eancias"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#riscos-e-mitigacoes","text":"A equipe precisa de assist\u00eancia de especialistas no assunto? Quais s\u00e3o as preocupa\u00e7\u00f5es de seguran\u00e7a e privacidade deste marco/\u00e9pico? Todas as informa\u00e7\u00f5es confidenciais e segredos s\u00e3o tratados de maneira segura e protegida?","title":"Riscos e Mitiga\u00e7\u00f5es"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#perguntas-em-aberto","text":"Liste quaisquer perguntas ou preocupa\u00e7\u00f5es em aberto aqui.","title":"Perguntas em Aberto"},{"location":"design/design-reviews/recipes/feature-story-design-review-template/#referencias-adicionais","text":"Liste quaisquer refer\u00eancias adicionais aqui, incluindo links para itens de backlog, itens de trabalho ou outros documentos.","title":"Refer\u00eancias Adicionais"},{"location":"design/design-reviews/recipes/high-level-design-recipe/","text":"Receita de Design de Alto N\u00edvel / Plano de Jogo Por que isso \u00e9 valioso? O design em n\u00edvel macrosc\u00f3pico mostra as intera\u00e7\u00f5es entre sistemas e servi\u00e7os que ser\u00e3o usados para realizar o projeto. Ele tem o objetivo de garantir que haja um entendimento em alto n\u00edvel do plano do que ser\u00e1 constru\u00eddo, quais componentes prontos ser\u00e3o usados e quais componentes externos precisar\u00e3o interagir com o entreg\u00e1vel. Coisas a ter em mente Assim como em todos os outros aspectos do projeto, as revis\u00f5es de design devem proporcionar um ambiente amig\u00e1vel e seguro para que qualquer membro da equipe se sinta \u00e0 vontade para propor um design para revis\u00e3o e possa aproveitar a oportunidade para crescer e aprender com o feedback construtivo / n\u00e3o julgamental de colegas e especialistas no assunto (consulte Acordos da Equipe ). Tente ilustrar diferentes personas envolvidas nos casos de uso e como/quais caixas s\u00e3o seus pontos de entrada. Prefira imagens a par\u00e1grafos. Os diagramas n\u00e3o se destinam a gerar c\u00f3digo, portanto, eles devem ser bastante abstratos. Os artefatos devem indicar a dire\u00e7\u00e3o das chamadas (s\u00e3o de sa\u00edda, entrada ou bidirecionais?) e destacar os limites do sistema, onde as portas podem precisar ser abertas ou pode ser necess\u00e1rio trabalho de infraestrutura adicional para permitir que as chamadas sejam feitas. Diagramas de sequ\u00eancia s\u00e3o \u00fateis para mostrar o fluxo de chamadas entre componentes + sistemas. Diagramas de caixa gen\u00e9ricos que representam o fluxo de dados ou a origem/destino das chamadas s\u00e3o \u00fateis. No entanto, o t\u00edtulo deve definir claramente o que as setas indicam. Na maioria dos casos, um diagrama mostrar\u00e1 o fluxo de dados ou as dire\u00e7\u00f5es das chamadas, mas n\u00e3o ambos. Visualize os aspectos contrastantes do sistema/diagrama para facilitar a comunica\u00e7\u00e3o. Por exemplo, tecnologias diferentes empregadas, componentes modificados vs. intocados ou componentes de nuvem local vs. internet. Cores, caixas de agrupamento e iconografia podem ser usadas para diferencia\u00e7\u00e3o. Prefira facilidade de entendimento para comunicar ideias em vez de estrita corre\u00e7\u00e3o UML. As revis\u00f5es de design devem ser leves e n\u00e3o devem parecer uma sobrecarga adicional no processo. Exemplos","title":"Receita de Design de Alto N\u00edvel / Plano de Jogo"},{"location":"design/design-reviews/recipes/high-level-design-recipe/#receita-de-design-de-alto-nivel-plano-de-jogo","text":"","title":"Receita de Design de Alto N\u00edvel / Plano de Jogo"},{"location":"design/design-reviews/recipes/high-level-design-recipe/#por-que-isso-e-valioso","text":"O design em n\u00edvel macrosc\u00f3pico mostra as intera\u00e7\u00f5es entre sistemas e servi\u00e7os que ser\u00e3o usados para realizar o projeto. Ele tem o objetivo de garantir que haja um entendimento em alto n\u00edvel do plano do que ser\u00e1 constru\u00eddo, quais componentes prontos ser\u00e3o usados e quais componentes externos precisar\u00e3o interagir com o entreg\u00e1vel.","title":"Por que isso \u00e9 valioso?"},{"location":"design/design-reviews/recipes/high-level-design-recipe/#coisas-a-ter-em-mente","text":"Assim como em todos os outros aspectos do projeto, as revis\u00f5es de design devem proporcionar um ambiente amig\u00e1vel e seguro para que qualquer membro da equipe se sinta \u00e0 vontade para propor um design para revis\u00e3o e possa aproveitar a oportunidade para crescer e aprender com o feedback construtivo / n\u00e3o julgamental de colegas e especialistas no assunto (consulte Acordos da Equipe ). Tente ilustrar diferentes personas envolvidas nos casos de uso e como/quais caixas s\u00e3o seus pontos de entrada. Prefira imagens a par\u00e1grafos. Os diagramas n\u00e3o se destinam a gerar c\u00f3digo, portanto, eles devem ser bastante abstratos. Os artefatos devem indicar a dire\u00e7\u00e3o das chamadas (s\u00e3o de sa\u00edda, entrada ou bidirecionais?) e destacar os limites do sistema, onde as portas podem precisar ser abertas ou pode ser necess\u00e1rio trabalho de infraestrutura adicional para permitir que as chamadas sejam feitas. Diagramas de sequ\u00eancia s\u00e3o \u00fateis para mostrar o fluxo de chamadas entre componentes + sistemas. Diagramas de caixa gen\u00e9ricos que representam o fluxo de dados ou a origem/destino das chamadas s\u00e3o \u00fateis. No entanto, o t\u00edtulo deve definir claramente o que as setas indicam. Na maioria dos casos, um diagrama mostrar\u00e1 o fluxo de dados ou as dire\u00e7\u00f5es das chamadas, mas n\u00e3o ambos. Visualize os aspectos contrastantes do sistema/diagrama para facilitar a comunica\u00e7\u00e3o. Por exemplo, tecnologias diferentes empregadas, componentes modificados vs. intocados ou componentes de nuvem local vs. internet. Cores, caixas de agrupamento e iconografia podem ser usadas para diferencia\u00e7\u00e3o. Prefira facilidade de entendimento para comunicar ideias em vez de estrita corre\u00e7\u00e3o UML. As revis\u00f5es de design devem ser leves e n\u00e3o devem parecer uma sobrecarga adicional no processo.","title":"Coisas a ter em mente"},{"location":"design/design-reviews/recipes/high-level-design-recipe/#exemplos","text":"","title":"Exemplos"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-recipe/","text":"Receita de Revis\u00e3o de Design de Milestone / \u00c9pico Por que isso \u00e9 valioso? O design em n\u00edvel de \u00e9pico/milestone pode ajudar a equipe a tomar melhores decis\u00f5es sobre prioriza\u00e7\u00e3o, resumindo o valor, esfor\u00e7o, complexidade, riscos e depend\u00eancias. Este breve documento pode ajudar a equipe a alinhar-se na abordagem selecionada e explicar brevemente a justificativa para outras equipes, especialistas no assunto, consultores do projeto e novos membros da equipe. Coisas a ter em mente Assim como em todos os outros aspectos do projeto, as revis\u00f5es de design devem proporcionar um ambiente amig\u00e1vel e seguro para que qualquer membro da equipe se sinta \u00e0 vontade para propor um design para revis\u00e3o e possa aproveitar a oportunidade para crescer e aprender com o feedback construtivo / n\u00e3o julgamental de colegas e especialistas no assunto (consulte Acordos da Equipe ). As revis\u00f5es de design devem ser leves e n\u00e3o devem parecer uma sobrecarga adicional no processo. O l\u00edder de desenvolvimento geralmente pode fornecer orienta\u00e7\u00e3o sobre se um determinado \u00e9pico/milestone precisa de uma revis\u00e3o de design e pode ajudar outros membros da equipe na prepara\u00e7\u00e3o. Este n\u00e3o \u00e9 um modelo estrito que deve ser seguido, e as equipes n\u00e3o devem ser sobrecarregadas com \"apresenta\u00e7\u00f5es de design\" polidas. Pense na receita abaixo como um \"menu de op\u00e7\u00f5es\" para poss\u00edveis perguntas a serem pensadas ao projetar este \u00e9pico. Nem todas as se\u00e7\u00f5es s\u00e3o necess\u00e1rias para todos os \u00e9picos. Concentre-se nas se\u00e7\u00f5es e perguntas que s\u00e3o mais relevantes para tomar a decis\u00e3o e justificar as compensa\u00e7\u00f5es. O design de marcos/\u00e9picos \u00e9 considerado design de alto n\u00edvel, mas geralmente \u00e9 mais detalhado do que o design inclu\u00eddo no Plano de Jogo, mas provavelmente reutilizar\u00e1 algumas tecnologias, requisitos n\u00e3o funcionais e restri\u00e7\u00f5es mencionadas no Plano de Jogo. \u00c0 medida que a equipe aprendeu mais sobre o projeto e refinou ainda mais o escopo do \u00e9pico, eles podem especificamente destacar mudan\u00e7as not\u00e1veis na abordagem geral e, em particular, destacar quaisquer caracter\u00edsticas \u00fanicas de implanta\u00e7\u00e3o, seguran\u00e7a, privacidade, escalabilidade, etc. deste marco. Modelo Voc\u00ea pode baixar o Modelo de Revis\u00e3o de Design de Milestone/\u00c9pico , copi\u00e1-lo para o seu projeto e us\u00e1-lo conforme descrito na receita de revis\u00e3o de design ass\u00edncrona .","title":"Receita de Revis\u00e3o de Design de Milestone / \u00c9pico"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-recipe/#receita-de-revisao-de-design-de-milestone-epico","text":"","title":"Receita de Revis\u00e3o de Design de Milestone / \u00c9pico"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-recipe/#por-que-isso-e-valioso","text":"O design em n\u00edvel de \u00e9pico/milestone pode ajudar a equipe a tomar melhores decis\u00f5es sobre prioriza\u00e7\u00e3o, resumindo o valor, esfor\u00e7o, complexidade, riscos e depend\u00eancias. Este breve documento pode ajudar a equipe a alinhar-se na abordagem selecionada e explicar brevemente a justificativa para outras equipes, especialistas no assunto, consultores do projeto e novos membros da equipe.","title":"Por que isso \u00e9 valioso?"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-recipe/#coisas-a-ter-em-mente","text":"Assim como em todos os outros aspectos do projeto, as revis\u00f5es de design devem proporcionar um ambiente amig\u00e1vel e seguro para que qualquer membro da equipe se sinta \u00e0 vontade para propor um design para revis\u00e3o e possa aproveitar a oportunidade para crescer e aprender com o feedback construtivo / n\u00e3o julgamental de colegas e especialistas no assunto (consulte Acordos da Equipe ). As revis\u00f5es de design devem ser leves e n\u00e3o devem parecer uma sobrecarga adicional no processo. O l\u00edder de desenvolvimento geralmente pode fornecer orienta\u00e7\u00e3o sobre se um determinado \u00e9pico/milestone precisa de uma revis\u00e3o de design e pode ajudar outros membros da equipe na prepara\u00e7\u00e3o. Este n\u00e3o \u00e9 um modelo estrito que deve ser seguido, e as equipes n\u00e3o devem ser sobrecarregadas com \"apresenta\u00e7\u00f5es de design\" polidas. Pense na receita abaixo como um \"menu de op\u00e7\u00f5es\" para poss\u00edveis perguntas a serem pensadas ao projetar este \u00e9pico. Nem todas as se\u00e7\u00f5es s\u00e3o necess\u00e1rias para todos os \u00e9picos. Concentre-se nas se\u00e7\u00f5es e perguntas que s\u00e3o mais relevantes para tomar a decis\u00e3o e justificar as compensa\u00e7\u00f5es. O design de marcos/\u00e9picos \u00e9 considerado design de alto n\u00edvel, mas geralmente \u00e9 mais detalhado do que o design inclu\u00eddo no Plano de Jogo, mas provavelmente reutilizar\u00e1 algumas tecnologias, requisitos n\u00e3o funcionais e restri\u00e7\u00f5es mencionadas no Plano de Jogo. \u00c0 medida que a equipe aprendeu mais sobre o projeto e refinou ainda mais o escopo do \u00e9pico, eles podem especificamente destacar mudan\u00e7as not\u00e1veis na abordagem geral e, em particular, destacar quaisquer caracter\u00edsticas \u00fanicas de implanta\u00e7\u00e3o, seguran\u00e7a, privacidade, escalabilidade, etc. deste marco.","title":"Coisas a ter em mente"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-recipe/#modelo","text":"Voc\u00ea pode baixar o Modelo de Revis\u00e3o de Design de Milestone/\u00c9pico , copi\u00e1-lo para o seu projeto e us\u00e1-lo conforme descrito na receita de revis\u00e3o de design ass\u00edncrona .","title":"Modelo"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/","text":"Sua Revis\u00e3o de Design de Milestone/\u00c9pico (prefixe com DRAFT/WIP para indicar n\u00edvel de completude) Por favor, consulte https://microsoft.github.io/code-with-engineering-playbook/design/design-reviews/recipes/milestone-epic-design-review-recipe/ para orienta\u00e7\u00f5es a serem seguidas ao utilizar este modelo. Milestone / \u00c9pico: Nome Projeto / Engajamento: [Projeto ou Engajamento] Autores: [Autor1, Autor2, etc.] Vis\u00e3o Geral / Declara\u00e7\u00e3o do Problema Descreva o milestone/\u00e9pico com um resumo de alto n\u00edvel e uma declara\u00e7\u00e3o do problema. Considere incluir ou vincular a qualquer contexto adicional (por exemplo, Plano de Jogo ou documentos de Verifica\u00e7\u00e3o) se for \u00fatil para o contexto hist\u00f3rico. Metas / No Escopo Liste alguns pontos principais das metas que este milestone/\u00e9pico alcan\u00e7ar\u00e1 e que s\u00e3o mais relevantes para a discuss\u00e3o da revis\u00e3o de design. Voc\u00ea pode incluir crit\u00e9rios de aceita\u00e7\u00e3o necess\u00e1rios para atender \u00e0 Defini\u00e7\u00e3o de Pronto . N\u00e3o Metas / Fora do Escopo Liste alguns pontos principais das n\u00e3o metas para esclarecer o trabalho que est\u00e1 fora do escopo da revis\u00e3o de design deste milestone/\u00e9pico. Design Proposto / Abordagem Sugerida Para otimizar o investimento de tempo, isso deve ser breve, pois \u00e9 prov\u00e1vel que os detalhes mudem \u00e0 medida que o \u00e9pico/milestone for decomposto em funcionalidades e hist\u00f3rias. O objetivo \u00e9 transmitir a vis\u00e3o e complexidade em algo que possa ser compreendido em poucos minutos e possa ajudar a orientar uma discuss\u00e3o (seja de forma ass\u00edncrona por meio de coment\u00e1rios ou em uma reuni\u00e3o). Um par\u00e1grafo para descrever o design proposto / abordagem sugerida para este milestone/\u00e9pico. Um diagrama (por exemplo, arquitetura, sequ\u00eancia, componente, implanta\u00e7\u00e3o, etc.) ou trecho de pseudo-c\u00f3digo para facilitar a discuss\u00e3o da abordagem. Liste algumas das abordagens alternativas que foram consideradas e inclua as breves principais Vantagens e Desvantagens usadas para justificar a decis\u00e3o. Por exemplo: Pr\u00f3s Contras Simples de implementar Cria sistema de identidade secund\u00e1rio Padr\u00e3o/c\u00f3digo repet\u00edvel A implanta\u00e7\u00e3o requer credenciais de administrador Tecnologia Liste brevemente as linguagens e plataformas que comp\u00f5em o stack. Isso pode incluir qualquer coisa que seja necess\u00e1ria para entender a solu\u00e7\u00e3o geral: SO, servidor web, camada de apresenta\u00e7\u00e3o, camada de persist\u00eancia, cache, eventos, etc. Requisitos N\u00e3o Funcionais Quais s\u00e3o as principais preocupa\u00e7\u00f5es de desempenho e escalabilidade para este milestone/\u00e9pico? Existem objetivos espec\u00edficos de lat\u00eancia, disponibilidade e RTO/RPO que devem ser atendidos? Existem gargalos espec\u00edficos ou \u00e1reas potenciais de problema? Por exemplo, as opera\u00e7\u00f5es s\u00e3o limitadas por CPU ou E/S (rede, disco)? Qu\u00e3o grandes s\u00e3o os conjuntos de dados e com que rapidez eles crescem? Qual \u00e9 o padr\u00e3o de uso esperado do servi\u00e7o? Por exemplo, haver\u00e1 picos e vales de uso intenso concorrente? Existem restri\u00e7\u00f5es de custo espec\u00edficas? (por exemplo, $ por transa\u00e7\u00e3o/dispositivo/usuario) Operacionaliza\u00e7\u00e3o Existem considera\u00e7\u00f5es espec\u00edficas para a configura\u00e7\u00e3o de CI/CD do milestone/\u00e9pico? Existe um processo (manual ou automatizado) para promover builds de ambientes mais baixos para ambientes mais altos? Este milestone/\u00e9pico requer implanta\u00e7\u00f5es sem tempo de inatividade e, se sim, como elas s\u00e3o alcan\u00e7adas? Existem mecanismos para reverter uma implanta\u00e7\u00e3o? Qual \u00e9 o processo de monitoramento da funcionalidade fornecida por este milestone/\u00e9pico? Depend\u00eancias Este milestone/\u00e9pico precisa ser sequenciado ap\u00f3s outro \u00e9pico atribu\u00eddo \u00e0 mesma equipe e por qu\u00ea? O milestone/\u00e9pico depende de outro trabalho que outra equipe precisa concluir? A equipe precisar\u00e1 esperar que esse trabalho seja conclu\u00eddo ou o trabalho pode prosseguir em paralelo? Riscos e Mitiga\u00e7\u00f5es A equipe precisa de assist\u00eancia de especialistas no assunto? Quais s\u00e3o as preocupa\u00e7\u00f5es de seguran\u00e7a e privacidade deste milestone/\u00e9pico? Todas as informa\u00e7\u00f5es sens\u00edveis e segredos s\u00e3o tratados de forma segura e protegida? Perguntas em Aberto Inclua quaisquer perguntas em aberto e preocupa\u00e7\u00f5es. Refer\u00eancias Adicionais Inclua quaisquer refer\u00eancias adicionais, incluindo links para itens de trabalho ou outros documentos.","title":"Sua Revis\u00e3o de Design de Milestone/\u00c9pico (prefixe com DRAFT/WIP para indicar n\u00edvel de completude)"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#sua-revisao-de-design-de-milestoneepico-prefixe-com-draftwip-para-indicar-nivel-de-completude","text":"Por favor, consulte https://microsoft.github.io/code-with-engineering-playbook/design/design-reviews/recipes/milestone-epic-design-review-recipe/ para orienta\u00e7\u00f5es a serem seguidas ao utilizar este modelo. Milestone / \u00c9pico: Nome Projeto / Engajamento: [Projeto ou Engajamento] Autores: [Autor1, Autor2, etc.]","title":"Sua Revis\u00e3o de Design de Milestone/\u00c9pico (prefixe com DRAFT/WIP para indicar n\u00edvel de completude)"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#visao-geral-declaracao-do-problema","text":"Descreva o milestone/\u00e9pico com um resumo de alto n\u00edvel e uma declara\u00e7\u00e3o do problema. Considere incluir ou vincular a qualquer contexto adicional (por exemplo, Plano de Jogo ou documentos de Verifica\u00e7\u00e3o) se for \u00fatil para o contexto hist\u00f3rico.","title":"Vis\u00e3o Geral / Declara\u00e7\u00e3o do Problema"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#metas-no-escopo","text":"Liste alguns pontos principais das metas que este milestone/\u00e9pico alcan\u00e7ar\u00e1 e que s\u00e3o mais relevantes para a discuss\u00e3o da revis\u00e3o de design. Voc\u00ea pode incluir crit\u00e9rios de aceita\u00e7\u00e3o necess\u00e1rios para atender \u00e0 Defini\u00e7\u00e3o de Pronto .","title":"Metas / No Escopo"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#nao-metas-fora-do-escopo","text":"Liste alguns pontos principais das n\u00e3o metas para esclarecer o trabalho que est\u00e1 fora do escopo da revis\u00e3o de design deste milestone/\u00e9pico.","title":"N\u00e3o Metas / Fora do Escopo"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#design-proposto-abordagem-sugerida","text":"Para otimizar o investimento de tempo, isso deve ser breve, pois \u00e9 prov\u00e1vel que os detalhes mudem \u00e0 medida que o \u00e9pico/milestone for decomposto em funcionalidades e hist\u00f3rias. O objetivo \u00e9 transmitir a vis\u00e3o e complexidade em algo que possa ser compreendido em poucos minutos e possa ajudar a orientar uma discuss\u00e3o (seja de forma ass\u00edncrona por meio de coment\u00e1rios ou em uma reuni\u00e3o). Um par\u00e1grafo para descrever o design proposto / abordagem sugerida para este milestone/\u00e9pico. Um diagrama (por exemplo, arquitetura, sequ\u00eancia, componente, implanta\u00e7\u00e3o, etc.) ou trecho de pseudo-c\u00f3digo para facilitar a discuss\u00e3o da abordagem. Liste algumas das abordagens alternativas que foram consideradas e inclua as breves principais Vantagens e Desvantagens usadas para justificar a decis\u00e3o. Por exemplo: Pr\u00f3s Contras Simples de implementar Cria sistema de identidade secund\u00e1rio Padr\u00e3o/c\u00f3digo repet\u00edvel A implanta\u00e7\u00e3o requer credenciais de administrador","title":"Design Proposto / Abordagem Sugerida"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#tecnologia","text":"Liste brevemente as linguagens e plataformas que comp\u00f5em o stack. Isso pode incluir qualquer coisa que seja necess\u00e1ria para entender a solu\u00e7\u00e3o geral: SO, servidor web, camada de apresenta\u00e7\u00e3o, camada de persist\u00eancia, cache, eventos, etc.","title":"Tecnologia"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#requisitos-nao-funcionais","text":"Quais s\u00e3o as principais preocupa\u00e7\u00f5es de desempenho e escalabilidade para este milestone/\u00e9pico? Existem objetivos espec\u00edficos de lat\u00eancia, disponibilidade e RTO/RPO que devem ser atendidos? Existem gargalos espec\u00edficos ou \u00e1reas potenciais de problema? Por exemplo, as opera\u00e7\u00f5es s\u00e3o limitadas por CPU ou E/S (rede, disco)? Qu\u00e3o grandes s\u00e3o os conjuntos de dados e com que rapidez eles crescem? Qual \u00e9 o padr\u00e3o de uso esperado do servi\u00e7o? Por exemplo, haver\u00e1 picos e vales de uso intenso concorrente? Existem restri\u00e7\u00f5es de custo espec\u00edficas? (por exemplo, $ por transa\u00e7\u00e3o/dispositivo/usuario)","title":"Requisitos N\u00e3o Funcionais"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#operacionalizacao","text":"Existem considera\u00e7\u00f5es espec\u00edficas para a configura\u00e7\u00e3o de CI/CD do milestone/\u00e9pico? Existe um processo (manual ou automatizado) para promover builds de ambientes mais baixos para ambientes mais altos? Este milestone/\u00e9pico requer implanta\u00e7\u00f5es sem tempo de inatividade e, se sim, como elas s\u00e3o alcan\u00e7adas? Existem mecanismos para reverter uma implanta\u00e7\u00e3o? Qual \u00e9 o processo de monitoramento da funcionalidade fornecida por este milestone/\u00e9pico?","title":"Operacionaliza\u00e7\u00e3o"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#dependencias","text":"Este milestone/\u00e9pico precisa ser sequenciado ap\u00f3s outro \u00e9pico atribu\u00eddo \u00e0 mesma equipe e por qu\u00ea? O milestone/\u00e9pico depende de outro trabalho que outra equipe precisa concluir? A equipe precisar\u00e1 esperar que esse trabalho seja conclu\u00eddo ou o trabalho pode prosseguir em paralelo?","title":"Depend\u00eancias"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#riscos-e-mitigacoes","text":"A equipe precisa de assist\u00eancia de especialistas no assunto? Quais s\u00e3o as preocupa\u00e7\u00f5es de seguran\u00e7a e privacidade deste milestone/\u00e9pico? Todas as informa\u00e7\u00f5es sens\u00edveis e segredos s\u00e3o tratados de forma segura e protegida?","title":"Riscos e Mitiga\u00e7\u00f5es"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#perguntas-em-aberto","text":"Inclua quaisquer perguntas em aberto e preocupa\u00e7\u00f5es.","title":"Perguntas em Aberto"},{"location":"design/design-reviews/recipes/milestone-epic-design-review-template/#referencias-adicionais","text":"Inclua quaisquer refer\u00eancias adicionais, incluindo links para itens de trabalho ou outros documentos.","title":"Refer\u00eancias Adicionais"},{"location":"design/design-reviews/recipes/preferred-diagram-tooling/","text":"Ferramentas de Diagrama\u00e7\u00e3o Preferidas Em cada etapa do processo de engajamento, os diagramas desempenham um papel fundamental na revis\u00e3o de design. A ferramenta preferida para criar e manter diagramas \u00e9 escolher uma das seguintes op\u00e7\u00f5es: Microsoft Visio Microsoft PowerPoint O formato .drawio.png (ou .drawio ) do diagrams.net (anteriormente draw.io ) Em todos os casos, recomendamos armazenar as imagens PNG exportadas desses diagramas no reposit\u00f3rio, juntamente com os arquivos de origem, para que possam ser facilmente referenciadas na documenta\u00e7\u00e3o e revisadas mais facilmente durante os PRs. O formato .drawio.png armazena ambos ao mesmo tempo. Microsoft Visio Ele cont\u00e9m muitas formas prontas para uso, incluindo \u00edcones do Azure, o aplicativo desktop est\u00e1 dispon\u00edvel para PC, e existe um \u00f3timo aplicativo web. A maioria dos diagramas no Azure Architecture Center s\u00e3o diagramas do Visio. Microsoft PowerPoint Os diagramas podem ser facilmente reutilizados em apresenta\u00e7\u00f5es, uma licen\u00e7a do PowerPoint \u00e9 bastante comum, o aplicativo desktop est\u00e1 dispon\u00edvel para PC e para Mac, e existe um \u00f3timo aplicativo web. .drawio.png Existem diferentes aplicativos de desktop, web e extens\u00f5es do VS Code. Esta ferramenta pode ser usada como o Visio ou LucidChart, sem as preocupa\u00e7\u00f5es de licenciamento/armazenamento remoto. Al\u00e9m disso, o Diagrams.net possui uma cole\u00e7\u00e3o de \u00edcones do Azure/Office/Microsoft, al\u00e9m de outros techs conhecidos, portanto, n\u00e3o \u00e9 apenas \u00fatil para swimlanes e fluxogramas, mas tamb\u00e9m para diagramas de arquitetura. .drawio.png deve ser preferido sobre o formato .drawio . O formato .drawio.png utiliza a camada de metadados dentro do formato de arquivo PNG para ocultar a representa\u00e7\u00e3o gr\u00e1fica vetorial SVG e, em seguida, renderiza o .png ao salvar. Essa utiliza\u00e7\u00e3o inteligente tanto da camada de metadados quanto da camada de imagem permite que qualquer pessoa edite ainda mais o arquivo PNG. Al\u00e9m disso, ele \u00e9 renderizado como um PNG normal em navegadores e outros visualizadores, tornando-o f\u00e1cil de transferir e incorporar. Al\u00e9m disso, pode ser editado facilmente no VSCode usando a Extens\u00e3o do VSCode Draw.io Integration .","title":"Ferramentas de Diagrama\u00e7\u00e3o Preferidas"},{"location":"design/design-reviews/recipes/preferred-diagram-tooling/#ferramentas-de-diagramacao-preferidas","text":"Em cada etapa do processo de engajamento, os diagramas desempenham um papel fundamental na revis\u00e3o de design. A ferramenta preferida para criar e manter diagramas \u00e9 escolher uma das seguintes op\u00e7\u00f5es: Microsoft Visio Microsoft PowerPoint O formato .drawio.png (ou .drawio ) do diagrams.net (anteriormente draw.io ) Em todos os casos, recomendamos armazenar as imagens PNG exportadas desses diagramas no reposit\u00f3rio, juntamente com os arquivos de origem, para que possam ser facilmente referenciadas na documenta\u00e7\u00e3o e revisadas mais facilmente durante os PRs. O formato .drawio.png armazena ambos ao mesmo tempo.","title":"Ferramentas de Diagrama\u00e7\u00e3o Preferidas"},{"location":"design/design-reviews/recipes/preferred-diagram-tooling/#microsoft-visio","text":"Ele cont\u00e9m muitas formas prontas para uso, incluindo \u00edcones do Azure, o aplicativo desktop est\u00e1 dispon\u00edvel para PC, e existe um \u00f3timo aplicativo web. A maioria dos diagramas no Azure Architecture Center s\u00e3o diagramas do Visio.","title":"Microsoft Visio"},{"location":"design/design-reviews/recipes/preferred-diagram-tooling/#microsoft-powerpoint","text":"Os diagramas podem ser facilmente reutilizados em apresenta\u00e7\u00f5es, uma licen\u00e7a do PowerPoint \u00e9 bastante comum, o aplicativo desktop est\u00e1 dispon\u00edvel para PC e para Mac, e existe um \u00f3timo aplicativo web.","title":"Microsoft PowerPoint"},{"location":"design/design-reviews/recipes/preferred-diagram-tooling/#drawiopng","text":"Existem diferentes aplicativos de desktop, web e extens\u00f5es do VS Code. Esta ferramenta pode ser usada como o Visio ou LucidChart, sem as preocupa\u00e7\u00f5es de licenciamento/armazenamento remoto. Al\u00e9m disso, o Diagrams.net possui uma cole\u00e7\u00e3o de \u00edcones do Azure/Office/Microsoft, al\u00e9m de outros techs conhecidos, portanto, n\u00e3o \u00e9 apenas \u00fatil para swimlanes e fluxogramas, mas tamb\u00e9m para diagramas de arquitetura. .drawio.png deve ser preferido sobre o formato .drawio . O formato .drawio.png utiliza a camada de metadados dentro do formato de arquivo PNG para ocultar a representa\u00e7\u00e3o gr\u00e1fica vetorial SVG e, em seguida, renderiza o .png ao salvar. Essa utiliza\u00e7\u00e3o inteligente tanto da camada de metadados quanto da camada de imagem permite que qualquer pessoa edite ainda mais o arquivo PNG. Al\u00e9m disso, ele \u00e9 renderizado como um PNG normal em navegadores e outros visualizadores, tornando-o f\u00e1cil de transferir e incorporar. Al\u00e9m disso, pode ser editado facilmente no VSCode usando a Extens\u00e3o do VSCode Draw.io Integration .","title":".drawio.png"},{"location":"design/design-reviews/recipes/sprint-spike-template/","text":"Investiga\u00e7\u00e3o: {Nome} Realizado por: {Nomes e pelo menos um endere\u00e7o de e-mail para perguntas de acompanhamento} Item de Trabalho do Backlog: {Link para o item de trabalho para fornecer mais contexto} Sprint: {Em qual sprint ocorreu o estudo. Inclua a data de in\u00edcio da sprint} Objetivo Descreva que pergunta(s) a investiga\u00e7\u00e3o pretende responder e por qu\u00ea. M\u00e9todo Descreva como a equipe descobrir\u00e1 a resposta para a(s) pergunta(s) que a investiga\u00e7\u00e3o pretende responder. Por exemplo: Construir um prot\u00f3tipo para teste. Pesquisar documentos e exemplos existentes. Discutir com especialistas no assunto. Evid\u00eancias Documente as evid\u00eancias coletadas que informaram as conclus\u00f5es abaixo. Exemplos podem incluir: Demonstra\u00e7\u00e3o gravada ou ao vivo de um prot\u00f3tipo fornecendo as capacidades desejadas M\u00e9tricas coletadas durante o teste do prot\u00f3tipo Documenta\u00e7\u00e3o que indica que a solu\u00e7\u00e3o pode fornecer as capacidades desejadas Conclus\u00f5es Qual foi a resposta para a(s) pergunta(s) delineada(s) no in\u00edcio da investiga\u00e7\u00e3o? Capture o que foi aprendido que informar\u00e1 trabalhos futuros. Pr\u00f3ximos Passos Que trabalho \u00e9 esperado como resultado da aprendizagem dentro desta investiga\u00e7\u00e3o. Houve algum trabalho que foi bloqueado ou dependente da aprendizagem dentro desta investiga\u00e7\u00e3o?","title":"Investiga\u00e7\u00e3o: {Nome}"},{"location":"design/design-reviews/recipes/sprint-spike-template/#investigacao-nome","text":"Realizado por: {Nomes e pelo menos um endere\u00e7o de e-mail para perguntas de acompanhamento} Item de Trabalho do Backlog: {Link para o item de trabalho para fornecer mais contexto} Sprint: {Em qual sprint ocorreu o estudo. Inclua a data de in\u00edcio da sprint}","title":"Investiga\u00e7\u00e3o: {Nome}"},{"location":"design/design-reviews/recipes/sprint-spike-template/#objetivo","text":"Descreva que pergunta(s) a investiga\u00e7\u00e3o pretende responder e por qu\u00ea.","title":"Objetivo"},{"location":"design/design-reviews/recipes/sprint-spike-template/#metodo","text":"Descreva como a equipe descobrir\u00e1 a resposta para a(s) pergunta(s) que a investiga\u00e7\u00e3o pretende responder. Por exemplo: Construir um prot\u00f3tipo para teste. Pesquisar documentos e exemplos existentes. Discutir com especialistas no assunto.","title":"M\u00e9todo"},{"location":"design/design-reviews/recipes/sprint-spike-template/#evidencias","text":"Documente as evid\u00eancias coletadas que informaram as conclus\u00f5es abaixo. Exemplos podem incluir: Demonstra\u00e7\u00e3o gravada ou ao vivo de um prot\u00f3tipo fornecendo as capacidades desejadas M\u00e9tricas coletadas durante o teste do prot\u00f3tipo Documenta\u00e7\u00e3o que indica que a solu\u00e7\u00e3o pode fornecer as capacidades desejadas","title":"Evid\u00eancias"},{"location":"design/design-reviews/recipes/sprint-spike-template/#conclusoes","text":"Qual foi a resposta para a(s) pergunta(s) delineada(s) no in\u00edcio da investiga\u00e7\u00e3o? Capture o que foi aprendido que informar\u00e1 trabalhos futuros.","title":"Conclus\u00f5es"},{"location":"design/design-reviews/recipes/sprint-spike-template/#proximos-passos","text":"Que trabalho \u00e9 esperado como resultado da aprendizagem dentro desta investiga\u00e7\u00e3o. Houve algum trabalho que foi bloqueado ou dependente da aprendizagem dentro desta investiga\u00e7\u00e3o?","title":"Pr\u00f3ximos Passos"},{"location":"design/design-reviews/recipes/task-design-review-template/","text":"T\u00edtulo do Seu Design de Tarefa Aqui (prefixo com DRAFT/WIP para indicar o n\u00edvel de completude) Ao desenvolver um documento de design para uma nova tarefa, ele deve conter uma proposta de design detalhada demonstrando como ela resolver\u00e1 os objetivos descritos abaixo. Nem todas as tarefas requerem uma revis\u00e3o de design, mas quando o fazem, \u00e9 prov\u00e1vel que haja muitas inc\u00f3gnitas ou que a solu\u00e7\u00e3o seja mais complexa. O design deve incluir diagramas, pseudoc\u00f3digo, contratos de interface conforme necess\u00e1rio para fornecer uma compreens\u00e3o detalhada da proposta. Nome da Tarefa Nome da Hist\u00f3ria Engajamento: [Engajamento] Cliente: [Cliente] Autores: [Autor1, Autor2, etc.] Vis\u00e3o Geral/Declara\u00e7\u00e3o do Problema Tamb\u00e9m pode ser um link para o item de trabalho . Descreva a tarefa com um resumo de alto n\u00edvel. Considere informa\u00e7\u00f5es adicionais e justificativas, para posteridade e contexto hist\u00f3rico. Metas/No Escopo Liste alguns pontos-chave do que esta tarefa alcan\u00e7ar\u00e1 e que s\u00e3o mais relevantes para a discuss\u00e3o de revis\u00e3o de design. Isso deve incluir crit\u00e9rios de aceita\u00e7\u00e3o necess\u00e1rios para atender \u00e0 defini\u00e7\u00e3o de conclu\u00eddo . N\u00e3o Metas/Fora de Escopo Liste alguns pontos-chave de n\u00e3o metas para esclarecer o trabalho que est\u00e1 fora do escopo da revis\u00e3o de design desta tarefa. Op\u00e7\u00f5es Propostas Descreva o design detalhado para realizar a tarefa proposta. Quais padr\u00f5es e pr\u00e1ticas ser\u00e3o usados e por que foram escolhidos. Foram consideradas quaisquer propostas alternativas? Quais novos componentes precisam ser desenvolvidos? Existem componentes existentes que precisam de atualiza\u00e7\u00f5es? Diagramas relevantes (por exemplo, sequ\u00eancia, componente, contexto, implanta\u00e7\u00e3o) devem ser inclu\u00eddos aqui. Escolhas Tecnol\u00f3gicas Descreva quais bibliotecas e componentes de c\u00f3digo aberto ser\u00e3o usados para concluir a tarefa. Liste brevemente as linguagens(s) e plataforma(s) que comp\u00f5em a pilha. Perguntas em Aberto Liste quaisquer perguntas/d\u00favidas em aberto aqui. Refer\u00eancias Adicionais Liste quaisquer refer\u00eancias adicionais aqui, incluindo links para itens de backlog, itens de trabalho ou outros documentos.","title":"T\u00edtulo do Seu Design de Tarefa Aqui (prefixo com DRAFT/WIP para indicar o n\u00edvel de completude)"},{"location":"design/design-reviews/recipes/task-design-review-template/#titulo-do-seu-design-de-tarefa-aqui-prefixo-com-draftwip-para-indicar-o-nivel-de-completude","text":"Ao desenvolver um documento de design para uma nova tarefa, ele deve conter uma proposta de design detalhada demonstrando como ela resolver\u00e1 os objetivos descritos abaixo. Nem todas as tarefas requerem uma revis\u00e3o de design, mas quando o fazem, \u00e9 prov\u00e1vel que haja muitas inc\u00f3gnitas ou que a solu\u00e7\u00e3o seja mais complexa. O design deve incluir diagramas, pseudoc\u00f3digo, contratos de interface conforme necess\u00e1rio para fornecer uma compreens\u00e3o detalhada da proposta. Nome da Tarefa Nome da Hist\u00f3ria Engajamento: [Engajamento] Cliente: [Cliente] Autores: [Autor1, Autor2, etc.]","title":"T\u00edtulo do Seu Design de Tarefa Aqui (prefixo com DRAFT/WIP para indicar o n\u00edvel de completude)"},{"location":"design/design-reviews/recipes/task-design-review-template/#visao-geraldeclaracao-do-problema","text":"Tamb\u00e9m pode ser um link para o item de trabalho . Descreva a tarefa com um resumo de alto n\u00edvel. Considere informa\u00e7\u00f5es adicionais e justificativas, para posteridade e contexto hist\u00f3rico.","title":"Vis\u00e3o Geral/Declara\u00e7\u00e3o do Problema"},{"location":"design/design-reviews/recipes/task-design-review-template/#metasno-escopo","text":"Liste alguns pontos-chave do que esta tarefa alcan\u00e7ar\u00e1 e que s\u00e3o mais relevantes para a discuss\u00e3o de revis\u00e3o de design. Isso deve incluir crit\u00e9rios de aceita\u00e7\u00e3o necess\u00e1rios para atender \u00e0 defini\u00e7\u00e3o de conclu\u00eddo .","title":"Metas/No Escopo"},{"location":"design/design-reviews/recipes/task-design-review-template/#nao-metasfora-de-escopo","text":"Liste alguns pontos-chave de n\u00e3o metas para esclarecer o trabalho que est\u00e1 fora do escopo da revis\u00e3o de design desta tarefa.","title":"N\u00e3o Metas/Fora de Escopo"},{"location":"design/design-reviews/recipes/task-design-review-template/#opcoes-propostas","text":"Descreva o design detalhado para realizar a tarefa proposta. Quais padr\u00f5es e pr\u00e1ticas ser\u00e3o usados e por que foram escolhidos. Foram consideradas quaisquer propostas alternativas? Quais novos componentes precisam ser desenvolvidos? Existem componentes existentes que precisam de atualiza\u00e7\u00f5es? Diagramas relevantes (por exemplo, sequ\u00eancia, componente, contexto, implanta\u00e7\u00e3o) devem ser inclu\u00eddos aqui.","title":"Op\u00e7\u00f5es Propostas"},{"location":"design/design-reviews/recipes/task-design-review-template/#escolhas-tecnologicas","text":"Descreva quais bibliotecas e componentes de c\u00f3digo aberto ser\u00e3o usados para concluir a tarefa. Liste brevemente as linguagens(s) e plataforma(s) que comp\u00f5em a pilha.","title":"Escolhas Tecnol\u00f3gicas"},{"location":"design/design-reviews/recipes/task-design-review-template/#perguntas-em-aberto","text":"Liste quaisquer perguntas/d\u00favidas em aberto aqui.","title":"Perguntas em Aberto"},{"location":"design/design-reviews/recipes/task-design-review-template/#referencias-adicionais","text":"Liste quaisquer refer\u00eancias adicionais aqui, incluindo links para itens de backlog, itens de trabalho ou outros documentos.","title":"Refer\u00eancias Adicionais"},{"location":"design/design-reviews/recipes/technical-spike/","text":"Investiga\u00e7\u00e3o T\u00e9cnica De acordo com a Wikipedia ... Uma investiga\u00e7\u00e3o t\u00e9cnica em uma sprint pode ser utilizada de v\u00e1rias maneiras: Como uma forma de familiarizar a equipe com novo hardware ou software. Para analisar minuciosamente um problema e auxiliar na divis\u00e3o adequada do trabalho entre membros separados da equipe. Testes de investiga\u00e7\u00e3o podem tamb\u00e9m ser usados para mitigar riscos futuros e podem revelar problemas adicionais que passaram despercebidos. \u00c9 poss\u00edvel fazer uma distin\u00e7\u00e3o entre investiga\u00e7\u00f5es t\u00e9cnicas e investiga\u00e7\u00f5es funcionais. A investiga\u00e7\u00e3o t\u00e9cnica \u00e9 utilizada com maior frequ\u00eancia para avaliar o impacto que uma nova tecnologia tem na implementa\u00e7\u00e3o atual. Uma investiga\u00e7\u00e3o funcional \u00e9 usada para determinar a intera\u00e7\u00e3o com um novo recurso ou implementa\u00e7\u00e3o. Tamb\u00e9m podem ser realizadas investiga\u00e7\u00f5es de viabilidade t\u00e9cnica para reduzir os riscos em um engajamento e aumentar a compreens\u00e3o da equipe. Resultado Geralmente, o resultado de uma Investiga\u00e7\u00e3o T\u00e9cnica deve ser um documento detalhando o que foi avaliado e o resultado dessa avalia\u00e7\u00e3o. Os detalhes contidos no documento podem variar, mas existem alguns princ\u00edpios gerais que podem ser \u00fateis. Declara\u00e7\u00e3o do Problema/Objetivos: Certifique-se de incluir uma se\u00e7\u00e3o que detalhe claramente por que uma avalia\u00e7\u00e3o est\u00e1 sendo feita e qual deve ser o resultado dessa avalia\u00e7\u00e3o. Isso \u00e9 \u00fatil para garantir que a investiga\u00e7\u00e3o t\u00e9cnica tenha sido produtiva e avan\u00e7ado o projeto como um todo de alguma forma. Garanta que seja Repet\u00edvel: Detalhe os componentes usados, instru\u00e7\u00f5es de instala\u00e7\u00e3o, configura\u00e7\u00e3o, etc., necess\u00e1rios para criar o ambiente que foi usado para avalia\u00e7\u00e3o e teste. Se algum teste for realizado, certifique-se de incluir os scripts, links para as aplica\u00e7\u00f5es, op\u00e7\u00f5es de configura\u00e7\u00e3o, etc., para que os testes possam ser realizados novamente. Existem muitas raz\u00f5es pelas quais o ambiente de avalia\u00e7\u00e3o pode precisar ser reconstru\u00eddo. Por exemplo: Outro cen\u00e1rio precisa ser testado. Uma nova vers\u00e3o da tecnologia foi lan\u00e7ada. A tecnologia precisa ser testada em uma nova plataforma. Coleta de Dados: O objetivo de uma investiga\u00e7\u00e3o deve ser a coleta de dados, n\u00e3o a tomada de decis\u00f5es ou recomenda\u00e7\u00f5es. Idealmente, a investiga\u00e7\u00e3o t\u00e9cnica aprofunda v\u00e1rias quest\u00f5es t\u00e9cnicas e obt\u00e9m respostas para que a equipe de projeto mais ampla possa ent\u00e3o se reunir e concordar com um curso apropriado para o futuro. Evid\u00eancias: Geralmente, voc\u00ea usar\u00e1 se\u00e7\u00f5es para resumir os resultados dos testes que n\u00e3o incluem os resultados detalhados potencialmente numerosos; no entanto, voc\u00ea deve incluir todos os resultados detalhados dos testes em um ap\u00eandice ou um anexo. Ter resultados completos detalhados em algum lugar ajudar\u00e1 a equipe a confiar nos resultados. Al\u00e9m disso, os dados podem ser interpretados de v\u00e1rias maneiras diferentes, e pode ser necess\u00e1rio voltar aos dados originais para uma nova interpreta\u00e7\u00e3o. Organiza\u00e7\u00e3o: A documenta\u00e7\u00e3o t\u00e9cnica pode ser extensa. Geralmente, \u00e9 uma boa ideia organizar as se\u00e7\u00f5es com cabe\u00e7alhos e incluir uma tabela de conte\u00fado. Geralmente, as se\u00e7\u00f5es no in\u00edcio do documento devem resumir os dados e usar um ou mais ap\u00eandices para mais detalhes.","title":"Investiga\u00e7\u00e3o T\u00e9cnica"},{"location":"design/design-reviews/recipes/technical-spike/#investigacao-tecnica","text":"De acordo com a Wikipedia ... Uma investiga\u00e7\u00e3o t\u00e9cnica em uma sprint pode ser utilizada de v\u00e1rias maneiras: Como uma forma de familiarizar a equipe com novo hardware ou software. Para analisar minuciosamente um problema e auxiliar na divis\u00e3o adequada do trabalho entre membros separados da equipe. Testes de investiga\u00e7\u00e3o podem tamb\u00e9m ser usados para mitigar riscos futuros e podem revelar problemas adicionais que passaram despercebidos. \u00c9 poss\u00edvel fazer uma distin\u00e7\u00e3o entre investiga\u00e7\u00f5es t\u00e9cnicas e investiga\u00e7\u00f5es funcionais. A investiga\u00e7\u00e3o t\u00e9cnica \u00e9 utilizada com maior frequ\u00eancia para avaliar o impacto que uma nova tecnologia tem na implementa\u00e7\u00e3o atual. Uma investiga\u00e7\u00e3o funcional \u00e9 usada para determinar a intera\u00e7\u00e3o com um novo recurso ou implementa\u00e7\u00e3o. Tamb\u00e9m podem ser realizadas investiga\u00e7\u00f5es de viabilidade t\u00e9cnica para reduzir os riscos em um engajamento e aumentar a compreens\u00e3o da equipe.","title":"Investiga\u00e7\u00e3o T\u00e9cnica"},{"location":"design/design-reviews/recipes/technical-spike/#resultado","text":"Geralmente, o resultado de uma Investiga\u00e7\u00e3o T\u00e9cnica deve ser um documento detalhando o que foi avaliado e o resultado dessa avalia\u00e7\u00e3o. Os detalhes contidos no documento podem variar, mas existem alguns princ\u00edpios gerais que podem ser \u00fateis. Declara\u00e7\u00e3o do Problema/Objetivos: Certifique-se de incluir uma se\u00e7\u00e3o que detalhe claramente por que uma avalia\u00e7\u00e3o est\u00e1 sendo feita e qual deve ser o resultado dessa avalia\u00e7\u00e3o. Isso \u00e9 \u00fatil para garantir que a investiga\u00e7\u00e3o t\u00e9cnica tenha sido produtiva e avan\u00e7ado o projeto como um todo de alguma forma. Garanta que seja Repet\u00edvel: Detalhe os componentes usados, instru\u00e7\u00f5es de instala\u00e7\u00e3o, configura\u00e7\u00e3o, etc., necess\u00e1rios para criar o ambiente que foi usado para avalia\u00e7\u00e3o e teste. Se algum teste for realizado, certifique-se de incluir os scripts, links para as aplica\u00e7\u00f5es, op\u00e7\u00f5es de configura\u00e7\u00e3o, etc., para que os testes possam ser realizados novamente. Existem muitas raz\u00f5es pelas quais o ambiente de avalia\u00e7\u00e3o pode precisar ser reconstru\u00eddo. Por exemplo: Outro cen\u00e1rio precisa ser testado. Uma nova vers\u00e3o da tecnologia foi lan\u00e7ada. A tecnologia precisa ser testada em uma nova plataforma. Coleta de Dados: O objetivo de uma investiga\u00e7\u00e3o deve ser a coleta de dados, n\u00e3o a tomada de decis\u00f5es ou recomenda\u00e7\u00f5es. Idealmente, a investiga\u00e7\u00e3o t\u00e9cnica aprofunda v\u00e1rias quest\u00f5es t\u00e9cnicas e obt\u00e9m respostas para que a equipe de projeto mais ampla possa ent\u00e3o se reunir e concordar com um curso apropriado para o futuro. Evid\u00eancias: Geralmente, voc\u00ea usar\u00e1 se\u00e7\u00f5es para resumir os resultados dos testes que n\u00e3o incluem os resultados detalhados potencialmente numerosos; no entanto, voc\u00ea deve incluir todos os resultados detalhados dos testes em um ap\u00eandice ou um anexo. Ter resultados completos detalhados em algum lugar ajudar\u00e1 a equipe a confiar nos resultados. Al\u00e9m disso, os dados podem ser interpretados de v\u00e1rias maneiras diferentes, e pode ser necess\u00e1rio voltar aos dados originais para uma nova interpreta\u00e7\u00e3o. Organiza\u00e7\u00e3o: A documenta\u00e7\u00e3o t\u00e9cnica pode ser extensa. Geralmente, \u00e9 uma boa ideia organizar as se\u00e7\u00f5es com cabe\u00e7alhos e incluir uma tabela de conte\u00fado. Geralmente, as se\u00e7\u00f5es no in\u00edcio do documento devem resumir os dados e usar um ou mais ap\u00eandices para mais detalhes.","title":"Resultado"},{"location":"design/design-reviews/trade-studies/","text":"Estudos de An\u00e1lise Os estudos de an\u00e1lise s\u00e3o uma ferramenta para selecionar a melhor op\u00e7\u00e3o entre v\u00e1rias op\u00e7\u00f5es poss\u00edveis para um determinado problema (por exemplo: computa\u00e7\u00e3o, armazenamento). Eles avaliam escolhas potenciais em rela\u00e7\u00e3o a um conjunto de crit\u00e9rios/requisitos objetivos para claramente apresentar os benef\u00edcios e limita\u00e7\u00f5es de cada solu\u00e7\u00e3o. Estudos de an\u00e1lise s\u00e3o um conceito da engenharia de sistemas que adaptamos para projetos de software. Os estudos de an\u00e1lise provaram ser uma ferramenta cr\u00edtica para direcionar o alinhamento com as partes interessadas, ganhar credibilidade ao faz\u00ea-lo e garantir que nossas decis\u00f5es fossem respaldadas por dados e n\u00e3o por vi\u00e9s. Quando Usar Esta Ferramenta Os estudos de an\u00e1lise andam de m\u00e3os dadas com o projeto de arquitetura de alto n\u00edvel. Isso geralmente ocorre \u00e0 medida que os requisitos do projeto est\u00e3o se solidificando, antes do in\u00edcio da codifica\u00e7\u00e3o. Os estudos de an\u00e1lise continuam a ser \u00fateis ao longo do projeto sempre que houver v\u00e1rias op\u00e7\u00f5es a serem selecionadas. Novos pontos de decis\u00e3o podem surgir devido a mudan\u00e7as nos requisitos, obten\u00e7\u00e3o dos resultados de uma investiga\u00e7\u00e3o t\u00e9cnica ou identifica\u00e7\u00e3o de desafios que n\u00e3o foram originalmente previstos. Os estudos de an\u00e1lise devem ser evitados se houver uma escolha clara de solu\u00e7\u00e3o. Porque eles exigem que cada solu\u00e7\u00e3o seja totalmente pensada, eles t\u00eam o potencial de levar muito tempo para serem conclu\u00eddos. Quando houver um design claro, o estudo de an\u00e1lise deve ser omitido, e uma entrada deve ser feita no Registro de Decis\u00f5es documentando a decis\u00e3o. Por Que Usar Estudos de An\u00e1lise Os estudos de an\u00e1lise s\u00e3o uma maneira de formalizar o processo de design e deixar um registro documentado do motivo pelo qual a decis\u00e3o foi tomada. Isso oferece algumas vantagens: O modelo de estudo de an\u00e1lise orienta o usu\u00e1rio por meio do processo de design. Isso fornece estrutura \u00e0 fase de design. Ter um processo de design uniforme ajuda a dividir o trabalho entre os membros da equipe. Tivemos sucesso com engenheiros se reunindo para definir requisitos, crit\u00e9rios de avalia\u00e7\u00e3o e brainstorming de solu\u00e7\u00f5es poss\u00edveis. Em seguida, eles podem se separar para revisar solu\u00e7\u00f5es em paralelo, antes de se reunirem para tomar a decis\u00e3o final. O estudo de an\u00e1lise conclu\u00eddo ajuda a alinhar a equipe e os tomadores de decis\u00e3o. Para apresentar os resultados do estudo, o pr\u00f3prio documento pode ser usado para destacar os principais pontos. Alternativamente, extra\u00edmos requisitos, diagramas para cada solu\u00e7\u00e3o e a tabela de resultados para um slide deck que fornece uma vis\u00e3o geral de alto n\u00edvel dos resultados. O estudo de an\u00e1lise conclu\u00eddo \u00e9 verificado no reposit\u00f3rio de c\u00f3digo, fornecendo documenta\u00e7\u00e3o do processo de decis\u00e3o. Isso deixa um hist\u00f3rico dos requisitos no momento que levou a cada decis\u00e3o. Al\u00e9m disso, a tabela de resultados oferece uma refer\u00eancia r\u00e1pida para como a decis\u00e3o seria afetada se os requisitos mudarem \u00e0 medida que o projeto avan\u00e7a. Fluxo de um Estudo de An\u00e1lise Os estudos de an\u00e1lise podem variar amplamente em escopo; no entanto, eles seguem o padr\u00e3o comum descrito abaixo: Solidifique os requisitos - Trabalhe com as partes interessadas para concordar com os requisitos para a funcionalidade que voc\u00ea est\u00e1 tentando construir. Crie crit\u00e9rios de avalia\u00e7\u00e3o - Este \u00e9 um conjunto de pontos de avalia\u00e7\u00e3o qualitativa e quantitativa que representam os requisitos. Juntos, eles se tornam um substituto f\u00e1cil de medir para os requisitos potencialmente abstratos. Brainstorm de solu\u00e7\u00f5es - Re\u00fana uma lista de poss\u00edveis solu\u00e7\u00f5es para o problema. Em seguida, use seu melhor julgamento para escolher as 2-4 solu\u00e7\u00f5es que parecem mais promissoras. Para ajudar a reduzir as solu\u00e7\u00f5es, lembre-se de entrar em contato com especialistas em assuntos e outras equipes que possam ter passado por uma decis\u00e3o semelhante. Avalie solu\u00e7\u00f5es selecionadas - Aprofunde-se em cada solu\u00e7\u00e3o e me\u00e7a-a em rela\u00e7\u00e3o aos crit\u00e9rios de avalia\u00e7\u00e3o. Nesta etapa, limite seu tempo de pesquisa para evitar investir demais em uma determinada \u00e1rea. Compare resultados e escolha a solu\u00e7\u00e3o - Alinhe a decis\u00e3o com a equipe. Se voc\u00ea n\u00e3o conseguir decidir, uma lista clara de a\u00e7\u00f5es e respons\u00e1veis para conduzir a decis\u00e3o final deve ser produzida. Modelo Consulte template.md para um exemplo de como estruturar as informa\u00e7\u00f5es acima. Este modelo foi criado para orientar o usu\u00e1rio na condu\u00e7\u00e3o de um estudo de an\u00e1lise. Ap\u00f3s a tomada de decis\u00e3o, recomendamos adicionar uma entrada no Registro de Decis\u00f5es que fa\u00e7a refer\u00eancia ao texto completo do estudo de an\u00e1lise.","title":"Estudos de An\u00e1lise"},{"location":"design/design-reviews/trade-studies/#estudos-de-analise","text":"Os estudos de an\u00e1lise s\u00e3o uma ferramenta para selecionar a melhor op\u00e7\u00e3o entre v\u00e1rias op\u00e7\u00f5es poss\u00edveis para um determinado problema (por exemplo: computa\u00e7\u00e3o, armazenamento). Eles avaliam escolhas potenciais em rela\u00e7\u00e3o a um conjunto de crit\u00e9rios/requisitos objetivos para claramente apresentar os benef\u00edcios e limita\u00e7\u00f5es de cada solu\u00e7\u00e3o. Estudos de an\u00e1lise s\u00e3o um conceito da engenharia de sistemas que adaptamos para projetos de software. Os estudos de an\u00e1lise provaram ser uma ferramenta cr\u00edtica para direcionar o alinhamento com as partes interessadas, ganhar credibilidade ao faz\u00ea-lo e garantir que nossas decis\u00f5es fossem respaldadas por dados e n\u00e3o por vi\u00e9s.","title":"Estudos de An\u00e1lise"},{"location":"design/design-reviews/trade-studies/#quando-usar-esta-ferramenta","text":"Os estudos de an\u00e1lise andam de m\u00e3os dadas com o projeto de arquitetura de alto n\u00edvel. Isso geralmente ocorre \u00e0 medida que os requisitos do projeto est\u00e3o se solidificando, antes do in\u00edcio da codifica\u00e7\u00e3o. Os estudos de an\u00e1lise continuam a ser \u00fateis ao longo do projeto sempre que houver v\u00e1rias op\u00e7\u00f5es a serem selecionadas. Novos pontos de decis\u00e3o podem surgir devido a mudan\u00e7as nos requisitos, obten\u00e7\u00e3o dos resultados de uma investiga\u00e7\u00e3o t\u00e9cnica ou identifica\u00e7\u00e3o de desafios que n\u00e3o foram originalmente previstos. Os estudos de an\u00e1lise devem ser evitados se houver uma escolha clara de solu\u00e7\u00e3o. Porque eles exigem que cada solu\u00e7\u00e3o seja totalmente pensada, eles t\u00eam o potencial de levar muito tempo para serem conclu\u00eddos. Quando houver um design claro, o estudo de an\u00e1lise deve ser omitido, e uma entrada deve ser feita no Registro de Decis\u00f5es documentando a decis\u00e3o.","title":"Quando Usar Esta Ferramenta"},{"location":"design/design-reviews/trade-studies/#por-que-usar-estudos-de-analise","text":"Os estudos de an\u00e1lise s\u00e3o uma maneira de formalizar o processo de design e deixar um registro documentado do motivo pelo qual a decis\u00e3o foi tomada. Isso oferece algumas vantagens: O modelo de estudo de an\u00e1lise orienta o usu\u00e1rio por meio do processo de design. Isso fornece estrutura \u00e0 fase de design. Ter um processo de design uniforme ajuda a dividir o trabalho entre os membros da equipe. Tivemos sucesso com engenheiros se reunindo para definir requisitos, crit\u00e9rios de avalia\u00e7\u00e3o e brainstorming de solu\u00e7\u00f5es poss\u00edveis. Em seguida, eles podem se separar para revisar solu\u00e7\u00f5es em paralelo, antes de se reunirem para tomar a decis\u00e3o final. O estudo de an\u00e1lise conclu\u00eddo ajuda a alinhar a equipe e os tomadores de decis\u00e3o. Para apresentar os resultados do estudo, o pr\u00f3prio documento pode ser usado para destacar os principais pontos. Alternativamente, extra\u00edmos requisitos, diagramas para cada solu\u00e7\u00e3o e a tabela de resultados para um slide deck que fornece uma vis\u00e3o geral de alto n\u00edvel dos resultados. O estudo de an\u00e1lise conclu\u00eddo \u00e9 verificado no reposit\u00f3rio de c\u00f3digo, fornecendo documenta\u00e7\u00e3o do processo de decis\u00e3o. Isso deixa um hist\u00f3rico dos requisitos no momento que levou a cada decis\u00e3o. Al\u00e9m disso, a tabela de resultados oferece uma refer\u00eancia r\u00e1pida para como a decis\u00e3o seria afetada se os requisitos mudarem \u00e0 medida que o projeto avan\u00e7a.","title":"Por Que Usar Estudos de An\u00e1lise"},{"location":"design/design-reviews/trade-studies/#fluxo-de-um-estudo-de-analise","text":"Os estudos de an\u00e1lise podem variar amplamente em escopo; no entanto, eles seguem o padr\u00e3o comum descrito abaixo: Solidifique os requisitos - Trabalhe com as partes interessadas para concordar com os requisitos para a funcionalidade que voc\u00ea est\u00e1 tentando construir. Crie crit\u00e9rios de avalia\u00e7\u00e3o - Este \u00e9 um conjunto de pontos de avalia\u00e7\u00e3o qualitativa e quantitativa que representam os requisitos. Juntos, eles se tornam um substituto f\u00e1cil de medir para os requisitos potencialmente abstratos. Brainstorm de solu\u00e7\u00f5es - Re\u00fana uma lista de poss\u00edveis solu\u00e7\u00f5es para o problema. Em seguida, use seu melhor julgamento para escolher as 2-4 solu\u00e7\u00f5es que parecem mais promissoras. Para ajudar a reduzir as solu\u00e7\u00f5es, lembre-se de entrar em contato com especialistas em assuntos e outras equipes que possam ter passado por uma decis\u00e3o semelhante. Avalie solu\u00e7\u00f5es selecionadas - Aprofunde-se em cada solu\u00e7\u00e3o e me\u00e7a-a em rela\u00e7\u00e3o aos crit\u00e9rios de avalia\u00e7\u00e3o. Nesta etapa, limite seu tempo de pesquisa para evitar investir demais em uma determinada \u00e1rea. Compare resultados e escolha a solu\u00e7\u00e3o - Alinhe a decis\u00e3o com a equipe. Se voc\u00ea n\u00e3o conseguir decidir, uma lista clara de a\u00e7\u00f5es e respons\u00e1veis para conduzir a decis\u00e3o final deve ser produzida.","title":"Fluxo de um Estudo de An\u00e1lise"},{"location":"design/design-reviews/trade-studies/#modelo","text":"Consulte template.md para um exemplo de como estruturar as informa\u00e7\u00f5es acima. Este modelo foi criado para orientar o usu\u00e1rio na condu\u00e7\u00e3o de um estudo de an\u00e1lise. Ap\u00f3s a tomada de decis\u00e3o, recomendamos adicionar uma entrada no Registro de Decis\u00f5es que fa\u00e7a refer\u00eancia ao texto completo do estudo de an\u00e1lise.","title":"Modelo"},{"location":"design/design-reviews/trade-studies/template/","text":"Modelo de Estudo de An\u00e1lise Este modelo gen\u00e9rico pode ser usado em qualquer situa\u00e7\u00e3o em que tenhamos um conjunto de requisitos que podem ser satisfeitos por v\u00e1rias solu\u00e7\u00f5es. Eles podem variar em escopo, desde a escolha de qual pacote de c\u00f3digo aberto usar at\u00e9 projetos completos de arquitetura. Estudo de An\u00e1lise/Design: {nome do estudo} Conduzido por: {Nomes das pessoas que podem responder a perguntas de acompanhamento e pelo menos um endere\u00e7o de e-mail} Item de Trabalho no Backlog: {Link para o item de trabalho para fornecer mais contexto} Sprint: {Em qual sprint o estudo foi realizado? Inclua a data de in\u00edcio da sprint} Decis\u00e3o: {Solu\u00e7\u00e3o escolhida para prosseguir} Tomadores de Decis\u00e3o: IMPORTANTE Os designs devem ser conclu\u00eddos dentro de uma sprint. A maioria dos designs se beneficiar\u00e1 da brevidade. Para fazer isso: Limite o escopo do design. Reduza a avalia\u00e7\u00e3o para 2 a 3 solu\u00e7\u00f5es. Projete experimentos para coletar evid\u00eancias o mais r\u00e1pido poss\u00edvel. Vis\u00e3o Geral Descri\u00e7\u00e3o do problema que estamos resolvendo. Isso deve incluir: Suposi\u00e7\u00f5es sobre o restante do sistema. Restri\u00e7\u00f5es que se aplicam ao sistema, tanto de neg\u00f3cios quanto t\u00e9cnicas. Requisitos para a funcionalidade que precisa ser implementada, incluindo poss\u00edveis entradas e sa\u00eddas. (opcional) Um diagrama mostrando as diferentes partes. Resultados Desejados A se\u00e7\u00e3o a seguir deve estabelecer as capacidades desejadas da solu\u00e7\u00e3o para que ela seja bem-sucedida. Isso pode ser feito respondendo diretamente \u00e0s seguintes perguntas ou por meio de um link para um artefato relacionado (ou seja, PBI ou descri\u00e7\u00e3o de funcionalidade). Aceita\u00e7\u00e3o: Quais capacidades devem ser demonstr\u00e1veis para que um interessado aceite a solu\u00e7\u00e3o? Justifica\u00e7\u00e3o: Como isso contribui para os objetivos gerais do projeto? IMPORTANTE Isso n\u00e3o se destina a definir resultados para a atividade de design em si. Destina-se a definir os resultados para a solu\u00e7\u00e3o em processo de design. Como mencionado na se\u00e7\u00e3o Interface do Usu\u00e1rio , se o estudo de an\u00e1lise estiver analisando uma solu\u00e7\u00e3o de desenvolvimento de aplicativo, use as \"hist\u00f3rias de persona\" para derivar resultados desejados. Por exemplo, se uma hist\u00f3ria de persona exemplifica um certo requisito de acessibilidade, o resultado desejado paralelo pode ser \"O aplicativo deve ser acess\u00edvel para pessoas com defici\u00eancia visual\". Crit\u00e9rios de Avalia\u00e7\u00e3o Os resultados devem ser condensados em um conjunto de \"crit\u00e9rios de avalia\u00e7\u00e3o\" que podemos classificar todas as solu\u00e7\u00f5es potenciais. Exemplos de crit\u00e9rios de avalia\u00e7\u00e3o: Funciona no Windows e Linux - Resposta bin\u00e1ria Uso de recursos computacionais - Pode ser categorias que classificam efetivamente diferentes op\u00e7\u00f5es: Alto, M\u00e9dio, Baixo Custo da solu\u00e7\u00e3o - Um campo num\u00e9rico estimado A se\u00e7\u00e3o de resultados cont\u00e9m uma tabela que avalia cada solu\u00e7\u00e3o em rela\u00e7\u00e3o aos crit\u00e9rios de avalia\u00e7\u00e3o. M\u00e9tricas-Chave (Opcional) Se dispon\u00edvel, descreva quais m\u00e9tricas mensur\u00e1veis s\u00e3o importantes para o sucesso da solu\u00e7\u00e3o. Exemplos incluem, mas n\u00e3o se limitam a: Metas de desempenho e escala, como Requisi\u00e7\u00f5es/Segundo, Lat\u00eancia e Tempo de resposta (em um determinado percentil). Or\u00e7amento de custo de consumo no Azure. Por exemplo, dadas certas utiliza\u00e7\u00f5es, espera-se que a solu\u00e7\u00e3o custe X d\u00f3lares por m\u00eas. Disponibilidade de tempo de atividade de XX% ao longo de um per\u00edodo de tempo X. Consist\u00eancia. Escritas dispon\u00edveis para leitura em X milissegundos. Objetivo de ponto de recupera\u00e7\u00e3o (RPO) e objetivo de tempo de recupera\u00e7\u00e3o (RTO). Restri\u00e7\u00f5es (Opcional) Se aplic\u00e1vel, descreva os limites dentro dos quais devemos projetar a solu\u00e7\u00e3o. Isso pode ser pensado como a \"caixa\" na qual a equipe deve trabalhar. Essa caixa pode ser definida como: Tecnologias, servi\u00e7os e linguagens com as quais uma organiza\u00e7\u00e3o se sente confort\u00e1vel operar/gerenciar. Dispositivos, sistemas operacionais e/ou navegadores que precisam ser suportados. Compatibilidade com vers \u00f5es anteriores. Por exemplo, interfaces p\u00fablicas consumidas por aplicativos de terceiros ou clientes n\u00e3o podem introduzir altera\u00e7\u00f5es incompat\u00edveis. - Integra\u00e7\u00f5es ou depend\u00eancias com outros sistemas. Por exemplo, notifica\u00e7\u00f5es push para aplicativos de cliente devem ser feitas por meio de um canal existente de websockets. Acessibilidade Acessibilidade nunca \u00e9 opcional . A Microsoft fez um compromisso p\u00fablico de sempre produzir aplicativos acess\u00edveis. Para mais informa\u00e7\u00f5es, visite o site oficial de acessibilidade da Microsoft e leia a p\u00e1gina Acessibilidade . Considere as seguintes perguntas ao determinar os requisitos de acessibilidade do aplicativo: O aplicativo atende aos padr\u00f5es de acessibilidade da ind\u00fastria? Os recursos de treinamento, suporte e documenta\u00e7\u00e3o s\u00e3o acess\u00edveis? O aplicativo foi projetado para ser inclusivo para pessoas com uma ampla gama de habilidades, idiomas e culturas? Hip\u00f3teses de Solu\u00e7\u00e3o Enumere as solu\u00e7\u00f5es que se acredita que proporcionar\u00e3o os resultados desejados. NOTA: Limitar as solu\u00e7\u00f5es avaliadas a 2 ou 3 candidatos potenciais pode ajudar a gerenciar o tempo gasto na avalia\u00e7\u00e3o. Se houver mais de 3 candidatos, priorize os 3 principais, de acordo com o que a equipe considera os principais. Se apropriado, os candidatos eliminados podem ser mencionados para capturar o motivo de sua elimina\u00e7\u00e3o. Al\u00e9m disso, deve haver pelo menos duas op\u00e7\u00f5es comparadas, caso contr\u00e1rio, o estudo de an\u00e1lise n\u00e3o era necess\u00e1rio. {Solu\u00e7\u00e3o 1} - Nome curto e facilmente reconhec\u00edvel Adicione uma descri\u00e7\u00e3o breve da solu\u00e7\u00e3o e como ela \u00e9 esperada para produzir os resultados desejados. Se apropriado, ilustra\u00e7\u00f5es/diagramas podem ser usados para reduzir a quantidade de explica\u00e7\u00e3o de texto necess\u00e1ria para descrever a solu\u00e7\u00e3o. NOTA: Usar a linguagem no presente para descrever a solu\u00e7\u00e3o pode ajudar a evitar confus\u00e3o entre o estado atual e o estado futuro. Por exemplo, use \"Esta solu\u00e7\u00e3o funciona fazendo...\" em vez de \"Esta solu\u00e7\u00e3o funcionaria fazendo...\". Cada se\u00e7\u00e3o de solu\u00e7\u00e3o deve conter o seguinte: Descri\u00e7\u00e3o da solu\u00e7\u00e3o. (opcional) Um diagrama para fazer refer\u00eancia r\u00e1pida \u00e0 solu\u00e7\u00e3o. Varia\u00e7\u00f5es poss\u00edveis - coisas que s\u00e3o pequenas varia\u00e7\u00f5es na solu\u00e7\u00e3o principal podem ser agrupadas. Avalia\u00e7\u00e3o da ideia com base nos crit\u00e9rios de avalia\u00e7\u00e3o acima. A profundidade, detalhes e conte\u00fado dessas se\u00e7\u00f5es variar\u00e3o com base na complexidade da funcionalidade a ser desenvolvida. Experimento(s) Descreva como a solu\u00e7\u00e3o ser\u00e1 avaliada para comprovar ou refutar que ela produzir\u00e1 os resultados desejados. Isso pode assumir muitas formas, como a constru\u00e7\u00e3o de um prot\u00f3tipo e a pesquisa de documenta\u00e7\u00e3o e solu\u00e7\u00f5es de amostra existentes. Al\u00e9m disso, documente quaisquer suposi\u00e7\u00f5es feitas como parte do experimento. NOTA: Cronometrar esses experimentos pode ser ben\u00e9fico para garantir que a equipe esteja aproveitando ao m\u00e1ximo o tempo, concentrando-se na coleta de evid\u00eancias-chave da maneira mais simples e r\u00e1pida poss\u00edvel. Evid\u00eancias Apresente as evid\u00eancias coletadas durante a experimenta\u00e7\u00e3o que apoiam a hip\u00f3tese de que esta solu\u00e7\u00e3o atender\u00e1 aos resultados desejados. Exemplos podem incluir: Demonstra\u00e7\u00f5es gravadas ou ao vivo de um prot\u00f3tipo fornecendo as capacidades desejadas. M\u00e9tricas coletadas durante o teste do prot\u00f3tipo. Documenta\u00e7\u00e3o que indica que a solu\u00e7\u00e3o pode fornecer as capacidades desejadas. NOTA: N\u00e3o \u00e9 necess\u00e1rio ter evid\u00eancias para cada capacidade, m\u00e9trica ou restri\u00e7\u00e3o para que o design seja considerado pronto. Em vez disso, concentre-se em apresentar evid\u00eancias que sejam mais relevantes e impactantes para apoiar ou eliminar a hip\u00f3tese. {Solu\u00e7\u00e3o 2} ... {Solu\u00e7\u00e3o N} ... Resultados Esta se\u00e7\u00e3o deve conter uma tabela que classifica cada solu\u00e7\u00e3o em rela\u00e7\u00e3o a cada um dos crit\u00e9rios de avalia\u00e7\u00e3o: Solu\u00e7\u00e3o Crit\u00e9rio de Avalia\u00e7\u00e3o 1 Crit\u00e9rio de Avalia\u00e7\u00e3o 2 ... Crit\u00e9rio de Avalia\u00e7\u00e3o N Solu\u00e7\u00e3o 1 Solu\u00e7\u00e3o 2 ... Solu\u00e7\u00e3o M Observa\u00e7\u00e3o: A formata\u00e7\u00e3o da tabela pode mudar. No passado, tivemos sucesso com descri\u00e7\u00f5es qualitativas nas entradas da tabela e codifica\u00e7\u00e3o de cores nas c\u00e9lulas para representar bom, justo, ruim. Decis\u00e3o A solu\u00e7\u00e3o escolhida ou uma lista de perguntas que precisam ser respondidas antes que a decis\u00e3o possa ser tomada. No segundo caso, cada pergunta precisa ter uma tarefa de a\u00e7\u00e3o e uma pessoa atribu\u00edda para responder \u00e0 pergunta. Assim que essas perguntas forem respondidas, o documento deve ser atualizado para refletir as respostas e a decis\u00e3o final. No primeiro caso, descreva qual solu\u00e7\u00e3o foi escolhida e por qu\u00ea. Resuma quais evid\u00eancias informaram a decis\u00e3o e como essas evid\u00eancias se relacionaram com os resultados desejados. IMPORTANTE : As decis\u00f5es devem ser tomadas com a compreens\u00e3o de que podem mud ar \u00e0 medida que a equipe aprende mais. Elas s\u00e3o um ponto de partida, n\u00e3o um contrato. Pr\u00f3ximos Passos Quais trabalhos s\u00e3o esperados ap\u00f3s a tomada de uma decis\u00e3o? Exemplos incluem, mas n\u00e3o se limitam a: Criar novos PBI's ou modificar os existentes. Estudos de investiga\u00e7\u00e3o de acompanhamento. Criar especifica\u00e7\u00f5es para interfaces p\u00fablicas e integra\u00e7\u00f5es entre outras correntes de trabalho. Entrada no Log de Decis\u00f5es.","title":"Modelo de Estudo de An\u00e1lise"},{"location":"design/design-reviews/trade-studies/template/#modelo-de-estudo-de-analise","text":"Este modelo gen\u00e9rico pode ser usado em qualquer situa\u00e7\u00e3o em que tenhamos um conjunto de requisitos que podem ser satisfeitos por v\u00e1rias solu\u00e7\u00f5es. Eles podem variar em escopo, desde a escolha de qual pacote de c\u00f3digo aberto usar at\u00e9 projetos completos de arquitetura.","title":"Modelo de Estudo de An\u00e1lise"},{"location":"design/design-reviews/trade-studies/template/#estudo-de-analisedesign-nome-do-estudo","text":"Conduzido por: {Nomes das pessoas que podem responder a perguntas de acompanhamento e pelo menos um endere\u00e7o de e-mail} Item de Trabalho no Backlog: {Link para o item de trabalho para fornecer mais contexto} Sprint: {Em qual sprint o estudo foi realizado? Inclua a data de in\u00edcio da sprint} Decis\u00e3o: {Solu\u00e7\u00e3o escolhida para prosseguir} Tomadores de Decis\u00e3o: IMPORTANTE Os designs devem ser conclu\u00eddos dentro de uma sprint. A maioria dos designs se beneficiar\u00e1 da brevidade. Para fazer isso: Limite o escopo do design. Reduza a avalia\u00e7\u00e3o para 2 a 3 solu\u00e7\u00f5es. Projete experimentos para coletar evid\u00eancias o mais r\u00e1pido poss\u00edvel.","title":"Estudo de An\u00e1lise/Design: {nome do estudo}"},{"location":"design/design-reviews/trade-studies/template/#visao-geral","text":"Descri\u00e7\u00e3o do problema que estamos resolvendo. Isso deve incluir: Suposi\u00e7\u00f5es sobre o restante do sistema. Restri\u00e7\u00f5es que se aplicam ao sistema, tanto de neg\u00f3cios quanto t\u00e9cnicas. Requisitos para a funcionalidade que precisa ser implementada, incluindo poss\u00edveis entradas e sa\u00eddas. (opcional) Um diagrama mostrando as diferentes partes.","title":"Vis\u00e3o Geral"},{"location":"design/design-reviews/trade-studies/template/#resultados-desejados","text":"A se\u00e7\u00e3o a seguir deve estabelecer as capacidades desejadas da solu\u00e7\u00e3o para que ela seja bem-sucedida. Isso pode ser feito respondendo diretamente \u00e0s seguintes perguntas ou por meio de um link para um artefato relacionado (ou seja, PBI ou descri\u00e7\u00e3o de funcionalidade). Aceita\u00e7\u00e3o: Quais capacidades devem ser demonstr\u00e1veis para que um interessado aceite a solu\u00e7\u00e3o? Justifica\u00e7\u00e3o: Como isso contribui para os objetivos gerais do projeto? IMPORTANTE Isso n\u00e3o se destina a definir resultados para a atividade de design em si. Destina-se a definir os resultados para a solu\u00e7\u00e3o em processo de design. Como mencionado na se\u00e7\u00e3o Interface do Usu\u00e1rio , se o estudo de an\u00e1lise estiver analisando uma solu\u00e7\u00e3o de desenvolvimento de aplicativo, use as \"hist\u00f3rias de persona\" para derivar resultados desejados. Por exemplo, se uma hist\u00f3ria de persona exemplifica um certo requisito de acessibilidade, o resultado desejado paralelo pode ser \"O aplicativo deve ser acess\u00edvel para pessoas com defici\u00eancia visual\".","title":"Resultados Desejados"},{"location":"design/design-reviews/trade-studies/template/#criterios-de-avaliacao","text":"Os resultados devem ser condensados em um conjunto de \"crit\u00e9rios de avalia\u00e7\u00e3o\" que podemos classificar todas as solu\u00e7\u00f5es potenciais. Exemplos de crit\u00e9rios de avalia\u00e7\u00e3o: Funciona no Windows e Linux - Resposta bin\u00e1ria Uso de recursos computacionais - Pode ser categorias que classificam efetivamente diferentes op\u00e7\u00f5es: Alto, M\u00e9dio, Baixo Custo da solu\u00e7\u00e3o - Um campo num\u00e9rico estimado A se\u00e7\u00e3o de resultados cont\u00e9m uma tabela que avalia cada solu\u00e7\u00e3o em rela\u00e7\u00e3o aos crit\u00e9rios de avalia\u00e7\u00e3o.","title":"Crit\u00e9rios de Avalia\u00e7\u00e3o"},{"location":"design/design-reviews/trade-studies/template/#metricas-chave-opcional","text":"Se dispon\u00edvel, descreva quais m\u00e9tricas mensur\u00e1veis s\u00e3o importantes para o sucesso da solu\u00e7\u00e3o. Exemplos incluem, mas n\u00e3o se limitam a: Metas de desempenho e escala, como Requisi\u00e7\u00f5es/Segundo, Lat\u00eancia e Tempo de resposta (em um determinado percentil). Or\u00e7amento de custo de consumo no Azure. Por exemplo, dadas certas utiliza\u00e7\u00f5es, espera-se que a solu\u00e7\u00e3o custe X d\u00f3lares por m\u00eas. Disponibilidade de tempo de atividade de XX% ao longo de um per\u00edodo de tempo X. Consist\u00eancia. Escritas dispon\u00edveis para leitura em X milissegundos. Objetivo de ponto de recupera\u00e7\u00e3o (RPO) e objetivo de tempo de recupera\u00e7\u00e3o (RTO).","title":"M\u00e9tricas-Chave (Opcional)"},{"location":"design/design-reviews/trade-studies/template/#restricoes-opcional","text":"Se aplic\u00e1vel, descreva os limites dentro dos quais devemos projetar a solu\u00e7\u00e3o. Isso pode ser pensado como a \"caixa\" na qual a equipe deve trabalhar. Essa caixa pode ser definida como: Tecnologias, servi\u00e7os e linguagens com as quais uma organiza\u00e7\u00e3o se sente confort\u00e1vel operar/gerenciar. Dispositivos, sistemas operacionais e/ou navegadores que precisam ser suportados. Compatibilidade com vers \u00f5es anteriores. Por exemplo, interfaces p\u00fablicas consumidas por aplicativos de terceiros ou clientes n\u00e3o podem introduzir altera\u00e7\u00f5es incompat\u00edveis. - Integra\u00e7\u00f5es ou depend\u00eancias com outros sistemas. Por exemplo, notifica\u00e7\u00f5es push para aplicativos de cliente devem ser feitas por meio de um canal existente de websockets.","title":"Restri\u00e7\u00f5es (Opcional)"},{"location":"design/design-reviews/trade-studies/template/#acessibilidade","text":"Acessibilidade nunca \u00e9 opcional . A Microsoft fez um compromisso p\u00fablico de sempre produzir aplicativos acess\u00edveis. Para mais informa\u00e7\u00f5es, visite o site oficial de acessibilidade da Microsoft e leia a p\u00e1gina Acessibilidade . Considere as seguintes perguntas ao determinar os requisitos de acessibilidade do aplicativo: O aplicativo atende aos padr\u00f5es de acessibilidade da ind\u00fastria? Os recursos de treinamento, suporte e documenta\u00e7\u00e3o s\u00e3o acess\u00edveis? O aplicativo foi projetado para ser inclusivo para pessoas com uma ampla gama de habilidades, idiomas e culturas?","title":"Acessibilidade"},{"location":"design/design-reviews/trade-studies/template/#hipoteses-de-solucao","text":"Enumere as solu\u00e7\u00f5es que se acredita que proporcionar\u00e3o os resultados desejados. NOTA: Limitar as solu\u00e7\u00f5es avaliadas a 2 ou 3 candidatos potenciais pode ajudar a gerenciar o tempo gasto na avalia\u00e7\u00e3o. Se houver mais de 3 candidatos, priorize os 3 principais, de acordo com o que a equipe considera os principais. Se apropriado, os candidatos eliminados podem ser mencionados para capturar o motivo de sua elimina\u00e7\u00e3o. Al\u00e9m disso, deve haver pelo menos duas op\u00e7\u00f5es comparadas, caso contr\u00e1rio, o estudo de an\u00e1lise n\u00e3o era necess\u00e1rio.","title":"Hip\u00f3teses de Solu\u00e7\u00e3o"},{"location":"design/design-reviews/trade-studies/template/#solucao-1-nome-curto-e-facilmente-reconhecivel","text":"Adicione uma descri\u00e7\u00e3o breve da solu\u00e7\u00e3o e como ela \u00e9 esperada para produzir os resultados desejados. Se apropriado, ilustra\u00e7\u00f5es/diagramas podem ser usados para reduzir a quantidade de explica\u00e7\u00e3o de texto necess\u00e1ria para descrever a solu\u00e7\u00e3o. NOTA: Usar a linguagem no presente para descrever a solu\u00e7\u00e3o pode ajudar a evitar confus\u00e3o entre o estado atual e o estado futuro. Por exemplo, use \"Esta solu\u00e7\u00e3o funciona fazendo...\" em vez de \"Esta solu\u00e7\u00e3o funcionaria fazendo...\". Cada se\u00e7\u00e3o de solu\u00e7\u00e3o deve conter o seguinte: Descri\u00e7\u00e3o da solu\u00e7\u00e3o. (opcional) Um diagrama para fazer refer\u00eancia r\u00e1pida \u00e0 solu\u00e7\u00e3o. Varia\u00e7\u00f5es poss\u00edveis - coisas que s\u00e3o pequenas varia\u00e7\u00f5es na solu\u00e7\u00e3o principal podem ser agrupadas. Avalia\u00e7\u00e3o da ideia com base nos crit\u00e9rios de avalia\u00e7\u00e3o acima. A profundidade, detalhes e conte\u00fado dessas se\u00e7\u00f5es variar\u00e3o com base na complexidade da funcionalidade a ser desenvolvida.","title":"{Solu\u00e7\u00e3o 1} - Nome curto e facilmente reconhec\u00edvel"},{"location":"design/design-reviews/trade-studies/template/#experimentos","text":"Descreva como a solu\u00e7\u00e3o ser\u00e1 avaliada para comprovar ou refutar que ela produzir\u00e1 os resultados desejados. Isso pode assumir muitas formas, como a constru\u00e7\u00e3o de um prot\u00f3tipo e a pesquisa de documenta\u00e7\u00e3o e solu\u00e7\u00f5es de amostra existentes. Al\u00e9m disso, documente quaisquer suposi\u00e7\u00f5es feitas como parte do experimento. NOTA: Cronometrar esses experimentos pode ser ben\u00e9fico para garantir que a equipe esteja aproveitando ao m\u00e1ximo o tempo, concentrando-se na coleta de evid\u00eancias-chave da maneira mais simples e r\u00e1pida poss\u00edvel.","title":"Experimento(s)"},{"location":"design/design-reviews/trade-studies/template/#evidencias","text":"Apresente as evid\u00eancias coletadas durante a experimenta\u00e7\u00e3o que apoiam a hip\u00f3tese de que esta solu\u00e7\u00e3o atender\u00e1 aos resultados desejados. Exemplos podem incluir: Demonstra\u00e7\u00f5es gravadas ou ao vivo de um prot\u00f3tipo fornecendo as capacidades desejadas. M\u00e9tricas coletadas durante o teste do prot\u00f3tipo. Documenta\u00e7\u00e3o que indica que a solu\u00e7\u00e3o pode fornecer as capacidades desejadas. NOTA: N\u00e3o \u00e9 necess\u00e1rio ter evid\u00eancias para cada capacidade, m\u00e9trica ou restri\u00e7\u00e3o para que o design seja considerado pronto. Em vez disso, concentre-se em apresentar evid\u00eancias que sejam mais relevantes e impactantes para apoiar ou eliminar a hip\u00f3tese.","title":"Evid\u00eancias"},{"location":"design/design-reviews/trade-studies/template/#solucao-2","text":"...","title":"{Solu\u00e7\u00e3o 2}"},{"location":"design/design-reviews/trade-studies/template/#solucao-n","text":"...","title":"{Solu\u00e7\u00e3o N}"},{"location":"design/design-reviews/trade-studies/template/#resultados","text":"Esta se\u00e7\u00e3o deve conter uma tabela que classifica cada solu\u00e7\u00e3o em rela\u00e7\u00e3o a cada um dos crit\u00e9rios de avalia\u00e7\u00e3o: Solu\u00e7\u00e3o Crit\u00e9rio de Avalia\u00e7\u00e3o 1 Crit\u00e9rio de Avalia\u00e7\u00e3o 2 ... Crit\u00e9rio de Avalia\u00e7\u00e3o N Solu\u00e7\u00e3o 1 Solu\u00e7\u00e3o 2 ... Solu\u00e7\u00e3o M Observa\u00e7\u00e3o: A formata\u00e7\u00e3o da tabela pode mudar. No passado, tivemos sucesso com descri\u00e7\u00f5es qualitativas nas entradas da tabela e codifica\u00e7\u00e3o de cores nas c\u00e9lulas para representar bom, justo, ruim.","title":"Resultados"},{"location":"design/design-reviews/trade-studies/template/#decisao","text":"A solu\u00e7\u00e3o escolhida ou uma lista de perguntas que precisam ser respondidas antes que a decis\u00e3o possa ser tomada. No segundo caso, cada pergunta precisa ter uma tarefa de a\u00e7\u00e3o e uma pessoa atribu\u00edda para responder \u00e0 pergunta. Assim que essas perguntas forem respondidas, o documento deve ser atualizado para refletir as respostas e a decis\u00e3o final. No primeiro caso, descreva qual solu\u00e7\u00e3o foi escolhida e por qu\u00ea. Resuma quais evid\u00eancias informaram a decis\u00e3o e como essas evid\u00eancias se relacionaram com os resultados desejados. IMPORTANTE : As decis\u00f5es devem ser tomadas com a compreens\u00e3o de que podem mud ar \u00e0 medida que a equipe aprende mais. Elas s\u00e3o um ponto de partida, n\u00e3o um contrato.","title":"Decis\u00e3o"},{"location":"design/design-reviews/trade-studies/template/#proximos-passos","text":"Quais trabalhos s\u00e3o esperados ap\u00f3s a tomada de uma decis\u00e3o? Exemplos incluem, mas n\u00e3o se limitam a: Criar novos PBI's ou modificar os existentes. Estudos de investiga\u00e7\u00e3o de acompanhamento. Criar especifica\u00e7\u00f5es para interfaces p\u00fablicas e integra\u00e7\u00f5es entre outras correntes de trabalho. Entrada no Log de Decis\u00f5es.","title":"Pr\u00f3ximos Passos"},{"location":"design/diagram-types/","text":"Tipos de Diagramas Criar e manter diagramas \u00e9 um desafio para qualquer equipe. Motivos comuns para esses desafios incluem: N\u00e3o aproveitar ferramentas para ajudar na gera\u00e7\u00e3o de diagramas. Incerteza sobre o que incluir em um diagrama e quando cri\u00e1-lo. Superar esses desafios e usar efetivamente diagramas de design pode ampliar a capacidade de uma equipe de executar ao longo de todo o Ciclo de Desenvolvimento de Software, desde a fase de design ao propor v\u00e1rios designs at\u00e9 us\u00e1-los como documenta\u00e7\u00e3o na fase de manuten\u00e7\u00e3o. Esta se\u00e7\u00e3o compartilhar\u00e1 ferramentas de exemplo para gera\u00e7\u00e3o de diagramas, fornecer\u00e1 uma vis\u00e3o geral de alto n\u00edvel dos diferentes tipos de diagramas e dar\u00e1 exemplos de alguns desses tipos. Existem duas classes principais de diagramas: Estruturais Comportamentais Dentro de cada uma dessas classes, existem muitos tipos de diagramas, cada um destinado a transmitir tipos espec\u00edficos de informa\u00e7\u00f5es. Quando diferentes tipos de diagramas s\u00e3o usados efetivamente em uma solu\u00e7\u00e3o, sistema ou reposit\u00f3rio, \u00e9 poss\u00edvel fornecer um design coeso e incrementalmente detalhado. Diagramas de Design de Exemplo Esta se\u00e7\u00e3o cont\u00e9m material educacional e exemplos dos seguintes diagramas de design: Diagramas de Classes - \u00dateis para documentar o design estrutural de um c\u00f3digo, a rela\u00e7\u00e3o entre classes e seus m\u00e9todos correspondentes. Diagramas de Componentes - \u00dateis para documentar uma vis\u00e3o geral estrutural de alto n\u00edvel de todos os componentes e seus \"pontos de contato\" diretos com outros componentes. Diagramas de Sequ\u00eancia - \u00dateis para documentar uma vis\u00e3o geral do comportamento do sistema, capturando os v\u00e1rios \"casos de uso\" ou \"a\u00e7\u00f5es\" que acionam o sistema a realizar alguma l\u00f3gica de neg\u00f3cios. Diagrama de Implanta\u00e7\u00e3o - \u00datil para documentar os ambientes de rede e hospedagem nos quais o sistema ir\u00e1 operar. Recursos Suplementares Cada um dos tipos de diagramas acima fornecer\u00e1 recursos espec\u00edficos relacionados ao seu tipo. Abaixo est\u00e3o os recursos gen\u00e9ricos: Diagramas UML Estruturais vs. Comportamentais do Visual Paradigm PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas C# para PlantUML Desenhar manualmente","title":"Tipos de Diagramas"},{"location":"design/diagram-types/#tipos-de-diagramas","text":"Criar e manter diagramas \u00e9 um desafio para qualquer equipe. Motivos comuns para esses desafios incluem: N\u00e3o aproveitar ferramentas para ajudar na gera\u00e7\u00e3o de diagramas. Incerteza sobre o que incluir em um diagrama e quando cri\u00e1-lo. Superar esses desafios e usar efetivamente diagramas de design pode ampliar a capacidade de uma equipe de executar ao longo de todo o Ciclo de Desenvolvimento de Software, desde a fase de design ao propor v\u00e1rios designs at\u00e9 us\u00e1-los como documenta\u00e7\u00e3o na fase de manuten\u00e7\u00e3o. Esta se\u00e7\u00e3o compartilhar\u00e1 ferramentas de exemplo para gera\u00e7\u00e3o de diagramas, fornecer\u00e1 uma vis\u00e3o geral de alto n\u00edvel dos diferentes tipos de diagramas e dar\u00e1 exemplos de alguns desses tipos. Existem duas classes principais de diagramas: Estruturais Comportamentais Dentro de cada uma dessas classes, existem muitos tipos de diagramas, cada um destinado a transmitir tipos espec\u00edficos de informa\u00e7\u00f5es. Quando diferentes tipos de diagramas s\u00e3o usados efetivamente em uma solu\u00e7\u00e3o, sistema ou reposit\u00f3rio, \u00e9 poss\u00edvel fornecer um design coeso e incrementalmente detalhado.","title":"Tipos de Diagramas"},{"location":"design/diagram-types/#diagramas-de-design-de-exemplo","text":"Esta se\u00e7\u00e3o cont\u00e9m material educacional e exemplos dos seguintes diagramas de design: Diagramas de Classes - \u00dateis para documentar o design estrutural de um c\u00f3digo, a rela\u00e7\u00e3o entre classes e seus m\u00e9todos correspondentes. Diagramas de Componentes - \u00dateis para documentar uma vis\u00e3o geral estrutural de alto n\u00edvel de todos os componentes e seus \"pontos de contato\" diretos com outros componentes. Diagramas de Sequ\u00eancia - \u00dateis para documentar uma vis\u00e3o geral do comportamento do sistema, capturando os v\u00e1rios \"casos de uso\" ou \"a\u00e7\u00f5es\" que acionam o sistema a realizar alguma l\u00f3gica de neg\u00f3cios. Diagrama de Implanta\u00e7\u00e3o - \u00datil para documentar os ambientes de rede e hospedagem nos quais o sistema ir\u00e1 operar.","title":"Diagramas de Design de Exemplo"},{"location":"design/diagram-types/#recursos-suplementares","text":"Cada um dos tipos de diagramas acima fornecer\u00e1 recursos espec\u00edficos relacionados ao seu tipo. Abaixo est\u00e3o os recursos gen\u00e9ricos: Diagramas UML Estruturais vs. Comportamentais do Visual Paradigm PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas C# para PlantUML Desenhar manualmente","title":"Recursos Suplementares"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/","text":"Diagramas de Classes Prop\u00f3sito Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Classes como parte de seu envolvimento. Em rela\u00e7\u00e3o ao \"como\", a se\u00e7\u00e3o abaixo fornecer\u00e1 ferramentas e plugins para automatizar o m\u00e1ximo poss\u00edvel a gera\u00e7\u00e3o de Diagramas de Classes por meio do VSCode. A Wikipedia define os Diagramas de Classes UML como: um tipo de diagrama de estrutura est\u00e1tica que descreve a estrutura de um sistema, mostrando as classes do sistema, seus atributos, opera\u00e7\u00f5es (ou m\u00e9todos) e as rela\u00e7\u00f5es entre objetos. Os termos-chave a serem observados aqui s\u00e3o: estrutura est\u00e1tica mostrando as classes do sistema, atributos, opera\u00e7\u00f5es e relacionamentos Os Diagramas de Classes s\u00e3o um tipo de estrutura est\u00e1tica porque se concentram nas propriedades e relacionamentos das classes. Eles n\u00e3o t\u00eam a finalidade de informar sobre o fluxo de dados, as responsabilidades do chamador ou do chamado, os fluxos de solicita\u00e7\u00e3o ou quaisquer outras caracter\u00edsticas relacionadas ao \"comportamento\". Principais Pontos Cada \"Componente\" (pe\u00e7a independente de software - pense em reposit\u00f3rios de dados, microsservi\u00e7os, fun\u00e7\u00f5es serverless, interfaces de usu\u00e1rio, etc...) de um Produto ou Sistema ter\u00e1 seu pr\u00f3prio Diagrama de Classes. Os Diagramas de Classes devem contar uma \"hist\u00f3ria\", onde cada Diagrama exigir\u00e1 que os engenheiros pensem profundamente sobre: A responsabilidade / opera\u00e7\u00f5es de cada classe. O que uma classe pode (e deve) fazer? Os atributos e propriedades da classe. O que pode ser definido por um implementador desta classe? Quais s\u00e3o todas (se houver) as propriedades universalmente est\u00e1ticas? A visibilidade ou acessibilidade que uma opera\u00e7\u00e3o de classe pode ter para outras classes O relacionamento entre cada classe ou as v\u00e1rias inst\u00e2ncias Quando Criar? Porque os Diagramas de Classes representam uma das representa\u00e7\u00f5es mais granulares do que um \"produto\" ou \"sistema\" \u00e9 composto, \u00e9 recomend\u00e1vel come\u00e7ar a cria\u00e7\u00e3o desses diagramas no in\u00edcio e ao longo das partes de engenharia de um envolvimento. Isso significa que qualquer mudan\u00e7a de c\u00f3digo (nova funcionalidade, melhoria, refatora\u00e7\u00e3o de c\u00f3digo) pode envolver a atualiza\u00e7\u00e3o de um ou muitos Diagramas de Classes. Embora isso possa parecer uma desvantagem dos Diagramas de Classes, na verdade pode se tornar um grande benef\u00edcio. Porque os Diagramas de Classes contam uma \"hist\u00f3ria\" para cada Componente de um produto (veja a se\u00e7\u00e3o anterior), eles exigem uma quantidade substancial de planejamento antecipado e considera\u00e7\u00f5es de design. Essa quantidade de planejamento antecipado, no final das contas, resulta em mudan\u00e7as de c\u00f3digo mais eficazes e pode at\u00e9 minimizar o n\u00edvel de refatora\u00e7\u00f5es em est\u00e1gios futuros do envolvimento. Os Diagramas de Classes tamb\u00e9m fornecem indicadores r\u00e1pidos de \"alerta\" quando uma refatora\u00e7\u00e3o pode ser necess\u00e1ria. As raz\u00f5es podem ser devido ao fato de que uma classe espec\u00edfica pode estar fazendo muito, ter muitas depend\u00eancias ou quando a base de c\u00f3digo pode produzir um Diagrama de Classes muito \"confuso\" ou \"ca\u00f3tico\". Se o Diagrama de Classes for ileg\u00edvel, o c\u00f3digo provavelmente ser\u00e1 ileg\u00edvel . Exemplos Pode-se encontrar muitos exemplos online, como em Diagramas UML . Abaixo est\u00e3o alguns exemplos b\u00e1sicos: Versionamento Como os Diagramas de Classes mudar\u00e3o rapidamente, essencialmente sempre que uma classe for alterada no c\u00f3digo, e porque podem ser muito grandes, \u00e9 recomend\u00e1vel \"publicar\" periodicamente uma imagem do diagrama gerado. A frequ\u00eancia pode variar \u00e0 medida que o envolvimento avan\u00e7a. A abordagem abaixo pode ser usada para auxiliar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: Espere at\u00e9 que o envolvimento progrida (talvez 10-20% de conclus\u00e3o) antes de publicar um Diagrama de Classes. N\u00e3o vale a pena publicar um Diagrama de Classes desde o in\u00edcio, pois ele estar\u00e1 mudando diariamente. Uma vez que as classes mais cruciais forem desenvolvidas, atualize o diagrama publicado periodicamente. Idealmente, sempre que uma grande refatora\u00e7\u00e3o ou uma nova classe for introduzida. Se a equipe usar um plugin de IDE para gerar automaticamente o diagrama de seu ambiente de desenvolvimento, isso se tornar\u00e1 mais uma t arefa de documenta\u00e7\u00e3o do que uma necessidade. - \u00c0 medida que o envolvimento se aproxima do final (90-100% de conclus\u00e3o), atualize o diagrama publicado sempre que houver uma altera\u00e7\u00e3o em uma classe existente como parte dos crit\u00e9rios de aceita\u00e7\u00e3o de uma funcionalidade ou hist\u00f3ria. Dependendo da ferramenta usada, o versionamento autom\u00e1tico pode ser realizado sempre que uma atualiza\u00e7\u00e3o do Diagrama for feita. Se n\u00e3o for o caso, \u00e9 recomend\u00e1vel capturar vers\u00f5es distintas sempre que houver uma necessidade espec\u00edfica do cliente de ter uma imagem do projeto em um ponto espec\u00edfico no tempo. O requisito fundamental \u00e9 que o diagrama mais recente deve ser publicado e todos devem saber como acess\u00e1-lo quando a entrega ao cliente se aproximar. Recursos Wikipedia Visual Paradigm Plugins para o VS Code: C#, Visual Basic, C++ usando Componente de Designer de Classe TypeScript classdiagram-ts PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML C# para PlantUML Desenhar manualmente","title":"Diagramas de Classes"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#diagramas-de-classes","text":"","title":"Diagramas de Classes"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#proposito","text":"Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Classes como parte de seu envolvimento. Em rela\u00e7\u00e3o ao \"como\", a se\u00e7\u00e3o abaixo fornecer\u00e1 ferramentas e plugins para automatizar o m\u00e1ximo poss\u00edvel a gera\u00e7\u00e3o de Diagramas de Classes por meio do VSCode. A Wikipedia define os Diagramas de Classes UML como: um tipo de diagrama de estrutura est\u00e1tica que descreve a estrutura de um sistema, mostrando as classes do sistema, seus atributos, opera\u00e7\u00f5es (ou m\u00e9todos) e as rela\u00e7\u00f5es entre objetos. Os termos-chave a serem observados aqui s\u00e3o: estrutura est\u00e1tica mostrando as classes do sistema, atributos, opera\u00e7\u00f5es e relacionamentos Os Diagramas de Classes s\u00e3o um tipo de estrutura est\u00e1tica porque se concentram nas propriedades e relacionamentos das classes. Eles n\u00e3o t\u00eam a finalidade de informar sobre o fluxo de dados, as responsabilidades do chamador ou do chamado, os fluxos de solicita\u00e7\u00e3o ou quaisquer outras caracter\u00edsticas relacionadas ao \"comportamento\".","title":"Prop\u00f3sito"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#principais-pontos","text":"Cada \"Componente\" (pe\u00e7a independente de software - pense em reposit\u00f3rios de dados, microsservi\u00e7os, fun\u00e7\u00f5es serverless, interfaces de usu\u00e1rio, etc...) de um Produto ou Sistema ter\u00e1 seu pr\u00f3prio Diagrama de Classes. Os Diagramas de Classes devem contar uma \"hist\u00f3ria\", onde cada Diagrama exigir\u00e1 que os engenheiros pensem profundamente sobre: A responsabilidade / opera\u00e7\u00f5es de cada classe. O que uma classe pode (e deve) fazer? Os atributos e propriedades da classe. O que pode ser definido por um implementador desta classe? Quais s\u00e3o todas (se houver) as propriedades universalmente est\u00e1ticas? A visibilidade ou acessibilidade que uma opera\u00e7\u00e3o de classe pode ter para outras classes O relacionamento entre cada classe ou as v\u00e1rias inst\u00e2ncias","title":"Principais Pontos"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#quando-criar","text":"Porque os Diagramas de Classes representam uma das representa\u00e7\u00f5es mais granulares do que um \"produto\" ou \"sistema\" \u00e9 composto, \u00e9 recomend\u00e1vel come\u00e7ar a cria\u00e7\u00e3o desses diagramas no in\u00edcio e ao longo das partes de engenharia de um envolvimento. Isso significa que qualquer mudan\u00e7a de c\u00f3digo (nova funcionalidade, melhoria, refatora\u00e7\u00e3o de c\u00f3digo) pode envolver a atualiza\u00e7\u00e3o de um ou muitos Diagramas de Classes. Embora isso possa parecer uma desvantagem dos Diagramas de Classes, na verdade pode se tornar um grande benef\u00edcio. Porque os Diagramas de Classes contam uma \"hist\u00f3ria\" para cada Componente de um produto (veja a se\u00e7\u00e3o anterior), eles exigem uma quantidade substancial de planejamento antecipado e considera\u00e7\u00f5es de design. Essa quantidade de planejamento antecipado, no final das contas, resulta em mudan\u00e7as de c\u00f3digo mais eficazes e pode at\u00e9 minimizar o n\u00edvel de refatora\u00e7\u00f5es em est\u00e1gios futuros do envolvimento. Os Diagramas de Classes tamb\u00e9m fornecem indicadores r\u00e1pidos de \"alerta\" quando uma refatora\u00e7\u00e3o pode ser necess\u00e1ria. As raz\u00f5es podem ser devido ao fato de que uma classe espec\u00edfica pode estar fazendo muito, ter muitas depend\u00eancias ou quando a base de c\u00f3digo pode produzir um Diagrama de Classes muito \"confuso\" ou \"ca\u00f3tico\". Se o Diagrama de Classes for ileg\u00edvel, o c\u00f3digo provavelmente ser\u00e1 ileg\u00edvel .","title":"Quando Criar?"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#exemplos","text":"Pode-se encontrar muitos exemplos online, como em Diagramas UML . Abaixo est\u00e3o alguns exemplos b\u00e1sicos:","title":"Exemplos"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#versionamento","text":"Como os Diagramas de Classes mudar\u00e3o rapidamente, essencialmente sempre que uma classe for alterada no c\u00f3digo, e porque podem ser muito grandes, \u00e9 recomend\u00e1vel \"publicar\" periodicamente uma imagem do diagrama gerado. A frequ\u00eancia pode variar \u00e0 medida que o envolvimento avan\u00e7a. A abordagem abaixo pode ser usada para auxiliar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: Espere at\u00e9 que o envolvimento progrida (talvez 10-20% de conclus\u00e3o) antes de publicar um Diagrama de Classes. N\u00e3o vale a pena publicar um Diagrama de Classes desde o in\u00edcio, pois ele estar\u00e1 mudando diariamente. Uma vez que as classes mais cruciais forem desenvolvidas, atualize o diagrama publicado periodicamente. Idealmente, sempre que uma grande refatora\u00e7\u00e3o ou uma nova classe for introduzida. Se a equipe usar um plugin de IDE para gerar automaticamente o diagrama de seu ambiente de desenvolvimento, isso se tornar\u00e1 mais uma t arefa de documenta\u00e7\u00e3o do que uma necessidade. - \u00c0 medida que o envolvimento se aproxima do final (90-100% de conclus\u00e3o), atualize o diagrama publicado sempre que houver uma altera\u00e7\u00e3o em uma classe existente como parte dos crit\u00e9rios de aceita\u00e7\u00e3o de uma funcionalidade ou hist\u00f3ria. Dependendo da ferramenta usada, o versionamento autom\u00e1tico pode ser realizado sempre que uma atualiza\u00e7\u00e3o do Diagrama for feita. Se n\u00e3o for o caso, \u00e9 recomend\u00e1vel capturar vers\u00f5es distintas sempre que houver uma necessidade espec\u00edfica do cliente de ter uma imagem do projeto em um ponto espec\u00edfico no tempo. O requisito fundamental \u00e9 que o diagrama mais recente deve ser publicado e todos devem saber como acess\u00e1-lo quando a entrega ao cliente se aproximar.","title":"Versionamento"},{"location":"design/diagram-types/DesignDiagramsTemplates/classDiagrams/#recursos","text":"Wikipedia Visual Paradigm Plugins para o VS Code: C#, Visual Basic, C++ usando Componente de Designer de Classe TypeScript classdiagram-ts PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML C# para PlantUML Desenhar manualmente","title":"Recursos"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/","text":"Diagramas de Componentes Prop\u00f3sito Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Componentes como parte de seu envolvimento. Em rela\u00e7\u00e3o ao \"como\", a se\u00e7\u00e3o abaixo fornecer\u00e1 ferramentas e plugins para otimizar o m\u00e1ximo poss\u00edvel a gera\u00e7\u00e3o de Diagramas de Componentes por meio do VSCode. A Wikipedia define os Diagramas de Componentes UML como: um diagrama de componentes representa como os componentes s\u00e3o conectados para formar componentes maiores ou sistemas de software. Os Diagramas de Componentes s\u00e3o um tipo de estrutura est\u00e1tica porque se concentram na responsabilidade e nas rela\u00e7\u00f5es entre os componentes como parte do sistema ou solu\u00e7\u00e3o geral. Eles n\u00e3o t\u00eam a finalidade de informar sobre o fluxo de dados, as responsabilidades do chamador ou do chamado, os fluxos de solicita\u00e7\u00e3o ou quaisquer outras caracter\u00edsticas relacionadas ao \"comportamento\". ...Espere um segundo... o que \u00e9 um Componente? Um Componente \u00e9 uma solu\u00e7\u00e3o execut\u00e1vel que executa um conjunto de opera\u00e7\u00f5es e pode ser acessado por meio de uma API espec\u00edfica. Pode-se pensar em Componentes como um peda\u00e7o de software \"independente\" - pense em reposit\u00f3rios de dados, microsservi\u00e7os, fun\u00e7\u00f5es serverless, interfaces de usu\u00e1rio, etc... Principais Pontos Os dois principais pontos de um Diagrama de Componentes devem ser: Uma vis\u00e3o r\u00e1pida de todos os v\u00e1rios componentes (Interface de Usu\u00e1rio, Servi\u00e7o, Armazenamento de Dados) envolvidos no sistema Os \"pontos de contato\" imediatos que um determinado Componente tem com outros Componentes, incluindo como esse \"ponto de contato\" \u00e9 realizado (HTTP, FTP, etc...) Dependendo da complexidade do sistema, uma equipe pode decidir criar v\u00e1rios Diagramas de Componentes. Nesse caso, haveria um diagrama por Componente (representando todos os seus \"pontos de contato\" imediatos com outros Componentes). Ou, se o sistema for simples, a equipe pode optar por criar um \u00fanico Diagrama de Componentes que englobe todos os Componentes do sistema. Quando Criar? Como os Diagramas de Componentes representam uma vis\u00e3o geral de alto n\u00edvel de todo o sistema com foco nos Componentes, \u00e9 recomend\u00e1vel come\u00e7ar a cria\u00e7\u00e3o deste diagrama desde o in\u00edcio de um envolvimento e atualiz\u00e1-lo \u00e0 medida que os diferentes Componentes forem identificados, desenvolvidos e introduzidos no sistema. Caso contr\u00e1rio, se isso for deixado para mais tarde, h\u00e1 o risco de: a equipe n\u00e3o conseguir identificar \u00e1reas de melhoria a equipe ou outras partes interessadas necess\u00e1rias n\u00e3o terem uma compreens\u00e3o completa de como o sistema funciona \u00e0 medida que ele \u00e9 desenvolvido Devido \u00e0 granularidade inerente do sistema, os Diagramas de Componentes n\u00e3o precisam ser atualizados com tanta frequ\u00eancia quanto os Diagramas de Classes . Coisas que podem justificar a atualiza\u00e7\u00e3o de um Diagrama de Componentes podem incluir: Exclus\u00e3o ou adi\u00e7\u00e3o de um novo Componente no sistema Altera\u00e7\u00e3o das APIs de intera\u00e7\u00e3o de um Componente do sistema Altera\u00e7\u00e3o dos \"pontos de contato\" imediatos de um Componente do sistema com outros Componentes Como os Diagramas de Componentes se concentram em informar os v\u00e1rios \"pontos de contato\" entre os Componentes, requer algum planejamento antecipado para determinar quais Componentes s\u00e3o necess\u00e1rios e quais mecanismos de intera\u00e7\u00e3o s\u00e3o mais eficazes de acordo com os requisitos do sistema. Essa quantidade de planejamento antecipado deve ser abordada de maneira pragm\u00e1tica - pois o design pode evoluir ao longo do tempo, e isso \u00e9 perfeitamente aceit\u00e1vel, desde que as altera\u00e7\u00f5es sejam influenciadas por requisitos funcionais e requisitos n\u00e3o funcionais. Exemplos Aqui est\u00e3o alguns exemplos b\u00e1sicos: Versionamento Como os Diagramas de Componentes mudar\u00e3o periodicamente, \u00e9 recomend\u00e1vel \"publicar\" periodicamente uma imagem do diagrama gerado. A frequ\u00eancia pode variar \u00e0 medida que o envolvimento avan\u00e7a. A abordagem abaixo pode ser usada para auxiliar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: No in\u00edcio do envolvimento, publicar uma vers\u00e3o \"imaginada\" do Diagrama de Componentes fornecer\u00e1 uma vis\u00e3o comum a todos os engenheiros ao trabalharem nas diferentes partes da solu\u00e7\u00e3o. Ao longo do envolvimento, atualize o diagrama publicado periodicamente. Idealmente, sempre que um novo Componente for introduzido no sistema ou sempre que um novo \"ponto de contato\" ocorrer entre Componentes. Dependendo da ferramenta utilizada, o versionamento autom\u00e1tico pode ser realizado sempre que uma atualiza\u00e7\u00e3o no Diagrama for feita. Caso contr\u00e1rio, \u00e9 recomend\u00e1vel capturar vers\u00f5es distintas sempre que houver uma necessidade espec\u00edfica do cliente de ter uma imagem do projeto em um ponto espec\u00edfico no tempo. O requisito fundamental \u00e9 que o diagrama mais recente deve ser publicado e todos devem saber como acess\u00e1-lo \u00e0 medida que a entrega ao cliente se aproxima. Recursos Wikipedia Visual Paradigm Plugins para o VS Code: PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML Desenhar manualmente","title":"Diagramas de Componentes"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#diagramas-de-componentes","text":"","title":"Diagramas de Componentes"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#proposito","text":"Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Componentes como parte de seu envolvimento. Em rela\u00e7\u00e3o ao \"como\", a se\u00e7\u00e3o abaixo fornecer\u00e1 ferramentas e plugins para otimizar o m\u00e1ximo poss\u00edvel a gera\u00e7\u00e3o de Diagramas de Componentes por meio do VSCode. A Wikipedia define os Diagramas de Componentes UML como: um diagrama de componentes representa como os componentes s\u00e3o conectados para formar componentes maiores ou sistemas de software. Os Diagramas de Componentes s\u00e3o um tipo de estrutura est\u00e1tica porque se concentram na responsabilidade e nas rela\u00e7\u00f5es entre os componentes como parte do sistema ou solu\u00e7\u00e3o geral. Eles n\u00e3o t\u00eam a finalidade de informar sobre o fluxo de dados, as responsabilidades do chamador ou do chamado, os fluxos de solicita\u00e7\u00e3o ou quaisquer outras caracter\u00edsticas relacionadas ao \"comportamento\". ...Espere um segundo... o que \u00e9 um Componente? Um Componente \u00e9 uma solu\u00e7\u00e3o execut\u00e1vel que executa um conjunto de opera\u00e7\u00f5es e pode ser acessado por meio de uma API espec\u00edfica. Pode-se pensar em Componentes como um peda\u00e7o de software \"independente\" - pense em reposit\u00f3rios de dados, microsservi\u00e7os, fun\u00e7\u00f5es serverless, interfaces de usu\u00e1rio, etc...","title":"Prop\u00f3sito"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#principais-pontos","text":"Os dois principais pontos de um Diagrama de Componentes devem ser: Uma vis\u00e3o r\u00e1pida de todos os v\u00e1rios componentes (Interface de Usu\u00e1rio, Servi\u00e7o, Armazenamento de Dados) envolvidos no sistema Os \"pontos de contato\" imediatos que um determinado Componente tem com outros Componentes, incluindo como esse \"ponto de contato\" \u00e9 realizado (HTTP, FTP, etc...) Dependendo da complexidade do sistema, uma equipe pode decidir criar v\u00e1rios Diagramas de Componentes. Nesse caso, haveria um diagrama por Componente (representando todos os seus \"pontos de contato\" imediatos com outros Componentes). Ou, se o sistema for simples, a equipe pode optar por criar um \u00fanico Diagrama de Componentes que englobe todos os Componentes do sistema.","title":"Principais Pontos"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#quando-criar","text":"Como os Diagramas de Componentes representam uma vis\u00e3o geral de alto n\u00edvel de todo o sistema com foco nos Componentes, \u00e9 recomend\u00e1vel come\u00e7ar a cria\u00e7\u00e3o deste diagrama desde o in\u00edcio de um envolvimento e atualiz\u00e1-lo \u00e0 medida que os diferentes Componentes forem identificados, desenvolvidos e introduzidos no sistema. Caso contr\u00e1rio, se isso for deixado para mais tarde, h\u00e1 o risco de: a equipe n\u00e3o conseguir identificar \u00e1reas de melhoria a equipe ou outras partes interessadas necess\u00e1rias n\u00e3o terem uma compreens\u00e3o completa de como o sistema funciona \u00e0 medida que ele \u00e9 desenvolvido Devido \u00e0 granularidade inerente do sistema, os Diagramas de Componentes n\u00e3o precisam ser atualizados com tanta frequ\u00eancia quanto os Diagramas de Classes . Coisas que podem justificar a atualiza\u00e7\u00e3o de um Diagrama de Componentes podem incluir: Exclus\u00e3o ou adi\u00e7\u00e3o de um novo Componente no sistema Altera\u00e7\u00e3o das APIs de intera\u00e7\u00e3o de um Componente do sistema Altera\u00e7\u00e3o dos \"pontos de contato\" imediatos de um Componente do sistema com outros Componentes Como os Diagramas de Componentes se concentram em informar os v\u00e1rios \"pontos de contato\" entre os Componentes, requer algum planejamento antecipado para determinar quais Componentes s\u00e3o necess\u00e1rios e quais mecanismos de intera\u00e7\u00e3o s\u00e3o mais eficazes de acordo com os requisitos do sistema. Essa quantidade de planejamento antecipado deve ser abordada de maneira pragm\u00e1tica - pois o design pode evoluir ao longo do tempo, e isso \u00e9 perfeitamente aceit\u00e1vel, desde que as altera\u00e7\u00f5es sejam influenciadas por requisitos funcionais e requisitos n\u00e3o funcionais.","title":"Quando Criar?"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#exemplos","text":"Aqui est\u00e3o alguns exemplos b\u00e1sicos:","title":"Exemplos"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#versionamento","text":"Como os Diagramas de Componentes mudar\u00e3o periodicamente, \u00e9 recomend\u00e1vel \"publicar\" periodicamente uma imagem do diagrama gerado. A frequ\u00eancia pode variar \u00e0 medida que o envolvimento avan\u00e7a. A abordagem abaixo pode ser usada para auxiliar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: No in\u00edcio do envolvimento, publicar uma vers\u00e3o \"imaginada\" do Diagrama de Componentes fornecer\u00e1 uma vis\u00e3o comum a todos os engenheiros ao trabalharem nas diferentes partes da solu\u00e7\u00e3o. Ao longo do envolvimento, atualize o diagrama publicado periodicamente. Idealmente, sempre que um novo Componente for introduzido no sistema ou sempre que um novo \"ponto de contato\" ocorrer entre Componentes. Dependendo da ferramenta utilizada, o versionamento autom\u00e1tico pode ser realizado sempre que uma atualiza\u00e7\u00e3o no Diagrama for feita. Caso contr\u00e1rio, \u00e9 recomend\u00e1vel capturar vers\u00f5es distintas sempre que houver uma necessidade espec\u00edfica do cliente de ter uma imagem do projeto em um ponto espec\u00edfico no tempo. O requisito fundamental \u00e9 que o diagrama mais recente deve ser publicado e todos devem saber como acess\u00e1-lo \u00e0 medida que a entrega ao cliente se aproxima.","title":"Versionamento"},{"location":"design/diagram-types/DesignDiagramsTemplates/componentDiagrams/#recursos","text":"Wikipedia Visual Paradigm Plugins para o VS Code: PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML Desenhar manualmente","title":"Recursos"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/","text":"Diagramas de Implanta\u00e7\u00e3o Prop\u00f3sito Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Implanta\u00e7\u00e3o como parte de seu envolvimento. A Wikipedia define os Diagramas de Implanta\u00e7\u00e3o UML como: modela a implanta\u00e7\u00e3o f\u00edsica de artefatos em n\u00f3s Os Diagramas de Implanta\u00e7\u00e3o s\u00e3o um tipo de estrutura est\u00e1tica porque se concentram na infraestrutura e hospedagem onde todos os aspectos do sistema residem. Eles n\u00e3o t\u00eam a finalidade de informar sobre o fluxo de dados, as responsabilidades do chamador ou do chamado, os fluxos de solicita\u00e7\u00e3o ou quaisquer outras caracter\u00edsticas relacionadas ao \"comportamento\". Principais Pontos O diagrama de implanta\u00e7\u00e3o deve conter todos os Componentes identificados nos Diagramas de Componentes , mas capturados juntamente com os seguintes elementos: Firewalls VNETs e sub-redes M\u00e1quinas virtuais Servi\u00e7os em nuvem Armazenamento de dados Servidores (Web, proxy) Balanceadores de carga Este diagrama deve informar \u00e0 audi\u00eancia: onde as coisas est\u00e3o hospedadas/em execu\u00e7\u00e3o quais s\u00e3o os limites de rede envolvidos no sistema Quando Criar? Como os Diagramas de Implanta\u00e7\u00e3o representam a arquitetura final de \"hospedagem\", \u00e9 recomend\u00e1vel criar o diagrama \"imaginado final\" desde o in\u00edcio de um envolvimento. Isso permite que a equipe tenha uma ideia compartilhada do que a equipe est\u00e1 trabalhando para alcan\u00e7ar. Tenha em mente que isso pode mudar se algum requisito n\u00e3o funcional n\u00e3o foi considerado no in\u00edcio do envolvimento. Isso \u00e9 aceit\u00e1vel, mas requer a cria\u00e7\u00e3o dos itens de backlog necess\u00e1rios e a atualiza\u00e7\u00e3o do diagrama de implanta\u00e7\u00e3o para capturar essas mudan\u00e7as. Tamb\u00e9m \u00e9 v\u00e1lido criar e manter um Diagrama de Implanta\u00e7\u00e3o que represente o estado \"atual\" do sistema. \u00c0s vezes, pode ser ben\u00e9fico ter um Diagrama de Implanta\u00e7\u00e3o para cada ambiente (Desenvolvimento, QA, Staging, Produ\u00e7\u00e3o, etc...). No entanto, isso aumenta a quantidade de manuten\u00e7\u00e3o necess\u00e1ria e s\u00f3 deve ser realizado se houver diferen\u00e7as substanciais entre os ambientes. O Diagrama de Implanta\u00e7\u00e3o \"atual\" deve ser atualizado quando: Um novo elemento foi introduzido ou removido no sistema (consulte a se\u00e7\u00e3o \"Principais Pontos\" para uma lista de poss\u00edveis elementos) Exemplos Aqui est\u00e3o alguns exemplos b\u00e1sicos: Versionamento Como os Diagramas de Implanta\u00e7\u00e3o mudar\u00e3o periodicamente, \u00e9 recomend\u00e1vel \"publicar\" periodicamente uma imagem do diagrama gerado. A frequ\u00eancia pode variar \u00e0 medida que o envolvimento avan\u00e7a. A abordagem abaixo pode ser usada para auxiliar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: No in\u00edcio do envolvimento, publicar uma vers\u00e3o \"imaginada\" do Diagrama de Componentes fornecer\u00e1 uma vis\u00e3o comum a todos os engenheiros ao trabalharem nas diferentes partes da solu\u00e7\u00e3o. Ao longo do envolvimento, atualize o diagrama \"atual\" (estado representado do \"ramo principal\") periodicamente. Idealmente, sempre que um novo Componente for introduzido no sistema, ou sempre que um novo \"ponto de contato\" ocorrer entre Componentes. Recursos Wikipedia Visual Paradigm PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML Desenhar manualmente","title":"Diagramas de Implanta\u00e7\u00e3o"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#diagramas-de-implantacao","text":"","title":"Diagramas de Implanta\u00e7\u00e3o"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#proposito","text":"Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Implanta\u00e7\u00e3o como parte de seu envolvimento. A Wikipedia define os Diagramas de Implanta\u00e7\u00e3o UML como: modela a implanta\u00e7\u00e3o f\u00edsica de artefatos em n\u00f3s Os Diagramas de Implanta\u00e7\u00e3o s\u00e3o um tipo de estrutura est\u00e1tica porque se concentram na infraestrutura e hospedagem onde todos os aspectos do sistema residem. Eles n\u00e3o t\u00eam a finalidade de informar sobre o fluxo de dados, as responsabilidades do chamador ou do chamado, os fluxos de solicita\u00e7\u00e3o ou quaisquer outras caracter\u00edsticas relacionadas ao \"comportamento\".","title":"Prop\u00f3sito"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#principais-pontos","text":"O diagrama de implanta\u00e7\u00e3o deve conter todos os Componentes identificados nos Diagramas de Componentes , mas capturados juntamente com os seguintes elementos: Firewalls VNETs e sub-redes M\u00e1quinas virtuais Servi\u00e7os em nuvem Armazenamento de dados Servidores (Web, proxy) Balanceadores de carga Este diagrama deve informar \u00e0 audi\u00eancia: onde as coisas est\u00e3o hospedadas/em execu\u00e7\u00e3o quais s\u00e3o os limites de rede envolvidos no sistema","title":"Principais Pontos"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#quando-criar","text":"Como os Diagramas de Implanta\u00e7\u00e3o representam a arquitetura final de \"hospedagem\", \u00e9 recomend\u00e1vel criar o diagrama \"imaginado final\" desde o in\u00edcio de um envolvimento. Isso permite que a equipe tenha uma ideia compartilhada do que a equipe est\u00e1 trabalhando para alcan\u00e7ar. Tenha em mente que isso pode mudar se algum requisito n\u00e3o funcional n\u00e3o foi considerado no in\u00edcio do envolvimento. Isso \u00e9 aceit\u00e1vel, mas requer a cria\u00e7\u00e3o dos itens de backlog necess\u00e1rios e a atualiza\u00e7\u00e3o do diagrama de implanta\u00e7\u00e3o para capturar essas mudan\u00e7as. Tamb\u00e9m \u00e9 v\u00e1lido criar e manter um Diagrama de Implanta\u00e7\u00e3o que represente o estado \"atual\" do sistema. \u00c0s vezes, pode ser ben\u00e9fico ter um Diagrama de Implanta\u00e7\u00e3o para cada ambiente (Desenvolvimento, QA, Staging, Produ\u00e7\u00e3o, etc...). No entanto, isso aumenta a quantidade de manuten\u00e7\u00e3o necess\u00e1ria e s\u00f3 deve ser realizado se houver diferen\u00e7as substanciais entre os ambientes. O Diagrama de Implanta\u00e7\u00e3o \"atual\" deve ser atualizado quando: Um novo elemento foi introduzido ou removido no sistema (consulte a se\u00e7\u00e3o \"Principais Pontos\" para uma lista de poss\u00edveis elementos)","title":"Quando Criar?"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#exemplos","text":"Aqui est\u00e3o alguns exemplos b\u00e1sicos:","title":"Exemplos"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#versionamento","text":"Como os Diagramas de Implanta\u00e7\u00e3o mudar\u00e3o periodicamente, \u00e9 recomend\u00e1vel \"publicar\" periodicamente uma imagem do diagrama gerado. A frequ\u00eancia pode variar \u00e0 medida que o envolvimento avan\u00e7a. A abordagem abaixo pode ser usada para auxiliar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: No in\u00edcio do envolvimento, publicar uma vers\u00e3o \"imaginada\" do Diagrama de Componentes fornecer\u00e1 uma vis\u00e3o comum a todos os engenheiros ao trabalharem nas diferentes partes da solu\u00e7\u00e3o. Ao longo do envolvimento, atualize o diagrama \"atual\" (estado representado do \"ramo principal\") periodicamente. Idealmente, sempre que um novo Componente for introduzido no sistema, ou sempre que um novo \"ponto de contato\" ocorrer entre Componentes.","title":"Versionamento"},{"location":"design/diagram-types/DesignDiagramsTemplates/deploymentDiagrams/#recursos","text":"Wikipedia Visual Paradigm PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML Desenhar manualmente","title":"Recursos"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/","text":"Diagramas de Sequ\u00eancia Prop\u00f3sito Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Sequ\u00eancia como parte de um envolvimento. Quanto ao como , a se\u00e7\u00e3o na parte inferior fornecer\u00e1 ferramentas e complementos para simplificar o m\u00e1ximo poss\u00edvel a gera\u00e7\u00e3o de Diagramas de Sequ\u00eancia por meio do VSCode. A Wikipedia define os Diagramas de Sequ\u00eancia UML como respons\u00e1veis por: representar os objetos envolvidos no cen\u00e1rio e a sequ\u00eancia de mensagens trocadas entre os objetos necess\u00e1rios para realizar a funcionalidade do cen\u00e1rio O que \u00e9 um cen\u00e1rio ? Pode ser: uma persona de usu\u00e1rio real realizando uma a\u00e7\u00e3o um gatilho espec\u00edfico do sistema (com base no tempo, com base em condi\u00e7\u00f5es) que resulta em uma a\u00e7\u00e3o a ser realizada O que \u00e9 uma mensagem nesse contexto? Pode ser: uma solicita\u00e7\u00e3o s\u00edncrona ou ass\u00edncrona uma transfer\u00eancia de qualquer forma de dados entre quaisquer objetos O que \u00e9 um objeto nesse contexto? Pode ser: qualquer persona de usu\u00e1rio espec\u00edfica qualquer servi\u00e7o qualquer armazenamento de dados um sistema (caixa preta composta de servi\u00e7os desconhecidos, armazenamentos de dados ou outros componentes) um subcen\u00e1rio abstrato (para minimizar a alta complexidade de um cen\u00e1rio) Principais Pontos Um Diagrama de Sequ\u00eancia deve: come\u00e7ar com um cen\u00e1rio indicar qual objeto ou \"ator\" iniciou esse cen\u00e1rio ter o cen\u00e1rio indicando claramente qual \u00e9 o estado \"final\", mesmo que n\u00e3o termine necessariamente com o objeto que iniciou o cen\u00e1rio \u00c9 aceit\u00e1vel que um \u00fanico Diagrama de Sequ\u00eancia tenha muitos cen\u00e1rios diferentes se tiverem algum contexto relacionado que justifique que eles sejam agrupados. Outro ponto importante a ter em mente \u00e9 que os objetos envolvidos em um Diagrama de Sequ\u00eancia devem se referir aos Componentes existentes de um Diagrama de Componentes . Existem duas \u00e1reas em que a complexidade pode resultar em um Diagrama de Sequ\u00eancia excessivamente \"lotado\", tornando-o caro de manter. S\u00e3o elas: Grande n\u00famero de objetos/componentes envolvidos em um cen\u00e1rio espec\u00edfico. Captura de todas as poss\u00edveis situa\u00e7\u00f5es de \"falha\" que um cen\u00e1rio pode encontrar. Grande N\u00famero de Objetos Um Diagrama de Sequ\u00eancia normalmente come\u00e7a com uma persona de usu\u00e1rio final realizando uma a\u00e7\u00e3o e, em seguida, mostra todos os v\u00e1rios componentes e transfer\u00eancias de solicita\u00e7\u00f5es/dados envolvidos nesse cen\u00e1rio. No entanto, na maioria das vezes, o fluxo completo de ponta a ponta para esse cen\u00e1rio pode ser muito complexo para ser capturado em um \u00fanico Diagrama de Sequ\u00eancia. Quando esse n\u00edvel de complexidade ocorrer, considere criar Diagramas de Sequ\u00eancia separados para subcen\u00e1rios e us\u00e1-los como objetos em um Diagrama de Sequ\u00eancia espec\u00edfico. Exemplos disso s\u00e3o \"Autentica\u00e7\u00e3o\" ou \"Autoriza\u00e7\u00e3o\". Quase todos os cen\u00e1rios de persona de usu\u00e1rio ter\u00e3o v\u00e1rios objetos/componentes envolvidos em um desses subcen\u00e1rios, mas n\u00e3o \u00e9 necess\u00e1rio inclu\u00ed-los em todos os Diagramas de Sequ\u00eancia quando os subcen\u00e1rios t\u00eam um Diagrama de Sequ\u00eancia aut\u00f4nomo criado. Certifique-se de que, ao usar essa abordagem de subcen\u00e1rios, eles tenham um nome que encapsule o que o subcen\u00e1rio est\u00e1 realizando e determine o \"ator\" apropriado e a \"a\u00e7\u00e3o\" que inicia o subcen\u00e1rio. A combina\u00e7\u00e3o e narra\u00e7\u00e3o de hist\u00f3rias entre esses Diagramas de Sequ\u00eancia de usu\u00e1rios finais e Diagramas de Sequ\u00eancia de subcen\u00e1rios podem melhorar significativamente a legibilidade, distribuindo o n\u00edvel de complexidade em v\u00e1rios diagramas e aproveitando a reutiliza\u00e7\u00e3o de subcen\u00e1rios comuns. Lidando com um Grande N\u00famero de Situa\u00e7\u00f5es de Falha Outro fator de alta complexidade s\u00e3o as poss\u00edveis situa\u00e7\u00f5es de falha que um cen\u00e1rio espec\u00edfico pode encontrar. Cada objeto/componente envolvido em um cen\u00e1rio pode ter v\u00e1rias situa\u00e7\u00f5es de \"falha\" diferentes, o que pode resultar em um Diagrama de Sequ\u00eancia muito confuso. Para tornar realista a gest\u00e3o de todas essas situa\u00e7\u00f5es, tente: Identificar as situa\u00e7\u00f5es de \"falha\" mais comuns que um \"ator\" pode enfrentar como parte de um cen\u00e1rio. Capturar essas em um Diagrama de Sequ\u00eancia e documentar os outros cen\u00e1rios sem a necessidade de gerenci\u00e1-los em um diagrama alcan\u00e7ar\u00e1 o objetivo de conscientiza\u00e7\u00e3o. \"Agrupe\" e \"abstraia\" todas as in\u00fameras situa\u00e7\u00f5es de falha que podem ocorrer mais abaixo no sistema e represente como o objeto/componente mais pr\u00f3ximo do \"ator\" lida com todas essas falhas e informa o \"ator\" sobre elas. Quando Criar? Como os Diagramas de Sequ\u00eancia representam uma vis\u00e3o detalhada do comportamento do sistema, delineando as v\u00e1rias mensagens/solicita\u00e7\u00f5es enviadas dentro do sistema, \u00e9 recomend\u00e1vel come\u00e7ar a criar esses diagramas desde o in\u00edcio de um envolvimento. Atualize-os \u00e0 medida que as v\u00e1rias comunica\u00e7\u00f5es entre Componentes s\u00e3o introduzidas no sistema. Os riscos de n\u00e3o criar Diagramas de Sequ\u00eancia no in\u00edcio s\u00e3o: a equipe n\u00e3o criar\u00e1 nenhum porque ser\u00e1 percebido mais como uma \"tarefa\" do que como um valor agregado a equipe ser\u00e1 incapaz de obter insights a tempo, visualizando as v\u00e1rias mensagens e solicita\u00e7\u00f5es enviadas entre Componentes, a fim de realizar qualquer refatora\u00e7\u00e3o potencial a equipe ou outras partes interessadas necess\u00e1rias n\u00e3o ter\u00e3o uma compreens\u00e3o completa do fluxo de solicita\u00e7\u00e3o/mensagem/dados dentro do sistema Devido \u00e0 granularidade inerente do sistema, os Diagramas de Sequ\u00eancia n\u00e3o precisar\u00e3o ser atualizados com a mesma frequ\u00eancia que os Diagramas de Classes , mas podem exigir mais manuten\u00e7\u00e3o do que os Diagramas de Componentes . Coisas que podem justificar a atualiza\u00e7\u00e3o de um Diagrama de Sequ\u00eancia incluem: Uma nova solicita\u00e7\u00e3o/mensagem/dado sendo enviado entre Componentes envolvidos em um cen\u00e1rio Uma altera\u00e7\u00e3o em um ou v\u00e1rios Componentes envolvidos em um Diagrama de Sequ\u00eancia, como dividir um componente em v\u00e1rios ou consolidar muitos Componentes em um \u00fanico - A introdu\u00e7\u00e3o de um novo Caso de Uso ou cen\u00e1rio que o sistema agora suporta Exemplos Cen\u00e1rio de Coloca\u00e7\u00e3o de Pedido: Uma persona de usu\u00e1rio \"Membro\" realiza um pedido, que pode ser composto por muitos \"itens de pedido\" A persona de usu\u00e1rio \"Membro\" pode ser do tipo \"VIP\" ou \"Comum\" Dependendo do \"tipo de membro\", cada \"item de pedido\" ser\u00e1 enviado por meio de um Correio ou por Correio Se a persona de usu\u00e1rio \"Membro\" selecionou a op\u00e7\u00e3o de ser informada assim que todos os \"itens de pedido\" forem enviados, ent\u00e3o o sistema enviar\u00e1 uma notifica\u00e7\u00e3o Cen\u00e1rio de Autentica\u00e7\u00e3o de Usu\u00e1rio no Facebook: Uma persona de usu\u00e1rio usa um Navegador Web para interagir com um \"aplicativo\", que tenta acessar um \"recurso do Facebook\" espec\u00edfico O \"Servidor de Autoriza\u00e7\u00e3o do Facebook\" \u00e9 envolvido para fazer com que o usu\u00e1rio se autentique no Facebook A persona de usu\u00e1rio ent\u00e3o recebe um \"formul\u00e1rio de permiss\u00e3o\" para autorizar o \"aplicativo\" a acessar o \"recurso do Facebook\" Se o \"aplicativo\" n\u00e3o for autorizado, ele retorna um erro Se o \"aplicativo\" for autorizado, ele obt\u00e9m um \"token de acesso\" do \"Servidor de Autoriza\u00e7\u00e3o do Facebook\" e o usa para acessar com seguran\u00e7a o \"recurso do Facebook\" do \"Servidor de Conte\u00fado do Facebook\". Uma vez obtido o conte\u00fado, o \"aplicativo\" o envia de volta para o Navegador Web Versionamento Como os Diagramas de Sequ\u00eancia s\u00e3o mais caros de manter, \u00e9 recomend\u00e1vel \"publicar\" uma imagem do diagrama gerado com frequ\u00eancia, sempre que um novo \"caso de uso\" ou \"cen\u00e1rio\" for identificado como parte do comportamento ou requisitos do sistema. O elemento mais importante desses diagramas \u00e9 garantir que a vers\u00e3o mais recente seja precisa . Se o diagrama mais recente mostrar uma sequ\u00eancia de comunica\u00e7\u00e3o entre componentes que n\u00e3o s\u00e3o mais v\u00e1lidos, o diagrama causar\u00e1 mais preju\u00edzo do que benef\u00edcio. A abordagem abaixo pode ser usada para ajudar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: No in\u00edcio do envolvimento, a publica\u00e7\u00e3o de uma vers\u00e3o \"imaginada\" do Diagrama de Sequ\u00eancia fornecer\u00e1 uma vis\u00e3o comum a todos os engenheiros ao trabalharem nas diferentes partes da solu\u00e7\u00e3o (focando no fluxo de dados e fluxo de solicita\u00e7\u00e3o) Ao longo do envolvimento, atualize o diagrama publicado periodicamente. Idealmente, sempre que um novo \"caso de uso\" ou \"cen\u00e1rio\" for identificado, ou quando um Componente for introduzido ou removido no sistema, ou quando uma mudan\u00e7a no fluxo de dados/solicita\u00e7\u00e3o for feita no sistema Dependendo da ferramenta utilizada, o versionamento autom\u00e1tico pode ser realizado sempre que uma atualiza\u00e7\u00e3o no Diagrama for feita. Caso contr\u00e1rio, \u00e9 recomend\u00e1vel capturar vers\u00f5es distintas sempre que houver uma necessidade espec\u00edfica do cliente de ter um instant\u00e2neo do projeto em um determinado momento. O requisito fundamental \u00e9 que o diagrama mais recente seja publicado e todos saibam como acess\u00e1-lo quando a entrega ao cliente se aproximar. Recursos Wikipedia Visual Paradigm Complementos para o VS Code: PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML Desenho manual","title":"Diagramas de Sequ\u00eancia"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#diagramas-de-sequencia","text":"","title":"Diagramas de Sequ\u00eancia"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#proposito","text":"Este documento tem como objetivo fornecer uma compreens\u00e3o b\u00e1sica do que s\u00e3o, por que s\u00e3o usados e como incorporar Diagramas de Sequ\u00eancia como parte de um envolvimento. Quanto ao como , a se\u00e7\u00e3o na parte inferior fornecer\u00e1 ferramentas e complementos para simplificar o m\u00e1ximo poss\u00edvel a gera\u00e7\u00e3o de Diagramas de Sequ\u00eancia por meio do VSCode. A Wikipedia define os Diagramas de Sequ\u00eancia UML como respons\u00e1veis por: representar os objetos envolvidos no cen\u00e1rio e a sequ\u00eancia de mensagens trocadas entre os objetos necess\u00e1rios para realizar a funcionalidade do cen\u00e1rio O que \u00e9 um cen\u00e1rio ? Pode ser: uma persona de usu\u00e1rio real realizando uma a\u00e7\u00e3o um gatilho espec\u00edfico do sistema (com base no tempo, com base em condi\u00e7\u00f5es) que resulta em uma a\u00e7\u00e3o a ser realizada O que \u00e9 uma mensagem nesse contexto? Pode ser: uma solicita\u00e7\u00e3o s\u00edncrona ou ass\u00edncrona uma transfer\u00eancia de qualquer forma de dados entre quaisquer objetos O que \u00e9 um objeto nesse contexto? Pode ser: qualquer persona de usu\u00e1rio espec\u00edfica qualquer servi\u00e7o qualquer armazenamento de dados um sistema (caixa preta composta de servi\u00e7os desconhecidos, armazenamentos de dados ou outros componentes) um subcen\u00e1rio abstrato (para minimizar a alta complexidade de um cen\u00e1rio)","title":"Prop\u00f3sito"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#principais-pontos","text":"Um Diagrama de Sequ\u00eancia deve: come\u00e7ar com um cen\u00e1rio indicar qual objeto ou \"ator\" iniciou esse cen\u00e1rio ter o cen\u00e1rio indicando claramente qual \u00e9 o estado \"final\", mesmo que n\u00e3o termine necessariamente com o objeto que iniciou o cen\u00e1rio \u00c9 aceit\u00e1vel que um \u00fanico Diagrama de Sequ\u00eancia tenha muitos cen\u00e1rios diferentes se tiverem algum contexto relacionado que justifique que eles sejam agrupados. Outro ponto importante a ter em mente \u00e9 que os objetos envolvidos em um Diagrama de Sequ\u00eancia devem se referir aos Componentes existentes de um Diagrama de Componentes . Existem duas \u00e1reas em que a complexidade pode resultar em um Diagrama de Sequ\u00eancia excessivamente \"lotado\", tornando-o caro de manter. S\u00e3o elas: Grande n\u00famero de objetos/componentes envolvidos em um cen\u00e1rio espec\u00edfico. Captura de todas as poss\u00edveis situa\u00e7\u00f5es de \"falha\" que um cen\u00e1rio pode encontrar.","title":"Principais Pontos"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#grande-numero-de-objetos","text":"Um Diagrama de Sequ\u00eancia normalmente come\u00e7a com uma persona de usu\u00e1rio final realizando uma a\u00e7\u00e3o e, em seguida, mostra todos os v\u00e1rios componentes e transfer\u00eancias de solicita\u00e7\u00f5es/dados envolvidos nesse cen\u00e1rio. No entanto, na maioria das vezes, o fluxo completo de ponta a ponta para esse cen\u00e1rio pode ser muito complexo para ser capturado em um \u00fanico Diagrama de Sequ\u00eancia. Quando esse n\u00edvel de complexidade ocorrer, considere criar Diagramas de Sequ\u00eancia separados para subcen\u00e1rios e us\u00e1-los como objetos em um Diagrama de Sequ\u00eancia espec\u00edfico. Exemplos disso s\u00e3o \"Autentica\u00e7\u00e3o\" ou \"Autoriza\u00e7\u00e3o\". Quase todos os cen\u00e1rios de persona de usu\u00e1rio ter\u00e3o v\u00e1rios objetos/componentes envolvidos em um desses subcen\u00e1rios, mas n\u00e3o \u00e9 necess\u00e1rio inclu\u00ed-los em todos os Diagramas de Sequ\u00eancia quando os subcen\u00e1rios t\u00eam um Diagrama de Sequ\u00eancia aut\u00f4nomo criado. Certifique-se de que, ao usar essa abordagem de subcen\u00e1rios, eles tenham um nome que encapsule o que o subcen\u00e1rio est\u00e1 realizando e determine o \"ator\" apropriado e a \"a\u00e7\u00e3o\" que inicia o subcen\u00e1rio. A combina\u00e7\u00e3o e narra\u00e7\u00e3o de hist\u00f3rias entre esses Diagramas de Sequ\u00eancia de usu\u00e1rios finais e Diagramas de Sequ\u00eancia de subcen\u00e1rios podem melhorar significativamente a legibilidade, distribuindo o n\u00edvel de complexidade em v\u00e1rios diagramas e aproveitando a reutiliza\u00e7\u00e3o de subcen\u00e1rios comuns.","title":"Grande N\u00famero de Objetos"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#lidando-com-um-grande-numero-de-situacoes-de-falha","text":"Outro fator de alta complexidade s\u00e3o as poss\u00edveis situa\u00e7\u00f5es de falha que um cen\u00e1rio espec\u00edfico pode encontrar. Cada objeto/componente envolvido em um cen\u00e1rio pode ter v\u00e1rias situa\u00e7\u00f5es de \"falha\" diferentes, o que pode resultar em um Diagrama de Sequ\u00eancia muito confuso. Para tornar realista a gest\u00e3o de todas essas situa\u00e7\u00f5es, tente: Identificar as situa\u00e7\u00f5es de \"falha\" mais comuns que um \"ator\" pode enfrentar como parte de um cen\u00e1rio. Capturar essas em um Diagrama de Sequ\u00eancia e documentar os outros cen\u00e1rios sem a necessidade de gerenci\u00e1-los em um diagrama alcan\u00e7ar\u00e1 o objetivo de conscientiza\u00e7\u00e3o. \"Agrupe\" e \"abstraia\" todas as in\u00fameras situa\u00e7\u00f5es de falha que podem ocorrer mais abaixo no sistema e represente como o objeto/componente mais pr\u00f3ximo do \"ator\" lida com todas essas falhas e informa o \"ator\" sobre elas.","title":"Lidando com um Grande N\u00famero de Situa\u00e7\u00f5es de Falha"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#quando-criar","text":"Como os Diagramas de Sequ\u00eancia representam uma vis\u00e3o detalhada do comportamento do sistema, delineando as v\u00e1rias mensagens/solicita\u00e7\u00f5es enviadas dentro do sistema, \u00e9 recomend\u00e1vel come\u00e7ar a criar esses diagramas desde o in\u00edcio de um envolvimento. Atualize-os \u00e0 medida que as v\u00e1rias comunica\u00e7\u00f5es entre Componentes s\u00e3o introduzidas no sistema. Os riscos de n\u00e3o criar Diagramas de Sequ\u00eancia no in\u00edcio s\u00e3o: a equipe n\u00e3o criar\u00e1 nenhum porque ser\u00e1 percebido mais como uma \"tarefa\" do que como um valor agregado a equipe ser\u00e1 incapaz de obter insights a tempo, visualizando as v\u00e1rias mensagens e solicita\u00e7\u00f5es enviadas entre Componentes, a fim de realizar qualquer refatora\u00e7\u00e3o potencial a equipe ou outras partes interessadas necess\u00e1rias n\u00e3o ter\u00e3o uma compreens\u00e3o completa do fluxo de solicita\u00e7\u00e3o/mensagem/dados dentro do sistema Devido \u00e0 granularidade inerente do sistema, os Diagramas de Sequ\u00eancia n\u00e3o precisar\u00e3o ser atualizados com a mesma frequ\u00eancia que os Diagramas de Classes , mas podem exigir mais manuten\u00e7\u00e3o do que os Diagramas de Componentes . Coisas que podem justificar a atualiza\u00e7\u00e3o de um Diagrama de Sequ\u00eancia incluem: Uma nova solicita\u00e7\u00e3o/mensagem/dado sendo enviado entre Componentes envolvidos em um cen\u00e1rio Uma altera\u00e7\u00e3o em um ou v\u00e1rios Componentes envolvidos em um Diagrama de Sequ\u00eancia, como dividir um componente em v\u00e1rios ou consolidar muitos Componentes em um \u00fanico - A introdu\u00e7\u00e3o de um novo Caso de Uso ou cen\u00e1rio que o sistema agora suporta","title":"Quando Criar?"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#exemplos","text":"Cen\u00e1rio de Coloca\u00e7\u00e3o de Pedido: Uma persona de usu\u00e1rio \"Membro\" realiza um pedido, que pode ser composto por muitos \"itens de pedido\" A persona de usu\u00e1rio \"Membro\" pode ser do tipo \"VIP\" ou \"Comum\" Dependendo do \"tipo de membro\", cada \"item de pedido\" ser\u00e1 enviado por meio de um Correio ou por Correio Se a persona de usu\u00e1rio \"Membro\" selecionou a op\u00e7\u00e3o de ser informada assim que todos os \"itens de pedido\" forem enviados, ent\u00e3o o sistema enviar\u00e1 uma notifica\u00e7\u00e3o Cen\u00e1rio de Autentica\u00e7\u00e3o de Usu\u00e1rio no Facebook: Uma persona de usu\u00e1rio usa um Navegador Web para interagir com um \"aplicativo\", que tenta acessar um \"recurso do Facebook\" espec\u00edfico O \"Servidor de Autoriza\u00e7\u00e3o do Facebook\" \u00e9 envolvido para fazer com que o usu\u00e1rio se autentique no Facebook A persona de usu\u00e1rio ent\u00e3o recebe um \"formul\u00e1rio de permiss\u00e3o\" para autorizar o \"aplicativo\" a acessar o \"recurso do Facebook\" Se o \"aplicativo\" n\u00e3o for autorizado, ele retorna um erro Se o \"aplicativo\" for autorizado, ele obt\u00e9m um \"token de acesso\" do \"Servidor de Autoriza\u00e7\u00e3o do Facebook\" e o usa para acessar com seguran\u00e7a o \"recurso do Facebook\" do \"Servidor de Conte\u00fado do Facebook\". Uma vez obtido o conte\u00fado, o \"aplicativo\" o envia de volta para o Navegador Web","title":"Exemplos"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#versionamento","text":"Como os Diagramas de Sequ\u00eancia s\u00e3o mais caros de manter, \u00e9 recomend\u00e1vel \"publicar\" uma imagem do diagrama gerado com frequ\u00eancia, sempre que um novo \"caso de uso\" ou \"cen\u00e1rio\" for identificado como parte do comportamento ou requisitos do sistema. O elemento mais importante desses diagramas \u00e9 garantir que a vers\u00e3o mais recente seja precisa . Se o diagrama mais recente mostrar uma sequ\u00eancia de comunica\u00e7\u00e3o entre componentes que n\u00e3o s\u00e3o mais v\u00e1lidos, o diagrama causar\u00e1 mais preju\u00edzo do que benef\u00edcio. A abordagem abaixo pode ser usada para ajudar a equipe a determinar com que frequ\u00eancia atualizar a vers\u00e3o publicada do diagrama: No in\u00edcio do envolvimento, a publica\u00e7\u00e3o de uma vers\u00e3o \"imaginada\" do Diagrama de Sequ\u00eancia fornecer\u00e1 uma vis\u00e3o comum a todos os engenheiros ao trabalharem nas diferentes partes da solu\u00e7\u00e3o (focando no fluxo de dados e fluxo de solicita\u00e7\u00e3o) Ao longo do envolvimento, atualize o diagrama publicado periodicamente. Idealmente, sempre que um novo \"caso de uso\" ou \"cen\u00e1rio\" for identificado, ou quando um Componente for introduzido ou removido no sistema, ou quando uma mudan\u00e7a no fluxo de dados/solicita\u00e7\u00e3o for feita no sistema Dependendo da ferramenta utilizada, o versionamento autom\u00e1tico pode ser realizado sempre que uma atualiza\u00e7\u00e3o no Diagrama for feita. Caso contr\u00e1rio, \u00e9 recomend\u00e1vel capturar vers\u00f5es distintas sempre que houver uma necessidade espec\u00edfica do cliente de ter um instant\u00e2neo do projeto em um determinado momento. O requisito fundamental \u00e9 que o diagrama mais recente seja publicado e todos saibam como acess\u00e1-lo quando a entrega ao cliente se aproximar.","title":"Versionamento"},{"location":"design/diagram-types/DesignDiagramsTemplates/sequenceDiagrams/#recursos","text":"Wikipedia Visual Paradigm Complementos para o VS Code: PlantUML - requer um gerador de c\u00f3digo para a sintaxe PlantUML para gerar diagramas Sintaxe PlantUML Desenho manual","title":"Recursos"},{"location":"design/sustainability/readme/","text":"Engenharia de Software Sustent\u00e1vel As escolhas feitas ao longo do processo de engenharia, relacionadas a servi\u00e7os em nuvem, design de arquitetura de software e automa\u00e7\u00e3o, podem ter um grande impacto na pegada de carbono de uma solu\u00e7\u00e3o. Algumas escolhas s\u00e3o sempre ben\u00e9ficas, como desligar recursos n\u00e3o utilizados. Outras escolhas exigem uma compreens\u00e3o mais detalhada do caso de neg\u00f3cios em quest\u00e3o e seu potencial impacto ambiental. Objetivo Um dos objetivos desta se\u00e7\u00e3o \u00e9 fornecer orienta\u00e7\u00f5es concretas sobre a\u00e7\u00f5es sustent\u00e1veis que voc\u00ea pode aplicar em determinadas situa\u00e7\u00f5es e as ferramentas para implementar essas recomenda\u00e7\u00f5es. Outro objetivo \u00e9 destacar os muitos recursos dispon\u00edveis para aprender sobre o amplo dom\u00ednio do software sustent\u00e1vel. Checklist de Engenharia Sustent\u00e1vel Esta lista de verifica\u00e7\u00e3o deve ser usada para identificar rapidamente cen\u00e1rios nos quais a\u00e7\u00f5es sustent\u00e1veis comuns s\u00e3o aplic\u00e1veis. Marque a caixa se o cen\u00e1rio se aplicar ao seu projeto e, em seguida, siga as a\u00e7\u00f5es e ferramentas que podem ser usadas para construir um software mais sustent\u00e1vel para esses casos. Se houver nuances importantes a serem consideradas, elas ser\u00e3o mencionadas na se\u00e7\u00e3o 'Observa\u00e7\u00f5es'. Para facilitar a leitura, algumas considera\u00e7\u00f5es est\u00e3o em branco, indicando que a a\u00e7\u00e3o se aplica \u00e0 primeira considera\u00e7\u00e3o acima dela. \u2705 Considera\u00e7\u00e3o A\u00e7\u00e3o Princ\u00edpio Ferramentas Observa\u00e7\u00f5es Para qualquer software/servi\u00e7os em execu\u00e7\u00e3o Desligue recursos n\u00e3o utilizados. Consumo de Eletricidade Identificar Recursos N\u00e3o Associados Redimensione m\u00e1quinas f\u00edsicas ou virtuais para melhorar a utiliza\u00e7\u00e3o. Proporcionalidade de Energia Recomenda\u00e7\u00f5es de Custo do Azure Advisor Compreendendo Recomenda\u00e7\u00f5es do Advisor Para VMs de desenvolvimento e teste Configure as VMs para desligar fora do hor\u00e1rio de expediente. Consumo de Eletricidade Iniciar/Desligar VMs durante o hor\u00e1rio de expediente Para VMs com volumes anexados Limite a quantidade de capacidade de armazenamento anexada ao que voc\u00ea espera usar e expanda conforme necess\u00e1rio. Consumo de Eletricidade Expandindo o armazenamento de VMs ativas Compreens\u00e3o do custo energ\u00e9tico do armazenamento Para sistemas que utilizam armazenamento de objetos (Azure Blob Storage, AWS S3, GCP Cloud Storage, etc) Comprima dados acessados \u200b\u200braramente. Consumo de Eletricidade , Carbono Incorporado Comprimir e extrair arquivos em .NET Compreendendo o custo energ\u00e9tico do armazenamento Exclua dados quando n\u00e3o forem mais necess\u00e1rios. Consumo de Eletricidade Configurar uma pol\u00edtica de gerenciamento de ciclo de vida Compreendendo o custo energ\u00e9tico do armazenamento Para sistemas em execu\u00e7\u00e3o em data centers locais Migrar para um provedor de nuvem em escala hiper. Carbono Incorporado , Consumo de Eletricidade Abordagens de Ado\u00e7\u00e3o em Nuvem Benef\u00edcios ambientais da computa\u00e7\u00e3o em nuvem Para sistemas migrando para um provedor de nuvem em escala hiper Considere enviar fisicamente dados para o provedor. Rede Azure Data Box Compreendendo as compensa\u00e7\u00f5es do envio de dados Para cargas de trabalho de tempo flex\u00edvel (https://docs.microsoft.com/en-us/azure/architecture/best-practices/background-jobs) Utilize \"Spot VMs\" para computa\u00e7\u00e3o. Moldagem de Demanda Como usar Spot VMs Para servi\u00e7os com padr\u00f5es de utiliza\u00e7\u00e3o variados Configure o dimensionamento autom\u00e1tico. [Proporcionalidade de Energia](./sustainable-engineering-principles.md#energy-pro portionality) | Documenta\u00e7\u00e3o sobre Dimensionamento Autom\u00e1tico | | | | | Use fun\u00e7\u00f5es sem servidor. | Proporcionalidade de Energia | Design de Arquitetura sem Servidor | | | | Para servi\u00e7os com usu\u00e1rios geograficamente localizados (por exemplo, aplicativos internos para funcion\u00e1rios) | Selecione uma regi\u00e3o de data center fisicamente pr\u00f3xima a eles. | Rede | Produtos Azure dispon\u00edveis por regi\u00e3o | | | | | Considere o uso de dispositivos de borda para reduzir a transfer\u00eancia excessiva de dados. | Rede | Azure Stack Edge | Compreendendo as compensa\u00e7\u00f5es de dispositivos de borda | | | Para sistemas que enviam dados pela rede | Use pol\u00edticas de cache para manter os dados na m\u00e1quina local. | Rede | APIs de Cache HTTP , Gerenciamento de Cache em .NET | Compreendendo as compensa\u00e7\u00f5es do cache | | | | Considere o cache de dados pr\u00f3ximo aos usu\u00e1rios finais com uma CDN . | Rede | Benef\u00edcios de uma CDN | Compreendendo as compensa\u00e7\u00f5es de CDN | | | | Envie apenas os dados que ser\u00e3o usados. | Rede | | | | | | Comprima dados para reduzir o tamanho. | Rede | Comprimir e extrair arquivos em .NET | | | | Ao projetar para o usu\u00e1rio final | Considere fornecer aos usu\u00e1rios visibilidade e controle sobre seu consumo de energia. | Consumo de Eletricidade Moldagem de Demanda | Design para o modo eco | | | | | Projete e teste sua aplica\u00e7\u00e3o para ser compat\u00edvel com uma ampla variedade de dispositivos, especialmente dispositivos mais antigos. | Carbono Incorporado | Extens\u00e3o da vida \u00fatil do dispositivo Testes de Compatibilidade | | | | Ao selecionar uma linguagem de programa\u00e7\u00e3o | Considere a efici\u00eancia energ\u00e9tica das linguagens. | Consumo de Eletricidade | Racioc\u00ednio sobre o consumo de energia de linguagens de programa\u00e7\u00e3o , Efici\u00eancia Energ\u00e9tica de Linguagens de Programa\u00e7\u00e3o (PDF) | Tomando decis\u00f5es informadas sobre linguagens de programa\u00e7\u00e3o | Recursos Princ\u00edpios de Engenharia de Software Verde Funda\u00e7\u00e3o de Software Verde Microsoft Cloud para Sustentabilidade M\u00f3dulo de Aprendizado: Engenharia de Software Sustent\u00e1vel Ferramentas SDK Consciente de Carbono \"Lista Incr\u00edvel\" de Software Verde Impacto de Emiss\u00f5es API de Intensidade de Carbono Azure GreenAI Projetos Sustentabilidade por meio de SpotVMs","title":"Engenharia de Software Sustent\u00e1vel"},{"location":"design/sustainability/readme/#engenharia-de-software-sustentavel","text":"As escolhas feitas ao longo do processo de engenharia, relacionadas a servi\u00e7os em nuvem, design de arquitetura de software e automa\u00e7\u00e3o, podem ter um grande impacto na pegada de carbono de uma solu\u00e7\u00e3o. Algumas escolhas s\u00e3o sempre ben\u00e9ficas, como desligar recursos n\u00e3o utilizados. Outras escolhas exigem uma compreens\u00e3o mais detalhada do caso de neg\u00f3cios em quest\u00e3o e seu potencial impacto ambiental.","title":"Engenharia de Software Sustent\u00e1vel"},{"location":"design/sustainability/readme/#objetivo","text":"Um dos objetivos desta se\u00e7\u00e3o \u00e9 fornecer orienta\u00e7\u00f5es concretas sobre a\u00e7\u00f5es sustent\u00e1veis que voc\u00ea pode aplicar em determinadas situa\u00e7\u00f5es e as ferramentas para implementar essas recomenda\u00e7\u00f5es. Outro objetivo \u00e9 destacar os muitos recursos dispon\u00edveis para aprender sobre o amplo dom\u00ednio do software sustent\u00e1vel.","title":"Objetivo"},{"location":"design/sustainability/readme/#checklist-de-engenharia-sustentavel","text":"Esta lista de verifica\u00e7\u00e3o deve ser usada para identificar rapidamente cen\u00e1rios nos quais a\u00e7\u00f5es sustent\u00e1veis comuns s\u00e3o aplic\u00e1veis. Marque a caixa se o cen\u00e1rio se aplicar ao seu projeto e, em seguida, siga as a\u00e7\u00f5es e ferramentas que podem ser usadas para construir um software mais sustent\u00e1vel para esses casos. Se houver nuances importantes a serem consideradas, elas ser\u00e3o mencionadas na se\u00e7\u00e3o 'Observa\u00e7\u00f5es'. Para facilitar a leitura, algumas considera\u00e7\u00f5es est\u00e3o em branco, indicando que a a\u00e7\u00e3o se aplica \u00e0 primeira considera\u00e7\u00e3o acima dela. \u2705 Considera\u00e7\u00e3o A\u00e7\u00e3o Princ\u00edpio Ferramentas Observa\u00e7\u00f5es Para qualquer software/servi\u00e7os em execu\u00e7\u00e3o Desligue recursos n\u00e3o utilizados. Consumo de Eletricidade Identificar Recursos N\u00e3o Associados Redimensione m\u00e1quinas f\u00edsicas ou virtuais para melhorar a utiliza\u00e7\u00e3o. Proporcionalidade de Energia Recomenda\u00e7\u00f5es de Custo do Azure Advisor Compreendendo Recomenda\u00e7\u00f5es do Advisor Para VMs de desenvolvimento e teste Configure as VMs para desligar fora do hor\u00e1rio de expediente. Consumo de Eletricidade Iniciar/Desligar VMs durante o hor\u00e1rio de expediente Para VMs com volumes anexados Limite a quantidade de capacidade de armazenamento anexada ao que voc\u00ea espera usar e expanda conforme necess\u00e1rio. Consumo de Eletricidade Expandindo o armazenamento de VMs ativas Compreens\u00e3o do custo energ\u00e9tico do armazenamento Para sistemas que utilizam armazenamento de objetos (Azure Blob Storage, AWS S3, GCP Cloud Storage, etc) Comprima dados acessados \u200b\u200braramente. Consumo de Eletricidade , Carbono Incorporado Comprimir e extrair arquivos em .NET Compreendendo o custo energ\u00e9tico do armazenamento Exclua dados quando n\u00e3o forem mais necess\u00e1rios. Consumo de Eletricidade Configurar uma pol\u00edtica de gerenciamento de ciclo de vida Compreendendo o custo energ\u00e9tico do armazenamento Para sistemas em execu\u00e7\u00e3o em data centers locais Migrar para um provedor de nuvem em escala hiper. Carbono Incorporado , Consumo de Eletricidade Abordagens de Ado\u00e7\u00e3o em Nuvem Benef\u00edcios ambientais da computa\u00e7\u00e3o em nuvem Para sistemas migrando para um provedor de nuvem em escala hiper Considere enviar fisicamente dados para o provedor. Rede Azure Data Box Compreendendo as compensa\u00e7\u00f5es do envio de dados Para cargas de trabalho de tempo flex\u00edvel (https://docs.microsoft.com/en-us/azure/architecture/best-practices/background-jobs) Utilize \"Spot VMs\" para computa\u00e7\u00e3o. Moldagem de Demanda Como usar Spot VMs Para servi\u00e7os com padr\u00f5es de utiliza\u00e7\u00e3o variados Configure o dimensionamento autom\u00e1tico. [Proporcionalidade de Energia](./sustainable-engineering-principles.md#energy-pro portionality) | Documenta\u00e7\u00e3o sobre Dimensionamento Autom\u00e1tico | | | | | Use fun\u00e7\u00f5es sem servidor. | Proporcionalidade de Energia | Design de Arquitetura sem Servidor | | | | Para servi\u00e7os com usu\u00e1rios geograficamente localizados (por exemplo, aplicativos internos para funcion\u00e1rios) | Selecione uma regi\u00e3o de data center fisicamente pr\u00f3xima a eles. | Rede | Produtos Azure dispon\u00edveis por regi\u00e3o | | | | | Considere o uso de dispositivos de borda para reduzir a transfer\u00eancia excessiva de dados. | Rede | Azure Stack Edge | Compreendendo as compensa\u00e7\u00f5es de dispositivos de borda | | | Para sistemas que enviam dados pela rede | Use pol\u00edticas de cache para manter os dados na m\u00e1quina local. | Rede | APIs de Cache HTTP , Gerenciamento de Cache em .NET | Compreendendo as compensa\u00e7\u00f5es do cache | | | | Considere o cache de dados pr\u00f3ximo aos usu\u00e1rios finais com uma CDN . | Rede | Benef\u00edcios de uma CDN | Compreendendo as compensa\u00e7\u00f5es de CDN | | | | Envie apenas os dados que ser\u00e3o usados. | Rede | | | | | | Comprima dados para reduzir o tamanho. | Rede | Comprimir e extrair arquivos em .NET | | | | Ao projetar para o usu\u00e1rio final | Considere fornecer aos usu\u00e1rios visibilidade e controle sobre seu consumo de energia. | Consumo de Eletricidade Moldagem de Demanda | Design para o modo eco | | | | | Projete e teste sua aplica\u00e7\u00e3o para ser compat\u00edvel com uma ampla variedade de dispositivos, especialmente dispositivos mais antigos. | Carbono Incorporado | Extens\u00e3o da vida \u00fatil do dispositivo Testes de Compatibilidade | | | | Ao selecionar uma linguagem de programa\u00e7\u00e3o | Considere a efici\u00eancia energ\u00e9tica das linguagens. | Consumo de Eletricidade | Racioc\u00ednio sobre o consumo de energia de linguagens de programa\u00e7\u00e3o , Efici\u00eancia Energ\u00e9tica de Linguagens de Programa\u00e7\u00e3o (PDF) | Tomando decis\u00f5es informadas sobre linguagens de programa\u00e7\u00e3o |","title":"Checklist de Engenharia Sustent\u00e1vel"},{"location":"design/sustainability/readme/#recursos","text":"Princ\u00edpios de Engenharia de Software Verde Funda\u00e7\u00e3o de Software Verde Microsoft Cloud para Sustentabilidade M\u00f3dulo de Aprendizado: Engenharia de Software Sustent\u00e1vel","title":"Recursos"},{"location":"design/sustainability/readme/#ferramentas","text":"SDK Consciente de Carbono \"Lista Incr\u00edvel\" de Software Verde Impacto de Emiss\u00f5es API de Intensidade de Carbono Azure GreenAI","title":"Ferramentas"},{"location":"design/sustainability/readme/#projetos","text":"Sustentabilidade por meio de SpotVMs","title":"Projetos"},{"location":"design/sustainability/sustainable-action-disclaimers/","text":"Avisos Os seguintes avisos fornecem mais detalhes sobre como considerar o impacto de a\u00e7\u00f5es espec\u00edficas recomendadas pelo Checklist de Engenharia Sustent\u00e1vel . A\u00c7\u00c3O: Redimensionar m\u00e1quinas f\u00edsicas ou virtuais para melhorar a utiliza\u00e7\u00e3o As recomenda\u00e7\u00f5es de ferramentas de economia de custos geralmente est\u00e3o alinhadas com a redu\u00e7\u00e3o de carbono, mas, como a sustentabilidade n\u00e3o \u00e9 o objetivo dessas ferramentas, economias de carbono n\u00e3o s\u00e3o garantidas. Como um provedor de nuvem ou data center gerencia a capacidade n\u00e3o utilizada tamb\u00e9m \u00e9 um fator importante na determina\u00e7\u00e3o do qu\u00e3o impactante essa a\u00e7\u00e3o pode ser. Por exemplo: O impacto sustent\u00e1vel de usar VMs menores na mesma fam\u00edlia geralmente \u00e9 ben\u00e9fico ou neutro. Quando os n\u00facleos n\u00e3o est\u00e3o mais reservados, podem ser usados por outros em vez de trazer novos servidores online. O impacto sustent\u00e1vel de mudar de fam\u00edlias de VMs pode ser mais dif\u00edcil de compreender porque o hardware subjacente e os n\u00facleos reservados podem estar mudando junto com elas. A\u00c7\u00c3O: Migrar para um provedor de nuvem em escala hiper As economias de carbono dos provedores de nuvem em escala hiper geralmente s\u00e3o atribu\u00eddas a quatro caracter\u00edsticas-chave: efici\u00eancia operacional de TI, efici\u00eancia de equipamentos de TI, efici\u00eancia de infraestrutura de data center e eletricidade renov\u00e1vel. A Microsoft Cloud, por exemplo, \u00e9 entre 22 e 93 por cento mais eficiente em termos de energia do que os data centers empresariais tradicionais, dependendo da compara\u00e7\u00e3o espec\u00edfica sendo feita. Quando se leva em considera\u00e7\u00e3o as compras de energia renov\u00e1vel, a Microsoft Cloud \u00e9 entre 72 e 98 por cento mais eficiente em termos de carbono. Fonte (PDF) A\u00c7\u00c3O: Considerar executar um dispositivo de borda Executar um dispositivo de borda anula muitos dos benef\u00edcios das instala\u00e7\u00f5es de computa\u00e7\u00e3o em escala hiper, portanto, considerar a mistura de energia local e o cronograma t\u00edpico das cargas de trabalho \u00e9 importante para determinar se isso \u00e9 ben\u00e9fico no geral. Quanto maior o volume de dados que precisa ser transmitido, mais essa solu\u00e7\u00e3o se torna atrativa. Por exemplo, o envio de grandes quantidades de conte\u00fado de \u00e1udio e v\u00eddeo para processamento. A\u00c7\u00c3O: Considerar o envio f\u00edsico de dados para o provedor O envio de itens f\u00edsicos tem seu pr\u00f3prio impacto de carbono, dependendo do modo de transporte, o que precisa ser entendido antes de tomar essa decis\u00e3o. Quanto maior o volume de dados que precisa ser transmitido, mais essa op\u00e7\u00e3o pode ser ben\u00e9fica. A\u00c7\u00c3O: Considerar a efici\u00eancia energ\u00e9tica das linguagens Ao selecionar uma linguagem de programa\u00e7\u00e3o, a linguagem de programa\u00e7\u00e3o mais eficiente em termos de energia nem sempre \u00e9 a melhor escolha em termos de velocidade de desenvolvimento, manuten\u00e7\u00e3o, integra\u00e7\u00e3o com sistemas dependentes e outros fatores do projeto. Mas ao decidir entre linguagens que atendem \u00e0s necessidades do projeto, a efici\u00eancia energ\u00e9tica pode ser uma considera\u00e7\u00e3o \u00fatil. A\u00c7\u00c3O: Usar pol\u00edticas de cache Um cache fornece armazenamento tempor\u00e1rio de recursos solicitados por uma aplica\u00e7\u00e3o. O cache pode melhorar o desempenho da aplica\u00e7\u00e3o, reduzindo o tempo necess\u00e1rio para obter um recurso solicitado. O cache tamb\u00e9m pode melhorar a sustentabilidade, diminuindo a quantidade de tr\u00e1fego de rede. Embora o cache forne\u00e7a esses benef\u00edcios, ele tamb\u00e9m aumenta o risco de que o recurso retornado para a aplica\u00e7\u00e3o esteja desatualizado, ou seja, n\u00e3o seja id\u00eantico ao recurso que teria sido enviado pelo servidor se o cache n\u00e3o estivesse em uso. Isso pode criar experi\u00eancias ruins para o usu\u00e1rio quando a precis\u00e3o dos dados \u00e9 fundamental. Al\u00e9m disso, o cache pode permitir que usu\u00e1rios ou processos n\u00e3o autorizados leiam dados sens\u00edveis. Uma resposta autenticada que est\u00e1 em cache pode ser recuperada do cache sem uma autoriza\u00e7\u00e3o adicional. Devido a preocupa\u00e7\u00f5es de seguran\u00e7a como essa, o cache n\u00e3o \u00e9 recomendado para cen\u00e1rios intermedi\u00e1rios. A\u00c7\u00c3O: Considerar o cache de dados pr\u00f3ximo aos usu\u00e1rios finais com uma CDN Incluir CDNs na arquitetura de rede adiciona muitos servidores adicionais \u00e0 sua infraestrutura de software, cada um com sua pr\u00f3pria mistura de rede el\u00e9trica local. Os detalhes do hardware da CDN e o impacto da energia que o alimenta s\u00e3o importantes para determinar se as emiss\u00f5es de carbono ao execut\u00e1-las s\u00e3o menores do que as emiss\u00f5es ao enviar os dados pela rede a partir de uma fonte mais distante. Quanto maior o volume de dados, a dist\u00e2ncia que precisa percorrer e a frequ\u00eancia das solicita\u00e7\u00f5es, mais essa solu\u00e7\u00e3o se torna atraente.","title":"Avisos"},{"location":"design/sustainability/sustainable-action-disclaimers/#avisos","text":"Os seguintes avisos fornecem mais detalhes sobre como considerar o impacto de a\u00e7\u00f5es espec\u00edficas recomendadas pelo Checklist de Engenharia Sustent\u00e1vel .","title":"Avisos"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-redimensionar-maquinas-fisicas-ou-virtuais-para-melhorar-a-utilizacao","text":"As recomenda\u00e7\u00f5es de ferramentas de economia de custos geralmente est\u00e3o alinhadas com a redu\u00e7\u00e3o de carbono, mas, como a sustentabilidade n\u00e3o \u00e9 o objetivo dessas ferramentas, economias de carbono n\u00e3o s\u00e3o garantidas. Como um provedor de nuvem ou data center gerencia a capacidade n\u00e3o utilizada tamb\u00e9m \u00e9 um fator importante na determina\u00e7\u00e3o do qu\u00e3o impactante essa a\u00e7\u00e3o pode ser. Por exemplo: O impacto sustent\u00e1vel de usar VMs menores na mesma fam\u00edlia geralmente \u00e9 ben\u00e9fico ou neutro. Quando os n\u00facleos n\u00e3o est\u00e3o mais reservados, podem ser usados por outros em vez de trazer novos servidores online. O impacto sustent\u00e1vel de mudar de fam\u00edlias de VMs pode ser mais dif\u00edcil de compreender porque o hardware subjacente e os n\u00facleos reservados podem estar mudando junto com elas.","title":"A\u00c7\u00c3O: Redimensionar m\u00e1quinas f\u00edsicas ou virtuais para melhorar a utiliza\u00e7\u00e3o"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-migrar-para-um-provedor-de-nuvem-em-escala-hiper","text":"As economias de carbono dos provedores de nuvem em escala hiper geralmente s\u00e3o atribu\u00eddas a quatro caracter\u00edsticas-chave: efici\u00eancia operacional de TI, efici\u00eancia de equipamentos de TI, efici\u00eancia de infraestrutura de data center e eletricidade renov\u00e1vel. A Microsoft Cloud, por exemplo, \u00e9 entre 22 e 93 por cento mais eficiente em termos de energia do que os data centers empresariais tradicionais, dependendo da compara\u00e7\u00e3o espec\u00edfica sendo feita. Quando se leva em considera\u00e7\u00e3o as compras de energia renov\u00e1vel, a Microsoft Cloud \u00e9 entre 72 e 98 por cento mais eficiente em termos de carbono. Fonte (PDF)","title":"A\u00c7\u00c3O: Migrar para um provedor de nuvem em escala hiper"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-considerar-executar-um-dispositivo-de-borda","text":"Executar um dispositivo de borda anula muitos dos benef\u00edcios das instala\u00e7\u00f5es de computa\u00e7\u00e3o em escala hiper, portanto, considerar a mistura de energia local e o cronograma t\u00edpico das cargas de trabalho \u00e9 importante para determinar se isso \u00e9 ben\u00e9fico no geral. Quanto maior o volume de dados que precisa ser transmitido, mais essa solu\u00e7\u00e3o se torna atrativa. Por exemplo, o envio de grandes quantidades de conte\u00fado de \u00e1udio e v\u00eddeo para processamento.","title":"A\u00c7\u00c3O: Considerar executar um dispositivo de borda"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-considerar-o-envio-fisico-de-dados-para-o-provedor","text":"O envio de itens f\u00edsicos tem seu pr\u00f3prio impacto de carbono, dependendo do modo de transporte, o que precisa ser entendido antes de tomar essa decis\u00e3o. Quanto maior o volume de dados que precisa ser transmitido, mais essa op\u00e7\u00e3o pode ser ben\u00e9fica.","title":"A\u00c7\u00c3O: Considerar o envio f\u00edsico de dados para o provedor"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-considerar-a-eficiencia-energetica-das-linguagens","text":"Ao selecionar uma linguagem de programa\u00e7\u00e3o, a linguagem de programa\u00e7\u00e3o mais eficiente em termos de energia nem sempre \u00e9 a melhor escolha em termos de velocidade de desenvolvimento, manuten\u00e7\u00e3o, integra\u00e7\u00e3o com sistemas dependentes e outros fatores do projeto. Mas ao decidir entre linguagens que atendem \u00e0s necessidades do projeto, a efici\u00eancia energ\u00e9tica pode ser uma considera\u00e7\u00e3o \u00fatil.","title":"A\u00c7\u00c3O: Considerar a efici\u00eancia energ\u00e9tica das linguagens"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-usar-politicas-de-cache","text":"Um cache fornece armazenamento tempor\u00e1rio de recursos solicitados por uma aplica\u00e7\u00e3o. O cache pode melhorar o desempenho da aplica\u00e7\u00e3o, reduzindo o tempo necess\u00e1rio para obter um recurso solicitado. O cache tamb\u00e9m pode melhorar a sustentabilidade, diminuindo a quantidade de tr\u00e1fego de rede. Embora o cache forne\u00e7a esses benef\u00edcios, ele tamb\u00e9m aumenta o risco de que o recurso retornado para a aplica\u00e7\u00e3o esteja desatualizado, ou seja, n\u00e3o seja id\u00eantico ao recurso que teria sido enviado pelo servidor se o cache n\u00e3o estivesse em uso. Isso pode criar experi\u00eancias ruins para o usu\u00e1rio quando a precis\u00e3o dos dados \u00e9 fundamental. Al\u00e9m disso, o cache pode permitir que usu\u00e1rios ou processos n\u00e3o autorizados leiam dados sens\u00edveis. Uma resposta autenticada que est\u00e1 em cache pode ser recuperada do cache sem uma autoriza\u00e7\u00e3o adicional. Devido a preocupa\u00e7\u00f5es de seguran\u00e7a como essa, o cache n\u00e3o \u00e9 recomendado para cen\u00e1rios intermedi\u00e1rios.","title":"A\u00c7\u00c3O: Usar pol\u00edticas de cache"},{"location":"design/sustainability/sustainable-action-disclaimers/#acao-considerar-o-cache-de-dados-proximo-aos-usuarios-finais-com-uma-cdn","text":"Incluir CDNs na arquitetura de rede adiciona muitos servidores adicionais \u00e0 sua infraestrutura de software, cada um com sua pr\u00f3pria mistura de rede el\u00e9trica local. Os detalhes do hardware da CDN e o impacto da energia que o alimenta s\u00e3o importantes para determinar se as emiss\u00f5es de carbono ao execut\u00e1-las s\u00e3o menores do que as emiss\u00f5es ao enviar os dados pela rede a partir de uma fonte mais distante. Quanto maior o volume de dados, a dist\u00e2ncia que precisa percorrer e a frequ\u00eancia das solicita\u00e7\u00f5es, mais essa solu\u00e7\u00e3o se torna atraente.","title":"A\u00c7\u00c3O: Considerar o cache de dados pr\u00f3ximo aos usu\u00e1rios finais com uma CDN"},{"location":"design/sustainability/sustainable-engineering-principles/","text":"Princ\u00edpios Sustent\u00e1veis As vis\u00f5es gerais dos princ\u00edpios a seguir fornecem as bases que apoiam a\u00e7\u00f5es espec\u00edficas no Checklist de Engenharia Sustent\u00e1vel . Mais detalhes sobre cada princ\u00edpio podem ser encontrados seguindo os links nos cabe\u00e7alhos ou visitando o site Princ\u00edpios de Engenharia de Software Verde . Consumo de Eletricidade A maior parte da eletricidade ainda \u00e9 produzida pela queima de combust\u00edveis f\u00f3sseis e \u00e9 respons\u00e1vel por 49% do carbono emitido na atmosfera. O software consome eletricidade em sua execu\u00e7\u00e3o. A opera\u00e7\u00e3o de hardware consome eletricidade mesmo com utiliza\u00e7\u00e3o de zero por cento. Algumas das melhores maneiras de reduzir o consumo de eletricidade e as emiss\u00f5es subsequentes de polui\u00e7\u00e3o por carbono s\u00e3o tornar nossas aplica\u00e7\u00f5es mais eficientes em termos de energia quando est\u00e3o em execu\u00e7\u00e3o e limitar o hardware ocioso. Proporcionalidade Energ\u00e9tica A rela\u00e7\u00e3o entre energia e utiliza\u00e7\u00e3o n\u00e3o \u00e9 proporcional. Quanto mais voc\u00ea utiliza um computador, mais eficiente ele se torna na convers\u00e3o de eletricidade em opera\u00e7\u00f5es de computa\u00e7\u00e3o \u00fateis. Executar seu trabalho em o m\u00e1ximo poss\u00edvel de servidores com a taxa de utiliza\u00e7\u00e3o mais alta maximiza sua efici\u00eancia energ\u00e9tica. Um computador ocioso, mesmo funcionando com zero por cento de utiliza\u00e7\u00e3o, ainda consome eletricidade. Carbono Embutido O carbono embutido (tamb\u00e9m referido como \"Carbono Incorporado\") \u00e9 a quantidade de polui\u00e7\u00e3o por carbono emitida durante a cria\u00e7\u00e3o e disposi\u00e7\u00e3o de um dispositivo. Ao calcular a polui\u00e7\u00e3o total por carbono dos computadores que executam seu software, leve em considera\u00e7\u00e3o tanto a polui\u00e7\u00e3o por carbono para operar o computador quanto o carbono embutido do computador. Portanto, uma \u00f3tima maneira de reduzir o carbono embutido \u00e9 evitar a necessidade de fabricar novos dispositivos, estendendo a utilidade dos existentes. Moldagem da Demanda A moldagem da demanda \u00e9 uma estrat\u00e9gia de moldar nossa demanda por recursos para que ela corresponda \u00e0 oferta existente. Se a oferta for alta, aumente a demanda fazendo mais em suas aplica\u00e7\u00f5es. Se a oferta for baixa, diminua a demanda. Isso significa fazer menos em suas aplica\u00e7\u00f5es ou adiar o trabalho at\u00e9 que a oferta seja maior. Rede Uma rede \u00e9 uma s\u00e9rie de switches, roteadores e servidores. Todos os computadores e equipamentos de rede em uma rede consomem eletricidade e t\u00eam carbono embutido . A internet \u00e9 uma rede global de dispositivos normalmente alimentados pela mistura padr\u00e3o de energia da rede local. Quando voc\u00ea envia dados pela internet, est\u00e1 enviando esses dados por muitos dispositivos na rede, cada um desses dispositivos consome eletricidade. Como resultado, qualquer dado que voc\u00ea envia ou recebe pela internet emite carbono. A quantidade de carbono emitida ao enviar dados depende de muitos fatores, incluindo: Dist\u00e2ncia que os dados percorrem N\u00famero de saltos entre dispositivos de rede Efici\u00eancia energ\u00e9tica dos dispositivos de rede Intensidade de carbono da energia usada por cada dispositivo no momento em que os dados s\u00e3o transmitidos. Protocolo de rede usado para coordenar a transmiss\u00e3o de dados - por exemplo, multiplexa\u00e7\u00e3o, compress\u00e3o de cabe\u00e7alho, TLS/Quic Estudos recentes de redes - Cloud Carbon Footprint","title":"Princ\u00edpios Sustent\u00e1veis"},{"location":"design/sustainability/sustainable-engineering-principles/#principios-sustentaveis","text":"As vis\u00f5es gerais dos princ\u00edpios a seguir fornecem as bases que apoiam a\u00e7\u00f5es espec\u00edficas no Checklist de Engenharia Sustent\u00e1vel . Mais detalhes sobre cada princ\u00edpio podem ser encontrados seguindo os links nos cabe\u00e7alhos ou visitando o site Princ\u00edpios de Engenharia de Software Verde .","title":"Princ\u00edpios Sustent\u00e1veis"},{"location":"design/sustainability/sustainable-engineering-principles/#consumo-de-eletricidade","text":"A maior parte da eletricidade ainda \u00e9 produzida pela queima de combust\u00edveis f\u00f3sseis e \u00e9 respons\u00e1vel por 49% do carbono emitido na atmosfera. O software consome eletricidade em sua execu\u00e7\u00e3o. A opera\u00e7\u00e3o de hardware consome eletricidade mesmo com utiliza\u00e7\u00e3o de zero por cento. Algumas das melhores maneiras de reduzir o consumo de eletricidade e as emiss\u00f5es subsequentes de polui\u00e7\u00e3o por carbono s\u00e3o tornar nossas aplica\u00e7\u00f5es mais eficientes em termos de energia quando est\u00e3o em execu\u00e7\u00e3o e limitar o hardware ocioso.","title":"Consumo de Eletricidade"},{"location":"design/sustainability/sustainable-engineering-principles/#proporcionalidade-energetica","text":"A rela\u00e7\u00e3o entre energia e utiliza\u00e7\u00e3o n\u00e3o \u00e9 proporcional. Quanto mais voc\u00ea utiliza um computador, mais eficiente ele se torna na convers\u00e3o de eletricidade em opera\u00e7\u00f5es de computa\u00e7\u00e3o \u00fateis. Executar seu trabalho em o m\u00e1ximo poss\u00edvel de servidores com a taxa de utiliza\u00e7\u00e3o mais alta maximiza sua efici\u00eancia energ\u00e9tica. Um computador ocioso, mesmo funcionando com zero por cento de utiliza\u00e7\u00e3o, ainda consome eletricidade.","title":"Proporcionalidade Energ\u00e9tica"},{"location":"design/sustainability/sustainable-engineering-principles/#carbono-embutido","text":"O carbono embutido (tamb\u00e9m referido como \"Carbono Incorporado\") \u00e9 a quantidade de polui\u00e7\u00e3o por carbono emitida durante a cria\u00e7\u00e3o e disposi\u00e7\u00e3o de um dispositivo. Ao calcular a polui\u00e7\u00e3o total por carbono dos computadores que executam seu software, leve em considera\u00e7\u00e3o tanto a polui\u00e7\u00e3o por carbono para operar o computador quanto o carbono embutido do computador. Portanto, uma \u00f3tima maneira de reduzir o carbono embutido \u00e9 evitar a necessidade de fabricar novos dispositivos, estendendo a utilidade dos existentes.","title":"Carbono Embutido"},{"location":"design/sustainability/sustainable-engineering-principles/#moldagem-da-demanda","text":"A moldagem da demanda \u00e9 uma estrat\u00e9gia de moldar nossa demanda por recursos para que ela corresponda \u00e0 oferta existente. Se a oferta for alta, aumente a demanda fazendo mais em suas aplica\u00e7\u00f5es. Se a oferta for baixa, diminua a demanda. Isso significa fazer menos em suas aplica\u00e7\u00f5es ou adiar o trabalho at\u00e9 que a oferta seja maior.","title":"Moldagem da Demanda"},{"location":"design/sustainability/sustainable-engineering-principles/#rede","text":"Uma rede \u00e9 uma s\u00e9rie de switches, roteadores e servidores. Todos os computadores e equipamentos de rede em uma rede consomem eletricidade e t\u00eam carbono embutido . A internet \u00e9 uma rede global de dispositivos normalmente alimentados pela mistura padr\u00e3o de energia da rede local. Quando voc\u00ea envia dados pela internet, est\u00e1 enviando esses dados por muitos dispositivos na rede, cada um desses dispositivos consome eletricidade. Como resultado, qualquer dado que voc\u00ea envia ou recebe pela internet emite carbono. A quantidade de carbono emitida ao enviar dados depende de muitos fatores, incluindo: Dist\u00e2ncia que os dados percorrem N\u00famero de saltos entre dispositivos de rede Efici\u00eancia energ\u00e9tica dos dispositivos de rede Intensidade de carbono da energia usada por cada dispositivo no momento em que os dados s\u00e3o transmitidos. Protocolo de rede usado para coordenar a transmiss\u00e3o de dados - por exemplo, multiplexa\u00e7\u00e3o, compress\u00e3o de cabe\u00e7alho, TLS/Quic Estudos recentes de redes - Cloud Carbon Footprint","title":"Rede"},{"location":"developer-experience/","text":"Experi\u00eancia do Desenvolvedor (DevEx) A experi\u00eancia do desenvolvedor refere-se a qu\u00e3o f\u00e1cil ou dif\u00edcil \u00e9 para um desenvolvedor realizar tarefas essenciais necess\u00e1rias para implementar uma mudan\u00e7a. Uma experi\u00eancia do desenvolvedor positiva significaria que essas tarefas s\u00e3o relativamente f\u00e1ceis para a equipe (veja as medidas abaixo). As tarefas essenciais s\u00e3o identificadas abaixo. Build - Verificar que as mudan\u00e7as est\u00e3o livres de erros de sintaxe e compilar. Teste - Verificar que todos os testes automatizados passam. Iniciar - Iniciar o sistema de ponta a ponta para simular a execu\u00e7\u00e3o em um ambiente implantado. Depura\u00e7\u00e3o - Anexar o depurador \u00e0 solu\u00e7\u00e3o iniciada, definir pontos de interrup\u00e7\u00e3o, percorrer o c\u00f3digo e inspecionar vari\u00e1veis. Se esfor\u00e7os forem investidos para tornar essas atividades o mais f\u00e1ceis poss\u00edvel, os retornos desse esfor\u00e7o aumentar\u00e3o \u00e0 medida que o projeto continuar e a equipe crescer . Definindo o Termo \"Ponta a Ponta\" Este documento faz v\u00e1rias refer\u00eancias \u00e0 execu\u00e7\u00e3o de uma solu\u00e7\u00e3o de ponta a ponta (tamb\u00e9m conhecida como E2E). O termo \"ponta a ponta\" para os fins deste documento est\u00e1 limitado ao software de propriedade, desenvolvido e implantado pela equipe. Sistemas de propriedade de outras equipes ou fornecedores de terceiros n\u00e3o est\u00e3o inclu\u00eddos no escopo de E2E para os fins deste documento. Metas Maximizar o tempo que os engenheiros gastam escrevendo c\u00f3digo que atende aos crit\u00e9rios de aceita\u00e7\u00e3o da hist\u00f3ria e aos crit\u00e9rios de \"feito\". Minimizar o tempo gasto na configura\u00e7\u00e3o manual e na configura\u00e7\u00e3o das ferramentas. Minimizar regress\u00f5es e novos defeitos tornando o teste de ponta a ponta f\u00e1cil. Impacto A experi\u00eancia do desenvolvedor pode ter um impacto significativo na efici\u00eancia da execu\u00e7\u00e3o di\u00e1ria da equipe. Uma experi\u00eancia positiva pode pagar dividendos ao longo da vida do projeto, especialmente quando novos desenvolvedores se juntam \u00e0 equipe. Aumento da Velocidade - A equipe gasta menos tempo em atividades que n\u00e3o agregam valor, como configura\u00e7\u00e3o de ambiente de desenvolvimento local, espera em ambientes remotos para testes e retrabalho (corre\u00e7\u00e3o de defeitos). Melhoria na Qualidade - Quando \u00e9 f\u00e1cil depurar e testar, os desenvolvedores far\u00e3o mais disso. Isso se traduzir\u00e1 em menos defeitos sendo introduzidos. Facilita\u00e7\u00e3o da Integra\u00e7\u00e3o e Ado\u00e7\u00e3o - Quando as tarefas essenciais de desenvolvimento s\u00e3o automatizadas, h\u00e1 menos documenta\u00e7\u00e3o a ser escrita e, consequentemente, menos leitura para come\u00e7ar! Mais importante ainda, o cliente continuar\u00e1 a colher esses benef\u00edcios muito tempo ap\u00f3s o envolvimento inicial com o c\u00f3digo. Medidas Tempo para o Primeiro Resultado de Ponta a Ponta (tamb\u00e9m conhecido como Contrato F5) Supondo um laptop/PC que nunca executou a solu\u00e7\u00e3o, quanto tempo leva para configurar e executar todo o sistema de ponta a ponta e ver um resultado. Tempo para o Primeiro Commit Quanto tempo leva para fazer uma mudan\u00e7a que pode ser verificada/testada localmente. Uma mudan\u00e7a verificada/testada localmente \u00e9 aquela que passa nos casos de teste sem introduzir regress\u00f5es ou mudan\u00e7as quebradas. Participa\u00e7\u00e3o Fornecer uma experi\u00eancia positiva do desenvolvedor \u00e9 um esfor\u00e7o de equipe. No entanto, certos membros podem assumir a responsabilidade por diferentes \u00e1reas para ajudar a manter toda a equipe respons\u00e1vel. L\u00edder de Desenvolvimento - Estabele\u00e7a o Padr\u00e3o Os exemplos a seguir mostram como o L\u00edder de Desenvolvimento pode estabelecer o padr\u00e3o para a experi\u00eancia do desenvolvedor. Determina o ambiente de desenvolvimento (IDE sugerida, hospedagem, etc.). Determina o ambiente de controle de origem e o n\u00famero de reposit\u00f3rios necess\u00e1rios. Dado o ambiente de desenvolvimento e a estrutura do reposit\u00f3rio, estabelece as expectativas para a equipe em termos de etapas para executar as tarefas essenciais de desenvolvimento. Nomeia o Campe\u00e3o DevEx. A escolha do IDE N\u00c3O pretende impor que todos os membros da equipe devem usar o mesmo IDE. No entanto, essa escolha direcionar\u00e1 onde o investimento em integra\u00e7\u00e3o estreita ser\u00e1 priorizado. Por exemplo, se o Visual Studio Code for a IDE sugerida , a equipe se concentrar\u00e1 em integrar as tarefas e as configura\u00e7\u00f5es de inicializa\u00e7\u00e3o do VS Code em detrimento de integra\u00e7\u00f5es semelhantes para outros IDEs. Os membros da equipe ainda devem se sentir \u00e0 vontade para usar o IDE de sua prefer\u00eancia, desde que isso n\u00e3o prejudique a equipe. Campe\u00e3o DevEx - Identificar Melhorias Iterativas O Campe\u00e3o DevEx assume a responsabilidade de manter a equipe respons\u00e1vel por proporcionar uma experi\u00eancia positiva do desenvolvedor. O seguinte esbo\u00e7a as responsabilidades do Campe\u00e3o DevEx. Buscar ativamente oportunidades para melhorar a experi\u00eancia do desenvolvedor da solu\u00e7\u00e3o. Trabalhar com o L\u00edder de Desenvolvimento para aprimorar de forma iterativa as expectativas da equipe em rela\u00e7\u00e3o \u00e0 experi\u00eancia do desenvolvedor. Selecionar hist\u00f3rias de a\u00e7\u00e3o para aprimorar \u00e1reas de melhoria e priorizar em rela\u00e7\u00e3o aos objetivos de entrega do projeto, envolvendo-se diretamente com o Propriet\u00e1rio do Produto e o Cliente. Atuar como especialista no assunto para o resto da equipe. Ajudar a equipe a determinar como implementar as expectativas do DevEx e identificar desvios. Membros da Equipe - Reforcem as Expectativas Os membros da equipe tamb\u00e9m podem ajudar a manter uns aos outros respons\u00e1veis por proporcionar uma experi\u00eancia positiva do desenvolvedor. Os exemplos a seguir mostram \u00e1reas em que os membros da equipe podem ajudar a identificar quando as expectativas do DevEx da equipe n\u00e3o est\u00e3o sendo atendidas. Solicita\u00e7\u00f5es de Pull (Pull requests). Experimente as mudan\u00e7as localmente para ver se elas est\u00e3o aderindo \u00e0s expectativas do DevEx da equipe. Revis\u00f5es de Design. Procure propostas que possam afetar negativamente a experi\u00eancia do DevEx da solu\u00e7\u00e3o. Isso pode incluir: Introdu\u00e7\u00e3o de novas tecnologias cuja test abilidade \u00e9 limitada a etapas manuais em um ambiente implantado. - Adi\u00e7\u00e3o de um novo reposit\u00f3rio. Novos Membros da Equipe - Identifiquem Melhorias Iterativas Os novos membros da equipe est\u00e3o em posi\u00e7\u00e3o \u00fanica para identificar inst\u00e2ncias de Sabedoria Coletiva n\u00e3o documentada. O seguinte esbo\u00e7a as responsabilidades dos novos membros da equipe no que diz respeito ao DevEx: Se encontrar documenta\u00e7\u00e3o ausente, incompleta ou incorreta ao integrar-se, voc\u00ea deve registrar o problema como um novo defeito(s) e atribu\u00ed-lo ao propriet\u00e1rio do produto para triagem. Se n\u00e3o houver documenta\u00e7\u00e3o de integra\u00e7\u00e3o, anote as etapas que voc\u00ea seguiu em uma nova hist\u00f3ria do usu\u00e1rio. Atribua a nova hist\u00f3ria ao propriet\u00e1rio do produto para triagem. Orienta\u00e7\u00e3o de Facilita\u00e7\u00e3o A seguir, s\u00e3o apresentados exemplos de v\u00e1rias estrat\u00e9gias que podem ser adotadas para promover uma experi\u00eancia positiva do desenvolvedor. Espera-se que cada equipe defina o que significa uma experi\u00eancia de desenvolvimento positiva no contexto de seu projeto. Al\u00e9m disso, refine isso ao longo do tempo por meio de mecanismos de feedback, como retrospectivas de sprint e de projeto. Estabele\u00e7a Atalhos (Hotkeys) Atribua atalhos para cada uma das tarefas essenciais. Tarefa Windows Build CTRL+SHIFT+B Teste CTRL+R,T Iniciar com Depura\u00e7\u00e3o F5 O Contrato F5 O Contrato F5 visa a capacidade de executar a solu\u00e7\u00e3o de ponta a ponta com as seguintes etapas. Clonar - git clone [URL do meu reposit\u00f3rio aqui] Configurar - defina quaisquer valores de configura\u00e7\u00e3o que precisem ser exclusivos para o indiv\u00edduo (ou seja, atualize um arquivo .env) Pressione F5 - inicie a solu\u00e7\u00e3o com depura\u00e7\u00e3o anexada. A maioria dos IDEs possui algum tipo de executor de tarefas que pode ser usado para automatizar as etapas de compila\u00e7\u00e3o, execu\u00e7\u00e3o e anexa\u00e7\u00e3o. Tente aproveitar essas ferramentas para que as etapas possam ser executadas com o m\u00ednimo de etapas manuais poss\u00edvel. Campe\u00e3o DevEx em Busca Ativa de Melhorias O Campe\u00e3o DevEx deve procurar ativamente \u00e1reas em que a equipe tem oportunidade de melhorar. Por exemplo, eles precisam implantar suas altera\u00e7\u00f5es em um ambiente fora de seu laptop antes de validar se o que fizeram funcionou. Em vez de depurar localmente, eles t\u00eam que fazer isso repetidamente para obter uma solu\u00e7\u00e3o funcional? Isso leva v\u00e1rios minutos a cada itera\u00e7\u00e3o? Isso bloqueia outros desenvolvedores devido \u00e0 conten\u00e7\u00e3o no ambiente? As seguintes cerim\u00f4nias podem ser usadas pelo Campe\u00e3o DevEx para encontrar oportunidades potenciais: Retrospectivas. Est\u00e3o sendo levantados feedbacks relacionados \u00e0s tarefas essenciais sendo dif\u00edceis ou dif\u00edceis de controlar? Bloqueios de Standup. Indiv\u00edduos est\u00e3o sendo bloqueados ou enfrentando dificuldades com as tarefas essenciais? \u00c0 medida que as oportunidades s\u00e3o identificadas, o Campe\u00e3o DevEx pode traduzi-las em hist\u00f3rias acion\u00e1veis para o backlog do produto. Torne as Tarefas Multiplataforma Para as tarefas essenciais padronizadas durante o compromisso, certifique-se de que diferentes plataformas sejam consideradas. Os membros da equipe podem ter sistemas operacionais diferentes, e garantir que as tarefas sejam multiplataforma proporcionar\u00e1 uma oportunidade adicional de melhorar a experi\u00eancia. Consulte o guia de tarefas multiplataforma para obter orienta\u00e7\u00f5es sobre como as tarefas podem ser configuradas para incluir diferentes plataformas. Crie um Guia de Integra\u00e7\u00e3o Ao dar as boas-vindas a novos membros da equipe ao compromisso, h\u00e1 muitas \u00e1reas para eles se adaptarem e para se atualizarem, incluindo base de c\u00f3digo, padr\u00f5es de codifica\u00e7\u00e3o, acordos da equipe e cultura da equipe. Ao adotar uma pr\u00e1tica forte de integra\u00e7\u00e3o, como um guia de integra\u00e7\u00e3o em um local centralizado que explique o escopo do projeto, processos, detalhes de configura\u00e7\u00e3o e software necess\u00e1rio, os novos membros podem ter todos os recursos necess\u00e1rios para serem eficientes, bem-sucedidos e membros valiosos da equipe desde o in\u00edcio. Consulte o modelo de guia de integra\u00e7\u00e3o para obter orienta\u00e7\u00f5es sobre como um guia de integra\u00e7\u00e3o pode se parecer. Padronize Tarefas Essenciais Aplique uma estrat\u00e9gia comum em componentes de solu\u00e7\u00e3o para realizar as tarefas essenciais Padronize a configura\u00e7\u00e3o dos componentes da solu\u00e7\u00e3o Padronize a maneira como os testes s\u00e3o executados para cada componente Padronize a maneira como cada componente \u00e9 iniciado e interrompido localmente Padronize como documentar as tarefas essenciais para cada componente Essa padroniza\u00e7\u00e3o permitir\u00e1 que a equipe automatize mais facilmente essas tarefas em todos os componentes no n\u00edvel da solu\u00e7\u00e3o. Consulte as Tarefas Essenciais em N\u00edvel de Solu\u00e7\u00e3o abaixo. Tarefas Essenciais em N\u00edvel de Solu\u00e7\u00e3o Automatize a capacidade de executar cada tarefa essencial em todos os componentes da solu\u00e7\u00e3o. Um exemplo seria mapear a a\u00e7\u00e3o de compila\u00e7\u00e3o no IDE para executar a tarefa de compila\u00e7\u00e3o para cada componente na solu\u00e7\u00e3o. Mais importante ainda, configure a a\u00e7\u00e3o de inicializa\u00e7\u00e3o do IDE para iniciar todos os componentes dentro da solu\u00e7\u00e3o. Isso proporcionar\u00e1 efici\u00eancia significativa para a equipe de engenharia ao lidar com solu\u00e7\u00f5es de v\u00e1rios componentes. Quando isso n\u00e3o \u00e9 implementado, os engenheiros precisam repetir manualmente cada uma das tarefas essenciais para cada componente na solu\u00e7\u00e3o. Nessa situa\u00e7\u00e3o, o n\u00famero de etapas necess\u00e1rias para executar cada tarefa essencial \u00e9 multiplicado pelo n\u00famero de componentes no sistema. [Etapas de configura\u00e7\u00e3o + Etapas de compila\u00e7\u00e3o + Etapas de inicializa\u00e7\u00e3o/depura\u00e7\u00e3o + Etapas de interrup\u00e7\u00e3o + Etapas de execu\u00e7\u00e3o de teste + Documenta\u00e7\u00e3o de tudo isso] * [muitos componentes da solu\u00e7\u00e3o] = MUITAS ETAPAS VS. [Etapas de configura\u00e7\u00e3o + Etapas de compila\u00e7\u00e3o + Etapas de inicializa\u00e7\u00e3o/depura\u00e7\u00e3o + Etapas de interrup\u00e7\u00e3o + Etapas de execu\u00e7\u00e3o de teste + Documenta\u00e7\u00e3o de tudo isso] * [1 solu\u00e7\u00e3o] = N\u00daMERO M\u00cdNIMO DE ETAPAS Observabilidade A observabilidade alivia desafios imprevistos para o desenvolvedor em um sistema distribu\u00eddo complexo. Identifica gargalos de projeto mais rapidamente e com mais precis\u00e3o, aprimorando o desempenho \u00e0 medida que o desenvolvedor busca implantar altera\u00e7\u00f5es de c\u00f3digo. A adi\u00e7\u00e3o de observabilidade melhora a experi\u00eancia ao identificar e resolver erros ou c\u00f3digo quebrado. Isso resulta em menos falhas de produ\u00e7\u00e3o atuais e futuras ou menos graves. Existem muitas estrat\u00e9gias de observabilidade que um desenvolvedor pode usar ao lado das melhores pr\u00e1ticas de engenharia. Esses recursos melhoram o DevEx, garantindo uma vis\u00e3o compartilhada do sistema complexo ao longo de todo o ciclo de vida. A observabilidade no c\u00f3digo por meio de registro, tratamento de exce\u00e7\u00f5es e exposi\u00e7\u00e3o de m\u00e9tricas de aplicativo relevantes, por exemplo, promove a visibilidade consistente do desempenho em tempo real. Os pilares da observabilidade, registro , m\u00e9tricas e rastreamento , detalham quando habilitar cada um dos tr\u00eas tipos espec\u00edficos de observabilidade. Minimize o N\u00famero de Reposit\u00f3rios Dividir uma solu\u00e7\u00e3o em v\u00e1rios reposit\u00f3rios pode afetar negativamente as medidas acima. Isso tamb\u00e9m pode afetar negativamente outras \u00e1reas, como Solicita\u00e7\u00f5es de Pull, Teste Automatizado, Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua. Semelhante \u00e0s inst\u00e2ncias do IDE, o impacto negativo \u00e9 multiplicado pelo n\u00famero de reposit\u00f3rios. [Etapas de clonagem + Etapas de ramifica\u00e7\u00e3o + Etapas de confirma\u00e7\u00e3o + Etapas de CI + Revis\u00f5es e mesclagens de Solicita\u00e7\u00f5es de Pull] * [muitos reposit\u00f3rios de c\u00f3digo-fonte] = MUITAS ETAPAS VS. [Etapas de clonagem + Etapas de ramifica\u00e7\u00e3o + Etapas de confirma\u00e7\u00e3o + Etapas de CI + Revis\u00f5es e mesclagens de Solicita\u00e7\u00f5es de Pull] * [1 reposit\u00f3rio de c\u00f3digo-fonte] = N\u00daMERO M\u00cdNIMO DE ETAPAS Solicita\u00e7\u00f5es de Pull At\u00f4micas Quando a solu\u00e7\u00e3o est\u00e1 encapsulada dentro de um \u00fanico reposit\u00f3rio, ela tamb\u00e9m permite que as solicita\u00e7\u00f5es de pull representem uma altera\u00e7\u00e3o em v\u00e1rias camadas. Isso \u00e9 especialmente \u00fatil quando uma altera\u00e7\u00e3o requer modifica\u00e7\u00f5es em um contrato compartilhado entre v\u00e1rios componentes. Por exemplo, uma hist\u00f3ria exige que um ponto de extremidade da API seja alterado. Com essa estrat\u00e9gia, a API e o cliente da web podem ser atualizados com a mesma solicita\u00e7\u00e3o de pull. Isso evita que o branch principal seja quebrado temporariamente enquanto aguarda a mesclagem das solicita\u00e7\u00f5es de pull dependentes. Minimize as Depend\u00eancias Remotas para o Desenvolvimento Local Quanto menos depend\u00eancias em componentes que n\u00e3o podem ser executados na m\u00e1quina de um desenvolvedor, menos etapas s\u00e3o necess\u00e1rias para come\u00e7ar. Portanto, menos depend\u00eancias afetar\u00e3o positivamente as medidas acima. As seguintes estrat\u00e9gias podem ser usadas para reduzir essas depend\u00eancias Use um Emulador Se dispon\u00edvel, os emuladores s\u00e3o implementa\u00e7\u00f5es de tecnologias que normalmente s\u00f3 est\u00e3o dispon\u00edveis em ambientes de nuvem. Um bom exemplo \u00e9 o emulador CosmosDB . Use DI + Altern\u00e2ncia para Simular Depend\u00eancias Remotas Quando a solu\u00e7\u00e3o depende de uma tecnologia que n\u00e3o pode ser executada na m\u00e1quina de um desenvolvedor, a configura\u00e7\u00e3o e o teste dessa solu\u00e7\u00e3o podem ser desafiadores. Uma estrat\u00e9gia que pode ser empregada \u00e9 criar a capacidade de substituir essa depend\u00eancia por uma que possa ser executada localmente. Abstraia a camada que tem a depend\u00eancia remota por tr\u00e1s de uma interface de propriedade da solu\u00e7\u00e3o (n\u00e3o da depend\u00eancia remota). Crie uma implementa\u00e7\u00e3o dessa interface usando uma tecnologia que possa ser executada localmente. Crie uma f\u00e1brica que decide qual inst\u00e2ncia usar. Essa decis\u00e3o pode ser baseada na configura\u00e7\u00e3o do ambiente (ou seja, na altern\u00e2ncia). Em seguida, a classe original que depende da tecnologia remota deve depender da f\u00e1brica para fornecer qual inst\u00e2ncia usar. Grande parte dessa estrat\u00e9gia pode ser simplificada com uma t\u00e9cnica adequada de inje\u00e7\u00e3o de depend\u00eancia e/ou um framework. Veja o exemplo abaixo que troca a implementa\u00e7\u00e3o do Azure Service Bus por RabbitMQ, que pode ser executado localmente. interface IPublisher { send ( message : string ) : void } class RabbitMQPublisher implements IPublisher { send ( message : string ) { //todo: enviar a mensagem via RabbitMQ } } class AzureServiceBusPublisher implements IPublisher { send ( message : string ) { //todo: enviar a mensagem via Azure Service Bus } } interface IPublisherFactory { create () : IPublisher } class PublisherFactory { create () : IPublisher { // use a vari\u00e1vel de ambiente para determinar qual inst\u00e2ncia deve ser usada if ( process . env . UseAsb ){ return new AzureServiceBusPublisher (); } else { return new RabbitMqPublisher (); } } } class MeuServico { //injete a f\u00e1brica constructor ( private readonly publisherFactory : IPublisherFactory ){ } enviarMensagem ( message : string ) : void { //use a f\u00e1brica para determinar qual inst \u00e2ncia enviar\u00e1 a mensagem const publisher = this . publisherFactory . create (); publisher . send ( message ); } } Altern\u00e2ncia de Programa\u00e7\u00e3o de Recursos Durante o desenvolvimento local, uma estrat\u00e9gia que pode ser empregada \u00e9 usar um arquivo de configura\u00e7\u00e3o, vari\u00e1vel de ambiente ou algum outro mecanismo para direcionar a solu\u00e7\u00e3o para usar uma vers\u00e3o de recursos que podem ser executados localmente. Isso \u00e9 chamado de altern\u00e2ncia de programa\u00e7\u00e3o de recursos. Para habilitar a altern\u00e2ncia, crie uma interface que defina os servi\u00e7os que dependem de recursos que podem n\u00e3o estar dispon\u00edveis localmente. Em seguida, crie uma implementa\u00e7\u00e3o dessa interface que depende da configura\u00e7\u00e3o do ambiente (ou seja, altern\u00e2ncia) para determinar como se comportar. Certifique-se de injetar a implementa\u00e7\u00e3o da interface onde ela \u00e9 necess\u00e1ria. Pontos de Aten\u00e7\u00e3o Qualidade da Experi\u00eancia do Desenvolvedor A experi\u00eancia do desenvolvedor \u00e9 uma m\u00e9trica subjetiva, mas valiosa. Realize pesquisas de satisfa\u00e7\u00e3o do desenvolvedor regularmente para entender como as mudan\u00e7as afetam a equipe. Aten\u00e7\u00e3o \u00e0s Documenta\u00e7\u00f5es Documenta\u00e7\u00f5es atualizadas e precisas s\u00e3o fundamentais para uma boa experi\u00eancia do desenvolvedor. Garanta que todas as documenta\u00e7\u00f5es relacionadas \u00e0s tarefas essenciais estejam sempre atualizadas e sejam de f\u00e1cil acesso para a equipe. Cultura de Feedback Promova uma cultura de feedback aberto na equipe, onde os membros possam compartilhar suas experi\u00eancias e sugest\u00f5es para melhorar a experi\u00eancia do desenvolvedor. Incentive os desenvolvedores a relatar problemas de DevEx e implementar melhorias iterativas. Conclus\u00e3o Uma experi\u00eancia positiva do desenvolvedor \u00e9 fundamental para aumentar a efici\u00eancia da equipe de desenvolvimento e garantir a qualidade do software. Ao priorizar a automa\u00e7\u00e3o, padroniza\u00e7\u00e3o e simplifica\u00e7\u00e3o das tarefas essenciais, as equipes podem proporcionar uma experi\u00eancia do desenvolvedor excepcional. Isso n\u00e3o s\u00f3 beneficia os membros da equipe atual, mas tamb\u00e9m contribui para a integra\u00e7\u00e3o suave de novos membros e o sucesso cont\u00ednuo do projeto. Refer\u00eancias: Princ\u00edpios de DevOps da Microsoft SRE - Site Reliability Engineering 12 Factor App Padr\u00f5es e Pr\u00e1ticas de Engenharia da Microsoft","title":"Experi\u00eancia do Desenvolvedor (DevEx)"},{"location":"developer-experience/#experiencia-do-desenvolvedor-devex","text":"A experi\u00eancia do desenvolvedor refere-se a qu\u00e3o f\u00e1cil ou dif\u00edcil \u00e9 para um desenvolvedor realizar tarefas essenciais necess\u00e1rias para implementar uma mudan\u00e7a. Uma experi\u00eancia do desenvolvedor positiva significaria que essas tarefas s\u00e3o relativamente f\u00e1ceis para a equipe (veja as medidas abaixo). As tarefas essenciais s\u00e3o identificadas abaixo. Build - Verificar que as mudan\u00e7as est\u00e3o livres de erros de sintaxe e compilar. Teste - Verificar que todos os testes automatizados passam. Iniciar - Iniciar o sistema de ponta a ponta para simular a execu\u00e7\u00e3o em um ambiente implantado. Depura\u00e7\u00e3o - Anexar o depurador \u00e0 solu\u00e7\u00e3o iniciada, definir pontos de interrup\u00e7\u00e3o, percorrer o c\u00f3digo e inspecionar vari\u00e1veis. Se esfor\u00e7os forem investidos para tornar essas atividades o mais f\u00e1ceis poss\u00edvel, os retornos desse esfor\u00e7o aumentar\u00e3o \u00e0 medida que o projeto continuar e a equipe crescer .","title":"Experi\u00eancia do Desenvolvedor (DevEx)"},{"location":"developer-experience/#definindo-o-termo-ponta-a-ponta","text":"Este documento faz v\u00e1rias refer\u00eancias \u00e0 execu\u00e7\u00e3o de uma solu\u00e7\u00e3o de ponta a ponta (tamb\u00e9m conhecida como E2E). O termo \"ponta a ponta\" para os fins deste documento est\u00e1 limitado ao software de propriedade, desenvolvido e implantado pela equipe. Sistemas de propriedade de outras equipes ou fornecedores de terceiros n\u00e3o est\u00e3o inclu\u00eddos no escopo de E2E para os fins deste documento.","title":"Definindo o Termo \"Ponta a Ponta\""},{"location":"developer-experience/#metas","text":"Maximizar o tempo que os engenheiros gastam escrevendo c\u00f3digo que atende aos crit\u00e9rios de aceita\u00e7\u00e3o da hist\u00f3ria e aos crit\u00e9rios de \"feito\". Minimizar o tempo gasto na configura\u00e7\u00e3o manual e na configura\u00e7\u00e3o das ferramentas. Minimizar regress\u00f5es e novos defeitos tornando o teste de ponta a ponta f\u00e1cil.","title":"Metas"},{"location":"developer-experience/#impacto","text":"A experi\u00eancia do desenvolvedor pode ter um impacto significativo na efici\u00eancia da execu\u00e7\u00e3o di\u00e1ria da equipe. Uma experi\u00eancia positiva pode pagar dividendos ao longo da vida do projeto, especialmente quando novos desenvolvedores se juntam \u00e0 equipe. Aumento da Velocidade - A equipe gasta menos tempo em atividades que n\u00e3o agregam valor, como configura\u00e7\u00e3o de ambiente de desenvolvimento local, espera em ambientes remotos para testes e retrabalho (corre\u00e7\u00e3o de defeitos). Melhoria na Qualidade - Quando \u00e9 f\u00e1cil depurar e testar, os desenvolvedores far\u00e3o mais disso. Isso se traduzir\u00e1 em menos defeitos sendo introduzidos. Facilita\u00e7\u00e3o da Integra\u00e7\u00e3o e Ado\u00e7\u00e3o - Quando as tarefas essenciais de desenvolvimento s\u00e3o automatizadas, h\u00e1 menos documenta\u00e7\u00e3o a ser escrita e, consequentemente, menos leitura para come\u00e7ar! Mais importante ainda, o cliente continuar\u00e1 a colher esses benef\u00edcios muito tempo ap\u00f3s o envolvimento inicial com o c\u00f3digo.","title":"Impacto"},{"location":"developer-experience/#medidas","text":"","title":"Medidas"},{"location":"developer-experience/#tempo-para-o-primeiro-resultado-de-ponta-a-ponta-tambem-conhecido-como-contrato-f5","text":"Supondo um laptop/PC que nunca executou a solu\u00e7\u00e3o, quanto tempo leva para configurar e executar todo o sistema de ponta a ponta e ver um resultado.","title":"Tempo para o Primeiro Resultado de Ponta a Ponta (tamb\u00e9m conhecido como Contrato F5)"},{"location":"developer-experience/#tempo-para-o-primeiro-commit","text":"Quanto tempo leva para fazer uma mudan\u00e7a que pode ser verificada/testada localmente. Uma mudan\u00e7a verificada/testada localmente \u00e9 aquela que passa nos casos de teste sem introduzir regress\u00f5es ou mudan\u00e7as quebradas.","title":"Tempo para o Primeiro Commit"},{"location":"developer-experience/#participacao","text":"Fornecer uma experi\u00eancia positiva do desenvolvedor \u00e9 um esfor\u00e7o de equipe. No entanto, certos membros podem assumir a responsabilidade por diferentes \u00e1reas para ajudar a manter toda a equipe respons\u00e1vel.","title":"Participa\u00e7\u00e3o"},{"location":"developer-experience/#lider-de-desenvolvimento-estabeleca-o-padrao","text":"Os exemplos a seguir mostram como o L\u00edder de Desenvolvimento pode estabelecer o padr\u00e3o para a experi\u00eancia do desenvolvedor. Determina o ambiente de desenvolvimento (IDE sugerida, hospedagem, etc.). Determina o ambiente de controle de origem e o n\u00famero de reposit\u00f3rios necess\u00e1rios. Dado o ambiente de desenvolvimento e a estrutura do reposit\u00f3rio, estabelece as expectativas para a equipe em termos de etapas para executar as tarefas essenciais de desenvolvimento. Nomeia o Campe\u00e3o DevEx. A escolha do IDE N\u00c3O pretende impor que todos os membros da equipe devem usar o mesmo IDE. No entanto, essa escolha direcionar\u00e1 onde o investimento em integra\u00e7\u00e3o estreita ser\u00e1 priorizado. Por exemplo, se o Visual Studio Code for a IDE sugerida , a equipe se concentrar\u00e1 em integrar as tarefas e as configura\u00e7\u00f5es de inicializa\u00e7\u00e3o do VS Code em detrimento de integra\u00e7\u00f5es semelhantes para outros IDEs. Os membros da equipe ainda devem se sentir \u00e0 vontade para usar o IDE de sua prefer\u00eancia, desde que isso n\u00e3o prejudique a equipe.","title":"L\u00edder de Desenvolvimento - Estabele\u00e7a o Padr\u00e3o"},{"location":"developer-experience/#campeao-devex-identificar-melhorias-iterativas","text":"O Campe\u00e3o DevEx assume a responsabilidade de manter a equipe respons\u00e1vel por proporcionar uma experi\u00eancia positiva do desenvolvedor. O seguinte esbo\u00e7a as responsabilidades do Campe\u00e3o DevEx. Buscar ativamente oportunidades para melhorar a experi\u00eancia do desenvolvedor da solu\u00e7\u00e3o. Trabalhar com o L\u00edder de Desenvolvimento para aprimorar de forma iterativa as expectativas da equipe em rela\u00e7\u00e3o \u00e0 experi\u00eancia do desenvolvedor. Selecionar hist\u00f3rias de a\u00e7\u00e3o para aprimorar \u00e1reas de melhoria e priorizar em rela\u00e7\u00e3o aos objetivos de entrega do projeto, envolvendo-se diretamente com o Propriet\u00e1rio do Produto e o Cliente. Atuar como especialista no assunto para o resto da equipe. Ajudar a equipe a determinar como implementar as expectativas do DevEx e identificar desvios.","title":"Campe\u00e3o DevEx - Identificar Melhorias Iterativas"},{"location":"developer-experience/#membros-da-equipe-reforcem-as-expectativas","text":"Os membros da equipe tamb\u00e9m podem ajudar a manter uns aos outros respons\u00e1veis por proporcionar uma experi\u00eancia positiva do desenvolvedor. Os exemplos a seguir mostram \u00e1reas em que os membros da equipe podem ajudar a identificar quando as expectativas do DevEx da equipe n\u00e3o est\u00e3o sendo atendidas. Solicita\u00e7\u00f5es de Pull (Pull requests). Experimente as mudan\u00e7as localmente para ver se elas est\u00e3o aderindo \u00e0s expectativas do DevEx da equipe. Revis\u00f5es de Design. Procure propostas que possam afetar negativamente a experi\u00eancia do DevEx da solu\u00e7\u00e3o. Isso pode incluir: Introdu\u00e7\u00e3o de novas tecnologias cuja test abilidade \u00e9 limitada a etapas manuais em um ambiente implantado. - Adi\u00e7\u00e3o de um novo reposit\u00f3rio.","title":"Membros da Equipe - Reforcem as Expectativas"},{"location":"developer-experience/#novos-membros-da-equipe-identifiquem-melhorias-iterativas","text":"Os novos membros da equipe est\u00e3o em posi\u00e7\u00e3o \u00fanica para identificar inst\u00e2ncias de Sabedoria Coletiva n\u00e3o documentada. O seguinte esbo\u00e7a as responsabilidades dos novos membros da equipe no que diz respeito ao DevEx: Se encontrar documenta\u00e7\u00e3o ausente, incompleta ou incorreta ao integrar-se, voc\u00ea deve registrar o problema como um novo defeito(s) e atribu\u00ed-lo ao propriet\u00e1rio do produto para triagem. Se n\u00e3o houver documenta\u00e7\u00e3o de integra\u00e7\u00e3o, anote as etapas que voc\u00ea seguiu em uma nova hist\u00f3ria do usu\u00e1rio. Atribua a nova hist\u00f3ria ao propriet\u00e1rio do produto para triagem.","title":"Novos Membros da Equipe - Identifiquem Melhorias Iterativas"},{"location":"developer-experience/#orientacao-de-facilitacao","text":"A seguir, s\u00e3o apresentados exemplos de v\u00e1rias estrat\u00e9gias que podem ser adotadas para promover uma experi\u00eancia positiva do desenvolvedor. Espera-se que cada equipe defina o que significa uma experi\u00eancia de desenvolvimento positiva no contexto de seu projeto. Al\u00e9m disso, refine isso ao longo do tempo por meio de mecanismos de feedback, como retrospectivas de sprint e de projeto.","title":"Orienta\u00e7\u00e3o de Facilita\u00e7\u00e3o"},{"location":"developer-experience/#estabeleca-atalhos-hotkeys","text":"Atribua atalhos para cada uma das tarefas essenciais. Tarefa Windows Build CTRL+SHIFT+B Teste CTRL+R,T Iniciar com Depura\u00e7\u00e3o F5","title":"Estabele\u00e7a Atalhos (Hotkeys)"},{"location":"developer-experience/#o-contrato-f5","text":"O Contrato F5 visa a capacidade de executar a solu\u00e7\u00e3o de ponta a ponta com as seguintes etapas. Clonar - git clone [URL do meu reposit\u00f3rio aqui] Configurar - defina quaisquer valores de configura\u00e7\u00e3o que precisem ser exclusivos para o indiv\u00edduo (ou seja, atualize um arquivo .env) Pressione F5 - inicie a solu\u00e7\u00e3o com depura\u00e7\u00e3o anexada. A maioria dos IDEs possui algum tipo de executor de tarefas que pode ser usado para automatizar as etapas de compila\u00e7\u00e3o, execu\u00e7\u00e3o e anexa\u00e7\u00e3o. Tente aproveitar essas ferramentas para que as etapas possam ser executadas com o m\u00ednimo de etapas manuais poss\u00edvel.","title":"O Contrato F5"},{"location":"developer-experience/#campeao-devex-em-busca-ativa-de-melhorias","text":"O Campe\u00e3o DevEx deve procurar ativamente \u00e1reas em que a equipe tem oportunidade de melhorar. Por exemplo, eles precisam implantar suas altera\u00e7\u00f5es em um ambiente fora de seu laptop antes de validar se o que fizeram funcionou. Em vez de depurar localmente, eles t\u00eam que fazer isso repetidamente para obter uma solu\u00e7\u00e3o funcional? Isso leva v\u00e1rios minutos a cada itera\u00e7\u00e3o? Isso bloqueia outros desenvolvedores devido \u00e0 conten\u00e7\u00e3o no ambiente? As seguintes cerim\u00f4nias podem ser usadas pelo Campe\u00e3o DevEx para encontrar oportunidades potenciais: Retrospectivas. Est\u00e3o sendo levantados feedbacks relacionados \u00e0s tarefas essenciais sendo dif\u00edceis ou dif\u00edceis de controlar? Bloqueios de Standup. Indiv\u00edduos est\u00e3o sendo bloqueados ou enfrentando dificuldades com as tarefas essenciais? \u00c0 medida que as oportunidades s\u00e3o identificadas, o Campe\u00e3o DevEx pode traduzi-las em hist\u00f3rias acion\u00e1veis para o backlog do produto.","title":"Campe\u00e3o DevEx em Busca Ativa de Melhorias"},{"location":"developer-experience/#torne-as-tarefas-multiplataforma","text":"Para as tarefas essenciais padronizadas durante o compromisso, certifique-se de que diferentes plataformas sejam consideradas. Os membros da equipe podem ter sistemas operacionais diferentes, e garantir que as tarefas sejam multiplataforma proporcionar\u00e1 uma oportunidade adicional de melhorar a experi\u00eancia. Consulte o guia de tarefas multiplataforma para obter orienta\u00e7\u00f5es sobre como as tarefas podem ser configuradas para incluir diferentes plataformas.","title":"Torne as Tarefas Multiplataforma"},{"location":"developer-experience/#crie-um-guia-de-integracao","text":"Ao dar as boas-vindas a novos membros da equipe ao compromisso, h\u00e1 muitas \u00e1reas para eles se adaptarem e para se atualizarem, incluindo base de c\u00f3digo, padr\u00f5es de codifica\u00e7\u00e3o, acordos da equipe e cultura da equipe. Ao adotar uma pr\u00e1tica forte de integra\u00e7\u00e3o, como um guia de integra\u00e7\u00e3o em um local centralizado que explique o escopo do projeto, processos, detalhes de configura\u00e7\u00e3o e software necess\u00e1rio, os novos membros podem ter todos os recursos necess\u00e1rios para serem eficientes, bem-sucedidos e membros valiosos da equipe desde o in\u00edcio. Consulte o modelo de guia de integra\u00e7\u00e3o para obter orienta\u00e7\u00f5es sobre como um guia de integra\u00e7\u00e3o pode se parecer.","title":"Crie um Guia de Integra\u00e7\u00e3o"},{"location":"developer-experience/#padronize-tarefas-essenciais","text":"Aplique uma estrat\u00e9gia comum em componentes de solu\u00e7\u00e3o para realizar as tarefas essenciais Padronize a configura\u00e7\u00e3o dos componentes da solu\u00e7\u00e3o Padronize a maneira como os testes s\u00e3o executados para cada componente Padronize a maneira como cada componente \u00e9 iniciado e interrompido localmente Padronize como documentar as tarefas essenciais para cada componente Essa padroniza\u00e7\u00e3o permitir\u00e1 que a equipe automatize mais facilmente essas tarefas em todos os componentes no n\u00edvel da solu\u00e7\u00e3o. Consulte as Tarefas Essenciais em N\u00edvel de Solu\u00e7\u00e3o abaixo.","title":"Padronize Tarefas Essenciais"},{"location":"developer-experience/#tarefas-essenciais-em-nivel-de-solucao","text":"Automatize a capacidade de executar cada tarefa essencial em todos os componentes da solu\u00e7\u00e3o. Um exemplo seria mapear a a\u00e7\u00e3o de compila\u00e7\u00e3o no IDE para executar a tarefa de compila\u00e7\u00e3o para cada componente na solu\u00e7\u00e3o. Mais importante ainda, configure a a\u00e7\u00e3o de inicializa\u00e7\u00e3o do IDE para iniciar todos os componentes dentro da solu\u00e7\u00e3o. Isso proporcionar\u00e1 efici\u00eancia significativa para a equipe de engenharia ao lidar com solu\u00e7\u00f5es de v\u00e1rios componentes. Quando isso n\u00e3o \u00e9 implementado, os engenheiros precisam repetir manualmente cada uma das tarefas essenciais para cada componente na solu\u00e7\u00e3o. Nessa situa\u00e7\u00e3o, o n\u00famero de etapas necess\u00e1rias para executar cada tarefa essencial \u00e9 multiplicado pelo n\u00famero de componentes no sistema. [Etapas de configura\u00e7\u00e3o + Etapas de compila\u00e7\u00e3o + Etapas de inicializa\u00e7\u00e3o/depura\u00e7\u00e3o + Etapas de interrup\u00e7\u00e3o + Etapas de execu\u00e7\u00e3o de teste + Documenta\u00e7\u00e3o de tudo isso] * [muitos componentes da solu\u00e7\u00e3o] = MUITAS ETAPAS VS. [Etapas de configura\u00e7\u00e3o + Etapas de compila\u00e7\u00e3o + Etapas de inicializa\u00e7\u00e3o/depura\u00e7\u00e3o + Etapas de interrup\u00e7\u00e3o + Etapas de execu\u00e7\u00e3o de teste + Documenta\u00e7\u00e3o de tudo isso] * [1 solu\u00e7\u00e3o] = N\u00daMERO M\u00cdNIMO DE ETAPAS","title":"Tarefas Essenciais em N\u00edvel de Solu\u00e7\u00e3o"},{"location":"developer-experience/#observabilidade","text":"A observabilidade alivia desafios imprevistos para o desenvolvedor em um sistema distribu\u00eddo complexo. Identifica gargalos de projeto mais rapidamente e com mais precis\u00e3o, aprimorando o desempenho \u00e0 medida que o desenvolvedor busca implantar altera\u00e7\u00f5es de c\u00f3digo. A adi\u00e7\u00e3o de observabilidade melhora a experi\u00eancia ao identificar e resolver erros ou c\u00f3digo quebrado. Isso resulta em menos falhas de produ\u00e7\u00e3o atuais e futuras ou menos graves. Existem muitas estrat\u00e9gias de observabilidade que um desenvolvedor pode usar ao lado das melhores pr\u00e1ticas de engenharia. Esses recursos melhoram o DevEx, garantindo uma vis\u00e3o compartilhada do sistema complexo ao longo de todo o ciclo de vida. A observabilidade no c\u00f3digo por meio de registro, tratamento de exce\u00e7\u00f5es e exposi\u00e7\u00e3o de m\u00e9tricas de aplicativo relevantes, por exemplo, promove a visibilidade consistente do desempenho em tempo real. Os pilares da observabilidade, registro , m\u00e9tricas e rastreamento , detalham quando habilitar cada um dos tr\u00eas tipos espec\u00edficos de observabilidade.","title":"Observabilidade"},{"location":"developer-experience/#minimize-o-numero-de-repositorios","text":"Dividir uma solu\u00e7\u00e3o em v\u00e1rios reposit\u00f3rios pode afetar negativamente as medidas acima. Isso tamb\u00e9m pode afetar negativamente outras \u00e1reas, como Solicita\u00e7\u00f5es de Pull, Teste Automatizado, Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua. Semelhante \u00e0s inst\u00e2ncias do IDE, o impacto negativo \u00e9 multiplicado pelo n\u00famero de reposit\u00f3rios. [Etapas de clonagem + Etapas de ramifica\u00e7\u00e3o + Etapas de confirma\u00e7\u00e3o + Etapas de CI + Revis\u00f5es e mesclagens de Solicita\u00e7\u00f5es de Pull] * [muitos reposit\u00f3rios de c\u00f3digo-fonte] = MUITAS ETAPAS VS. [Etapas de clonagem + Etapas de ramifica\u00e7\u00e3o + Etapas de confirma\u00e7\u00e3o + Etapas de CI + Revis\u00f5es e mesclagens de Solicita\u00e7\u00f5es de Pull] * [1 reposit\u00f3rio de c\u00f3digo-fonte] = N\u00daMERO M\u00cdNIMO DE ETAPAS","title":"Minimize o N\u00famero de Reposit\u00f3rios"},{"location":"developer-experience/#solicitacoes-de-pull-atomicas","text":"Quando a solu\u00e7\u00e3o est\u00e1 encapsulada dentro de um \u00fanico reposit\u00f3rio, ela tamb\u00e9m permite que as solicita\u00e7\u00f5es de pull representem uma altera\u00e7\u00e3o em v\u00e1rias camadas. Isso \u00e9 especialmente \u00fatil quando uma altera\u00e7\u00e3o requer modifica\u00e7\u00f5es em um contrato compartilhado entre v\u00e1rios componentes. Por exemplo, uma hist\u00f3ria exige que um ponto de extremidade da API seja alterado. Com essa estrat\u00e9gia, a API e o cliente da web podem ser atualizados com a mesma solicita\u00e7\u00e3o de pull. Isso evita que o branch principal seja quebrado temporariamente enquanto aguarda a mesclagem das solicita\u00e7\u00f5es de pull dependentes.","title":"Solicita\u00e7\u00f5es de Pull At\u00f4micas"},{"location":"developer-experience/#minimize-as-dependencias-remotas-para-o-desenvolvimento-local","text":"Quanto menos depend\u00eancias em componentes que n\u00e3o podem ser executados na m\u00e1quina de um desenvolvedor, menos etapas s\u00e3o necess\u00e1rias para come\u00e7ar. Portanto, menos depend\u00eancias afetar\u00e3o positivamente as medidas acima. As seguintes estrat\u00e9gias podem ser usadas para reduzir essas depend\u00eancias","title":"Minimize as Depend\u00eancias Remotas para o Desenvolvimento Local"},{"location":"developer-experience/#use-um-emulador","text":"Se dispon\u00edvel, os emuladores s\u00e3o implementa\u00e7\u00f5es de tecnologias que normalmente s\u00f3 est\u00e3o dispon\u00edveis em ambientes de nuvem. Um bom exemplo \u00e9 o emulador CosmosDB .","title":"Use um Emulador"},{"location":"developer-experience/#use-di-alternancia-para-simular-dependencias-remotas","text":"Quando a solu\u00e7\u00e3o depende de uma tecnologia que n\u00e3o pode ser executada na m\u00e1quina de um desenvolvedor, a configura\u00e7\u00e3o e o teste dessa solu\u00e7\u00e3o podem ser desafiadores. Uma estrat\u00e9gia que pode ser empregada \u00e9 criar a capacidade de substituir essa depend\u00eancia por uma que possa ser executada localmente. Abstraia a camada que tem a depend\u00eancia remota por tr\u00e1s de uma interface de propriedade da solu\u00e7\u00e3o (n\u00e3o da depend\u00eancia remota). Crie uma implementa\u00e7\u00e3o dessa interface usando uma tecnologia que possa ser executada localmente. Crie uma f\u00e1brica que decide qual inst\u00e2ncia usar. Essa decis\u00e3o pode ser baseada na configura\u00e7\u00e3o do ambiente (ou seja, na altern\u00e2ncia). Em seguida, a classe original que depende da tecnologia remota deve depender da f\u00e1brica para fornecer qual inst\u00e2ncia usar. Grande parte dessa estrat\u00e9gia pode ser simplificada com uma t\u00e9cnica adequada de inje\u00e7\u00e3o de depend\u00eancia e/ou um framework. Veja o exemplo abaixo que troca a implementa\u00e7\u00e3o do Azure Service Bus por RabbitMQ, que pode ser executado localmente. interface IPublisher { send ( message : string ) : void } class RabbitMQPublisher implements IPublisher { send ( message : string ) { //todo: enviar a mensagem via RabbitMQ } } class AzureServiceBusPublisher implements IPublisher { send ( message : string ) { //todo: enviar a mensagem via Azure Service Bus } } interface IPublisherFactory { create () : IPublisher } class PublisherFactory { create () : IPublisher { // use a vari\u00e1vel de ambiente para determinar qual inst\u00e2ncia deve ser usada if ( process . env . UseAsb ){ return new AzureServiceBusPublisher (); } else { return new RabbitMqPublisher (); } } } class MeuServico { //injete a f\u00e1brica constructor ( private readonly publisherFactory : IPublisherFactory ){ } enviarMensagem ( message : string ) : void { //use a f\u00e1brica para determinar qual inst \u00e2ncia enviar\u00e1 a mensagem const publisher = this . publisherFactory . create (); publisher . send ( message ); } }","title":"Use DI + Altern\u00e2ncia para Simular Depend\u00eancias Remotas"},{"location":"developer-experience/#alternancia-de-programacao-de-recursos","text":"Durante o desenvolvimento local, uma estrat\u00e9gia que pode ser empregada \u00e9 usar um arquivo de configura\u00e7\u00e3o, vari\u00e1vel de ambiente ou algum outro mecanismo para direcionar a solu\u00e7\u00e3o para usar uma vers\u00e3o de recursos que podem ser executados localmente. Isso \u00e9 chamado de altern\u00e2ncia de programa\u00e7\u00e3o de recursos. Para habilitar a altern\u00e2ncia, crie uma interface que defina os servi\u00e7os que dependem de recursos que podem n\u00e3o estar dispon\u00edveis localmente. Em seguida, crie uma implementa\u00e7\u00e3o dessa interface que depende da configura\u00e7\u00e3o do ambiente (ou seja, altern\u00e2ncia) para determinar como se comportar. Certifique-se de injetar a implementa\u00e7\u00e3o da interface onde ela \u00e9 necess\u00e1ria.","title":"Altern\u00e2ncia de Programa\u00e7\u00e3o de Recursos"},{"location":"developer-experience/#pontos-de-atencao","text":"","title":"Pontos de Aten\u00e7\u00e3o"},{"location":"developer-experience/#qualidade-da-experiencia-do-desenvolvedor","text":"A experi\u00eancia do desenvolvedor \u00e9 uma m\u00e9trica subjetiva, mas valiosa. Realize pesquisas de satisfa\u00e7\u00e3o do desenvolvedor regularmente para entender como as mudan\u00e7as afetam a equipe.","title":"Qualidade da Experi\u00eancia do Desenvolvedor"},{"location":"developer-experience/#atencao-as-documentacoes","text":"Documenta\u00e7\u00f5es atualizadas e precisas s\u00e3o fundamentais para uma boa experi\u00eancia do desenvolvedor. Garanta que todas as documenta\u00e7\u00f5es relacionadas \u00e0s tarefas essenciais estejam sempre atualizadas e sejam de f\u00e1cil acesso para a equipe.","title":"Aten\u00e7\u00e3o \u00e0s Documenta\u00e7\u00f5es"},{"location":"developer-experience/#cultura-de-feedback","text":"Promova uma cultura de feedback aberto na equipe, onde os membros possam compartilhar suas experi\u00eancias e sugest\u00f5es para melhorar a experi\u00eancia do desenvolvedor. Incentive os desenvolvedores a relatar problemas de DevEx e implementar melhorias iterativas.","title":"Cultura de Feedback"},{"location":"developer-experience/#conclusao","text":"Uma experi\u00eancia positiva do desenvolvedor \u00e9 fundamental para aumentar a efici\u00eancia da equipe de desenvolvimento e garantir a qualidade do software. Ao priorizar a automa\u00e7\u00e3o, padroniza\u00e7\u00e3o e simplifica\u00e7\u00e3o das tarefas essenciais, as equipes podem proporcionar uma experi\u00eancia do desenvolvedor excepcional. Isso n\u00e3o s\u00f3 beneficia os membros da equipe atual, mas tamb\u00e9m contribui para a integra\u00e7\u00e3o suave de novos membros e o sucesso cont\u00ednuo do projeto. Refer\u00eancias: Princ\u00edpios de DevOps da Microsoft SRE - Site Reliability Engineering 12 Factor App Padr\u00f5es e Pr\u00e1ticas de Engenharia da Microsoft","title":"Conclus\u00e3o"},{"location":"developer-experience/client-app-inner-loop/","text":"Separando aplicativos cliente dos servi\u00e7os que consomem durante o desenvolvimento Os aplicativos cliente normalmente dependem de servi\u00e7os remotos para alimentar seus aplicativos. No entanto, os cronogramas de desenvolvimento entre o aplicativo cliente e os servi\u00e7os nem sempre se alinham completamente. Para um ciclo de desenvolvimento interno de alta velocidade, o desenvolvimento do aplicativo cliente deve ser desacoplado dos servi\u00e7os backend, permitindo ainda que o aplicativo \"chame\" os servi\u00e7os para testes locais. Op\u00e7\u00f5es Existem v\u00e1rias op\u00e7\u00f5es para desacoplar o desenvolvimento do aplicativo cliente dos servi\u00e7os backend. As op\u00e7\u00f5es variam desde a incorpora\u00e7\u00e3o de implementa\u00e7\u00f5es fict\u00edcias dos servi\u00e7os na aplica\u00e7\u00e3o at\u00e9 o uso de vers\u00f5es simplificadas dos servi\u00e7os. Este documento lista v\u00e1rias op\u00e7\u00f5es e discute as compensa\u00e7\u00f5es. Mocks Incorporados Uma solu\u00e7\u00e3o de mock incorporada inclui classes que implementam as interfaces de servi\u00e7o localmente. As interfaces e classes de dados, tamb\u00e9m chamadas de modelos ou objetos de transfer\u00eancia de dados (DTOs), muitas vezes s\u00e3o geradas a partir das especifica\u00e7\u00f5es da API dos servi\u00e7os usando ferramentas como nswag ( RicoSuter/NSwag: The Swagger/OpenAPI toolchain for .NET, ASP.NET Core and TypeScript. (github.com) ) ou autorest ( Azure/autorest: OpenAPI (f.k.a Swagger) Specification code generator. Supports C#, PowerShell, Go, Java, Node.js, TypeScript, Python, Ruby (github.com) ). Uma implementa\u00e7\u00e3o simples do servi\u00e7o pode retornar uma resposta est\u00e1tica. Para servi\u00e7os RESTful, as respostas JSON para os stubs podem ser armazenadas como recursos da aplica\u00e7\u00e3o ou simplesmente como strings est\u00e1ticas. public Task < UserProfile > GetUserAsync ( long userId , CancellationToken cancellationToken ) { UserProfile result = Newtonsoft . Json . JsonConvert . DeserializeObject < UserProfile > ( MockUserProfile . UserProfile , new Newtonsoft . Json . JsonSerializerSettings ()); return Task . FromResult ( result ); } Implementa\u00e7\u00f5es mais sofisticadas podem retornar erros aleat\u00f3rios para testar os caminhos de c\u00f3digo de resili\u00eancia do aplicativo. Os mocks podem ser ativados por meio de compila\u00e7\u00e3o condicional ou dinamicamente por meio da configura\u00e7\u00e3o do aplicativo. Em ambos os casos, \u00e9 recomend\u00e1vel garantir que mocks, respostas de servi\u00e7o e configura\u00e7\u00f5es externalizadas n\u00e3o sejam inclu\u00eddos na vers\u00e3o final para evitar comportamentos confusos e inclus\u00e3o de vulnerabilidades potenciais. Exemplo: Registrando Mocks via Inje\u00e7\u00e3o de Depend\u00eancia Cont\u00eaineres de Inje\u00e7\u00e3o de Depend\u00eancia como o Unity ( Unity Container Introduction | Unity Container ) tornam f\u00e1cil alternar entre servi\u00e7os fict\u00edcios e implementa\u00e7\u00f5es reais de cliente de servi\u00e7o. Como ambos implementam a mesma interface, as implementa\u00e7\u00f5es podem ser registradas com o cont\u00eainer Unity. public static void Bootstrap ( IUnityContainer container ) { #if DEBUG container . RegisterSingleton < IUserServiceClient , MockUserService > (); #else container . RegisterSingleton < IUserServiceClient , UserServiceClient > (); #endif } Consumindo mocks via Inje\u00e7\u00e3o de Depend\u00eancia O c\u00f3digo que consome as interfaces n\u00e3o perceber\u00e1 a diferen\u00e7a. public class UserPageModel { private readonly IUserServiceClient userServiceClient ; public UserPageModel ( IUserServiceClient userServiceClient ) { this . userServiceClient = userServiceClient ; } // ... } Servi\u00e7os Locais A abordagem com Servi\u00e7os Executados Localmente \u00e9 substituir a chamada no cliente que aponta para o ponto de extremidade real (seja desenvolvimento, QA, produ\u00e7\u00e3o, etc.) por um ponto de extremidade local. Essa abordagem tamb\u00e9m permite injetar proxies de captura de tr\u00e1fego e modelagem como o Postman ( Postman API Platform | Sign Up for Free ) ou o Fiddler ( Fiddler | Web Debugging Proxy and Troubleshooting Solutions (telerik.com) ). A vantagem dessa abordagem \u00e9 que as APIs s\u00e3o desacopladas do cliente e podem ser atualizadas/modificadas independentemente (por exemplo, alterando c\u00f3digos de resposta, alterando dados) sem exigir altera\u00e7\u00f5es no cliente. Isso ajuda a desbloquear novos cen\u00e1rios de desenvolvimento e oferece flexibilidade durante a fase de desenvolvimento. O desafio com essa abordagem \u00e9 que ela requer configura\u00e7\u00e3o e execu\u00e7\u00e3o dos servi\u00e7os localmente. Existem ferramentas que ajudam a simplificar esse processo (por exemplo, JsonServer , Postman Mock Server ). Servi\u00e7os Locais de Alta Fidelidade Um stub de servi\u00e7o local implementa as APIs esperadas. Assim como o mock incorporado, ele pode ser gerado com base nos contratos de API existentes (por exemplo, OpenAPI). Uma abordagem de alta fidelidade empacota os servi\u00e7os reais juntamente com dados simplificados em cont\u00eaineres Docker que podem ser executados localmente usando docker-compose antes que o aplicativo cliente seja iniciado para depura\u00e7\u00e3o e testes locais. Para permitir a execu\u00e7\u00e3o de servi\u00e7os completamente locais, a \"vers\u00e3o local\" substitui servi\u00e7os em nuvem dependentes por alternativas locais, como armazenamento de arquivos em vez de blobs, SQL Server em execu\u00e7\u00e3o localmente em vez de SQL AzureDB. Essa abordagem tamb\u00e9m permite testes de integra\u00e7\u00e3o de alta fidelidade sem iniciar implanta\u00e7\u00f5es distribu\u00eddas. Stub / Servi\u00e7os Falsos Abordagens de menor fidelidade executam servi\u00e7os de stub, que podem ser gerados a partir das especifica\u00e7\u00f5es da API, ou executam servidores fict\u00edcios como JsonServer ( JsonServer.io: A fake json server API Service for prototyping and testing. ) ou Postman. Todos esses servi\u00e7os responderiam com mensagens JSON predefinidas e configuradas. Como decidir Pr\u00f3s Contras Exemplo ao desenvolver para: Exemplo de quando n\u00e3o usar Mocks Incorporados Simplifica a experi\u00eancia do desenvolvedor F5 Fortemente acoplado ao Cliente Cen\u00e1rios de dados de tipo mais est\u00e1tico Testes (por exemplo, testes unit\u00e1rios, testes de integra\u00e7\u00e3o) Sem depend\u00eancias externas para gerenciar Dados codificados Integra\u00e7\u00e3o inicial com servi\u00e7os Mocking via Inje\u00e7\u00e3o de Depend\u00eancia pode ser um esfor\u00e7o n\u00e3o trivial Servi\u00e7os Locais de Alta Fidelidade Desacoplado do Cliente Requer ferramentas extras, ou seja, sobrecarga de infraestrutura local Rotas URL Quando os contratos da API n\u00e3o est\u00e3o dispon\u00edveis Mais f\u00e1cil modificar independentemente a resposta Configura\u00e7\u00e3o extra e configura\u00e7\u00e3o de servi\u00e7os Atualiza\u00e7\u00f5es independentes dos servi\u00e7os Pode utilizar o tr\u00e1fego HTTP Mais f\u00e1cil substituir por servi\u00e7os reais posteriormente Servi\u00e7os de Stub/Fake Desacoplado do cliente Requer ferramentas extras, ou seja, sobrecarga de infraestrutura local C\u00f3digos de resposta Quando os contratos da API est\u00e3o dispon\u00edveis Mais f\u00e1cil modificar independentemente a resposta Configura\u00e7\u00e3o extra e configura\u00e7\u00e3o de servi\u00e7os Cen\u00e1rios de dados complexos/vari\u00e1veis Quando os contratos da API n\u00e3o est\u00e3o dispon\u00edveis Atualiza\u00e7\u00f5es independentes dos servi\u00e7os Pode n\u00e3o fornecer a fidelidade completa da API esperada Pode utilizar o tr\u00e1fego HTTP Mais f\u00e1cil substituir por servi\u00e7os reais posteriormente","title":"Separando aplicativos cliente dos servi\u00e7os que consomem durante o desenvolvimento"},{"location":"developer-experience/client-app-inner-loop/#separando-aplicativos-cliente-dos-servicos-que-consomem-durante-o-desenvolvimento","text":"Os aplicativos cliente normalmente dependem de servi\u00e7os remotos para alimentar seus aplicativos. No entanto, os cronogramas de desenvolvimento entre o aplicativo cliente e os servi\u00e7os nem sempre se alinham completamente. Para um ciclo de desenvolvimento interno de alta velocidade, o desenvolvimento do aplicativo cliente deve ser desacoplado dos servi\u00e7os backend, permitindo ainda que o aplicativo \"chame\" os servi\u00e7os para testes locais.","title":"Separando aplicativos cliente dos servi\u00e7os que consomem durante o desenvolvimento"},{"location":"developer-experience/client-app-inner-loop/#opcoes","text":"Existem v\u00e1rias op\u00e7\u00f5es para desacoplar o desenvolvimento do aplicativo cliente dos servi\u00e7os backend. As op\u00e7\u00f5es variam desde a incorpora\u00e7\u00e3o de implementa\u00e7\u00f5es fict\u00edcias dos servi\u00e7os na aplica\u00e7\u00e3o at\u00e9 o uso de vers\u00f5es simplificadas dos servi\u00e7os. Este documento lista v\u00e1rias op\u00e7\u00f5es e discute as compensa\u00e7\u00f5es.","title":"Op\u00e7\u00f5es"},{"location":"developer-experience/client-app-inner-loop/#mocks-incorporados","text":"Uma solu\u00e7\u00e3o de mock incorporada inclui classes que implementam as interfaces de servi\u00e7o localmente. As interfaces e classes de dados, tamb\u00e9m chamadas de modelos ou objetos de transfer\u00eancia de dados (DTOs), muitas vezes s\u00e3o geradas a partir das especifica\u00e7\u00f5es da API dos servi\u00e7os usando ferramentas como nswag ( RicoSuter/NSwag: The Swagger/OpenAPI toolchain for .NET, ASP.NET Core and TypeScript. (github.com) ) ou autorest ( Azure/autorest: OpenAPI (f.k.a Swagger) Specification code generator. Supports C#, PowerShell, Go, Java, Node.js, TypeScript, Python, Ruby (github.com) ). Uma implementa\u00e7\u00e3o simples do servi\u00e7o pode retornar uma resposta est\u00e1tica. Para servi\u00e7os RESTful, as respostas JSON para os stubs podem ser armazenadas como recursos da aplica\u00e7\u00e3o ou simplesmente como strings est\u00e1ticas. public Task < UserProfile > GetUserAsync ( long userId , CancellationToken cancellationToken ) { UserProfile result = Newtonsoft . Json . JsonConvert . DeserializeObject < UserProfile > ( MockUserProfile . UserProfile , new Newtonsoft . Json . JsonSerializerSettings ()); return Task . FromResult ( result ); } Implementa\u00e7\u00f5es mais sofisticadas podem retornar erros aleat\u00f3rios para testar os caminhos de c\u00f3digo de resili\u00eancia do aplicativo. Os mocks podem ser ativados por meio de compila\u00e7\u00e3o condicional ou dinamicamente por meio da configura\u00e7\u00e3o do aplicativo. Em ambos os casos, \u00e9 recomend\u00e1vel garantir que mocks, respostas de servi\u00e7o e configura\u00e7\u00f5es externalizadas n\u00e3o sejam inclu\u00eddos na vers\u00e3o final para evitar comportamentos confusos e inclus\u00e3o de vulnerabilidades potenciais.","title":"Mocks Incorporados"},{"location":"developer-experience/client-app-inner-loop/#exemplo-registrando-mocks-via-injecao-de-dependencia","text":"Cont\u00eaineres de Inje\u00e7\u00e3o de Depend\u00eancia como o Unity ( Unity Container Introduction | Unity Container ) tornam f\u00e1cil alternar entre servi\u00e7os fict\u00edcios e implementa\u00e7\u00f5es reais de cliente de servi\u00e7o. Como ambos implementam a mesma interface, as implementa\u00e7\u00f5es podem ser registradas com o cont\u00eainer Unity. public static void Bootstrap ( IUnityContainer container ) { #if DEBUG container . RegisterSingleton < IUserServiceClient , MockUserService > (); #else container . RegisterSingleton < IUserServiceClient , UserServiceClient > (); #endif }","title":"Exemplo: Registrando Mocks via Inje\u00e7\u00e3o de Depend\u00eancia"},{"location":"developer-experience/client-app-inner-loop/#consumindo-mocks-via-injecao-de-dependencia","text":"O c\u00f3digo que consome as interfaces n\u00e3o perceber\u00e1 a diferen\u00e7a. public class UserPageModel { private readonly IUserServiceClient userServiceClient ; public UserPageModel ( IUserServiceClient userServiceClient ) { this . userServiceClient = userServiceClient ; } // ... }","title":"Consumindo mocks via Inje\u00e7\u00e3o de Depend\u00eancia"},{"location":"developer-experience/client-app-inner-loop/#servicos-locais","text":"A abordagem com Servi\u00e7os Executados Localmente \u00e9 substituir a chamada no cliente que aponta para o ponto de extremidade real (seja desenvolvimento, QA, produ\u00e7\u00e3o, etc.) por um ponto de extremidade local. Essa abordagem tamb\u00e9m permite injetar proxies de captura de tr\u00e1fego e modelagem como o Postman ( Postman API Platform | Sign Up for Free ) ou o Fiddler ( Fiddler | Web Debugging Proxy and Troubleshooting Solutions (telerik.com) ). A vantagem dessa abordagem \u00e9 que as APIs s\u00e3o desacopladas do cliente e podem ser atualizadas/modificadas independentemente (por exemplo, alterando c\u00f3digos de resposta, alterando dados) sem exigir altera\u00e7\u00f5es no cliente. Isso ajuda a desbloquear novos cen\u00e1rios de desenvolvimento e oferece flexibilidade durante a fase de desenvolvimento. O desafio com essa abordagem \u00e9 que ela requer configura\u00e7\u00e3o e execu\u00e7\u00e3o dos servi\u00e7os localmente. Existem ferramentas que ajudam a simplificar esse processo (por exemplo, JsonServer , Postman Mock Server ).","title":"Servi\u00e7os Locais"},{"location":"developer-experience/client-app-inner-loop/#servicos-locais-de-alta-fidelidade","text":"Um stub de servi\u00e7o local implementa as APIs esperadas. Assim como o mock incorporado, ele pode ser gerado com base nos contratos de API existentes (por exemplo, OpenAPI). Uma abordagem de alta fidelidade empacota os servi\u00e7os reais juntamente com dados simplificados em cont\u00eaineres Docker que podem ser executados localmente usando docker-compose antes que o aplicativo cliente seja iniciado para depura\u00e7\u00e3o e testes locais. Para permitir a execu\u00e7\u00e3o de servi\u00e7os completamente locais, a \"vers\u00e3o local\" substitui servi\u00e7os em nuvem dependentes por alternativas locais, como armazenamento de arquivos em vez de blobs, SQL Server em execu\u00e7\u00e3o localmente em vez de SQL AzureDB. Essa abordagem tamb\u00e9m permite testes de integra\u00e7\u00e3o de alta fidelidade sem iniciar implanta\u00e7\u00f5es distribu\u00eddas.","title":"Servi\u00e7os Locais de Alta Fidelidade"},{"location":"developer-experience/client-app-inner-loop/#stub-servicos-falsos","text":"Abordagens de menor fidelidade executam servi\u00e7os de stub, que podem ser gerados a partir das especifica\u00e7\u00f5es da API, ou executam servidores fict\u00edcios como JsonServer ( JsonServer.io: A fake json server API Service for prototyping and testing. ) ou Postman. Todos esses servi\u00e7os responderiam com mensagens JSON predefinidas e configuradas.","title":"Stub / Servi\u00e7os Falsos"},{"location":"developer-experience/client-app-inner-loop/#como-decidir","text":"Pr\u00f3s Contras Exemplo ao desenvolver para: Exemplo de quando n\u00e3o usar Mocks Incorporados Simplifica a experi\u00eancia do desenvolvedor F5 Fortemente acoplado ao Cliente Cen\u00e1rios de dados de tipo mais est\u00e1tico Testes (por exemplo, testes unit\u00e1rios, testes de integra\u00e7\u00e3o) Sem depend\u00eancias externas para gerenciar Dados codificados Integra\u00e7\u00e3o inicial com servi\u00e7os Mocking via Inje\u00e7\u00e3o de Depend\u00eancia pode ser um esfor\u00e7o n\u00e3o trivial Servi\u00e7os Locais de Alta Fidelidade Desacoplado do Cliente Requer ferramentas extras, ou seja, sobrecarga de infraestrutura local Rotas URL Quando os contratos da API n\u00e3o est\u00e3o dispon\u00edveis Mais f\u00e1cil modificar independentemente a resposta Configura\u00e7\u00e3o extra e configura\u00e7\u00e3o de servi\u00e7os Atualiza\u00e7\u00f5es independentes dos servi\u00e7os Pode utilizar o tr\u00e1fego HTTP Mais f\u00e1cil substituir por servi\u00e7os reais posteriormente Servi\u00e7os de Stub/Fake Desacoplado do cliente Requer ferramentas extras, ou seja, sobrecarga de infraestrutura local C\u00f3digos de resposta Quando os contratos da API est\u00e3o dispon\u00edveis Mais f\u00e1cil modificar independentemente a resposta Configura\u00e7\u00e3o extra e configura\u00e7\u00e3o de servi\u00e7os Cen\u00e1rios de dados complexos/vari\u00e1veis Quando os contratos da API n\u00e3o est\u00e3o dispon\u00edveis Atualiza\u00e7\u00f5es independentes dos servi\u00e7os Pode n\u00e3o fornecer a fidelidade completa da API esperada Pode utilizar o tr\u00e1fego HTTP Mais f\u00e1cil substituir por servi\u00e7os reais posteriormente","title":"Como decidir"},{"location":"developer-experience/copilots/","text":"Copilots Existem diversas ferramentas de IA que podem aprimorar a experi\u00eancia do desenvolvedor. Este artigo discutir\u00e1 as ferramentas dispon\u00edveis, bem como conselhos sobre quando pode ser apropriado usar essas ferramentas. GitHub Copilot A vers\u00e3o atual do GitHub Copilot pode fornecer conclus\u00e3o de c\u00f3digo em muitos IDEs populares. Por exemplo, a extens\u00e3o para o VS Code que pode ser instalada no Marketplace do VS Code. Ela requer uma conta do GitHub para uso. Para obter mais informa\u00e7\u00f5es sobre quais IDEs s\u00e3o suportados, quais idiomas s\u00e3o suportados, custos, recursos, etc., consulte as informa\u00e7\u00f5es em Copilot e Copilot for Business . Alguns exemplos de casos de uso para o GitHub Copilot incluem: Escrever Documenta\u00e7\u00e3o . Por exemplo, o par\u00e1grafo acima foi escrito usando o Copilot. Escrever Testes Unit\u00e1rios . Dado que a configura\u00e7\u00e3o e asser\u00e7\u00f5es muitas vezes s\u00e3o consistentes em testes unit\u00e1rios, o Copilot tende a ser muito preciso. Desbloquear . Muitas vezes \u00e9 dif\u00edcil come\u00e7ar a escrever quando se est\u00e1 olhando para uma p\u00e1gina em branco. O Copilot pode preencher o espa\u00e7o com algo que pode ou n\u00e3o ser exatamente o que voc\u00ea deseja fazer, mas pode ajudar a colocar voc\u00ea na mentalidade certa. Se voc\u00ea quiser que o Copilot escreva algo \u00fatil para voc\u00ea, tente escrever um coment\u00e1rio que descreva o que seu c\u00f3digo vai fazer - muitas vezes ele pode continuar a partir da\u00ed. GitHub Copilot Labs O Copilot possui uma extens\u00e3o GitHub Copilot Labs que oferece recursos adicionais que ainda n\u00e3o est\u00e3o prontos para o uso principal. Para o VS Code, voc\u00ea pode instal\u00e1-lo no Marketplace do VS Code. Esses recursos incluem: Explicar . O Copilot pode explicar o que o c\u00f3digo est\u00e1 fazendo em linguagem natural. Traduzir . O Copilot pode traduzir c\u00f3digo de um idioma para outro. Pinc\u00e9is . Voc\u00ea pode selecionar c\u00f3digo que o Copilot modificar\u00e1 inline com base em um \"pincel\" que voc\u00ea selecionar, por exemplo, para tornar o c\u00f3digo mais leg\u00edvel, corrigir bugs, melhorar a depura\u00e7\u00e3o, documentar, etc. Gerar Testes . O Copilot pode gerar testes unit\u00e1rios para seu c\u00f3digo. No entanto, atualmente isso est\u00e1 limitado ao JavaScript e TypeScript. GitHub Copilot X A pr\u00f3xima vers\u00e3o do Copilot oferece v\u00e1rias novas possibilidades al\u00e9m da conclus\u00e3o de c\u00f3digo. Estas incluem: Chat . Em vez de apenas fornecer conclus\u00e3o de c\u00f3digo, o Copilot poder\u00e1 ter uma conversa com voc\u00ea sobre o que voc\u00ea deseja fazer. Ele tem contexto sobre o c\u00f3digo em que voc\u00ea est\u00e1 trabalhando e pode fornecer sugest\u00f5es com base nesse contexto. Al\u00e9m de apenas escrever c\u00f3digo, considere usar o chat para: Construir \u00cdndices SQL . Dada uma consulta, o ChatGPT pode gerar um \u00edndice SQL que melhorar\u00e1 o desempenho da consulta. Escrever Express\u00f5es Regulares . Essas s\u00e3o notoriamente dif\u00edceis de escrever, mas o ChatGPT pode ger\u00e1-las para voc\u00ea se voc\u00ea fornecer alguma entrada de exemplo e descrever o que deseja extrair. Melhorar e Validar . Se voc\u00ea n\u00e3o tiver certeza das implica\u00e7\u00f5es de escrever c\u00f3digo de uma determinada maneira, pode fazer perguntas a esse respeito. Por exemplo, voc\u00ea pode perguntar se h\u00e1 uma maneira de escrever o c\u00f3digo que seja mais eficiente em termos de desempenho ou use menos mem\u00f3ria. Uma vez que ele lhe der uma opini\u00e3o, voc\u00ea pode pedir que ele forne\u00e7a documenta\u00e7\u00e3o que valide essa afirma\u00e7\u00e3o. Explicar . O Copilot pode explicar o que o c\u00f3digo est\u00e1 fazendo em linguagem natural. Escrever C\u00f3digo . Dado um est\u00edmulo pelo desenvolvedor, ele pode escrever c\u00f3digo que voc\u00ea pode implantar com um clique em arquivos existentes ou novos. Depurar . O Copilot pode analisar seu c\u00f3digo e propor solu\u00e7\u00f5es para corrigir bugs. Ele pode fazer a maioria do que o Labs pode fazer com \"pinc\u00e9is\" como \"t\u00f3picos\", mas enquanto o Labs altera o c\u00f3digo no seu arquivo, a funcionalidade de chat simplesmente mostra o que ele mudaria na janela. No entanto, tamb\u00e9m existe um \"modo inline\" para o GitHub Copilot Chat que permite fazer altera\u00e7\u00f5es no seu c\u00f3digo inline, o que n\u00e3o tem essa mesma limita\u00e7\u00e3o. ChatGPT / Bing Chat Para programa\u00e7\u00e3o, ferramentas gen\u00e9ricas de chat de IA, como ChatGPT e Bing Chat, s\u00e3o menos \u00fateis, mas ainda t\u00eam seu lugar. O GitHub Copilot responder\u00e1 apenas a \"perguntas sobre programa\u00e7\u00e3o\" e sua interpreta\u00e7\u00e3o dessa regra pode ser um pouco restritiva. Alguns casos de uso para usar ChatGPT ou Bing Chat incluem: Escrever Documenta\u00e7\u00e3o . O Copilot pode escrever documenta\u00e7\u00e3o, mas usando o ChatGPT ou o Bing Chat, voc\u00ea pode expandir sua documenta\u00e7\u00e3o para incluir informa\u00e7\u00f5es comerciais, casos de uso, contexto adicional, etc. Mudar de Perspectiva . O ChatGPT pode assumir a identidade de uma persona ou at\u00e9 mesmo de um sistema e responder a perguntas a partir dessa perspectiva. Por exemplo, voc\u00ea pode pedir para explicar o que um determinado trecho de c\u00f3digo faz da perspectiva de um usu\u00e1rio. Voc\u00ea pode pedir para o ChatGPT imaginar que \u00e9 um administrador de banco de dados e perguntar como melhorar uma consulta espec\u00edfica. Ao usar o Bing Chat, experimente com os modos, \u00e0s vezes mudar para o Modo Criativo pode fornecer os resultados de que voc\u00ea precisa. Engenharia de Est\u00edmulo As ferramentas de IA de chat s\u00e3o t\u00e3o boas quanto os est\u00edmulos que voc\u00ea lhes d\u00e1. A qualidade e a adequa\u00e7\u00e3o da sa\u00edda podem variar muito dependendo do est\u00edmulo. Al\u00e9m disso, muitas dessas ferramentas limitam o n\u00famero de est\u00edmulos que voc\u00ea pode enviar em um determinado per\u00edodo de tempo. Para saber mais sobre engenharia de est\u00edmulos, voc\u00ea pode revisar a documenta\u00e7\u00e3o de c\u00f3digo aberto [aqui](https://github.com/brex","title":"Copilots"},{"location":"developer-experience/copilots/#copilots","text":"Existem diversas ferramentas de IA que podem aprimorar a experi\u00eancia do desenvolvedor. Este artigo discutir\u00e1 as ferramentas dispon\u00edveis, bem como conselhos sobre quando pode ser apropriado usar essas ferramentas.","title":"Copilots"},{"location":"developer-experience/copilots/#github-copilot","text":"A vers\u00e3o atual do GitHub Copilot pode fornecer conclus\u00e3o de c\u00f3digo em muitos IDEs populares. Por exemplo, a extens\u00e3o para o VS Code que pode ser instalada no Marketplace do VS Code. Ela requer uma conta do GitHub para uso. Para obter mais informa\u00e7\u00f5es sobre quais IDEs s\u00e3o suportados, quais idiomas s\u00e3o suportados, custos, recursos, etc., consulte as informa\u00e7\u00f5es em Copilot e Copilot for Business . Alguns exemplos de casos de uso para o GitHub Copilot incluem: Escrever Documenta\u00e7\u00e3o . Por exemplo, o par\u00e1grafo acima foi escrito usando o Copilot. Escrever Testes Unit\u00e1rios . Dado que a configura\u00e7\u00e3o e asser\u00e7\u00f5es muitas vezes s\u00e3o consistentes em testes unit\u00e1rios, o Copilot tende a ser muito preciso. Desbloquear . Muitas vezes \u00e9 dif\u00edcil come\u00e7ar a escrever quando se est\u00e1 olhando para uma p\u00e1gina em branco. O Copilot pode preencher o espa\u00e7o com algo que pode ou n\u00e3o ser exatamente o que voc\u00ea deseja fazer, mas pode ajudar a colocar voc\u00ea na mentalidade certa. Se voc\u00ea quiser que o Copilot escreva algo \u00fatil para voc\u00ea, tente escrever um coment\u00e1rio que descreva o que seu c\u00f3digo vai fazer - muitas vezes ele pode continuar a partir da\u00ed.","title":"GitHub Copilot"},{"location":"developer-experience/copilots/#github-copilot-labs","text":"O Copilot possui uma extens\u00e3o GitHub Copilot Labs que oferece recursos adicionais que ainda n\u00e3o est\u00e3o prontos para o uso principal. Para o VS Code, voc\u00ea pode instal\u00e1-lo no Marketplace do VS Code. Esses recursos incluem: Explicar . O Copilot pode explicar o que o c\u00f3digo est\u00e1 fazendo em linguagem natural. Traduzir . O Copilot pode traduzir c\u00f3digo de um idioma para outro. Pinc\u00e9is . Voc\u00ea pode selecionar c\u00f3digo que o Copilot modificar\u00e1 inline com base em um \"pincel\" que voc\u00ea selecionar, por exemplo, para tornar o c\u00f3digo mais leg\u00edvel, corrigir bugs, melhorar a depura\u00e7\u00e3o, documentar, etc. Gerar Testes . O Copilot pode gerar testes unit\u00e1rios para seu c\u00f3digo. No entanto, atualmente isso est\u00e1 limitado ao JavaScript e TypeScript.","title":"GitHub Copilot Labs"},{"location":"developer-experience/copilots/#github-copilot-x","text":"A pr\u00f3xima vers\u00e3o do Copilot oferece v\u00e1rias novas possibilidades al\u00e9m da conclus\u00e3o de c\u00f3digo. Estas incluem: Chat . Em vez de apenas fornecer conclus\u00e3o de c\u00f3digo, o Copilot poder\u00e1 ter uma conversa com voc\u00ea sobre o que voc\u00ea deseja fazer. Ele tem contexto sobre o c\u00f3digo em que voc\u00ea est\u00e1 trabalhando e pode fornecer sugest\u00f5es com base nesse contexto. Al\u00e9m de apenas escrever c\u00f3digo, considere usar o chat para: Construir \u00cdndices SQL . Dada uma consulta, o ChatGPT pode gerar um \u00edndice SQL que melhorar\u00e1 o desempenho da consulta. Escrever Express\u00f5es Regulares . Essas s\u00e3o notoriamente dif\u00edceis de escrever, mas o ChatGPT pode ger\u00e1-las para voc\u00ea se voc\u00ea fornecer alguma entrada de exemplo e descrever o que deseja extrair. Melhorar e Validar . Se voc\u00ea n\u00e3o tiver certeza das implica\u00e7\u00f5es de escrever c\u00f3digo de uma determinada maneira, pode fazer perguntas a esse respeito. Por exemplo, voc\u00ea pode perguntar se h\u00e1 uma maneira de escrever o c\u00f3digo que seja mais eficiente em termos de desempenho ou use menos mem\u00f3ria. Uma vez que ele lhe der uma opini\u00e3o, voc\u00ea pode pedir que ele forne\u00e7a documenta\u00e7\u00e3o que valide essa afirma\u00e7\u00e3o. Explicar . O Copilot pode explicar o que o c\u00f3digo est\u00e1 fazendo em linguagem natural. Escrever C\u00f3digo . Dado um est\u00edmulo pelo desenvolvedor, ele pode escrever c\u00f3digo que voc\u00ea pode implantar com um clique em arquivos existentes ou novos. Depurar . O Copilot pode analisar seu c\u00f3digo e propor solu\u00e7\u00f5es para corrigir bugs. Ele pode fazer a maioria do que o Labs pode fazer com \"pinc\u00e9is\" como \"t\u00f3picos\", mas enquanto o Labs altera o c\u00f3digo no seu arquivo, a funcionalidade de chat simplesmente mostra o que ele mudaria na janela. No entanto, tamb\u00e9m existe um \"modo inline\" para o GitHub Copilot Chat que permite fazer altera\u00e7\u00f5es no seu c\u00f3digo inline, o que n\u00e3o tem essa mesma limita\u00e7\u00e3o.","title":"GitHub Copilot X"},{"location":"developer-experience/copilots/#chatgpt-bing-chat","text":"Para programa\u00e7\u00e3o, ferramentas gen\u00e9ricas de chat de IA, como ChatGPT e Bing Chat, s\u00e3o menos \u00fateis, mas ainda t\u00eam seu lugar. O GitHub Copilot responder\u00e1 apenas a \"perguntas sobre programa\u00e7\u00e3o\" e sua interpreta\u00e7\u00e3o dessa regra pode ser um pouco restritiva. Alguns casos de uso para usar ChatGPT ou Bing Chat incluem: Escrever Documenta\u00e7\u00e3o . O Copilot pode escrever documenta\u00e7\u00e3o, mas usando o ChatGPT ou o Bing Chat, voc\u00ea pode expandir sua documenta\u00e7\u00e3o para incluir informa\u00e7\u00f5es comerciais, casos de uso, contexto adicional, etc. Mudar de Perspectiva . O ChatGPT pode assumir a identidade de uma persona ou at\u00e9 mesmo de um sistema e responder a perguntas a partir dessa perspectiva. Por exemplo, voc\u00ea pode pedir para explicar o que um determinado trecho de c\u00f3digo faz da perspectiva de um usu\u00e1rio. Voc\u00ea pode pedir para o ChatGPT imaginar que \u00e9 um administrador de banco de dados e perguntar como melhorar uma consulta espec\u00edfica. Ao usar o Bing Chat, experimente com os modos, \u00e0s vezes mudar para o Modo Criativo pode fornecer os resultados de que voc\u00ea precisa.","title":"ChatGPT / Bing Chat"},{"location":"developer-experience/copilots/#engenharia-de-estimulo","text":"As ferramentas de IA de chat s\u00e3o t\u00e3o boas quanto os est\u00edmulos que voc\u00ea lhes d\u00e1. A qualidade e a adequa\u00e7\u00e3o da sa\u00edda podem variar muito dependendo do est\u00edmulo. Al\u00e9m disso, muitas dessas ferramentas limitam o n\u00famero de est\u00edmulos que voc\u00ea pode enviar em um determinado per\u00edodo de tempo. Para saber mais sobre engenharia de est\u00edmulos, voc\u00ea pode revisar a documenta\u00e7\u00e3o de c\u00f3digo aberto [aqui](https://github.com/brex","title":"Engenharia de Est\u00edmulo"},{"location":"developer-experience/cross-platform-tasks/","text":"Tarefas de Plataforma Cruzada Existem v\u00e1rias op\u00e7\u00f5es para aliviar problemas de compatibilidade entre plataformas cruzadas. Execu\u00e7\u00e3o de tarefas em um cont\u00eainer Uso do sistema de tarefas no VS Code, que fornece op\u00e7\u00f5es para permitir que comandos sejam executados espec\u00edficos para um sistema operacional. Docker ou Baseado em Cont\u00eainer Usar cont\u00eaineres como m\u00e1quinas de desenvolvimento permite que os desenvolvedores comecem com uma configura\u00e7\u00e3o m\u00ednima e abstrai o ambiente de desenvolvimento do sistema operacional host, fazendo com que ele seja executado em um cont\u00eainer. DevContainers tamb\u00e9m podem ajudar a padronizar a experi\u00eancia do desenvolvedor local em toda a equipe. Aqui est\u00e3o alguns bons recursos para come\u00e7ar a executar tarefas em DevContainers: Desenvolvendo dentro de um cont\u00eainer . Tutorial sobre Desenvolvimento em Cont\u00eaineres Para projetos de exemplo e modelos de cont\u00eaineres de desenvolvimento, consulte Receitas de Cont\u00eaineres de Desenvolvimento do VS Code Biblioteca de Cont\u00eaineres de Desenvolvimento Tarefas no VS Code Executando o Node.js O exemplo abaixo oferece insights sobre como executar o execut\u00e1vel Node.js como um comando com o arquivo tasks.json e como ele pode ser tratado de maneira diferente no Windows e no Linux. { \"label\" : \"Executar Node\" , \"type\" : \"process\" , \"windows\" : { \"command\" : \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" }, \"linux\" : { \"command\" : \"/usr/bin/node\" } } Neste exemplo, para executar o Node.js, existe um comando espec\u00edfico para o Windows e um comando espec\u00edfico para o Linux. Isso permite propriedades espec\u00edficas da plataforma. Quando essas s\u00e3o definidas, elas ser\u00e3o usadas em vez das propriedades padr\u00e3o quando o comando for executado no sistema operacional Windows ou no Linux. Tarefas Personalizadas Nem todos os scripts ou tarefas podem ser detectados automaticamente no espa\u00e7o de trabalho. \u00c0s vezes, pode ser necess\u00e1rio definir suas pr\u00f3prias tarefas personalizadas. Neste exemplo, temos um script para executar a fim de configurar alguns ambientes corretamente. O script \u00e9 armazenado em uma pasta dentro do seu espa\u00e7o de trabalho e chamado de test.sh para Linux e macOS e test.cmd para Windows. Com o arquivo tasks.json, a execu\u00e7\u00e3o deste script pode ser tornada poss\u00edvel com uma tarefa personalizada que define o que fazer em sistemas operacionais diferentes. { \"version\" : \"2.0.0\" , \"tasks\" : [ { \"label\" : \"Executar testes\" , \"type\" : \"shell\" , \"command\" : \"./scripts/test.sh\" , \"windows\" : { \"command\" : \".\\\\scripts\\\\test.cmd\" }, \"group\" : \"test\" , \"presentation\" : { \"reveal\" : \"always\" , \"panel\" : \"new\" } } ] } O comando aqui \u00e9 um comando de shell e diz ao sistema para executar test.sh ou test.cmd. Por padr\u00e3o, ele executar\u00e1 test.sh com o caminho fornecido. Este exemplo aqui tamb\u00e9m define propriedades espec\u00edficas do Windows e diz para executar test.cmd em vez do padr\u00e3o. Refer\u00eancias Documenta\u00e7\u00e3o do VS Code - propriedades espec\u00edficas do sistema operacional","title":"Tarefas de Plataforma Cruzada"},{"location":"developer-experience/cross-platform-tasks/#tarefas-de-plataforma-cruzada","text":"Existem v\u00e1rias op\u00e7\u00f5es para aliviar problemas de compatibilidade entre plataformas cruzadas. Execu\u00e7\u00e3o de tarefas em um cont\u00eainer Uso do sistema de tarefas no VS Code, que fornece op\u00e7\u00f5es para permitir que comandos sejam executados espec\u00edficos para um sistema operacional.","title":"Tarefas de Plataforma Cruzada"},{"location":"developer-experience/cross-platform-tasks/#docker-ou-baseado-em-conteiner","text":"Usar cont\u00eaineres como m\u00e1quinas de desenvolvimento permite que os desenvolvedores comecem com uma configura\u00e7\u00e3o m\u00ednima e abstrai o ambiente de desenvolvimento do sistema operacional host, fazendo com que ele seja executado em um cont\u00eainer. DevContainers tamb\u00e9m podem ajudar a padronizar a experi\u00eancia do desenvolvedor local em toda a equipe. Aqui est\u00e3o alguns bons recursos para come\u00e7ar a executar tarefas em DevContainers: Desenvolvendo dentro de um cont\u00eainer . Tutorial sobre Desenvolvimento em Cont\u00eaineres Para projetos de exemplo e modelos de cont\u00eaineres de desenvolvimento, consulte Receitas de Cont\u00eaineres de Desenvolvimento do VS Code Biblioteca de Cont\u00eaineres de Desenvolvimento","title":"Docker ou Baseado em Cont\u00eainer"},{"location":"developer-experience/cross-platform-tasks/#tarefas-no-vs-code","text":"","title":"Tarefas no VS Code"},{"location":"developer-experience/cross-platform-tasks/#executando-o-nodejs","text":"O exemplo abaixo oferece insights sobre como executar o execut\u00e1vel Node.js como um comando com o arquivo tasks.json e como ele pode ser tratado de maneira diferente no Windows e no Linux. { \"label\" : \"Executar Node\" , \"type\" : \"process\" , \"windows\" : { \"command\" : \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" }, \"linux\" : { \"command\" : \"/usr/bin/node\" } } Neste exemplo, para executar o Node.js, existe um comando espec\u00edfico para o Windows e um comando espec\u00edfico para o Linux. Isso permite propriedades espec\u00edficas da plataforma. Quando essas s\u00e3o definidas, elas ser\u00e3o usadas em vez das propriedades padr\u00e3o quando o comando for executado no sistema operacional Windows ou no Linux.","title":"Executando o Node.js"},{"location":"developer-experience/cross-platform-tasks/#tarefas-personalizadas","text":"Nem todos os scripts ou tarefas podem ser detectados automaticamente no espa\u00e7o de trabalho. \u00c0s vezes, pode ser necess\u00e1rio definir suas pr\u00f3prias tarefas personalizadas. Neste exemplo, temos um script para executar a fim de configurar alguns ambientes corretamente. O script \u00e9 armazenado em uma pasta dentro do seu espa\u00e7o de trabalho e chamado de test.sh para Linux e macOS e test.cmd para Windows. Com o arquivo tasks.json, a execu\u00e7\u00e3o deste script pode ser tornada poss\u00edvel com uma tarefa personalizada que define o que fazer em sistemas operacionais diferentes. { \"version\" : \"2.0.0\" , \"tasks\" : [ { \"label\" : \"Executar testes\" , \"type\" : \"shell\" , \"command\" : \"./scripts/test.sh\" , \"windows\" : { \"command\" : \".\\\\scripts\\\\test.cmd\" }, \"group\" : \"test\" , \"presentation\" : { \"reveal\" : \"always\" , \"panel\" : \"new\" } } ] } O comando aqui \u00e9 um comando de shell e diz ao sistema para executar test.sh ou test.cmd. Por padr\u00e3o, ele executar\u00e1 test.sh com o caminho fornecido. Este exemplo aqui tamb\u00e9m define propriedades espec\u00edficas do Windows e diz para executar test.cmd em vez do padr\u00e3o.","title":"Tarefas Personalizadas"},{"location":"developer-experience/cross-platform-tasks/#referencias","text":"Documenta\u00e7\u00e3o do VS Code - propriedades espec\u00edficas do sistema operacional","title":"Refer\u00eancias"},{"location":"developer-experience/devcontainers/","text":"Dev Containers: Iniciando Se voc\u00ea \u00e9 um desenvolvedor com experi\u00eancia no Visual Studio Code (VS Code) ou Docker, provavelmente \u00e9 hora de dar uma olhada nos containers de desenvolvimento (dev containers). Este guia destina-se a ajudar os desenvolvedores no processo de tomada de decis\u00e3o necess\u00e1rio para criar dev containers. A orienta\u00e7\u00e3o fornecida deve ser especialmente \u00fatil se voc\u00ea estiver experimentando os dev containers do VS Code pela primeira vez. Observa\u00e7\u00e3o: Este guia n\u00e3o trata da configura\u00e7\u00e3o de um arquivo Docker para implantar um programa Python em execu\u00e7\u00e3o para CI/CD. Pr\u00e9-requisitos Experi\u00eancia com o VS Code Experi\u00eancia com o Docker O que s\u00e3o dev containers? Os containers de desenvolvimento s\u00e3o um recurso do VS Code que permite aos desenvolvedores empacotar uma pilha de ferramentas de desenvolvimento local dentro de um cont\u00eainer Docker, ao mesmo tempo em que trazem a experi\u00eancia da interface de usu\u00e1rio do VS Code com eles. Voc\u00ea j\u00e1 configurou um ponto de interrup\u00e7\u00e3o dentro de um cont\u00eainer Docker? Talvez n\u00e3o. Os dev containers tornam isso poss\u00edvel. Isso \u00e9 feito por meio de uma extens\u00e3o do VS Code chamada Remote Development Extension Pack que trabalha em conjunto com o Docker para iniciar um servidor do VS Code dentro de um cont\u00eainer Docker. O componente de interface de usu\u00e1rio do VS Code permanece local, mas seus arquivos de trabalho s\u00e3o montados no cont\u00eainer. O diagrama abaixo, retirado diretamente da documenta\u00e7\u00e3o oficial do VS Code , ilustra isso: Se o diagrama acima n\u00e3o estiver claro, uma analogia b\u00e1sica que pode ajud\u00e1-lo a entender intuitivamente os dev containers \u00e9 pensar neles como uma uni\u00e3o entre o modo interativo do Docker ( docker exec -it 987654e0ff32 ) e a experi\u00eancia da interface de usu\u00e1rio do VS Code com a qual voc\u00ea est\u00e1 acostumado. Para se configurar para a experi\u00eancia do dev container descrita acima, use o Mercado de Extens\u00f5es do VS Code para instalar o Remote Development Extension Pack . Como os dev containers podem melhorar a colabora\u00e7\u00e3o em projetos? Os dev containers do VS Code melhoraram a colabora\u00e7\u00e3o em projetos recentes da equipe, abordando dois problemas muito espec\u00edficos: Experi\u00eancias locais de desenvolvimento inconsistentes dentro de uma equipe. Onboarding lento de desenvolvedores que est\u00e3o ingressando em um projeto. Os problemas listados acima foram resolvidos configurando e compartilhando uma defini\u00e7\u00e3o de dev container. Os dev containers s\u00e3o definidos por sua imagem base e os artefatos que suportam essa imagem base. A imagem base e os artefatos que a acompanham ficam no diret\u00f3rio .devcontainer. Este diret\u00f3rio \u00e9 onde a configura\u00e7\u00e3o come\u00e7a. Um artefato central para a defini\u00e7\u00e3o do dev container \u00e9 um arquivo de configura\u00e7\u00e3o chamado devcontainer.json . Este arquivo orquestra os artefatos necess\u00e1rios para dar suporte \u00e0 imagem base do dev container e ao ciclo de vida do dev container. A instala\u00e7\u00e3o do Remote Development Extension Pack \u00e9 necess\u00e1ria para habilitar essa orquestra\u00e7\u00e3o dentro de um reposit\u00f3rio de projeto. Espera-se que todos os desenvolvedores da equipe compartilhem e usem a defini\u00e7\u00e3o de dev container (.diret\u00f3rio .devcontainer) para criar um cont\u00eainer. Essa defini\u00e7\u00e3o fornece ferramentas consistentes para desenvolver localmente uma aplica\u00e7\u00e3o em toda a equipe. Os trechos de c\u00f3digo abaixo demonstram a localiza\u00e7\u00e3o comum de um diret\u00f3rio .devcontainer e do arquivo devcontainer.json dentro de um reposit\u00f3rio de projeto. Eles tamb\u00e9m destacam a maneira correta de fazer refer\u00eancia a um arquivo Docker. $ tree vs-code-remote-try-python # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainers \u251c\u2500\u2500\u2500Dockerfile \u251c\u2500\u2500\u2500devcontainer.json # devco nta i ner .jso n { \"name\" : \"Python 3\" , \"build\" : { \"dockerfile\" : \"Dockerfile\" , \"context\" : \"..\" , // Atualize 'VARIANT' para escolher uma vers\u00e3o do Python: 3, 3.6, 3.7, 3.8 \"args\" : { \"VARIANT\" : \"3.8\" } }, } Para obter uma lista das propriedades de configura\u00e7\u00e3o do devcontainer.json, visite a documenta\u00e7\u00e3o do VS Code sobre propriedades de cont\u00eaineres de desenvolvimento . Como decidir qual dev container \u00e9 o certo para o meu caso de uso? Felizmente, o VS Code possui uma galeria de pastas espec\u00edficas da plataforma que hospedam defini\u00e7\u00f5es de dev container (.diret\u00f3rios .devcontainer) para facilitar o in\u00edcio com dev containers. O trecho de c\u00f3digo abaixo mostra uma lista de pastas de galeria que v\u00eam diretamente do reposit\u00f3rio de galeria de dev containers do VS Code : $ tree vs-code-dev-containers # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500containers \u251c\u2500\u2500\u2500dotnetcore | \u2514\u2500\u2500\u2500.devcontainers # dev container \u251c\u2500\u2500\u2500python-3 | \u2514\u2500\u2500\u2500.devcontainers # dev container \u251c\u2500\u2500\u2500ubuntu | \u2514\u2500\u2500\u2500.devcontainers # dev container \u2514\u2500\u2500\u2500.... Aqui est\u00e3o as etapas gerais finais para criar um dev container: Decida qual plataforma voc\u00ea deseja usar para criar uma pilha de ferramentas de desenvolvimento local. Navegue pela galeria de dev containers fornecida pelo VS Code de pastas de projetos que visam sua plataforma e escolha a mais apropriada. Inspecione as defini\u00e7\u00f5es de dev container (.diret\u00f3rio .devcontainer) de um projeto quanto \u00e0 imagem base e aos artefatos que a suportam. Use o que voc\u00ea descobriu para come\u00e7ar a configurar o dev container como ele \u00e9, estend\u00ea-lo ou construir o seu pr\u00f3prio do zero. Indo mais fundo Existem casos de uso em que voc\u00ea gostaria de ir mais fundo na configura\u00e7\u00e3o do seu Dev Container. Mais detalhes aqui","title":"Dev Containers: Iniciando"},{"location":"developer-experience/devcontainers/#dev-containers-iniciando","text":"Se voc\u00ea \u00e9 um desenvolvedor com experi\u00eancia no Visual Studio Code (VS Code) ou Docker, provavelmente \u00e9 hora de dar uma olhada nos containers de desenvolvimento (dev containers). Este guia destina-se a ajudar os desenvolvedores no processo de tomada de decis\u00e3o necess\u00e1rio para criar dev containers. A orienta\u00e7\u00e3o fornecida deve ser especialmente \u00fatil se voc\u00ea estiver experimentando os dev containers do VS Code pela primeira vez. Observa\u00e7\u00e3o: Este guia n\u00e3o trata da configura\u00e7\u00e3o de um arquivo Docker para implantar um programa Python em execu\u00e7\u00e3o para CI/CD.","title":"Dev Containers: Iniciando"},{"location":"developer-experience/devcontainers/#pre-requisitos","text":"Experi\u00eancia com o VS Code Experi\u00eancia com o Docker","title":"Pr\u00e9-requisitos"},{"location":"developer-experience/devcontainers/#o-que-sao-dev-containers","text":"Os containers de desenvolvimento s\u00e3o um recurso do VS Code que permite aos desenvolvedores empacotar uma pilha de ferramentas de desenvolvimento local dentro de um cont\u00eainer Docker, ao mesmo tempo em que trazem a experi\u00eancia da interface de usu\u00e1rio do VS Code com eles. Voc\u00ea j\u00e1 configurou um ponto de interrup\u00e7\u00e3o dentro de um cont\u00eainer Docker? Talvez n\u00e3o. Os dev containers tornam isso poss\u00edvel. Isso \u00e9 feito por meio de uma extens\u00e3o do VS Code chamada Remote Development Extension Pack que trabalha em conjunto com o Docker para iniciar um servidor do VS Code dentro de um cont\u00eainer Docker. O componente de interface de usu\u00e1rio do VS Code permanece local, mas seus arquivos de trabalho s\u00e3o montados no cont\u00eainer. O diagrama abaixo, retirado diretamente da documenta\u00e7\u00e3o oficial do VS Code , ilustra isso: Se o diagrama acima n\u00e3o estiver claro, uma analogia b\u00e1sica que pode ajud\u00e1-lo a entender intuitivamente os dev containers \u00e9 pensar neles como uma uni\u00e3o entre o modo interativo do Docker ( docker exec -it 987654e0ff32 ) e a experi\u00eancia da interface de usu\u00e1rio do VS Code com a qual voc\u00ea est\u00e1 acostumado. Para se configurar para a experi\u00eancia do dev container descrita acima, use o Mercado de Extens\u00f5es do VS Code para instalar o Remote Development Extension Pack .","title":"O que s\u00e3o dev containers?"},{"location":"developer-experience/devcontainers/#como-os-dev-containers-podem-melhorar-a-colaboracao-em-projetos","text":"Os dev containers do VS Code melhoraram a colabora\u00e7\u00e3o em projetos recentes da equipe, abordando dois problemas muito espec\u00edficos: Experi\u00eancias locais de desenvolvimento inconsistentes dentro de uma equipe. Onboarding lento de desenvolvedores que est\u00e3o ingressando em um projeto. Os problemas listados acima foram resolvidos configurando e compartilhando uma defini\u00e7\u00e3o de dev container. Os dev containers s\u00e3o definidos por sua imagem base e os artefatos que suportam essa imagem base. A imagem base e os artefatos que a acompanham ficam no diret\u00f3rio .devcontainer. Este diret\u00f3rio \u00e9 onde a configura\u00e7\u00e3o come\u00e7a. Um artefato central para a defini\u00e7\u00e3o do dev container \u00e9 um arquivo de configura\u00e7\u00e3o chamado devcontainer.json . Este arquivo orquestra os artefatos necess\u00e1rios para dar suporte \u00e0 imagem base do dev container e ao ciclo de vida do dev container. A instala\u00e7\u00e3o do Remote Development Extension Pack \u00e9 necess\u00e1ria para habilitar essa orquestra\u00e7\u00e3o dentro de um reposit\u00f3rio de projeto. Espera-se que todos os desenvolvedores da equipe compartilhem e usem a defini\u00e7\u00e3o de dev container (.diret\u00f3rio .devcontainer) para criar um cont\u00eainer. Essa defini\u00e7\u00e3o fornece ferramentas consistentes para desenvolver localmente uma aplica\u00e7\u00e3o em toda a equipe. Os trechos de c\u00f3digo abaixo demonstram a localiza\u00e7\u00e3o comum de um diret\u00f3rio .devcontainer e do arquivo devcontainer.json dentro de um reposit\u00f3rio de projeto. Eles tamb\u00e9m destacam a maneira correta de fazer refer\u00eancia a um arquivo Docker. $ tree vs-code-remote-try-python # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainers \u251c\u2500\u2500\u2500Dockerfile \u251c\u2500\u2500\u2500devcontainer.json # devco nta i ner .jso n { \"name\" : \"Python 3\" , \"build\" : { \"dockerfile\" : \"Dockerfile\" , \"context\" : \"..\" , // Atualize 'VARIANT' para escolher uma vers\u00e3o do Python: 3, 3.6, 3.7, 3.8 \"args\" : { \"VARIANT\" : \"3.8\" } }, } Para obter uma lista das propriedades de configura\u00e7\u00e3o do devcontainer.json, visite a documenta\u00e7\u00e3o do VS Code sobre propriedades de cont\u00eaineres de desenvolvimento .","title":"Como os dev containers podem melhorar a colabora\u00e7\u00e3o em projetos?"},{"location":"developer-experience/devcontainers/#como-decidir-qual-dev-container-e-o-certo-para-o-meu-caso-de-uso","text":"Felizmente, o VS Code possui uma galeria de pastas espec\u00edficas da plataforma que hospedam defini\u00e7\u00f5es de dev container (.diret\u00f3rios .devcontainer) para facilitar o in\u00edcio com dev containers. O trecho de c\u00f3digo abaixo mostra uma lista de pastas de galeria que v\u00eam diretamente do reposit\u00f3rio de galeria de dev containers do VS Code : $ tree vs-code-dev-containers # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500containers \u251c\u2500\u2500\u2500dotnetcore | \u2514\u2500\u2500\u2500.devcontainers # dev container \u251c\u2500\u2500\u2500python-3 | \u2514\u2500\u2500\u2500.devcontainers # dev container \u251c\u2500\u2500\u2500ubuntu | \u2514\u2500\u2500\u2500.devcontainers # dev container \u2514\u2500\u2500\u2500.... Aqui est\u00e3o as etapas gerais finais para criar um dev container: Decida qual plataforma voc\u00ea deseja usar para criar uma pilha de ferramentas de desenvolvimento local. Navegue pela galeria de dev containers fornecida pelo VS Code de pastas de projetos que visam sua plataforma e escolha a mais apropriada. Inspecione as defini\u00e7\u00f5es de dev container (.diret\u00f3rio .devcontainer) de um projeto quanto \u00e0 imagem base e aos artefatos que a suportam. Use o que voc\u00ea descobriu para come\u00e7ar a configurar o dev container como ele \u00e9, estend\u00ea-lo ou construir o seu pr\u00f3prio do zero.","title":"Como decidir qual dev container \u00e9 o certo para o meu caso de uso?"},{"location":"developer-experience/devcontainers/#indo-mais-fundo","text":"Existem casos de uso em que voc\u00ea gostaria de ir mais fundo na configura\u00e7\u00e3o do seu Dev Container. Mais detalhes aqui","title":"Indo mais fundo"},{"location":"developer-experience/execute-local-pipeline-with-docker/","text":"Executando pipelines localmente Resumo A capacidade de executar atividades de pipeline localmente foi identificada como uma oportunidade para promover uma experi\u00eancia positiva para desenvolvedores. Neste documento, exploraremos uma solu\u00e7\u00e3o que nos permitir\u00e1 ter a experi\u00eancia local de CI o mais semelhante poss\u00edvel ao processo remoto no servidor de CI. Usar o m\u00e9todo sugerido nos permitir\u00e1: Construir Lintar Testar unitariamente Testar E2E (End-to-End) Executar a solu\u00e7\u00e3o Ser agn\u00f3stico em rela\u00e7\u00e3o ao sistema operacional e ao ambiente. Usando o Docker Compose O Docker Compose permite construir, publicar ou executar aplicativos Docker com v\u00e1rios cont\u00eaineres. M\u00e9todo de trabalho Crie imagens Docker para suas aplica\u00e7\u00f5es, incluindo uma etapa de compila\u00e7\u00e3o, se poss\u00edvel. Adicione uma etapa em seu Dockerfile para executar testes unit\u00e1rios. Adicione uma etapa no Dockerfile para a verifica\u00e7\u00e3o de estilo (linting). Crie um novo Dockerfile, possivelmente em uma pasta diferente, que execute testes de ponta a ponta (E2E) contra o cluster. Certifique-se de que os pontos de extremidade padr\u00e3o sejam configur\u00e1veis (isso ser\u00e1 \u00fatil em seu servidor de CI remoto, onde voc\u00ea poder\u00e1 testar em um ambiente ao vivo, se desejar). Crie um arquivo docker-compose que permita escolher quais dos servi\u00e7os executar. O padr\u00e3o executar\u00e1 todas as aplica\u00e7\u00f5es e testes, e um par\u00e2metro opcional pode executar servi\u00e7os espec\u00edficos, por exemplo, apenas a aplica\u00e7\u00e3o sem os testes. Pr\u00e9-requisitos Docker Opcional: se voc\u00ea clonar o aplicativo de exemplo, precisar\u00e1 ter o dotnet core instalado. Passo a passo com exemplos Para este tutorial, vamos usar um aplicativo de exemplo .NET Core API . Aqui est\u00e1 o Dockerfile para o aplicativo de exemplo: # https://hub.docker.com/_/microsoft-dotnet FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build WORKDIR /app # copia o csproj e restaura em camadas distintas COPY ./ ./ RUN dotnet restore RUN dotnet test # copia tudo o mais e constr\u00f3i a aplica\u00e7\u00e3o COPY SampleApp/. ./ RUN dotnet publish -c release -o out --no-restore # est\u00e1gio/fase final/imagem FROM mcr.microsoft.com/dotnet/aspnet:5.0 WORKDIR /app COPY --from = build /app/out . ENTRYPOINT [ \"dotnet\" , \"SampleNetApi.dll\" ] Este script restaura todas as depend\u00eancias, constr\u00f3i e executa os testes. O aplicativo .NET Core inclui o stylecop , que falha na compila\u00e7\u00e3o em caso de problemas de linting. A seguir, criaremos um Dockerfile para executar um teste de ponta a ponta. Normalmente, isso se parecer\u00e1 com um conjunto de scripts ou um aplicativo dedicado que faz chamadas HTTP reais para uma aplica\u00e7\u00e3o em execu\u00e7\u00e3o. Para simplificar, o pr\u00f3prio Dockerfile executar\u00e1 um comando curl simples: FROM alpine:3.7 RUN apk --no-cache add curl ENTRYPOINT [ \"curl\" , \"0.0.0.0:8080/weatherforecast\" ] Agora estamos prontos para combinar ambos os Dockerfiles em um script docker-compose: version: '3' services: app: image: app:0.01 build: context: . ports: - \"8080:80\" e2e: image: e2e:0.01 build: context: ./E2E O script docker-compose lan\u00e7ar\u00e1 os 2 Dockerfiles e os construir\u00e1 se ainda n\u00e3o tiverem sido constru\u00eddos. O comando a seguir executar\u00e1 o docker-compose: docker-compose up --build -d Assim que as imagens estiverem ativas, voc\u00ea poder\u00e1 fazer chamadas para o servi\u00e7o. A imagem de teste de ponta a ponta executar\u00e1 o conjunto de testes de ponta a ponta. Se voc\u00ea quiser pular os testes, pode simplesmente dizer ao compose para executar um servi\u00e7o espec\u00edfico, conforme a seguir: docker-compose up --build -d app Agora voc\u00ea tem um script local que constr\u00f3i e testa sua aplica\u00e7\u00e3o. O pr\u00f3ximo passo seria fazer com que seu CI execute o script docker-compose. Aqui est\u00e1 um exemplo de um arquivo yaml usado pelas pipelines do Azure DevOps: trigger: - master pool: vmImage: 'ubuntu-latest' variables: solution: '**/*.sln' buildPlatform: 'Any CPU' buildConfiguration: 'Release' steps: - task: DockerCompose@0 displayName: Build, Test, E2E inputs: action: Run services dockerComposeFile: docker-compose.yml - script: dotnet restore SampleApp - script: dotnet build --configuration $( buildConfiguration ) SampleApp displayName: 'dotnet build $(buildConfiguration)' Neste script, o primeiro passo \u00e9 docker-compose, que usa o mesmo arquivo que criamos nos passos anteriores. Os pr\u00f3ximos passos fazem a mesma coisa usando scripts, e est\u00e3o aqui para fins de compara\u00e7\u00e3o. No final deste passo, seu CI efetivamente executa os mesmos comandos de constru\u00e7\u00e3o e teste que voc\u00ea executa localmente.","title":"Executando pipelines localmente"},{"location":"developer-experience/execute-local-pipeline-with-docker/#executando-pipelines-localmente","text":"","title":"Executando pipelines localmente"},{"location":"developer-experience/execute-local-pipeline-with-docker/#resumo","text":"A capacidade de executar atividades de pipeline localmente foi identificada como uma oportunidade para promover uma experi\u00eancia positiva para desenvolvedores. Neste documento, exploraremos uma solu\u00e7\u00e3o que nos permitir\u00e1 ter a experi\u00eancia local de CI o mais semelhante poss\u00edvel ao processo remoto no servidor de CI. Usar o m\u00e9todo sugerido nos permitir\u00e1: Construir Lintar Testar unitariamente Testar E2E (End-to-End) Executar a solu\u00e7\u00e3o Ser agn\u00f3stico em rela\u00e7\u00e3o ao sistema operacional e ao ambiente.","title":"Resumo"},{"location":"developer-experience/execute-local-pipeline-with-docker/#usando-o-docker-compose","text":"O Docker Compose permite construir, publicar ou executar aplicativos Docker com v\u00e1rios cont\u00eaineres.","title":"Usando o Docker Compose"},{"location":"developer-experience/execute-local-pipeline-with-docker/#metodo-de-trabalho","text":"Crie imagens Docker para suas aplica\u00e7\u00f5es, incluindo uma etapa de compila\u00e7\u00e3o, se poss\u00edvel. Adicione uma etapa em seu Dockerfile para executar testes unit\u00e1rios. Adicione uma etapa no Dockerfile para a verifica\u00e7\u00e3o de estilo (linting). Crie um novo Dockerfile, possivelmente em uma pasta diferente, que execute testes de ponta a ponta (E2E) contra o cluster. Certifique-se de que os pontos de extremidade padr\u00e3o sejam configur\u00e1veis (isso ser\u00e1 \u00fatil em seu servidor de CI remoto, onde voc\u00ea poder\u00e1 testar em um ambiente ao vivo, se desejar). Crie um arquivo docker-compose que permita escolher quais dos servi\u00e7os executar. O padr\u00e3o executar\u00e1 todas as aplica\u00e7\u00f5es e testes, e um par\u00e2metro opcional pode executar servi\u00e7os espec\u00edficos, por exemplo, apenas a aplica\u00e7\u00e3o sem os testes.","title":"M\u00e9todo de trabalho"},{"location":"developer-experience/execute-local-pipeline-with-docker/#pre-requisitos","text":"Docker Opcional: se voc\u00ea clonar o aplicativo de exemplo, precisar\u00e1 ter o dotnet core instalado.","title":"Pr\u00e9-requisitos"},{"location":"developer-experience/execute-local-pipeline-with-docker/#passo-a-passo-com-exemplos","text":"Para este tutorial, vamos usar um aplicativo de exemplo .NET Core API . Aqui est\u00e1 o Dockerfile para o aplicativo de exemplo: # https://hub.docker.com/_/microsoft-dotnet FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build WORKDIR /app # copia o csproj e restaura em camadas distintas COPY ./ ./ RUN dotnet restore RUN dotnet test # copia tudo o mais e constr\u00f3i a aplica\u00e7\u00e3o COPY SampleApp/. ./ RUN dotnet publish -c release -o out --no-restore # est\u00e1gio/fase final/imagem FROM mcr.microsoft.com/dotnet/aspnet:5.0 WORKDIR /app COPY --from = build /app/out . ENTRYPOINT [ \"dotnet\" , \"SampleNetApi.dll\" ] Este script restaura todas as depend\u00eancias, constr\u00f3i e executa os testes. O aplicativo .NET Core inclui o stylecop , que falha na compila\u00e7\u00e3o em caso de problemas de linting. A seguir, criaremos um Dockerfile para executar um teste de ponta a ponta. Normalmente, isso se parecer\u00e1 com um conjunto de scripts ou um aplicativo dedicado que faz chamadas HTTP reais para uma aplica\u00e7\u00e3o em execu\u00e7\u00e3o. Para simplificar, o pr\u00f3prio Dockerfile executar\u00e1 um comando curl simples: FROM alpine:3.7 RUN apk --no-cache add curl ENTRYPOINT [ \"curl\" , \"0.0.0.0:8080/weatherforecast\" ] Agora estamos prontos para combinar ambos os Dockerfiles em um script docker-compose: version: '3' services: app: image: app:0.01 build: context: . ports: - \"8080:80\" e2e: image: e2e:0.01 build: context: ./E2E O script docker-compose lan\u00e7ar\u00e1 os 2 Dockerfiles e os construir\u00e1 se ainda n\u00e3o tiverem sido constru\u00eddos. O comando a seguir executar\u00e1 o docker-compose: docker-compose up --build -d Assim que as imagens estiverem ativas, voc\u00ea poder\u00e1 fazer chamadas para o servi\u00e7o. A imagem de teste de ponta a ponta executar\u00e1 o conjunto de testes de ponta a ponta. Se voc\u00ea quiser pular os testes, pode simplesmente dizer ao compose para executar um servi\u00e7o espec\u00edfico, conforme a seguir: docker-compose up --build -d app Agora voc\u00ea tem um script local que constr\u00f3i e testa sua aplica\u00e7\u00e3o. O pr\u00f3ximo passo seria fazer com que seu CI execute o script docker-compose. Aqui est\u00e1 um exemplo de um arquivo yaml usado pelas pipelines do Azure DevOps: trigger: - master pool: vmImage: 'ubuntu-latest' variables: solution: '**/*.sln' buildPlatform: 'Any CPU' buildConfiguration: 'Release' steps: - task: DockerCompose@0 displayName: Build, Test, E2E inputs: action: Run services dockerComposeFile: docker-compose.yml - script: dotnet restore SampleApp - script: dotnet build --configuration $( buildConfiguration ) SampleApp displayName: 'dotnet build $(buildConfiguration)' Neste script, o primeiro passo \u00e9 docker-compose, que usa o mesmo arquivo que criamos nos passos anteriores. Os pr\u00f3ximos passos fazem a mesma coisa usando scripts, e est\u00e3o aqui para fins de compara\u00e7\u00e3o. No final deste passo, seu CI efetivamente executa os mesmos comandos de constru\u00e7\u00e3o e teste que voc\u00ea executa localmente.","title":"Passo a passo com exemplos"},{"location":"developer-experience/fake-services-inner-loop/","text":"Ciclo de Desenvolvimento Interno com Servi\u00e7os Falsos Introdu\u00e7\u00e3o Os consumidores de servi\u00e7os remotos muitas vezes encontram dificuldades em sincronizar seu ciclo de desenvolvimento com o desenvolvimento dos servi\u00e7os remotos, deixando os desenvolvedores desses consumidores aguardando os servi\u00e7os remotos \"alcan\u00e7arem\" seus requisitos. Uma abordagem para mitigar esse problema e melhorar o ciclo de desenvolvimento interno \u00e9 a desacoplagem e o uso de Servi\u00e7os Falsos (Fake Services). V\u00e1rias op\u00e7\u00f5es de Servi\u00e7os Falsos s\u00e3o detalhadas aqui . Este documento se concentrar\u00e1 em fornecer um exemplo usando a abordagem de Servi\u00e7os Falsos. API Para nosso exemplo de API, trabalharemos com um endpoint /User e as propriedades para User ser\u00e3o: id - int username - string firstName - string lastName - string email - string password - string phone - string userStatus - int Ferramentas Para a abordagem de Servi\u00e7os Falsos, estaremos usando o Json-Server . Json-Server \u00e9 uma ferramenta que fornece a capacidade de simular completamente APIs REST e executar o servidor localmente. Ele \u00e9 projetado para criar APIs REST com funcionalidade CRUD com configura\u00e7\u00e3o m\u00ednima. O Json-Server requer o NodeJS e \u00e9 instalado via NPM. npm install -g json-server Configura\u00e7\u00e3o Para executar o Json-Server, ele requer apenas uma fonte de dados e inferir\u00e1 as rotas com base no arquivo de dados. Observe que personaliza\u00e7\u00f5es adicionais podem ser feitas para cen\u00e1rios mais avan\u00e7ados (por exemplo, rotas personalizadas). Detalhes podem ser encontrados aqui . Para nosso exemplo, usaremos o seguinte arquivo de dados, db.json : { \"user\": [ { \"id\": 0, \"username\": \"user1\", \"firstName\": \"Kobe\", \"lastName\": \"Bryant\", \"email\": \"kobe@example.com\", \"password\": \"superSecure1\", \"phone\": \"(123) 123-1234\", \"userStatus\": 0 }, { \"id\": 1, \"username\": \"user2\", \"firstName\": \"Shaquille\", \"lastName\": \"O'Neal\", \"email\": \"shaq@example.com\", \"password\": \"superSecure2\", \"phone\": \"(123) 123-1235\", \"userStatus\": 0 } ] } Execu\u00e7\u00e3o A execu\u00e7\u00e3o do Json-Server pode ser realizada simplesmente executando: json-server --watch src/db.json Uma vez em execu\u00e7\u00e3o, o endpoint de Usu\u00e1rio pode ser acessado na porta localhost padr\u00e3o: http:/localhost:3000/user Observe que o Json-Server pode ser configurado para usar outras portas usando a seguinte sintaxe: json-server --watch db.json --port 3004 Endpoint O endpoint pode ser testado executando o comando curl contra ele, e podemos especificar qual objeto de usu\u00e1rio obter com o seguinte comando: curl http://localhost:3000/user/1 o que, como esperado, retornar\u00e1: { \"id\": 1, \"username\": \"user2\", \"firstName\": \"Shaquille\", \"lastName\": \"O'Neal\", \"email\": \"shaq@example.com\", \"password\": \"superSecure2\", \"phone\": \"(123) 123-1235\", \"userStatus\": 0 }","title":"Ciclo de Desenvolvimento Interno com Servi\u00e7os Falsos"},{"location":"developer-experience/fake-services-inner-loop/#ciclo-de-desenvolvimento-interno-com-servicos-falsos","text":"","title":"Ciclo de Desenvolvimento Interno com Servi\u00e7os Falsos"},{"location":"developer-experience/fake-services-inner-loop/#introducao","text":"Os consumidores de servi\u00e7os remotos muitas vezes encontram dificuldades em sincronizar seu ciclo de desenvolvimento com o desenvolvimento dos servi\u00e7os remotos, deixando os desenvolvedores desses consumidores aguardando os servi\u00e7os remotos \"alcan\u00e7arem\" seus requisitos. Uma abordagem para mitigar esse problema e melhorar o ciclo de desenvolvimento interno \u00e9 a desacoplagem e o uso de Servi\u00e7os Falsos (Fake Services). V\u00e1rias op\u00e7\u00f5es de Servi\u00e7os Falsos s\u00e3o detalhadas aqui . Este documento se concentrar\u00e1 em fornecer um exemplo usando a abordagem de Servi\u00e7os Falsos.","title":"Introdu\u00e7\u00e3o"},{"location":"developer-experience/fake-services-inner-loop/#api","text":"Para nosso exemplo de API, trabalharemos com um endpoint /User e as propriedades para User ser\u00e3o: id - int username - string firstName - string lastName - string email - string password - string phone - string userStatus - int","title":"API"},{"location":"developer-experience/fake-services-inner-loop/#ferramentas","text":"Para a abordagem de Servi\u00e7os Falsos, estaremos usando o Json-Server . Json-Server \u00e9 uma ferramenta que fornece a capacidade de simular completamente APIs REST e executar o servidor localmente. Ele \u00e9 projetado para criar APIs REST com funcionalidade CRUD com configura\u00e7\u00e3o m\u00ednima. O Json-Server requer o NodeJS e \u00e9 instalado via NPM. npm install -g json-server","title":"Ferramentas"},{"location":"developer-experience/fake-services-inner-loop/#configuracao","text":"Para executar o Json-Server, ele requer apenas uma fonte de dados e inferir\u00e1 as rotas com base no arquivo de dados. Observe que personaliza\u00e7\u00f5es adicionais podem ser feitas para cen\u00e1rios mais avan\u00e7ados (por exemplo, rotas personalizadas). Detalhes podem ser encontrados aqui . Para nosso exemplo, usaremos o seguinte arquivo de dados, db.json : { \"user\": [ { \"id\": 0, \"username\": \"user1\", \"firstName\": \"Kobe\", \"lastName\": \"Bryant\", \"email\": \"kobe@example.com\", \"password\": \"superSecure1\", \"phone\": \"(123) 123-1234\", \"userStatus\": 0 }, { \"id\": 1, \"username\": \"user2\", \"firstName\": \"Shaquille\", \"lastName\": \"O'Neal\", \"email\": \"shaq@example.com\", \"password\": \"superSecure2\", \"phone\": \"(123) 123-1235\", \"userStatus\": 0 } ] }","title":"Configura\u00e7\u00e3o"},{"location":"developer-experience/fake-services-inner-loop/#execucao","text":"A execu\u00e7\u00e3o do Json-Server pode ser realizada simplesmente executando: json-server --watch src/db.json Uma vez em execu\u00e7\u00e3o, o endpoint de Usu\u00e1rio pode ser acessado na porta localhost padr\u00e3o: http:/localhost:3000/user Observe que o Json-Server pode ser configurado para usar outras portas usando a seguinte sintaxe: json-server --watch db.json --port 3004","title":"Execu\u00e7\u00e3o"},{"location":"developer-experience/fake-services-inner-loop/#endpoint","text":"O endpoint pode ser testado executando o comando curl contra ele, e podemos especificar qual objeto de usu\u00e1rio obter com o seguinte comando: curl http://localhost:3000/user/1 o que, como esperado, retornar\u00e1: { \"id\": 1, \"username\": \"user2\", \"firstName\": \"Shaquille\", \"lastName\": \"O'Neal\", \"email\": \"shaq@example.com\", \"password\": \"superSecure2\", \"phone\": \"(123) 123-1235\", \"userStatus\": 0 }","title":"Endpoint"},{"location":"developer-experience/going-further/","text":"Expandindo as Possibilidades com Dev Containers Os Dev Containers permitem que os desenvolvedores compartilhem um ambiente de trabalho comum, garantindo que as vers\u00f5es de tempo de execu\u00e7\u00e3o e todas as depend\u00eancias sejam consistentes para todos os desenvolvedores. Os Dev Containers tamb\u00e9m nos permitem: Utilizar ferramentas existentes para aprimorar os Dev Containers com mais recursos. Fornecer ferramentas personalizadas (como scripts) para outros desenvolvedores. Ferramentas Existentes Durante a fase de desenvolvimento, voc\u00ea provavelmente precisar\u00e1 usar ferramentas que n\u00e3o est\u00e3o instaladas por padr\u00e3o em seu Dev Container. Por exemplo, se o alvo do seu projeto for implantado no Azure, voc\u00ea precisar\u00e1 do Azure-cli e talvez do Terraform para implanta\u00e7\u00e3o de recursos e aplicativos. Voc\u00ea pode encontrar esses Dev Containers no reposit\u00f3rio de galeria de Dev Containers do VS Code . Algumas outras ferramentas podem ser: Linters para arquivos markdown . Linters para scripts bash . Etc... A verifica\u00e7\u00e3o de arquivos que n\u00e3o s\u00e3o o c\u00f3digo-fonte pode garantir um formato comum com regras comuns para cada desenvolvedor. Essas verifica\u00e7\u00f5es tamb\u00e9m devem ser executadas em um Pipeline de Integra\u00e7\u00e3o Cont\u00ednua , mas \u00e9 uma boa pr\u00e1tica execut\u00e1-las antes de abrir uma Pull Request . Limita\u00e7\u00e3o de Ferramentas Personalizadas Se voc\u00ea decidir incluir o Azure-cli em seu Dev Container, os desenvolvedores poder\u00e3o executar comandos em seu ambiente. No entanto, para facilitar a vida dos desenvolvedores, podemos ir al\u00e9m, permitindo que eles preencham suas informa\u00e7\u00f5es de conex\u00e3o, como o ID do locat\u00e1rio e o ID da assinatura , de forma segura e persistente (n\u00e3o se esque\u00e7a de que seu Dev Container, sendo um cont\u00eainer Docker , pode ser exclu\u00eddo ou a imagem pode ser reconstru\u00edda, o que resultaria na perda de todas as personaliza\u00e7\u00f5es internas ). Uma maneira de fazer isso \u00e9 usar vari\u00e1veis de ambiente, com um arquivo .env n\u00e3o rastreado que faz parte da solu\u00e7\u00e3o e \u00e9 injetado no Dev Container. Considere a seguinte estrutura de arquivos: Minha Aplica\u00e7\u00e3o # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainer | \u251c\u2500\u2500\u2500Dockerfile | \u251c\u2500\u2500\u2500devcontainer.json \u2514\u2500\u2500\u2500config | \u251c\u2500\u2500\u2500.env | \u251c\u2500\u2500\u2500.env-sample O arquivo config/.env-sample \u00e9 um arquivo rastreado onde qualquer pessoa pode encontrar vari\u00e1veis de ambiente a serem definidas (sem valores, obviamente): TENANT_ID = SUBSCRIPTION_ID = Em seguida, cada desenvolvedor que clona o reposit\u00f3rio pode criar o arquivo config/.env e preench\u00ea-lo com os valores apropriados. Para injetar o arquivo .env no cont\u00eainer, voc\u00ea pode atualizar o arquivo devcontainer.json da seguinte forma: { ... \"runArgs\" : [ \"--env-file\" , \"config/.env\" ], ... } Assim que o Dev Container for iniciado, essas vari\u00e1veis de ambiente ser\u00e3o enviadas para o cont\u00eainer. Outra abordagem seria usar o Docker Compose, um pouco mais complexo e provavelmente demais apenas para vari\u00e1veis de ambiente. Usar o Docker Compose pode desbloquear outras configura\u00e7\u00f5es, como DNS personalizado, encaminhamento de portas ou m\u00faltiplos cont\u00eaineres. Para fazer isso, voc\u00ea precisa adicionar um arquivo .devcontainer/docker-compose.yml com o seguinte conte\u00fado: version : '3' services : meu-ambiente : env_file : ../config/.env build : context : . dockerfile : Dockerfile Para usar o arquivo docker-compose.yml em vez do Dockerfile , voc\u00ea precisa ajustar o devcontainer.json da seguinte maneira: { \"name\" : \"Minha Aplica\u00e7\u00e3o\" , \"dockerComposeFile\" : [ \"docker-compose.yml\" ], \"service\" : \"meu-ambiente\" ... } Essa abordagem pode ser aplicada a muitas outras ferramentas, preparando o que seria necess\u00e1rio. A ideia \u00e9 simplificar a vida dos desenvolvedores e dos novos desenvolvedores que est\u00e3o ingressando no projeto. Ferramentas Personalizadas Enquanto trabalha em um projeto, qualquer desenvolvedor pode acabar escrevendo um script para automatizar uma tarefa. Este script pode ser em bash , python ou qualquer linguagem de script com a qual eles se sintam confort\u00e1veis. Digamos que voc\u00ea queira garantir que todos os arquivos markdown escritos sejam validados de acordo com regras espec\u00edficas que voc\u00ea configurou. Como vimos acima, voc\u00ea pode incluir a ferramenta markdownlint em seu Dev Container. Ter a ferramenta instalada n\u00e3o significa que o desenvolvedor saber\u00e1 como us\u00e1-la! Considere a seguinte estrutura da solu\u00e7\u00e3o: Minha Aplica\u00e7\u00e3o # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainer | \u251c\u2500\u2500\u2500Dockerfile | \u251c\u2500\u2500\u2500docker-compose.yml | \u251c\u2500\u2500\u2500devcontainer.json \u2514\u2500\u2500\u2500scripts | \u251c\u2500\u2500\u2500check-markdown.sh \u2514\u2500\u2500\u2500.markdownlint.json O arquivo .devcontainer/Dockerfile instala o markdownlint : ... RUN apt-get update \\ && export DEBIAN_FRONTEND = noninteractive \\ && apt-get install -y nodejs npm # Adicionar ferramentas NodeJS RUN npm install -g markdownlint-cli ... O arquivo .markdownlint.json cont\u00e9m as regras que voc\u00ea deseja validar em seus arquivos markdown (consulte o site do markdownlint para obter detalhes). E, finalmente, o script scripts/check-markdown.sh cont\u00e9m o seguinte c\u00f3digo para executar o markdownlint : # Obter a raiz do reposit\u00f3rio repoRoot = \" $( cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) /..\" >/dev/null 2 > & 1 && pwd ) \" # Executar o markdownlint para toda a solu\u00e7\u00e3o markdownlint -c \" ${ repoRoot } \" /.markdownlint.json Quando o Dev Container \u00e9 carregado, qualquer desenvolvedor pode executar este script em seu terminal: /> ./scripts/check-markdown.sh Este \u00e9 um pequeno exemplo de uso, existem in\u00fameras outras possibilidades para capitalizar o trabalho feito pelos desenvolvedores para economizar tempo. Outras Considera\u00e7\u00f5es Arquitetura da Plataforma Ao instalar ferramentas, voc\u00ea tamb\u00e9m precisa garantir que sabe qual a arquitetura dos computadores dos desenvolvedores. Todos os computadores baseados em Intel, independentemente de estarem rodando Windows, Linux ou macOS, ter\u00e3o o mesmo comportamento. No entanto, a arquitetura mais recente da Apple (Apple M1/Silicon) sendo ARM64, significa que o comportamento n\u00e3o \u00e9 o mesmo ao criar Dev Containers. Por exemplo, se voc\u00ea deseja instalar o Azure-cli em seu Dev Container, n\u00e3o poder\u00e1 faz\u00ea-lo da mesma forma que faria em m\u00e1quinas Intel. Em computadores Intel, voc\u00ea pode instalar o pacote deb . No entanto, esse pacote n\u00e3o est\u00e1 dispon\u00edvel na arquitetura ARM. A \u00fanica maneira de instalar o Azure-cli no Linux ARM \u00e9 usando o instalador Python pip . Para fazer isso, voc\u00ea precisa verificar a arquitetura do host que est\u00e1 criando o Dev Container, seja no Dockerfile ou chamando um script bash externo para instalar as ferramentas restantes que n\u00e3o possuem uma vers\u00e3o universal. Aqui est\u00e1 um trecho para chamar do Dockerfile: # Se for baseado em Intel, use o arquivo deb if [[ ` dpkg --print-architecture ` == \"amd64\" ]] ; then sudo curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash ; else # Baseado em ARM, instale pip (e gcc) e, em seguida, azure-cli sudo apt-get -y install gcc python3 -m pip install --upgrade pip python3 -m pip install azure-cli fi Reutiliza\u00e7\u00e3o de Credenciais para o GitHub Se voc\u00ea desenvolve dentro de um Dev Container, tamb\u00e9m desejar\u00e1 compartilhar suas credenciais do GitHub entre seu host e o Dev Container. Fazendo isso, voc\u00ea evitaria copiar suas chaves SSH de um lado para o outro (se estiver usando SSH para acessar seus reposit\u00f3rios). Uma abordagem seria montar sua pasta local ~/.ssh em seu Dev Container. Voc\u00ea pode usar a op\u00e7\u00e3o mounts do devcontainer.json ou usar o Docker Compose. Usando mounts : { ... \"mounts\" : [ \"source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind\" ], ... } Como voc\u00ea pode ver, ${localEnv:HOME} retorna a pasta home do host e a mapeia para a pasta do cont\u00eainer. Usando Docker Compose: version : '3' services : meu-ambiente : env_file : ../configs/.env build : context : . dockerfile : Dockerfile volumes : - \"~/.ssh:/home/alex/.ssh\" command : sleep infinity Observe que o uso do Docker Compose requer a edi\u00e7\u00e3o do arquivo devcontainer.json , conforme vimos acima. Agora voc\u00ea pode acessar o GitHub usando as mesmas credenciais do seu host, sem se preocupar com a persist\u00eancia. Permitir Alguma Customiza\u00e7\u00e3o Como nota final, tamb\u00e9m \u00e9 interessante deixar aos desenvolvedores alguma flexibilidade em seu ambiente para personaliza\u00e7\u00e3o. Por exemplo, algu\u00e9m pode querer adicionar aliases ao seu ambiente. No entanto, alterar o arquivo ~/.bashrc no Dev Container n\u00e3o \u00e9 uma abordagem boa, pois o cont\u00eainer pode ser destru\u00eddo. Existem v\u00e1rias maneiras de definir a persist\u00eancia. Aqui est\u00e1 uma abordagem. Considere a seguinte estrutura do projeto: Minha Aplica\u00e7\u00e3o # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainer | \u251c\u2500\u2500\u2500Dockerfile | \u251c\u2500\u2500\u2500docker -compose.yml | \u251c\u2500\u2500\u2500devcontainer.json \u2514\u2500\u2500\u2500me | \u251c\u2500\u2500\u2500bashrc_extension A pasta me n\u00e3o est\u00e1 rastreada no reposit\u00f3rio, deixando aos desenvolvedores a flexibilidade de adicionar recursos pessoais. Um desses recursos pode ser uma extens\u00e3o .bashrc contendo personaliza\u00e7\u00f5es. Por exemplo: # Exemplo de alias alias gaa = \"git add --all\" Agora podemos adaptar nosso Dockerfile para carregar essas altera\u00e7\u00f5es quando a imagem Docker \u00e9 criada (e, \u00e9 claro, n\u00e3o fazer nada se n\u00e3o houver nenhum arquivo): ... RUN echo \"[ -f PATH_TO_WORKSPACE/me/bashrc_extension ] && . PATH_TO_WORKSPACE/me/bashrc_extension\" >> ~/.bashrc ; ...","title":"Expandindo as Possibilidades com Dev Containers"},{"location":"developer-experience/going-further/#expandindo-as-possibilidades-com-dev-containers","text":"Os Dev Containers permitem que os desenvolvedores compartilhem um ambiente de trabalho comum, garantindo que as vers\u00f5es de tempo de execu\u00e7\u00e3o e todas as depend\u00eancias sejam consistentes para todos os desenvolvedores. Os Dev Containers tamb\u00e9m nos permitem: Utilizar ferramentas existentes para aprimorar os Dev Containers com mais recursos. Fornecer ferramentas personalizadas (como scripts) para outros desenvolvedores.","title":"Expandindo as Possibilidades com Dev Containers"},{"location":"developer-experience/going-further/#ferramentas-existentes","text":"Durante a fase de desenvolvimento, voc\u00ea provavelmente precisar\u00e1 usar ferramentas que n\u00e3o est\u00e3o instaladas por padr\u00e3o em seu Dev Container. Por exemplo, se o alvo do seu projeto for implantado no Azure, voc\u00ea precisar\u00e1 do Azure-cli e talvez do Terraform para implanta\u00e7\u00e3o de recursos e aplicativos. Voc\u00ea pode encontrar esses Dev Containers no reposit\u00f3rio de galeria de Dev Containers do VS Code . Algumas outras ferramentas podem ser: Linters para arquivos markdown . Linters para scripts bash . Etc... A verifica\u00e7\u00e3o de arquivos que n\u00e3o s\u00e3o o c\u00f3digo-fonte pode garantir um formato comum com regras comuns para cada desenvolvedor. Essas verifica\u00e7\u00f5es tamb\u00e9m devem ser executadas em um Pipeline de Integra\u00e7\u00e3o Cont\u00ednua , mas \u00e9 uma boa pr\u00e1tica execut\u00e1-las antes de abrir uma Pull Request .","title":"Ferramentas Existentes"},{"location":"developer-experience/going-further/#limitacao-de-ferramentas-personalizadas","text":"Se voc\u00ea decidir incluir o Azure-cli em seu Dev Container, os desenvolvedores poder\u00e3o executar comandos em seu ambiente. No entanto, para facilitar a vida dos desenvolvedores, podemos ir al\u00e9m, permitindo que eles preencham suas informa\u00e7\u00f5es de conex\u00e3o, como o ID do locat\u00e1rio e o ID da assinatura , de forma segura e persistente (n\u00e3o se esque\u00e7a de que seu Dev Container, sendo um cont\u00eainer Docker , pode ser exclu\u00eddo ou a imagem pode ser reconstru\u00edda, o que resultaria na perda de todas as personaliza\u00e7\u00f5es internas ). Uma maneira de fazer isso \u00e9 usar vari\u00e1veis de ambiente, com um arquivo .env n\u00e3o rastreado que faz parte da solu\u00e7\u00e3o e \u00e9 injetado no Dev Container. Considere a seguinte estrutura de arquivos: Minha Aplica\u00e7\u00e3o # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainer | \u251c\u2500\u2500\u2500Dockerfile | \u251c\u2500\u2500\u2500devcontainer.json \u2514\u2500\u2500\u2500config | \u251c\u2500\u2500\u2500.env | \u251c\u2500\u2500\u2500.env-sample O arquivo config/.env-sample \u00e9 um arquivo rastreado onde qualquer pessoa pode encontrar vari\u00e1veis de ambiente a serem definidas (sem valores, obviamente): TENANT_ID = SUBSCRIPTION_ID = Em seguida, cada desenvolvedor que clona o reposit\u00f3rio pode criar o arquivo config/.env e preench\u00ea-lo com os valores apropriados. Para injetar o arquivo .env no cont\u00eainer, voc\u00ea pode atualizar o arquivo devcontainer.json da seguinte forma: { ... \"runArgs\" : [ \"--env-file\" , \"config/.env\" ], ... } Assim que o Dev Container for iniciado, essas vari\u00e1veis de ambiente ser\u00e3o enviadas para o cont\u00eainer. Outra abordagem seria usar o Docker Compose, um pouco mais complexo e provavelmente demais apenas para vari\u00e1veis de ambiente. Usar o Docker Compose pode desbloquear outras configura\u00e7\u00f5es, como DNS personalizado, encaminhamento de portas ou m\u00faltiplos cont\u00eaineres. Para fazer isso, voc\u00ea precisa adicionar um arquivo .devcontainer/docker-compose.yml com o seguinte conte\u00fado: version : '3' services : meu-ambiente : env_file : ../config/.env build : context : . dockerfile : Dockerfile Para usar o arquivo docker-compose.yml em vez do Dockerfile , voc\u00ea precisa ajustar o devcontainer.json da seguinte maneira: { \"name\" : \"Minha Aplica\u00e7\u00e3o\" , \"dockerComposeFile\" : [ \"docker-compose.yml\" ], \"service\" : \"meu-ambiente\" ... } Essa abordagem pode ser aplicada a muitas outras ferramentas, preparando o que seria necess\u00e1rio. A ideia \u00e9 simplificar a vida dos desenvolvedores e dos novos desenvolvedores que est\u00e3o ingressando no projeto.","title":"Limita\u00e7\u00e3o de Ferramentas Personalizadas"},{"location":"developer-experience/going-further/#ferramentas-personalizadas","text":"Enquanto trabalha em um projeto, qualquer desenvolvedor pode acabar escrevendo um script para automatizar uma tarefa. Este script pode ser em bash , python ou qualquer linguagem de script com a qual eles se sintam confort\u00e1veis. Digamos que voc\u00ea queira garantir que todos os arquivos markdown escritos sejam validados de acordo com regras espec\u00edficas que voc\u00ea configurou. Como vimos acima, voc\u00ea pode incluir a ferramenta markdownlint em seu Dev Container. Ter a ferramenta instalada n\u00e3o significa que o desenvolvedor saber\u00e1 como us\u00e1-la! Considere a seguinte estrutura da solu\u00e7\u00e3o: Minha Aplica\u00e7\u00e3o # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainer | \u251c\u2500\u2500\u2500Dockerfile | \u251c\u2500\u2500\u2500docker-compose.yml | \u251c\u2500\u2500\u2500devcontainer.json \u2514\u2500\u2500\u2500scripts | \u251c\u2500\u2500\u2500check-markdown.sh \u2514\u2500\u2500\u2500.markdownlint.json O arquivo .devcontainer/Dockerfile instala o markdownlint : ... RUN apt-get update \\ && export DEBIAN_FRONTEND = noninteractive \\ && apt-get install -y nodejs npm # Adicionar ferramentas NodeJS RUN npm install -g markdownlint-cli ... O arquivo .markdownlint.json cont\u00e9m as regras que voc\u00ea deseja validar em seus arquivos markdown (consulte o site do markdownlint para obter detalhes). E, finalmente, o script scripts/check-markdown.sh cont\u00e9m o seguinte c\u00f3digo para executar o markdownlint : # Obter a raiz do reposit\u00f3rio repoRoot = \" $( cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) /..\" >/dev/null 2 > & 1 && pwd ) \" # Executar o markdownlint para toda a solu\u00e7\u00e3o markdownlint -c \" ${ repoRoot } \" /.markdownlint.json Quando o Dev Container \u00e9 carregado, qualquer desenvolvedor pode executar este script em seu terminal: /> ./scripts/check-markdown.sh Este \u00e9 um pequeno exemplo de uso, existem in\u00fameras outras possibilidades para capitalizar o trabalho feito pelos desenvolvedores para economizar tempo.","title":"Ferramentas Personalizadas"},{"location":"developer-experience/going-further/#outras-consideracoes","text":"","title":"Outras Considera\u00e7\u00f5es"},{"location":"developer-experience/going-further/#arquitetura-da-plataforma","text":"Ao instalar ferramentas, voc\u00ea tamb\u00e9m precisa garantir que sabe qual a arquitetura dos computadores dos desenvolvedores. Todos os computadores baseados em Intel, independentemente de estarem rodando Windows, Linux ou macOS, ter\u00e3o o mesmo comportamento. No entanto, a arquitetura mais recente da Apple (Apple M1/Silicon) sendo ARM64, significa que o comportamento n\u00e3o \u00e9 o mesmo ao criar Dev Containers. Por exemplo, se voc\u00ea deseja instalar o Azure-cli em seu Dev Container, n\u00e3o poder\u00e1 faz\u00ea-lo da mesma forma que faria em m\u00e1quinas Intel. Em computadores Intel, voc\u00ea pode instalar o pacote deb . No entanto, esse pacote n\u00e3o est\u00e1 dispon\u00edvel na arquitetura ARM. A \u00fanica maneira de instalar o Azure-cli no Linux ARM \u00e9 usando o instalador Python pip . Para fazer isso, voc\u00ea precisa verificar a arquitetura do host que est\u00e1 criando o Dev Container, seja no Dockerfile ou chamando um script bash externo para instalar as ferramentas restantes que n\u00e3o possuem uma vers\u00e3o universal. Aqui est\u00e1 um trecho para chamar do Dockerfile: # Se for baseado em Intel, use o arquivo deb if [[ ` dpkg --print-architecture ` == \"amd64\" ]] ; then sudo curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash ; else # Baseado em ARM, instale pip (e gcc) e, em seguida, azure-cli sudo apt-get -y install gcc python3 -m pip install --upgrade pip python3 -m pip install azure-cli fi","title":"Arquitetura da Plataforma"},{"location":"developer-experience/going-further/#reutilizacao-de-credenciais-para-o-github","text":"Se voc\u00ea desenvolve dentro de um Dev Container, tamb\u00e9m desejar\u00e1 compartilhar suas credenciais do GitHub entre seu host e o Dev Container. Fazendo isso, voc\u00ea evitaria copiar suas chaves SSH de um lado para o outro (se estiver usando SSH para acessar seus reposit\u00f3rios). Uma abordagem seria montar sua pasta local ~/.ssh em seu Dev Container. Voc\u00ea pode usar a op\u00e7\u00e3o mounts do devcontainer.json ou usar o Docker Compose. Usando mounts : { ... \"mounts\" : [ \"source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind\" ], ... } Como voc\u00ea pode ver, ${localEnv:HOME} retorna a pasta home do host e a mapeia para a pasta do cont\u00eainer. Usando Docker Compose: version : '3' services : meu-ambiente : env_file : ../configs/.env build : context : . dockerfile : Dockerfile volumes : - \"~/.ssh:/home/alex/.ssh\" command : sleep infinity Observe que o uso do Docker Compose requer a edi\u00e7\u00e3o do arquivo devcontainer.json , conforme vimos acima. Agora voc\u00ea pode acessar o GitHub usando as mesmas credenciais do seu host, sem se preocupar com a persist\u00eancia.","title":"Reutiliza\u00e7\u00e3o de Credenciais para o GitHub"},{"location":"developer-experience/going-further/#permitir-alguma-customizacao","text":"Como nota final, tamb\u00e9m \u00e9 interessante deixar aos desenvolvedores alguma flexibilidade em seu ambiente para personaliza\u00e7\u00e3o. Por exemplo, algu\u00e9m pode querer adicionar aliases ao seu ambiente. No entanto, alterar o arquivo ~/.bashrc no Dev Container n\u00e3o \u00e9 uma abordagem boa, pois o cont\u00eainer pode ser destru\u00eddo. Existem v\u00e1rias maneiras de definir a persist\u00eancia. Aqui est\u00e1 uma abordagem. Considere a seguinte estrutura do projeto: Minha Aplica\u00e7\u00e3o # diret\u00f3rio principal do reposit\u00f3rio \u2514\u2500\u2500\u2500.devcontainer | \u251c\u2500\u2500\u2500Dockerfile | \u251c\u2500\u2500\u2500docker -compose.yml | \u251c\u2500\u2500\u2500devcontainer.json \u2514\u2500\u2500\u2500me | \u251c\u2500\u2500\u2500bashrc_extension A pasta me n\u00e3o est\u00e1 rastreada no reposit\u00f3rio, deixando aos desenvolvedores a flexibilidade de adicionar recursos pessoais. Um desses recursos pode ser uma extens\u00e3o .bashrc contendo personaliza\u00e7\u00f5es. Por exemplo: # Exemplo de alias alias gaa = \"git add --all\" Agora podemos adaptar nosso Dockerfile para carregar essas altera\u00e7\u00f5es quando a imagem Docker \u00e9 criada (e, \u00e9 claro, n\u00e3o fazer nada se n\u00e3o houver nenhum arquivo): ... RUN echo \"[ -f PATH_TO_WORKSPACE/me/bashrc_extension ] && . PATH_TO_WORKSPACE/me/bashrc_extension\" >> ~/.bashrc ; ...","title":"Permitir Alguma Customiza\u00e7\u00e3o"},{"location":"developer-experience/onboarding-guide-template/","text":"Modelo de Guia de Integra\u00e7\u00e3o Ao desenvolver um documento de integra\u00e7\u00e3o para uma equipe, ele deve conter detalhes do escopo de envolvimento, processos da equipe, base de c\u00f3digo, padr\u00f5es de codifica\u00e7\u00e3o, acordos da equipe, requisitos de software e detalhes de configura\u00e7\u00e3o. O guia de integra\u00e7\u00e3o pode ser usado como um \u00edndice para o conte\u00fado espec\u00edfico do projeto, se j\u00e1 existir em outro lugar. Permitir que este guia seja utilizado como uma base com os links ajudar\u00e1 a manter o guia conciso e eficaz. Vis\u00e3o Geral e Objetivos Liste algumas frases explicando o resumo de alto n\u00edvel e o escopo do envolvimento. Considere adicionar qualquer contexto e antecedentes adicionais conforme necess\u00e1rio. Inclua a proposta de valor do projeto, objetivos, como se parece o sucesso e o que a equipe est\u00e1 tentando alcan\u00e7ar e por qu\u00ea. Contatos Liste alguns dos principais contatos para a equipe e o projeto como um todo, como o L\u00edder de Desenvolvimento e o Propriet\u00e1rio do Produto. Considere incluir as fun\u00e7\u00f5es desses principais contatos para que a equipe saiba com quem entrar em contato dependendo da situa\u00e7\u00e3o. Acordo da Equipe e C\u00f3digo de Conduta Inclua o c\u00f3digo de conduta ou acordo da equipe que define um conjunto de expectativas de cada membro da equipe e como a equipe concordou em operar. Modelo de Acordo de Trabalho - acordo de trabalho Configura\u00e7\u00e3o do Ambiente de Desenvolvimento Considere adicionar etapas para executar o projeto de ponta a ponta. Isso pode estar na forma de uma p\u00e1gina wiki separada ou documento que pode ser vinculado aqui. Inclua qualquer software que precisa ser baixado e especifique se \u00e9 necess\u00e1ria uma vers\u00e3o espec\u00edfica do software. Blocos de Constru\u00e7\u00e3o do Projeto Isso pode incluir uma descri\u00e7\u00e3o mais detalhada com diferentes \u00e1reas do projeto para ajudar a aumentar o entendimento do projeto. Pode incluir diferentes se\u00e7\u00f5es sobre os v\u00e1rios componentes do projeto, incluindo implanta\u00e7\u00e3o, teste de ponta a ponta, reposit\u00f3rios. Recursos e Links \u00dateis Isso pode incluir quaisquer links adicionais para documentos relacionados ao projeto. Pode incluir links para itens do backlog, itens de trabalho, p\u00e1ginas de wiki ou hist\u00f3rico do projeto.","title":"Modelo de Guia de Integra\u00e7\u00e3o"},{"location":"developer-experience/onboarding-guide-template/#modelo-de-guia-de-integracao","text":"Ao desenvolver um documento de integra\u00e7\u00e3o para uma equipe, ele deve conter detalhes do escopo de envolvimento, processos da equipe, base de c\u00f3digo, padr\u00f5es de codifica\u00e7\u00e3o, acordos da equipe, requisitos de software e detalhes de configura\u00e7\u00e3o. O guia de integra\u00e7\u00e3o pode ser usado como um \u00edndice para o conte\u00fado espec\u00edfico do projeto, se j\u00e1 existir em outro lugar. Permitir que este guia seja utilizado como uma base com os links ajudar\u00e1 a manter o guia conciso e eficaz.","title":"Modelo de Guia de Integra\u00e7\u00e3o"},{"location":"developer-experience/onboarding-guide-template/#visao-geral-e-objetivos","text":"Liste algumas frases explicando o resumo de alto n\u00edvel e o escopo do envolvimento. Considere adicionar qualquer contexto e antecedentes adicionais conforme necess\u00e1rio. Inclua a proposta de valor do projeto, objetivos, como se parece o sucesso e o que a equipe est\u00e1 tentando alcan\u00e7ar e por qu\u00ea.","title":"Vis\u00e3o Geral e Objetivos"},{"location":"developer-experience/onboarding-guide-template/#contatos","text":"Liste alguns dos principais contatos para a equipe e o projeto como um todo, como o L\u00edder de Desenvolvimento e o Propriet\u00e1rio do Produto. Considere incluir as fun\u00e7\u00f5es desses principais contatos para que a equipe saiba com quem entrar em contato dependendo da situa\u00e7\u00e3o.","title":"Contatos"},{"location":"developer-experience/onboarding-guide-template/#acordo-da-equipe-e-codigo-de-conduta","text":"Inclua o c\u00f3digo de conduta ou acordo da equipe que define um conjunto de expectativas de cada membro da equipe e como a equipe concordou em operar. Modelo de Acordo de Trabalho - acordo de trabalho","title":"Acordo da Equipe e C\u00f3digo de Conduta"},{"location":"developer-experience/onboarding-guide-template/#configuracao-do-ambiente-de-desenvolvimento","text":"Considere adicionar etapas para executar o projeto de ponta a ponta. Isso pode estar na forma de uma p\u00e1gina wiki separada ou documento que pode ser vinculado aqui. Inclua qualquer software que precisa ser baixado e especifique se \u00e9 necess\u00e1ria uma vers\u00e3o espec\u00edfica do software.","title":"Configura\u00e7\u00e3o do Ambiente de Desenvolvimento"},{"location":"developer-experience/onboarding-guide-template/#blocos-de-construcao-do-projeto","text":"Isso pode incluir uma descri\u00e7\u00e3o mais detalhada com diferentes \u00e1reas do projeto para ajudar a aumentar o entendimento do projeto. Pode incluir diferentes se\u00e7\u00f5es sobre os v\u00e1rios componentes do projeto, incluindo implanta\u00e7\u00e3o, teste de ponta a ponta, reposit\u00f3rios.","title":"Blocos de Constru\u00e7\u00e3o do Projeto"},{"location":"developer-experience/onboarding-guide-template/#recursos-e-links-uteis","text":"Isso pode incluir quaisquer links adicionais para documentos relacionados ao projeto. Pode incluir links para itens do backlog, itens de trabalho, p\u00e1ginas de wiki ou hist\u00f3rico do projeto.","title":"Recursos e Links \u00dateis"},{"location":"developer-experience/toggle-vnet-dev-environment/","text":"Alternativa para mudar a VNet para ambiente de produ\u00e7\u00e3o e desenvolvimento Declara\u00e7\u00e3o do Problema Ao implantar recursos no Azure em um ambiente seguro, os recursos geralmente s\u00e3o criados atr\u00e1s de uma Rede Privada (VNet), sem acesso p\u00fablico e com pontos de extremidade privados para consumir recursos. Essa \u00e9 a abordagem recomendada para ambientes de pr\u00e9-produ\u00e7\u00e3o ou produ\u00e7\u00e3o. Acessar recursos protegidos a partir de uma m\u00e1quina local implica em uma das seguintes op\u00e7\u00f5es: Usar uma VPN Usar um jump box Com SSH ativado (menos seguro) Com Bastion (abordagem recomendada) No entanto, um desenvolvedor pode desejar implantar um ambiente de teste (em uma assinatura n\u00e3o de produ\u00e7\u00e3o) para seus testes durante a fase de desenvolvimento, sem a complexidade de redes. Al\u00e9m disso, o c\u00f3digo de infraestrutura n\u00e3o deve ser duplicado: ele deve ser o mesmo, quer os recursos sejam implantados em um ambiente semelhante ao de produ\u00e7\u00e3o ou em um ambiente de desenvolvimento. Op\u00e7\u00e3o A ideia \u00e9 oferecer, por meio de uma \u00fanica vari\u00e1vel booleana , a op\u00e7\u00e3o de implantar recursos atr\u00e1s de uma VNet ou n\u00e3o, usando um \u00fanico c\u00f3digo de infraestrutura. Proteger recursos atr\u00e1s de uma VNet geralmente implica que acessos p\u00fablicos s\u00e3o desativados e pontos de extremidade privados s\u00e3o criados. Isso \u00e9 algo a se ter em mente porque, como desenvolvedor, o acesso p\u00fablico deve ser ativado para se conectar a esse ambiente. O pipeline de implanta\u00e7\u00e3o definir\u00e1 esses recursos atr\u00e1s de uma VNet e os proteger\u00e1 removendo os acessos p\u00fablicos. Os desenvolvedores poder\u00e3o executar o mesmo script de implanta\u00e7\u00e3o, especificando que os recursos n\u00e3o estar\u00e3o atr\u00e1s de uma VNet e n\u00e3o ter\u00e3o os acessos p\u00fablicos desabilitados. Considere o seguinte caso de uso: queremos implantar uma VNet, uma sub-rede, uma conta de armazenamento sem acesso p\u00fablico e um ponto de extremidade privado para a tabela. A vari\u00e1vel \"m\u00e1gica\" que ajudar\u00e1 a alternar a seguran\u00e7a ser\u00e1 chamada de behind_vnet , do tipo booleano. Vamos implementar esse caso de uso usando o Terraform . O c\u00f3digo abaixo n\u00e3o cont\u00e9m tudo, o objetivo \u00e9 mostrar o padr\u00e3o e n\u00e3o como implantar esses recursos. Para obter mais informa\u00e7\u00f5es sobre o Terraform, consulte a documenta\u00e7\u00e3o oficial . N\u00e3o existe um if per se no Terraform para definir se um recurso espec\u00edfico deve ser implantado ou n\u00e3o com base no valor de uma vari\u00e1vel. No entanto, podemos usar o argumento meta count . A for\u00e7a desse argumento meta \u00e9 que, se seu valor for 0 , o bloco ser\u00e1 ignorado. Aqui est\u00e3o trechos de c\u00f3digo para essa implanta\u00e7\u00e3o: variables.tf variable \"behind_vnet\" { type = bool } main.tf resource \"azurerm_virtual_network\" \"vnet\" { count = var.behind_vnet ? 1 : 0 name = \"MyVnet\" address_space = [ x.x.x.x / 16 ] resource_group_name = \"MyResourceGroup\" location = \"WestEurope\" ... subnet { name = \"subnet_1\" address_prefix = \"x.x.x.x/24\" } } resource \"azurerm_storage_account\" \"storage_account\" { name = \"storage\" resource_group_name = \"MyResourceGroup\" location = \"WestEurope\" tags = var.tags ... public_network_access_enabled = var.behind_vnet ? false : true } resource \"azurerm_private_endpoint\" \"storage_account_table_private_endpoint\" { count = var.behind_vnet ? 1 : 0 name = \"pe-storage\" subnet_id = azurerm_virtual_network.vnet[0].subnet[0].id ... private_service_connection { name = \"psc-storage\" private_connection_resource_id = azurerm_storage_account.storage_account.id subresource_names = [ \"table\" ] ... } private_dns_zone_group { name = \"privateDnsZoneGroup\" ... } } Se executarmos terraform apply -var behind_vnet = true ent\u00e3o todos os recursos acima ser\u00e3o implantados, e \u00e9 o que queremos em um ambiente semelhante ao de produ\u00e7\u00e3o ou de pr\u00e9-produ\u00e7\u00e3o. A instru\u00e7\u00e3o count = var.behind_vnet ? 1 : 0 definir\u00e1 count com o valor 1 , portanto, os blocos ser\u00e3o executados. No entanto, se executarmos terraform apply -var behind_vnet = false os recursos azurerm_virtual_network e azurerm_private_endpoint ser\u00e3o ignorados (porque count ser\u00e1 0 ). O recurso azurerm_storage_account ser\u00e1 criado, com pequenas diferen\u00e7as em algumas propriedades: por exemplo, aqui, public_network_access_enabled ser\u00e1 definido como true (e este \u00e9 o objetivo para um desenvolvedor poder acessar recursos criados). O mesmo padr\u00e3o pode ser aplicado repetidamente para todo o c\u00f3digo de infraestrutura. Conclus\u00e3o Com essa abordagem, a mesma base de c\u00f3digo de infraestrutura pode ser usada para direcionar um ambiente semelhante ao de produ\u00e7\u00e3o com recursos seguros atr\u00e1s de uma VNet sem acessos p\u00fablicos e tamb\u00e9m um ambiente de desenvolvimento mais permissivo. No entanto, h\u00e1 algumas compensa\u00e7\u00f5es com essa abordagem: Se um recurso tiver o argumento count , ele precisar\u00e1 ser tratado como uma lista e n\u00e3o como um \u00fanico item. No exemplo acima, se houver a necessidade de fazer refer\u00eancia ao recurso azurerm_virtual_network posteriormente no c\u00f3digo, azurerm_virtual_network.vnet.id n\u00e3o funcionar\u00e1. O seguinte deve ser usado azurerm_virtual_network.vnet[0].id # Primeiro (e \u00fanico) item da cole\u00e7\u00e3o O argumento meta count n\u00e3o pode ser usado com for_each para um bloco inteiro. Isso significa que o uso de loops para implantar v\u00e1rios pontos de extremidade, por exemplo, n\u00e3o funcionar\u00e1. Cada ponto de extremidade privado precisar\u00e1 ser implantado individualmente.","title":"Alternativa para mudar a VNet para ambiente de produ\u00e7\u00e3o e desenvolvimento"},{"location":"developer-experience/toggle-vnet-dev-environment/#alternativa-para-mudar-a-vnet-para-ambiente-de-producao-e-desenvolvimento","text":"","title":"Alternativa para mudar a VNet para ambiente de produ\u00e7\u00e3o e desenvolvimento"},{"location":"developer-experience/toggle-vnet-dev-environment/#declaracao-do-problema","text":"Ao implantar recursos no Azure em um ambiente seguro, os recursos geralmente s\u00e3o criados atr\u00e1s de uma Rede Privada (VNet), sem acesso p\u00fablico e com pontos de extremidade privados para consumir recursos. Essa \u00e9 a abordagem recomendada para ambientes de pr\u00e9-produ\u00e7\u00e3o ou produ\u00e7\u00e3o. Acessar recursos protegidos a partir de uma m\u00e1quina local implica em uma das seguintes op\u00e7\u00f5es: Usar uma VPN Usar um jump box Com SSH ativado (menos seguro) Com Bastion (abordagem recomendada) No entanto, um desenvolvedor pode desejar implantar um ambiente de teste (em uma assinatura n\u00e3o de produ\u00e7\u00e3o) para seus testes durante a fase de desenvolvimento, sem a complexidade de redes. Al\u00e9m disso, o c\u00f3digo de infraestrutura n\u00e3o deve ser duplicado: ele deve ser o mesmo, quer os recursos sejam implantados em um ambiente semelhante ao de produ\u00e7\u00e3o ou em um ambiente de desenvolvimento.","title":"Declara\u00e7\u00e3o do Problema"},{"location":"developer-experience/toggle-vnet-dev-environment/#opcao","text":"A ideia \u00e9 oferecer, por meio de uma \u00fanica vari\u00e1vel booleana , a op\u00e7\u00e3o de implantar recursos atr\u00e1s de uma VNet ou n\u00e3o, usando um \u00fanico c\u00f3digo de infraestrutura. Proteger recursos atr\u00e1s de uma VNet geralmente implica que acessos p\u00fablicos s\u00e3o desativados e pontos de extremidade privados s\u00e3o criados. Isso \u00e9 algo a se ter em mente porque, como desenvolvedor, o acesso p\u00fablico deve ser ativado para se conectar a esse ambiente. O pipeline de implanta\u00e7\u00e3o definir\u00e1 esses recursos atr\u00e1s de uma VNet e os proteger\u00e1 removendo os acessos p\u00fablicos. Os desenvolvedores poder\u00e3o executar o mesmo script de implanta\u00e7\u00e3o, especificando que os recursos n\u00e3o estar\u00e3o atr\u00e1s de uma VNet e n\u00e3o ter\u00e3o os acessos p\u00fablicos desabilitados. Considere o seguinte caso de uso: queremos implantar uma VNet, uma sub-rede, uma conta de armazenamento sem acesso p\u00fablico e um ponto de extremidade privado para a tabela. A vari\u00e1vel \"m\u00e1gica\" que ajudar\u00e1 a alternar a seguran\u00e7a ser\u00e1 chamada de behind_vnet , do tipo booleano. Vamos implementar esse caso de uso usando o Terraform . O c\u00f3digo abaixo n\u00e3o cont\u00e9m tudo, o objetivo \u00e9 mostrar o padr\u00e3o e n\u00e3o como implantar esses recursos. Para obter mais informa\u00e7\u00f5es sobre o Terraform, consulte a documenta\u00e7\u00e3o oficial . N\u00e3o existe um if per se no Terraform para definir se um recurso espec\u00edfico deve ser implantado ou n\u00e3o com base no valor de uma vari\u00e1vel. No entanto, podemos usar o argumento meta count . A for\u00e7a desse argumento meta \u00e9 que, se seu valor for 0 , o bloco ser\u00e1 ignorado. Aqui est\u00e3o trechos de c\u00f3digo para essa implanta\u00e7\u00e3o: variables.tf variable \"behind_vnet\" { type = bool } main.tf resource \"azurerm_virtual_network\" \"vnet\" { count = var.behind_vnet ? 1 : 0 name = \"MyVnet\" address_space = [ x.x.x.x / 16 ] resource_group_name = \"MyResourceGroup\" location = \"WestEurope\" ... subnet { name = \"subnet_1\" address_prefix = \"x.x.x.x/24\" } } resource \"azurerm_storage_account\" \"storage_account\" { name = \"storage\" resource_group_name = \"MyResourceGroup\" location = \"WestEurope\" tags = var.tags ... public_network_access_enabled = var.behind_vnet ? false : true } resource \"azurerm_private_endpoint\" \"storage_account_table_private_endpoint\" { count = var.behind_vnet ? 1 : 0 name = \"pe-storage\" subnet_id = azurerm_virtual_network.vnet[0].subnet[0].id ... private_service_connection { name = \"psc-storage\" private_connection_resource_id = azurerm_storage_account.storage_account.id subresource_names = [ \"table\" ] ... } private_dns_zone_group { name = \"privateDnsZoneGroup\" ... } } Se executarmos terraform apply -var behind_vnet = true ent\u00e3o todos os recursos acima ser\u00e3o implantados, e \u00e9 o que queremos em um ambiente semelhante ao de produ\u00e7\u00e3o ou de pr\u00e9-produ\u00e7\u00e3o. A instru\u00e7\u00e3o count = var.behind_vnet ? 1 : 0 definir\u00e1 count com o valor 1 , portanto, os blocos ser\u00e3o executados. No entanto, se executarmos terraform apply -var behind_vnet = false os recursos azurerm_virtual_network e azurerm_private_endpoint ser\u00e3o ignorados (porque count ser\u00e1 0 ). O recurso azurerm_storage_account ser\u00e1 criado, com pequenas diferen\u00e7as em algumas propriedades: por exemplo, aqui, public_network_access_enabled ser\u00e1 definido como true (e este \u00e9 o objetivo para um desenvolvedor poder acessar recursos criados). O mesmo padr\u00e3o pode ser aplicado repetidamente para todo o c\u00f3digo de infraestrutura.","title":"Op\u00e7\u00e3o"},{"location":"developer-experience/toggle-vnet-dev-environment/#conclusao","text":"Com essa abordagem, a mesma base de c\u00f3digo de infraestrutura pode ser usada para direcionar um ambiente semelhante ao de produ\u00e7\u00e3o com recursos seguros atr\u00e1s de uma VNet sem acessos p\u00fablicos e tamb\u00e9m um ambiente de desenvolvimento mais permissivo. No entanto, h\u00e1 algumas compensa\u00e7\u00f5es com essa abordagem: Se um recurso tiver o argumento count , ele precisar\u00e1 ser tratado como uma lista e n\u00e3o como um \u00fanico item. No exemplo acima, se houver a necessidade de fazer refer\u00eancia ao recurso azurerm_virtual_network posteriormente no c\u00f3digo, azurerm_virtual_network.vnet.id n\u00e3o funcionar\u00e1. O seguinte deve ser usado azurerm_virtual_network.vnet[0].id # Primeiro (e \u00fanico) item da cole\u00e7\u00e3o O argumento meta count n\u00e3o pode ser usado com for_each para um bloco inteiro. Isso significa que o uso de loops para implantar v\u00e1rios pontos de extremidade, por exemplo, n\u00e3o funcionar\u00e1. Cada ponto de extremidade privado precisar\u00e1 ser implantado individualmente.","title":"Conclus\u00e3o"},{"location":"documentation/","text":"Documenta\u00e7\u00e3o Todo projeto de desenvolvimento de software requer documenta\u00e7\u00e3o. O Desenvolvimento \u00c1gil de Software valoriza software funcionando sobre documenta\u00e7\u00e3o abrangente . Ainda assim, os projetos devem incluir as informa\u00e7\u00f5es-chave necess\u00e1rias para entender o desenvolvimento e o uso do software gerado. A documenta\u00e7\u00e3o n\u00e3o deve ser uma reflex\u00e3o tardia. Diferentes documentos escritos e materiais devem ser criados durante todo o ciclo de vida do projeto, conforme as necessidades do projeto. Sum\u00e1rio Objetivos Desafios Que documenta\u00e7\u00e3o deve existir? Melhores pr\u00e1ticas Ferramentas Receitas Recursos Objetivos Facilitar a integra\u00e7\u00e3o de novos membros da equipe. Melhorar a comunica\u00e7\u00e3o e colabora\u00e7\u00e3o entre equipes (especialmente quando distribu\u00eddas em fusos hor\u00e1rios diferentes). Melhorar a transi\u00e7\u00e3o do projeto para outra equipe. Desafios Ao trabalhar em um projeto de engenharia, geralmente nos deparamos com um ou mais desses desafios relacionados \u00e0 documenta\u00e7\u00e3o (incluindo alguns exemplos): Inexistente . Nenhuma documenta\u00e7\u00e3o de integra\u00e7\u00e3o, ent\u00e3o leva muito tempo para configurar o ambiente quando voc\u00ea entra no projeto. Nenhum documento na wiki explicando os reposit\u00f3rios existentes, ent\u00e3o voc\u00ea n\u00e3o sabe qual dos 10 reposit\u00f3rios dispon\u00edveis deve clonar. Nenhum README principal, ent\u00e3o voc\u00ea n\u00e3o sabe por onde come\u00e7ar quando clona um reposit\u00f3rio. Nenhuma se\u00e7\u00e3o \"como contribuir\", ent\u00e3o voc\u00ea n\u00e3o sabe qual \u00e9 a pol\u00edtica de branch, onde adicionar novos documentos, etc. Nenhuma diretriz de c\u00f3digo, ent\u00e3o todos seguem conven\u00e7\u00f5es de nomenclatura diferentes, etc. Oculto . Imposs\u00edvel encontrar documenta\u00e7\u00e3o \u00fatil, pois est\u00e1 espalhada por todo lugar. Por exemplo, sem ideia de como compilar, executar e testar o c\u00f3digo, pois o README est\u00e1 escondido em uma pasta dentro de outra pasta dentro de outra pasta. Processos \u00fateis (por exemplo, processo de grooming) explicados fora da ferramenta de gerenciamento de backlog e n\u00e3o vinculados a nenhum lugar. Decis\u00f5es tomadas em canais diferentes que n\u00e3o a ferramenta de gerenciamento de backlog e n\u00e3o registradas em nenhum outro lugar. Incompleta . Nenhuma pol\u00edtica de branch clara, ent\u00e3o todos nomeiam suas branches de maneira diferente. Configura\u00e7\u00f5es ausentes no documento \"como executar isso\" que s\u00e3o necess\u00e1rias para executar a aplica\u00e7\u00e3o. Inexata . Documentos n\u00e3o atualizados junto com o c\u00f3digo, ent\u00e3o eles n\u00e3o mencionam as pastas corretas, configura\u00e7\u00f5es, etc. Obsoleta . Documentos de design que n\u00e3o se aplicam mais, ao lado de documentos v\u00e1lidos. Qual deles mostra as decis\u00f5es mais recentes? Desorganizada (por assunto/data) . Documentos n\u00e3o organizados por assunto/workstream, portanto, n\u00e3o \u00e9 f\u00e1cil encontrar informa\u00e7\u00f5es relevantes quando voc\u00ea muda para um novo workstream. Registros de decis\u00f5es de design fora de ordem e sem uma data que ajude a determinar qual \u00e9 a decis\u00e3o final sobre algo. Duplicada . Nenhum arquivo de configura\u00e7\u00f5es dispon\u00edvel em um local centralizado como fonte \u00fanica da verdade, ent\u00e3o os desenvolvedores precisam continuar compartilhando suas pr\u00f3prias vers\u00f5es, e acabamos com muitos arquivos que podem ou n\u00e3o funcionar. Reflex\u00e3o tardia . Documentos-chave criados v\u00e1rias semanas ap\u00f3s o in\u00edcio do projeto: integra\u00e7\u00e3o, como executar o aplicativo, etc. Documentos criados de \u00faltima hora, pouco antes do t\u00e9rmino de um projeto, esquecendo que tamb\u00e9m ajudam a equipe durante o trabalho no projeto. Que documenta\u00e7\u00e3o deve existir Projeto e Reposit\u00f3rios Mensagens de Commit Pull Requests C\u00f3digo Itens de Trabalho APIs REST Feedback de Engenharia Melhores pr\u00e1ticas Estabelecendo e gerenciando documenta\u00e7\u00e3o Criando boa documenta\u00e7\u00e3o Substituindo documenta\u00e7\u00e3o por automa\u00e7\u00e3o Ferramentas Wikis Linguagens markdown mermaid Como automatizar verifica\u00e7\u00f5es simples Integra\u00e7\u00e3o com Teams/Slack Receitas Como sincronizar uma wiki entre reposit\u00f3rios Usando DocFx e Ferramentas Complementares para gerar um site de Documenta\u00e7\u00e3o Implantar automaticamente o site de Documenta\u00e7\u00e3o DocFx em um site Azure Como criar um site est\u00e1tico para sua documenta\u00e7\u00e3o com base em MkDocs e Material for MkDocs Recursos Tipos de Documenta\u00e7\u00e3o de Software e Melhores Pr\u00e1ticas","title":"Documenta\u00e7\u00e3o"},{"location":"documentation/#documentacao","text":"Todo projeto de desenvolvimento de software requer documenta\u00e7\u00e3o. O Desenvolvimento \u00c1gil de Software valoriza software funcionando sobre documenta\u00e7\u00e3o abrangente . Ainda assim, os projetos devem incluir as informa\u00e7\u00f5es-chave necess\u00e1rias para entender o desenvolvimento e o uso do software gerado. A documenta\u00e7\u00e3o n\u00e3o deve ser uma reflex\u00e3o tardia. Diferentes documentos escritos e materiais devem ser criados durante todo o ciclo de vida do projeto, conforme as necessidades do projeto.","title":"Documenta\u00e7\u00e3o"},{"location":"documentation/#sumario","text":"Objetivos Desafios Que documenta\u00e7\u00e3o deve existir? Melhores pr\u00e1ticas Ferramentas Receitas Recursos","title":"Sum\u00e1rio"},{"location":"documentation/#objetivos","text":"Facilitar a integra\u00e7\u00e3o de novos membros da equipe. Melhorar a comunica\u00e7\u00e3o e colabora\u00e7\u00e3o entre equipes (especialmente quando distribu\u00eddas em fusos hor\u00e1rios diferentes). Melhorar a transi\u00e7\u00e3o do projeto para outra equipe.","title":"Objetivos"},{"location":"documentation/#desafios","text":"Ao trabalhar em um projeto de engenharia, geralmente nos deparamos com um ou mais desses desafios relacionados \u00e0 documenta\u00e7\u00e3o (incluindo alguns exemplos): Inexistente . Nenhuma documenta\u00e7\u00e3o de integra\u00e7\u00e3o, ent\u00e3o leva muito tempo para configurar o ambiente quando voc\u00ea entra no projeto. Nenhum documento na wiki explicando os reposit\u00f3rios existentes, ent\u00e3o voc\u00ea n\u00e3o sabe qual dos 10 reposit\u00f3rios dispon\u00edveis deve clonar. Nenhum README principal, ent\u00e3o voc\u00ea n\u00e3o sabe por onde come\u00e7ar quando clona um reposit\u00f3rio. Nenhuma se\u00e7\u00e3o \"como contribuir\", ent\u00e3o voc\u00ea n\u00e3o sabe qual \u00e9 a pol\u00edtica de branch, onde adicionar novos documentos, etc. Nenhuma diretriz de c\u00f3digo, ent\u00e3o todos seguem conven\u00e7\u00f5es de nomenclatura diferentes, etc. Oculto . Imposs\u00edvel encontrar documenta\u00e7\u00e3o \u00fatil, pois est\u00e1 espalhada por todo lugar. Por exemplo, sem ideia de como compilar, executar e testar o c\u00f3digo, pois o README est\u00e1 escondido em uma pasta dentro de outra pasta dentro de outra pasta. Processos \u00fateis (por exemplo, processo de grooming) explicados fora da ferramenta de gerenciamento de backlog e n\u00e3o vinculados a nenhum lugar. Decis\u00f5es tomadas em canais diferentes que n\u00e3o a ferramenta de gerenciamento de backlog e n\u00e3o registradas em nenhum outro lugar. Incompleta . Nenhuma pol\u00edtica de branch clara, ent\u00e3o todos nomeiam suas branches de maneira diferente. Configura\u00e7\u00f5es ausentes no documento \"como executar isso\" que s\u00e3o necess\u00e1rias para executar a aplica\u00e7\u00e3o. Inexata . Documentos n\u00e3o atualizados junto com o c\u00f3digo, ent\u00e3o eles n\u00e3o mencionam as pastas corretas, configura\u00e7\u00f5es, etc. Obsoleta . Documentos de design que n\u00e3o se aplicam mais, ao lado de documentos v\u00e1lidos. Qual deles mostra as decis\u00f5es mais recentes? Desorganizada (por assunto/data) . Documentos n\u00e3o organizados por assunto/workstream, portanto, n\u00e3o \u00e9 f\u00e1cil encontrar informa\u00e7\u00f5es relevantes quando voc\u00ea muda para um novo workstream. Registros de decis\u00f5es de design fora de ordem e sem uma data que ajude a determinar qual \u00e9 a decis\u00e3o final sobre algo. Duplicada . Nenhum arquivo de configura\u00e7\u00f5es dispon\u00edvel em um local centralizado como fonte \u00fanica da verdade, ent\u00e3o os desenvolvedores precisam continuar compartilhando suas pr\u00f3prias vers\u00f5es, e acabamos com muitos arquivos que podem ou n\u00e3o funcionar. Reflex\u00e3o tardia . Documentos-chave criados v\u00e1rias semanas ap\u00f3s o in\u00edcio do projeto: integra\u00e7\u00e3o, como executar o aplicativo, etc. Documentos criados de \u00faltima hora, pouco antes do t\u00e9rmino de um projeto, esquecendo que tamb\u00e9m ajudam a equipe durante o trabalho no projeto.","title":"Desafios"},{"location":"documentation/#que-documentacao-deve-existir","text":"Projeto e Reposit\u00f3rios Mensagens de Commit Pull Requests C\u00f3digo Itens de Trabalho APIs REST Feedback de Engenharia","title":"Que documenta\u00e7\u00e3o deve existir"},{"location":"documentation/#melhores-praticas","text":"Estabelecendo e gerenciando documenta\u00e7\u00e3o Criando boa documenta\u00e7\u00e3o Substituindo documenta\u00e7\u00e3o por automa\u00e7\u00e3o","title":"Melhores pr\u00e1ticas"},{"location":"documentation/#ferramentas","text":"Wikis Linguagens markdown mermaid Como automatizar verifica\u00e7\u00f5es simples Integra\u00e7\u00e3o com Teams/Slack","title":"Ferramentas"},{"location":"documentation/#receitas","text":"Como sincronizar uma wiki entre reposit\u00f3rios Usando DocFx e Ferramentas Complementares para gerar um site de Documenta\u00e7\u00e3o Implantar automaticamente o site de Documenta\u00e7\u00e3o DocFx em um site Azure Como criar um site est\u00e1tico para sua documenta\u00e7\u00e3o com base em MkDocs e Material for MkDocs","title":"Receitas"},{"location":"documentation/#recursos","text":"Tipos de Documenta\u00e7\u00e3o de Software e Melhores Pr\u00e1ticas","title":"Recursos"},{"location":"documentation/best-practices/automation/","text":"Substituindo Documenta\u00e7\u00e3o por Automa\u00e7\u00e3o Voc\u00ea pode documentar como configurar sua m\u00e1quina de desenvolvimento com a vers\u00e3o correta do framework necess\u00e1ria para executar o c\u00f3digo, quais extens\u00f5es s\u00e3o \u00fateis para desenvolver a aplica\u00e7\u00e3o com seu editor ou como configurar seu editor para iniciar e depurar a aplica\u00e7\u00e3o. Se for poss\u00edvel, uma solu\u00e7\u00e3o melhor \u00e9 fornecer meios para automatizar a instala\u00e7\u00e3o de ferramentas, o in\u00edcio da aplica\u00e7\u00e3o, etc. Alguns exemplos s\u00e3o fornecidos abaixo: Cont\u00eaineres de Desenvolvimento no Visual Studio Code A extens\u00e3o Visual Studio Code Remote - Containers permite que voc\u00ea use um cont\u00eainer Docker como um ambiente de desenvolvimento completo. Isso permite que voc\u00ea abra qualquer pasta dentro (ou montada em) um cont\u00eainer e aproveite o conjunto completo de recursos do Visual Studio Code. Informa\u00e7\u00f5es adicionais: Desenvolvendo Dentro de um Cont\u00eainer . Configura\u00e7\u00f5es de Inicializa\u00e7\u00e3o e Tarefas no Visual Studio Code Configura\u00e7\u00f5es de Inicializa\u00e7\u00e3o permitem que voc\u00ea configure e salve detalhes de configura\u00e7\u00e3o de depura\u00e7\u00e3o. Tarefas podem ser configuradas para executar scripts e iniciar processos, de modo que muitas dessas ferramentas existentes podem ser usadas dentro do VS Code sem a necessidade de entrar em um terminal ou escrever novo c\u00f3digo.","title":"Substituindo Documenta\u00e7\u00e3o por Automa\u00e7\u00e3o"},{"location":"documentation/best-practices/automation/#substituindo-documentacao-por-automacao","text":"Voc\u00ea pode documentar como configurar sua m\u00e1quina de desenvolvimento com a vers\u00e3o correta do framework necess\u00e1ria para executar o c\u00f3digo, quais extens\u00f5es s\u00e3o \u00fateis para desenvolver a aplica\u00e7\u00e3o com seu editor ou como configurar seu editor para iniciar e depurar a aplica\u00e7\u00e3o. Se for poss\u00edvel, uma solu\u00e7\u00e3o melhor \u00e9 fornecer meios para automatizar a instala\u00e7\u00e3o de ferramentas, o in\u00edcio da aplica\u00e7\u00e3o, etc. Alguns exemplos s\u00e3o fornecidos abaixo:","title":"Substituindo Documenta\u00e7\u00e3o por Automa\u00e7\u00e3o"},{"location":"documentation/best-practices/automation/#conteineres-de-desenvolvimento-no-visual-studio-code","text":"A extens\u00e3o Visual Studio Code Remote - Containers permite que voc\u00ea use um cont\u00eainer Docker como um ambiente de desenvolvimento completo. Isso permite que voc\u00ea abra qualquer pasta dentro (ou montada em) um cont\u00eainer e aproveite o conjunto completo de recursos do Visual Studio Code. Informa\u00e7\u00f5es adicionais: Desenvolvendo Dentro de um Cont\u00eainer .","title":"Cont\u00eaineres de Desenvolvimento no Visual Studio Code"},{"location":"documentation/best-practices/automation/#configuracoes-de-inicializacao-e-tarefas-no-visual-studio-code","text":"Configura\u00e7\u00f5es de Inicializa\u00e7\u00e3o permitem que voc\u00ea configure e salve detalhes de configura\u00e7\u00e3o de depura\u00e7\u00e3o. Tarefas podem ser configuradas para executar scripts e iniciar processos, de modo que muitas dessas ferramentas existentes podem ser usadas dentro do VS Code sem a necessidade de entrar em um terminal ou escrever novo c\u00f3digo.","title":"Configura\u00e7\u00f5es de Inicializa\u00e7\u00e3o e Tarefas no Visual Studio Code"},{"location":"documentation/best-practices/establish-and-manage/","text":"Estabelecendo e Gerenciando Documenta\u00e7\u00e3o A documenta\u00e7\u00e3o deve ser controlada por origem. Pull Requests podem ser usados para informar aos outros sobre as altera\u00e7\u00f5es, para que possam ser revisadas e discutidas. Por exemplo, Revis\u00f5es de Design Ass\u00edncronas . Ferramentas: Wikis .","title":"Estabelecendo e Gerenciando Documenta\u00e7\u00e3o"},{"location":"documentation/best-practices/establish-and-manage/#estabelecendo-e-gerenciando-documentacao","text":"A documenta\u00e7\u00e3o deve ser controlada por origem. Pull Requests podem ser usados para informar aos outros sobre as altera\u00e7\u00f5es, para que possam ser revisadas e discutidas. Por exemplo, Revis\u00f5es de Design Ass\u00edncronas . Ferramentas: Wikis .","title":"Estabelecendo e Gerenciando Documenta\u00e7\u00e3o"},{"location":"documentation/best-practices/good-documentation/","text":"Criando Boa Documenta\u00e7\u00e3o Analise a Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de Documenta\u00e7\u00e3o para obter orienta\u00e7\u00f5es sobre como escrever boa documenta\u00e7\u00e3o. Uma boa documenta\u00e7\u00e3o deve seguir diretrizes de escrita adequadas: Diretrizes de Estilo de Escrita .","title":"Criando Boa Documenta\u00e7\u00e3o"},{"location":"documentation/best-practices/good-documentation/#criando-boa-documentacao","text":"Analise a Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de Documenta\u00e7\u00e3o para obter orienta\u00e7\u00f5es sobre como escrever boa documenta\u00e7\u00e3o. Uma boa documenta\u00e7\u00e3o deve seguir diretrizes de escrita adequadas: Diretrizes de Estilo de Escrita .","title":"Criando Boa Documenta\u00e7\u00e3o"},{"location":"documentation/guidance/code/","text":"C\u00f3digo Voc\u00ea provavelmente j\u00e1 ouviu mais de uma vez que voc\u00ea deve escrever c\u00f3digo autoexplicativo . Isso n\u00e3o significa que voc\u00ea nunca deve comentar seu c\u00f3digo. Existem dois tipos de coment\u00e1rios de c\u00f3digo: coment\u00e1rios de implementa\u00e7\u00e3o e coment\u00e1rios de documenta\u00e7\u00e3o. Coment\u00e1rios de Implementa\u00e7\u00e3o Eles s\u00e3o usados para documenta\u00e7\u00e3o interna e destinam-se a qualquer pessoa que possa precisar manter o c\u00f3digo no futuro, incluindo voc\u00ea mesmo. Existem coment\u00e1rios de linha \u00fanica e coment\u00e1rios de v\u00e1rias linhas (por exemplo, Coment\u00e1rios em C# ). Coment\u00e1rios s\u00e3o leg\u00edveis por humanos e n\u00e3o s\u00e3o executados, portanto, ignorados pelo compilador. Portanto, voc\u00ea pode potencialmente adicionar quantos desejar. Agora, o uso desses coment\u00e1rios geralmente \u00e9 considerado um ind\u00edcio de c\u00f3digo problem\u00e1tico. Se voc\u00ea precisa esclarecer seu c\u00f3digo, isso pode significar que o c\u00f3digo est\u00e1 muito complexo. Portanto, voc\u00ea deve trabalhar para remover a necessidade de esclarecimento tornando o c\u00f3digo mais simples, mais f\u00e1cil de ler e entender. Ainda assim, esses coment\u00e1rios podem ser \u00fateis para fornecer uma vis\u00e3o geral do c\u00f3digo ou fornecer informa\u00e7\u00f5es adicionais de contexto que n\u00e3o est\u00e3o dispon\u00edveis no c\u00f3digo em si. Exemplos de coment\u00e1rios \u00fateis: Coment\u00e1rio de linha \u00fanica em C# que explica por que aquele trecho de c\u00f3digo est\u00e1 ali (de um m\u00e9todo privado em System.Text.Json.JsonSerializer ): // Por quest\u00f5es de desempenho, evite obter a contagem real de bytes, a menos que o uso de mem\u00f3ria seja maior que o limite. Span < byte > utf8 = json . Length <= ( ArrayPoolMaxSizeBeforeUsingNormalAlloc / JsonConstants . MaxExpansionFactorWhileTranscoding ) ? ... Coment\u00e1rio de v\u00e1rias linhas em C# que fornece contexto adicional (de um m\u00e9todo privado em System.Text.Json.Utf8JsonReader ): // A transcodifica\u00e7\u00e3o de UTF-16 para UTF-8 alterar\u00e1 o comprimento entre 1x e 3x. // O desescape do valor do token reduzir\u00e1 seu comprimento no m\u00e1ximo em 6x. // N\u00e3o faz sentido incorrer no custo de transcodifica\u00e7\u00e3o/desescape/compara\u00e7\u00e3o se: // - O valor do token for menor que charTextLength // - O valor do token precisa ser transcodificado E desescapado e for mais de 6x maior que charTextLength // - Para caracteres UTF-16 ASCII, a transcodifica\u00e7\u00e3o = 1x, o desescape = 6x => fator 6x // - Para caracteres UTF-16 n\u00e3o ASCII dentro do BMP, a transcodifica\u00e7\u00e3o = 2-3x, mas s\u00e3o representados como um \u00fanico valor hexadecimal escapado, \\uXXXX => fator 6x // - Para caracteres UTF-16 n\u00e3o ASCII fora do BMP, a transcodifica\u00e7\u00e3o = 4x, mas o par suplementar (2 caracteres) \u00e9 representado por 16 bytes \\uXXXX\\uXXXX => fator 6x // - O valor do token precisa ser transcodificado, mas N\u00c3O desescapado e for mais de 3x maior que charTextLength // - Para caracteres UTF-16 ASCII, a transcodifica\u00e7\u00e3o = 1x, // - Para caracteres UTF-16 n\u00e3o ASCII dentro do BMP, a transcodifica\u00e7\u00e3o = 2-3x, // - Para caracteres UTF-16 n\u00e3o ASCII fora do BMP, a transcodifica\u00e7\u00e3o = 2x, (pares suplementares - 2 caracteres transcodem para 4 bytes UTF-8) if ( sourceLength < charTextLength || sourceLength / ( _stringHasEscaping ? JsonConstants . MaxExpansionFactorWhileEscaping : JsonConstants . MaxExpansionFactorWhileTranscoding ) > charTextLength ) { Coment\u00e1rios de Documenta\u00e7\u00e3o Coment\u00e1rios de documenta\u00e7\u00e3o (doc comments) s\u00e3o um tipo especial de coment\u00e1rio, adicionados acima da defini\u00e7\u00e3o de qualquer tipo ou membro definido pelo usu\u00e1rio, e destinam-se a qualquer pessoa que possa precisar usar esses tipos ou membros em seu pr\u00f3prio c\u00f3digo. Se, por exemplo, voc\u00ea est\u00e1 construindo uma biblioteca ou framework, os coment\u00e1rios de documenta\u00e7\u00e3o podem ser usados para gerar a documenta\u00e7\u00e3o deles. Essa documenta\u00e7\u00e3o deve servir como especifica\u00e7\u00e3o de API e/ou guia de programa\u00e7\u00e3o. Os coment\u00e1rios de documenta\u00e7\u00e3o n\u00e3o ser\u00e3o inclu\u00eddos pelo compilador no execut\u00e1vel final, assim como os coment\u00e1rios de linha \u00fanica e de v\u00e1rias linhas. Exemplo de um coment\u00e1rio de documenta\u00e7\u00e3o em C# (do m\u00e9todo Deserialize em System.Text.Json.JsonSerializer ): /// <summary> /// Analisa o texto que representa um \u00fanico valor JSON em um <typeparamref name=\"TValue\"/>. /// </summary> /// <returns>Uma representa\u00e7\u00e3o de <typeparamref name=\"TValue\"/> do valor JSON.</returns> /// <param name=\"json\">Texto JSON para an\u00e1lise.</param> /// <param name=\"options\">Op\u00e7\u00f5es para controlar o comportamento durante a an\u00e1lise.</param> /// <exception cref=\"System.ArgumentNullException\"> /// <paramref name=\"json\"/> \u00e9 <see langword=\"null\"/>. /// </exception> /// <exception cref=\"JsonException\"> /// O JSON \u00e9 inv\u00e1lido. /// /// -ou- /// /// <typeparamref name=\"TValue\" /> n\u00e3o \u00e9 compat\u00edvel com o JSON. /// /// -ou- /// /// H\u00e1 dados remanescentes na string al\u00e9m de um \u00fanico valor JSON.</exception> /// <exception cref=\"NotSupportedException\"> /// N\u00e3o h\u00e1 um <see cref=\"System.Text.Json.Serialization.JsonConverter\"/> /// compat\u00edvel com <typeparamref name=\"TValue\"/> ou seus membros serializ\u00e1veis. /// </exception> /// <remarks>Usar uma <see cref=\"string\"/> n\u00e3o \u00e9 t\u00e3o eficiente quanto usar os /// m\u00e9todos UTF-8, pois a implementa\u00e7\u00e3o usa nativamente UTF-8. /// </remarks> [RequiresUnreferencedCode(SerializationUnreferencedCodeMessage)] public static TValue ? Deserialize < TValue > ( string json , JsonSerializerOptions ? options = null ) { Em C# , os coment\u00e1rios de documenta\u00e7\u00e3o podem ser processados pelo compilador para gerar arquivos de documenta\u00e7\u00e3o XML. Esses arquivos podem ser distribu\u00eddos junto com suas bibliotecas para que o Visual Studio e outras IDEs possam usar o IntelliSense para mostrar informa\u00e7\u00f5es r\u00e1 pidas sobre tipos ou membros. Al\u00e9m disso, esses arquivos podem ser processados por ferramentas como DocFx para gerar sites de refer\u00eancia de API. Mais informa\u00e7\u00f5es: Tags XML recomendadas para coment\u00e1rios de documenta\u00e7\u00e3o em C# . Em outras linguagens, voc\u00ea pode precisar de ferramentas externas. Por exemplo, os coment\u00e1rios de documenta\u00e7\u00e3o Java podem ser processados pela ferramenta Javadoc para gerar arquivos de documenta\u00e7\u00e3o HTML. Mais informa\u00e7\u00f5es: Como Escrever Coment\u00e1rios de Documenta\u00e7\u00e3o para a Ferramenta Javadoc Ferramenta Javadoc","title":"C\u00f3digo"},{"location":"documentation/guidance/code/#codigo","text":"Voc\u00ea provavelmente j\u00e1 ouviu mais de uma vez que voc\u00ea deve escrever c\u00f3digo autoexplicativo . Isso n\u00e3o significa que voc\u00ea nunca deve comentar seu c\u00f3digo. Existem dois tipos de coment\u00e1rios de c\u00f3digo: coment\u00e1rios de implementa\u00e7\u00e3o e coment\u00e1rios de documenta\u00e7\u00e3o.","title":"C\u00f3digo"},{"location":"documentation/guidance/code/#comentarios-de-implementacao","text":"Eles s\u00e3o usados para documenta\u00e7\u00e3o interna e destinam-se a qualquer pessoa que possa precisar manter o c\u00f3digo no futuro, incluindo voc\u00ea mesmo. Existem coment\u00e1rios de linha \u00fanica e coment\u00e1rios de v\u00e1rias linhas (por exemplo, Coment\u00e1rios em C# ). Coment\u00e1rios s\u00e3o leg\u00edveis por humanos e n\u00e3o s\u00e3o executados, portanto, ignorados pelo compilador. Portanto, voc\u00ea pode potencialmente adicionar quantos desejar. Agora, o uso desses coment\u00e1rios geralmente \u00e9 considerado um ind\u00edcio de c\u00f3digo problem\u00e1tico. Se voc\u00ea precisa esclarecer seu c\u00f3digo, isso pode significar que o c\u00f3digo est\u00e1 muito complexo. Portanto, voc\u00ea deve trabalhar para remover a necessidade de esclarecimento tornando o c\u00f3digo mais simples, mais f\u00e1cil de ler e entender. Ainda assim, esses coment\u00e1rios podem ser \u00fateis para fornecer uma vis\u00e3o geral do c\u00f3digo ou fornecer informa\u00e7\u00f5es adicionais de contexto que n\u00e3o est\u00e3o dispon\u00edveis no c\u00f3digo em si. Exemplos de coment\u00e1rios \u00fateis: Coment\u00e1rio de linha \u00fanica em C# que explica por que aquele trecho de c\u00f3digo est\u00e1 ali (de um m\u00e9todo privado em System.Text.Json.JsonSerializer ): // Por quest\u00f5es de desempenho, evite obter a contagem real de bytes, a menos que o uso de mem\u00f3ria seja maior que o limite. Span < byte > utf8 = json . Length <= ( ArrayPoolMaxSizeBeforeUsingNormalAlloc / JsonConstants . MaxExpansionFactorWhileTranscoding ) ? ... Coment\u00e1rio de v\u00e1rias linhas em C# que fornece contexto adicional (de um m\u00e9todo privado em System.Text.Json.Utf8JsonReader ): // A transcodifica\u00e7\u00e3o de UTF-16 para UTF-8 alterar\u00e1 o comprimento entre 1x e 3x. // O desescape do valor do token reduzir\u00e1 seu comprimento no m\u00e1ximo em 6x. // N\u00e3o faz sentido incorrer no custo de transcodifica\u00e7\u00e3o/desescape/compara\u00e7\u00e3o se: // - O valor do token for menor que charTextLength // - O valor do token precisa ser transcodificado E desescapado e for mais de 6x maior que charTextLength // - Para caracteres UTF-16 ASCII, a transcodifica\u00e7\u00e3o = 1x, o desescape = 6x => fator 6x // - Para caracteres UTF-16 n\u00e3o ASCII dentro do BMP, a transcodifica\u00e7\u00e3o = 2-3x, mas s\u00e3o representados como um \u00fanico valor hexadecimal escapado, \\uXXXX => fator 6x // - Para caracteres UTF-16 n\u00e3o ASCII fora do BMP, a transcodifica\u00e7\u00e3o = 4x, mas o par suplementar (2 caracteres) \u00e9 representado por 16 bytes \\uXXXX\\uXXXX => fator 6x // - O valor do token precisa ser transcodificado, mas N\u00c3O desescapado e for mais de 3x maior que charTextLength // - Para caracteres UTF-16 ASCII, a transcodifica\u00e7\u00e3o = 1x, // - Para caracteres UTF-16 n\u00e3o ASCII dentro do BMP, a transcodifica\u00e7\u00e3o = 2-3x, // - Para caracteres UTF-16 n\u00e3o ASCII fora do BMP, a transcodifica\u00e7\u00e3o = 2x, (pares suplementares - 2 caracteres transcodem para 4 bytes UTF-8) if ( sourceLength < charTextLength || sourceLength / ( _stringHasEscaping ? JsonConstants . MaxExpansionFactorWhileEscaping : JsonConstants . MaxExpansionFactorWhileTranscoding ) > charTextLength ) {","title":"Coment\u00e1rios de Implementa\u00e7\u00e3o"},{"location":"documentation/guidance/code/#comentarios-de-documentacao","text":"Coment\u00e1rios de documenta\u00e7\u00e3o (doc comments) s\u00e3o um tipo especial de coment\u00e1rio, adicionados acima da defini\u00e7\u00e3o de qualquer tipo ou membro definido pelo usu\u00e1rio, e destinam-se a qualquer pessoa que possa precisar usar esses tipos ou membros em seu pr\u00f3prio c\u00f3digo. Se, por exemplo, voc\u00ea est\u00e1 construindo uma biblioteca ou framework, os coment\u00e1rios de documenta\u00e7\u00e3o podem ser usados para gerar a documenta\u00e7\u00e3o deles. Essa documenta\u00e7\u00e3o deve servir como especifica\u00e7\u00e3o de API e/ou guia de programa\u00e7\u00e3o. Os coment\u00e1rios de documenta\u00e7\u00e3o n\u00e3o ser\u00e3o inclu\u00eddos pelo compilador no execut\u00e1vel final, assim como os coment\u00e1rios de linha \u00fanica e de v\u00e1rias linhas. Exemplo de um coment\u00e1rio de documenta\u00e7\u00e3o em C# (do m\u00e9todo Deserialize em System.Text.Json.JsonSerializer ): /// <summary> /// Analisa o texto que representa um \u00fanico valor JSON em um <typeparamref name=\"TValue\"/>. /// </summary> /// <returns>Uma representa\u00e7\u00e3o de <typeparamref name=\"TValue\"/> do valor JSON.</returns> /// <param name=\"json\">Texto JSON para an\u00e1lise.</param> /// <param name=\"options\">Op\u00e7\u00f5es para controlar o comportamento durante a an\u00e1lise.</param> /// <exception cref=\"System.ArgumentNullException\"> /// <paramref name=\"json\"/> \u00e9 <see langword=\"null\"/>. /// </exception> /// <exception cref=\"JsonException\"> /// O JSON \u00e9 inv\u00e1lido. /// /// -ou- /// /// <typeparamref name=\"TValue\" /> n\u00e3o \u00e9 compat\u00edvel com o JSON. /// /// -ou- /// /// H\u00e1 dados remanescentes na string al\u00e9m de um \u00fanico valor JSON.</exception> /// <exception cref=\"NotSupportedException\"> /// N\u00e3o h\u00e1 um <see cref=\"System.Text.Json.Serialization.JsonConverter\"/> /// compat\u00edvel com <typeparamref name=\"TValue\"/> ou seus membros serializ\u00e1veis. /// </exception> /// <remarks>Usar uma <see cref=\"string\"/> n\u00e3o \u00e9 t\u00e3o eficiente quanto usar os /// m\u00e9todos UTF-8, pois a implementa\u00e7\u00e3o usa nativamente UTF-8. /// </remarks> [RequiresUnreferencedCode(SerializationUnreferencedCodeMessage)] public static TValue ? Deserialize < TValue > ( string json , JsonSerializerOptions ? options = null ) { Em C# , os coment\u00e1rios de documenta\u00e7\u00e3o podem ser processados pelo compilador para gerar arquivos de documenta\u00e7\u00e3o XML. Esses arquivos podem ser distribu\u00eddos junto com suas bibliotecas para que o Visual Studio e outras IDEs possam usar o IntelliSense para mostrar informa\u00e7\u00f5es r\u00e1 pidas sobre tipos ou membros. Al\u00e9m disso, esses arquivos podem ser processados por ferramentas como DocFx para gerar sites de refer\u00eancia de API. Mais informa\u00e7\u00f5es: Tags XML recomendadas para coment\u00e1rios de documenta\u00e7\u00e3o em C# . Em outras linguagens, voc\u00ea pode precisar de ferramentas externas. Por exemplo, os coment\u00e1rios de documenta\u00e7\u00e3o Java podem ser processados pela ferramenta Javadoc para gerar arquivos de documenta\u00e7\u00e3o HTML. Mais informa\u00e7\u00f5es: Como Escrever Coment\u00e1rios de Documenta\u00e7\u00e3o para a Ferramenta Javadoc Ferramenta Javadoc","title":"Coment\u00e1rios de Documenta\u00e7\u00e3o"},{"location":"documentation/guidance/engineering-feedback/","text":"Feedback de Engenharia Um bom feedback de engenharia \u00e9: Acion\u00e1vel Espec\u00edfico Detalhado Inclui ativos (scripts, dados, c\u00f3digo, etc.) para reproduzir o cen\u00e1rio e validar a solu\u00e7\u00e3o Inclui detalhes sobre o cen\u00e1rio do cliente / o que o cliente estava tentando alcan\u00e7ar Consulte Feedback de Engenharia da Microsoft para obter mais detalhes, incluindo orienta\u00e7\u00f5es , perguntas frequentes e exemplos .","title":"Feedback de Engenharia"},{"location":"documentation/guidance/engineering-feedback/#feedback-de-engenharia","text":"Um bom feedback de engenharia \u00e9: Acion\u00e1vel Espec\u00edfico Detalhado Inclui ativos (scripts, dados, c\u00f3digo, etc.) para reproduzir o cen\u00e1rio e validar a solu\u00e7\u00e3o Inclui detalhes sobre o cen\u00e1rio do cliente / o que o cliente estava tentando alcan\u00e7ar Consulte Feedback de Engenharia da Microsoft para obter mais detalhes, incluindo orienta\u00e7\u00f5es , perguntas frequentes e exemplos .","title":"Feedback de Engenharia"},{"location":"documentation/guidance/project-and-repositories/","text":"Projetos e Reposit\u00f3rios Cada reposit\u00f3rio de c\u00f3digo-fonte deve incluir documenta\u00e7\u00e3o espec\u00edfica para ele (por exemplo, em uma Wiki dentro do reposit\u00f3rio), enquanto o projeto em si deve incluir documenta\u00e7\u00e3o geral que seja comum a todos os seus reposit\u00f3rios associados (por exemplo, em uma Wiki dentro da ferramenta de gerenciamento de backlog). Documenta\u00e7\u00e3o espec\u00edfica para um reposit\u00f3rio Introdu\u00e7\u00e3o Primeiros passos Integra\u00e7\u00e3o Configura\u00e7\u00e3o: linguagem de programa\u00e7\u00e3o, frameworks, plataformas, ferramentas, etc. Ambiente de teste Acordo de trabalho Guia de contribui\u00e7\u00e3o Estrutura: pastas, projetos, etc. Como compilar, testar, construir, implantar a solu\u00e7\u00e3o/cada projeto Diferentes vers\u00f5es do sistema operacional Linha de comando + editores/IDEs Logs de Decis\u00e3o de Design Registro de Decis\u00f5es de Arquitetura (ADRs) Estudos de An\u00e1lise Algumas se\u00e7\u00f5es na documenta\u00e7\u00e3o do reposit\u00f3rio podem apontar para a documenta\u00e7\u00e3o do projeto (por exemplo, Integra\u00e7\u00e3o, Acordo de Trabalho, Guia de Contribui\u00e7\u00e3o). Documenta\u00e7\u00e3o comum a todos os reposit\u00f3rios Introdu\u00e7\u00e3o Projeto Partes interessadas Defini\u00e7\u00f5es Requisitos Integra\u00e7\u00e3o Guia do reposit\u00f3rio Produ\u00e7\u00e3o, Spikes Acordos da equipe Manifesto da Equipe Resumo breve das expectativas em torno da forma t\u00e9cnica de trabalhar e da mentalidade apoiada na equipe. Por exemplo, propriedade, respeito, colabora\u00e7\u00e3o, transpar\u00eancia. Acordo de Trabalho Como trabalhamos juntos como equipe e quais s\u00e3o nossas expectativas e princ\u00edpios. Por exemplo, comunica\u00e7\u00e3o, equil\u00edbrio entre trabalho e vida, ritmo scrum, gerenciamento de backlog, gerenciamento de c\u00f3digo. Defini\u00e7\u00e3o de Pronto Lista de tarefas que devem ser conclu\u00eddas para encerrar uma hist\u00f3ria de usu\u00e1rio, um sprint ou uma etapa. Defini\u00e7\u00e3o de Pronto para Estimar Qu\u00e3o completa uma hist\u00f3ria de usu\u00e1rio deve estar para ser selecionada como candidata para estimativa no planejamento do sprint. Guia de Contribui\u00e7\u00e3o Estrutura do reposit\u00f3rio Documentos de design Estrat\u00e9gia de Nomenclatura de Branches Estrat\u00e9gia de Hist\u00f3rico de Merge e Commit Pull Requests Processo de Revis\u00e3o de C\u00f3digo Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo Listas de Verifica\u00e7\u00e3o Espec\u00edficas de Idioma Design do Projeto Design de Alto N\u00edvel / Plano de Jogo Revis\u00e3o de Design de Marco / \u00c9pico Receitas de Revis\u00e3o de Design Modelo de Revis\u00e3o de Design de Marco / \u00c9pico Modelo de Revis\u00e3o de Design de Recurso / Hist\u00f3ria Modelo de Revis\u00e3o de Design de Tarefa Modelo de Registro de Decis\u00e3o Modelo de Registro de Decis\u00e3o de Arquitetura (ADR) ( Exemplo 1 , Exemplo 2 ) Modelo de Estudo de Trade","title":"Projetos e Reposit\u00f3rios"},{"location":"documentation/guidance/project-and-repositories/#projetos-e-repositorios","text":"Cada reposit\u00f3rio de c\u00f3digo-fonte deve incluir documenta\u00e7\u00e3o espec\u00edfica para ele (por exemplo, em uma Wiki dentro do reposit\u00f3rio), enquanto o projeto em si deve incluir documenta\u00e7\u00e3o geral que seja comum a todos os seus reposit\u00f3rios associados (por exemplo, em uma Wiki dentro da ferramenta de gerenciamento de backlog).","title":"Projetos e Reposit\u00f3rios"},{"location":"documentation/guidance/project-and-repositories/#documentacao-especifica-para-um-repositorio","text":"Introdu\u00e7\u00e3o Primeiros passos Integra\u00e7\u00e3o Configura\u00e7\u00e3o: linguagem de programa\u00e7\u00e3o, frameworks, plataformas, ferramentas, etc. Ambiente de teste Acordo de trabalho Guia de contribui\u00e7\u00e3o Estrutura: pastas, projetos, etc. Como compilar, testar, construir, implantar a solu\u00e7\u00e3o/cada projeto Diferentes vers\u00f5es do sistema operacional Linha de comando + editores/IDEs Logs de Decis\u00e3o de Design Registro de Decis\u00f5es de Arquitetura (ADRs) Estudos de An\u00e1lise Algumas se\u00e7\u00f5es na documenta\u00e7\u00e3o do reposit\u00f3rio podem apontar para a documenta\u00e7\u00e3o do projeto (por exemplo, Integra\u00e7\u00e3o, Acordo de Trabalho, Guia de Contribui\u00e7\u00e3o).","title":"Documenta\u00e7\u00e3o espec\u00edfica para um reposit\u00f3rio"},{"location":"documentation/guidance/project-and-repositories/#documentacao-comum-a-todos-os-repositorios","text":"Introdu\u00e7\u00e3o Projeto Partes interessadas Defini\u00e7\u00f5es Requisitos Integra\u00e7\u00e3o Guia do reposit\u00f3rio Produ\u00e7\u00e3o, Spikes Acordos da equipe Manifesto da Equipe Resumo breve das expectativas em torno da forma t\u00e9cnica de trabalhar e da mentalidade apoiada na equipe. Por exemplo, propriedade, respeito, colabora\u00e7\u00e3o, transpar\u00eancia. Acordo de Trabalho Como trabalhamos juntos como equipe e quais s\u00e3o nossas expectativas e princ\u00edpios. Por exemplo, comunica\u00e7\u00e3o, equil\u00edbrio entre trabalho e vida, ritmo scrum, gerenciamento de backlog, gerenciamento de c\u00f3digo. Defini\u00e7\u00e3o de Pronto Lista de tarefas que devem ser conclu\u00eddas para encerrar uma hist\u00f3ria de usu\u00e1rio, um sprint ou uma etapa. Defini\u00e7\u00e3o de Pronto para Estimar Qu\u00e3o completa uma hist\u00f3ria de usu\u00e1rio deve estar para ser selecionada como candidata para estimativa no planejamento do sprint. Guia de Contribui\u00e7\u00e3o Estrutura do reposit\u00f3rio Documentos de design Estrat\u00e9gia de Nomenclatura de Branches Estrat\u00e9gia de Hist\u00f3rico de Merge e Commit Pull Requests Processo de Revis\u00e3o de C\u00f3digo Lista de Verifica\u00e7\u00e3o de Revis\u00e3o de C\u00f3digo Listas de Verifica\u00e7\u00e3o Espec\u00edficas de Idioma Design do Projeto Design de Alto N\u00edvel / Plano de Jogo Revis\u00e3o de Design de Marco / \u00c9pico Receitas de Revis\u00e3o de Design Modelo de Revis\u00e3o de Design de Marco / \u00c9pico Modelo de Revis\u00e3o de Design de Recurso / Hist\u00f3ria Modelo de Revis\u00e3o de Design de Tarefa Modelo de Registro de Decis\u00e3o Modelo de Registro de Decis\u00e3o de Arquitetura (ADR) ( Exemplo 1 , Exemplo 2 ) Modelo de Estudo de Trade","title":"Documenta\u00e7\u00e3o comum a todos os reposit\u00f3rios"},{"location":"documentation/guidance/pull-requests/","text":"Pull Requests Quando criamos Pull Requests , devemos garantir que eles estejam devidamente documentados: T\u00edtulo e Descri\u00e7\u00e3o Descri\u00e7\u00e3o do Pull Request Modelo de Pull Request Itens de trabalho vinculados Coment\u00e1rios Como autor, responda a todos os coment\u00e1rios Como revisor, fa\u00e7a coment\u00e1rios claros","title":"Pull Requests"},{"location":"documentation/guidance/pull-requests/#pull-requests","text":"Quando criamos Pull Requests , devemos garantir que eles estejam devidamente documentados: T\u00edtulo e Descri\u00e7\u00e3o Descri\u00e7\u00e3o do Pull Request Modelo de Pull Request Itens de trabalho vinculados Coment\u00e1rios Como autor, responda a todos os coment\u00e1rios Como revisor, fa\u00e7a coment\u00e1rios claros","title":"Pull Requests"},{"location":"documentation/guidance/rest-apis/","text":"REST APIs Ao criar REST APIs , voc\u00ea pode aproveitar a Especifica\u00e7\u00e3o OpenAPI (OAI) (originalmente conhecida como Swagger Specification) para descrev\u00ea-las: A Especifica\u00e7\u00e3o OpenAPI (OAS) define uma interface padr\u00e3o independente de linguagem de programa\u00e7\u00e3o para APIs HTTP, o que permite que tanto humanos quanto computadores descubram e entendam as capacidades de um servi\u00e7o sem exigir acesso ao c\u00f3digo-fonte, documenta\u00e7\u00e3o adicional ou inspe\u00e7\u00e3o do tr\u00e1fego de rede. Quando devidamente definida via OpenAPI, um consumidor pode compreender e interagir com o servi\u00e7o remoto com uma quantidade m\u00ednima de l\u00f3gica de implementa\u00e7\u00e3o. Os casos de uso para documentos de defini\u00e7\u00e3o de API leg\u00edveis por m\u00e1quina incluem, mas n\u00e3o se limitam a: documenta\u00e7\u00e3o interativa; gera\u00e7\u00e3o de c\u00f3digo para documenta\u00e7\u00e3o, clientes e servidores; e automa\u00e7\u00e3o de casos de teste. Os documentos OpenAPI descrevem os servi\u00e7os de uma API e s\u00e3o representados em formatos YAML ou JSON. Esses documentos podem ser produzidos e servidos estaticamente ou gerados dinamicamente a partir de um aplicativo. Existem implementa\u00e7\u00f5es dispon\u00edveis para muitas linguagens, incluindo C#, que incluem ferramentas de baixo n\u00edvel, editores, interfaces de usu\u00e1rio, geradores de c\u00f3digo, etc. Aqui voc\u00ea pode encontrar uma lista de ferramentas conhecidas para diferentes linguagens: OpenAPI-Specification/IMPLEMENTATIONS.md . Usando o Microsoft TypeSpec Embora a Especifica\u00e7\u00e3o OpenAPI (OAI) seja um m\u00e9todo popular para definir e documentar APIs RESTful, existem outras linguagens dispon\u00edveis que podem simplificar e acelerar o processo de documenta\u00e7\u00e3o. O Microsoft TypeSpec \u00e9 uma dessas linguagens que permite a descri\u00e7\u00e3o de APIs de servi\u00e7os em nuvem e a gera\u00e7\u00e3o de linguagens de descri\u00e7\u00e3o de API, c\u00f3digo de cliente e servi\u00e7o, documenta\u00e7\u00e3o e outros recursos. O Microsoft TypeSpec \u00e9 uma linguagem altamente extens\u00edvel que oferece um conjunto de primitivos principais que podem descrever formatos comuns de API entre REST, OpenAPI, GraphQL, gRPC e outros protocolos. Isso o torna uma op\u00e7\u00e3o vers\u00e1til para desenvolvedores que precisam trabalhar com uma variedade de estilos e tecnologias de API diferentes. O Microsoft TypeSpec \u00e9 uma ferramenta amplamente adotada nas equipes da Azure, especialmente para gerar Especifica\u00e7\u00f5es OpenAPI em APIs complexas e interconectadas que abrangem v\u00e1rias equipes. Para garantir consist\u00eancia em diferentes partes da API, as equipes comumente aproveitam bibliotecas compartilhadas que cont\u00eam padr\u00f5es reutiliz\u00e1veis. Isso torna mais f\u00e1cil seguir as melhores pr\u00e1ticas em vez de desvi\u00e1-las. Ao promover designs de API altamente regulares que aderem \u00e0s melhores pr\u00e1ticas desde o in\u00edcio, o TypeSpec pode ajudar a melhorar a qualidade e a consist\u00eancia das APIs desenvolvidas em uma organiza\u00e7\u00e3o. Refer\u00eancias Documenta\u00e7\u00e3o da API da ASP.NET Core com Swagger / OpenAPI . Microsoft TypeSpec . Padr\u00f5es de Design - Orienta\u00e7\u00f5es para Design de API REST","title":"REST APIs"},{"location":"documentation/guidance/rest-apis/#rest-apis","text":"Ao criar REST APIs , voc\u00ea pode aproveitar a Especifica\u00e7\u00e3o OpenAPI (OAI) (originalmente conhecida como Swagger Specification) para descrev\u00ea-las: A Especifica\u00e7\u00e3o OpenAPI (OAS) define uma interface padr\u00e3o independente de linguagem de programa\u00e7\u00e3o para APIs HTTP, o que permite que tanto humanos quanto computadores descubram e entendam as capacidades de um servi\u00e7o sem exigir acesso ao c\u00f3digo-fonte, documenta\u00e7\u00e3o adicional ou inspe\u00e7\u00e3o do tr\u00e1fego de rede. Quando devidamente definida via OpenAPI, um consumidor pode compreender e interagir com o servi\u00e7o remoto com uma quantidade m\u00ednima de l\u00f3gica de implementa\u00e7\u00e3o. Os casos de uso para documentos de defini\u00e7\u00e3o de API leg\u00edveis por m\u00e1quina incluem, mas n\u00e3o se limitam a: documenta\u00e7\u00e3o interativa; gera\u00e7\u00e3o de c\u00f3digo para documenta\u00e7\u00e3o, clientes e servidores; e automa\u00e7\u00e3o de casos de teste. Os documentos OpenAPI descrevem os servi\u00e7os de uma API e s\u00e3o representados em formatos YAML ou JSON. Esses documentos podem ser produzidos e servidos estaticamente ou gerados dinamicamente a partir de um aplicativo. Existem implementa\u00e7\u00f5es dispon\u00edveis para muitas linguagens, incluindo C#, que incluem ferramentas de baixo n\u00edvel, editores, interfaces de usu\u00e1rio, geradores de c\u00f3digo, etc. Aqui voc\u00ea pode encontrar uma lista de ferramentas conhecidas para diferentes linguagens: OpenAPI-Specification/IMPLEMENTATIONS.md .","title":"REST APIs"},{"location":"documentation/guidance/rest-apis/#usando-o-microsoft-typespec","text":"Embora a Especifica\u00e7\u00e3o OpenAPI (OAI) seja um m\u00e9todo popular para definir e documentar APIs RESTful, existem outras linguagens dispon\u00edveis que podem simplificar e acelerar o processo de documenta\u00e7\u00e3o. O Microsoft TypeSpec \u00e9 uma dessas linguagens que permite a descri\u00e7\u00e3o de APIs de servi\u00e7os em nuvem e a gera\u00e7\u00e3o de linguagens de descri\u00e7\u00e3o de API, c\u00f3digo de cliente e servi\u00e7o, documenta\u00e7\u00e3o e outros recursos. O Microsoft TypeSpec \u00e9 uma linguagem altamente extens\u00edvel que oferece um conjunto de primitivos principais que podem descrever formatos comuns de API entre REST, OpenAPI, GraphQL, gRPC e outros protocolos. Isso o torna uma op\u00e7\u00e3o vers\u00e1til para desenvolvedores que precisam trabalhar com uma variedade de estilos e tecnologias de API diferentes. O Microsoft TypeSpec \u00e9 uma ferramenta amplamente adotada nas equipes da Azure, especialmente para gerar Especifica\u00e7\u00f5es OpenAPI em APIs complexas e interconectadas que abrangem v\u00e1rias equipes. Para garantir consist\u00eancia em diferentes partes da API, as equipes comumente aproveitam bibliotecas compartilhadas que cont\u00eam padr\u00f5es reutiliz\u00e1veis. Isso torna mais f\u00e1cil seguir as melhores pr\u00e1ticas em vez de desvi\u00e1-las. Ao promover designs de API altamente regulares que aderem \u00e0s melhores pr\u00e1ticas desde o in\u00edcio, o TypeSpec pode ajudar a melhorar a qualidade e a consist\u00eancia das APIs desenvolvidas em uma organiza\u00e7\u00e3o.","title":"Usando o Microsoft TypeSpec"},{"location":"documentation/guidance/rest-apis/#referencias","text":"Documenta\u00e7\u00e3o da API da ASP.NET Core com Swagger / OpenAPI . Microsoft TypeSpec . Padr\u00f5es de Design - Orienta\u00e7\u00f5es para Design de API REST","title":"Refer\u00eancias"},{"location":"documentation/guidance/work-items/","text":"Itens de Trabalho Embora muitas equipes possam trabalhar com uma lista plana de itens, \u00e0s vezes \u00e9 \u00fatil agrupar itens relacionados em uma estrutura hier\u00e1rquica. Voc\u00ea pode usar portf\u00f3lios de backlog para trazer mais ordem ao seu backlog. Processo \u00c1gil hierarquia de itens de backlog de trabalho: Hierarquia de itens de backlog de trabalho do Scrum : Os bugs podem ser definidos no mesmo n\u00edvel das Hist\u00f3rias de Usu\u00e1rio / Itens de Backlog do Produto ou Tarefas. \u00c9picos e Features As hist\u00f3rias de usu\u00e1rio / itens de backlog do produto s\u00e3o agrupados em Features , que normalmente representam um entreg\u00e1vel despach\u00e1vel que aborda uma necessidade do cliente, por exemplo, \"Adicionar carrinho de compras\". E as Features s\u00e3o agrupadas em \u00c9picos , que representam uma iniciativa de neg\u00f3cios a ser realizada, por exemplo, \"Aumentar o engajamento do cliente\". Leve isso em considera\u00e7\u00e3o ao nome\u00e1-los. Cada Feature ou \u00c9pico deve incluir o m\u00e1ximo de detalhes de que a equipe precisa para: Compreender o escopo. Estimar o trabalho necess\u00e1rio. Desenvolver testes. Garantir que o produto final atenda aos crit\u00e9rios de aceita\u00e7\u00e3o. Detalhes que devem ser adicionados: \u00c1rea de Valor : Neg\u00f3cios (fornece valor diretamente ao cliente) vs. Arquitetural (servi\u00e7os t\u00e9cnicos para implementar recursos de neg\u00f3cios). Esfor\u00e7o / Pontos de Hist\u00f3ria / Tamanho : Estimativa relativa da quantidade de trabalho necess\u00e1ria para concluir o item. Valor de Neg\u00f3cio : Prioridade do item em compara\u00e7\u00e3o com outros itens do mesmo tipo. Criticidade em Tempo : Valores mais altos indicam que um item \u00e9 mais cr\u00edtico em termos de tempo do que itens com valores mais baixos. Data-Alvo pela qual a feature deve ser implementada. Voc\u00ea pode usar tags de itens de trabalho para suportar consultas e filtragem. Hist\u00f3rias de Usu\u00e1rio / Itens de Backlog do Produto Cada Hist\u00f3ria de Usu\u00e1rio / Item de Backlog do Produto deve ter um tamanho de modo que possa ser conclu\u00edda dentro de um sprint. Voc\u00ea deve adicionar os seguintes detalhes aos itens: T\u00edtulo : Normalmente expresso como \"Como uma [persona], eu quero [realizar uma a\u00e7\u00e3o], para que [possa alcan\u00e7ar um resultado final]\". Descri\u00e7\u00e3o : Fornecer detalhes suficientes para criar uma compreens\u00e3o compartilhada do escopo e apoiar os esfor\u00e7os de estimativa. Concentre-se no usu\u00e1rio, no que eles desejam realizar e por qu\u00ea. N\u00e3o descreva como desenvolver o produto. Forne\u00e7a detalhes suficientes para que a equipe possa escrever tarefas e casos de teste para implementar o item. Inclua Avalia\u00e7\u00f5es de Design. Crit\u00e9rios de Aceita\u00e7\u00e3o : Defina o que significa \"Conclu\u00eddo\". Atividade : Implanta\u00e7\u00e3o, Design, Desenvolvimento, Documenta\u00e7\u00e3o, Requisitos, Testes. Esfor\u00e7o / Pontos de Hist\u00f3ria / Tamanho : Estimativa relativa da quantidade de trabalho necess\u00e1ria para concluir o item. Valor de Neg\u00f3cio : Prioridade do item em compara\u00e7\u00e3o com outros itens do mesmo tipo. Estimativa Original : A quantidade de trabalho estimada necess\u00e1ria para concluir uma tarefa. Lembre-se de usar a se\u00e7\u00e3o de Discuss\u00e3o dos itens para acompanhar coment\u00e1rios relacionados e mencionar indiv\u00edduos, grupos, itens de trabalho ou pull requests quando necess\u00e1rio. Tarefas Cada Tarefa deve ter um tamanho para que possa ser conclu\u00edda em um dia. Pelo menos, voc\u00ea deve adicionar os seguintes detalhes aos itens: T\u00edtulo . Descri\u00e7\u00e3o : Fornecer detalhes suficientes para criar uma compreens\u00e3o compartilhada do escopo. Qualquer desenvolvedor deve ser capaz de pegar o item e saber o que precisa ser implementado. Inclua Avalia\u00e7\u00f5es de Design. Refer\u00eancia para o branch de trabalho no reposit\u00f3rio de c\u00f3digo relacionado. Lembre-se de usar a se\u00e7\u00e3o de Discuss\u00e3o das tarefas para acompanhar coment\u00e1rios relacionados. Bugs Voc\u00ea deve usar bugs para capturar tanto o problema inicial quanto as descobertas em curso. Pelo menos, voc\u00ea deve adicionar os seguintes detalhes aos itens de bug: T\u00edtulo . Descri\u00e7\u00e3o . Passos para Reproduzir . Informa\u00e7\u00f5es do Sistema / Encontrado na Build : Configura\u00e7\u00e3o de software e sistema relevante para o bug e testes a serem aplicados. Crit\u00e9rios de Aceita\u00e7\u00e3o : Crit\u00e9rios a serem atendidos para que o bug possa ser fechado. Integrado na Build : Nome da build que incorpora o c\u00f3digo que corrige o bug. Prioridade : 1: O produto n\u00e3o deve ser lan\u00e7ado sem a resolu\u00e7\u00e3o bem-sucedida do item de trabalho. O bug deve ser tratado o mais r\u00e1pido poss\u00edvel. 2: O produto n\u00e3o deve ser lan\u00e7ado sem a resolu\u00e7\u00e3o bem-sucedida do item de trabalho, mas n\u00e3o precisa ser tratado imediatamente. 3: A resolu\u00e7\u00e3o do item de trabalho \u00e9 opcional com base em recursos, tempo e risco. Gravidade : 1 - Cr\u00edtico: Deve ser corrigido. N\u00e3o h\u00e1 m\u00e9todos alternativos aceit\u00e1veis. 2 - Alto: Considere a corre\u00e7\u00e3o. Existe um m\u00e9todo alternativo aceit\u00e1vel. 3 - M\u00e9dio: (Padr\u00e3o). 4 - Baixo. Problemas / Impedimentos N\u00e3o confunda com bugs. Eles representam atividades n\u00e3o planejadas que podem bloquear o trabalho de ser conclu\u00eddo. Por exemplo: ambiguidade de funcionalidade, problemas de pessoal ou recursos, problemas com ambientes ou outros riscos que afetam o escopo, qualidade ou cronograma. Em geral, voc\u00ea vincula esses itens a hist\u00f3rias de usu\u00e1rio ou outros itens de trabalho. A\u00e7\u00f5es de Retrospectivas Ap\u00f3s uma retrospectiva, todas as a\u00e7\u00f5es que exigem trabalho devem ser rastreadas com sua pr\u00f3pria Tarefa ou Problema / Impedimento. Esses itens podem ser desvinculados (sem v\u00ednculo com o item de backlog pai ou hist\u00f3ria de usu\u00e1rio). Informa\u00e7\u00f5es Relacionadas Melhores pr\u00e1ticas para gerenciamento de projetos \u00e1geis - Azure Boards | Microsoft Docs . Definir features e \u00e9picos, organizar itens de backlog - Azure Boards | Microsoft Docs . Crie seu backlog de produto - Azure Boards | Microsoft Docs . Adicionar tarefas para apoiar o planejamento de sprint - Azure Boards | Microsoft Docs . Definir, capturar, triar e gerenciar bugs ou defeitos de c\u00f3digo - Azure Boards | Microsoft Docs . Adicionar e gerenciar problemas ou impedimentos - Azure Boards | Microsoft Docs .","title":"Itens de Trabalho"},{"location":"documentation/guidance/work-items/#itens-de-trabalho","text":"Embora muitas equipes possam trabalhar com uma lista plana de itens, \u00e0s vezes \u00e9 \u00fatil agrupar itens relacionados em uma estrutura hier\u00e1rquica. Voc\u00ea pode usar portf\u00f3lios de backlog para trazer mais ordem ao seu backlog. Processo \u00c1gil hierarquia de itens de backlog de trabalho: Hierarquia de itens de backlog de trabalho do Scrum : Os bugs podem ser definidos no mesmo n\u00edvel das Hist\u00f3rias de Usu\u00e1rio / Itens de Backlog do Produto ou Tarefas.","title":"Itens de Trabalho"},{"location":"documentation/guidance/work-items/#epicos-e-features","text":"As hist\u00f3rias de usu\u00e1rio / itens de backlog do produto s\u00e3o agrupados em Features , que normalmente representam um entreg\u00e1vel despach\u00e1vel que aborda uma necessidade do cliente, por exemplo, \"Adicionar carrinho de compras\". E as Features s\u00e3o agrupadas em \u00c9picos , que representam uma iniciativa de neg\u00f3cios a ser realizada, por exemplo, \"Aumentar o engajamento do cliente\". Leve isso em considera\u00e7\u00e3o ao nome\u00e1-los. Cada Feature ou \u00c9pico deve incluir o m\u00e1ximo de detalhes de que a equipe precisa para: Compreender o escopo. Estimar o trabalho necess\u00e1rio. Desenvolver testes. Garantir que o produto final atenda aos crit\u00e9rios de aceita\u00e7\u00e3o. Detalhes que devem ser adicionados: \u00c1rea de Valor : Neg\u00f3cios (fornece valor diretamente ao cliente) vs. Arquitetural (servi\u00e7os t\u00e9cnicos para implementar recursos de neg\u00f3cios). Esfor\u00e7o / Pontos de Hist\u00f3ria / Tamanho : Estimativa relativa da quantidade de trabalho necess\u00e1ria para concluir o item. Valor de Neg\u00f3cio : Prioridade do item em compara\u00e7\u00e3o com outros itens do mesmo tipo. Criticidade em Tempo : Valores mais altos indicam que um item \u00e9 mais cr\u00edtico em termos de tempo do que itens com valores mais baixos. Data-Alvo pela qual a feature deve ser implementada. Voc\u00ea pode usar tags de itens de trabalho para suportar consultas e filtragem.","title":"\u00c9picos e Features"},{"location":"documentation/guidance/work-items/#historias-de-usuario-itens-de-backlog-do-produto","text":"Cada Hist\u00f3ria de Usu\u00e1rio / Item de Backlog do Produto deve ter um tamanho de modo que possa ser conclu\u00edda dentro de um sprint. Voc\u00ea deve adicionar os seguintes detalhes aos itens: T\u00edtulo : Normalmente expresso como \"Como uma [persona], eu quero [realizar uma a\u00e7\u00e3o], para que [possa alcan\u00e7ar um resultado final]\". Descri\u00e7\u00e3o : Fornecer detalhes suficientes para criar uma compreens\u00e3o compartilhada do escopo e apoiar os esfor\u00e7os de estimativa. Concentre-se no usu\u00e1rio, no que eles desejam realizar e por qu\u00ea. N\u00e3o descreva como desenvolver o produto. Forne\u00e7a detalhes suficientes para que a equipe possa escrever tarefas e casos de teste para implementar o item. Inclua Avalia\u00e7\u00f5es de Design. Crit\u00e9rios de Aceita\u00e7\u00e3o : Defina o que significa \"Conclu\u00eddo\". Atividade : Implanta\u00e7\u00e3o, Design, Desenvolvimento, Documenta\u00e7\u00e3o, Requisitos, Testes. Esfor\u00e7o / Pontos de Hist\u00f3ria / Tamanho : Estimativa relativa da quantidade de trabalho necess\u00e1ria para concluir o item. Valor de Neg\u00f3cio : Prioridade do item em compara\u00e7\u00e3o com outros itens do mesmo tipo. Estimativa Original : A quantidade de trabalho estimada necess\u00e1ria para concluir uma tarefa. Lembre-se de usar a se\u00e7\u00e3o de Discuss\u00e3o dos itens para acompanhar coment\u00e1rios relacionados e mencionar indiv\u00edduos, grupos, itens de trabalho ou pull requests quando necess\u00e1rio.","title":"Hist\u00f3rias de Usu\u00e1rio / Itens de Backlog do Produto"},{"location":"documentation/guidance/work-items/#tarefas","text":"Cada Tarefa deve ter um tamanho para que possa ser conclu\u00edda em um dia. Pelo menos, voc\u00ea deve adicionar os seguintes detalhes aos itens: T\u00edtulo . Descri\u00e7\u00e3o : Fornecer detalhes suficientes para criar uma compreens\u00e3o compartilhada do escopo. Qualquer desenvolvedor deve ser capaz de pegar o item e saber o que precisa ser implementado. Inclua Avalia\u00e7\u00f5es de Design. Refer\u00eancia para o branch de trabalho no reposit\u00f3rio de c\u00f3digo relacionado. Lembre-se de usar a se\u00e7\u00e3o de Discuss\u00e3o das tarefas para acompanhar coment\u00e1rios relacionados.","title":"Tarefas"},{"location":"documentation/guidance/work-items/#bugs","text":"Voc\u00ea deve usar bugs para capturar tanto o problema inicial quanto as descobertas em curso. Pelo menos, voc\u00ea deve adicionar os seguintes detalhes aos itens de bug: T\u00edtulo . Descri\u00e7\u00e3o . Passos para Reproduzir . Informa\u00e7\u00f5es do Sistema / Encontrado na Build : Configura\u00e7\u00e3o de software e sistema relevante para o bug e testes a serem aplicados. Crit\u00e9rios de Aceita\u00e7\u00e3o : Crit\u00e9rios a serem atendidos para que o bug possa ser fechado. Integrado na Build : Nome da build que incorpora o c\u00f3digo que corrige o bug. Prioridade : 1: O produto n\u00e3o deve ser lan\u00e7ado sem a resolu\u00e7\u00e3o bem-sucedida do item de trabalho. O bug deve ser tratado o mais r\u00e1pido poss\u00edvel. 2: O produto n\u00e3o deve ser lan\u00e7ado sem a resolu\u00e7\u00e3o bem-sucedida do item de trabalho, mas n\u00e3o precisa ser tratado imediatamente. 3: A resolu\u00e7\u00e3o do item de trabalho \u00e9 opcional com base em recursos, tempo e risco. Gravidade : 1 - Cr\u00edtico: Deve ser corrigido. N\u00e3o h\u00e1 m\u00e9todos alternativos aceit\u00e1veis. 2 - Alto: Considere a corre\u00e7\u00e3o. Existe um m\u00e9todo alternativo aceit\u00e1vel. 3 - M\u00e9dio: (Padr\u00e3o). 4 - Baixo.","title":"Bugs"},{"location":"documentation/guidance/work-items/#problemas-impedimentos","text":"N\u00e3o confunda com bugs. Eles representam atividades n\u00e3o planejadas que podem bloquear o trabalho de ser conclu\u00eddo. Por exemplo: ambiguidade de funcionalidade, problemas de pessoal ou recursos, problemas com ambientes ou outros riscos que afetam o escopo, qualidade ou cronograma. Em geral, voc\u00ea vincula esses itens a hist\u00f3rias de usu\u00e1rio ou outros itens de trabalho.","title":"Problemas / Impedimentos"},{"location":"documentation/guidance/work-items/#acoes-de-retrospectivas","text":"Ap\u00f3s uma retrospectiva, todas as a\u00e7\u00f5es que exigem trabalho devem ser rastreadas com sua pr\u00f3pria Tarefa ou Problema / Impedimento. Esses itens podem ser desvinculados (sem v\u00ednculo com o item de backlog pai ou hist\u00f3ria de usu\u00e1rio).","title":"A\u00e7\u00f5es de Retrospectivas"},{"location":"documentation/guidance/work-items/#informacoes-relacionadas","text":"Melhores pr\u00e1ticas para gerenciamento de projetos \u00e1geis - Azure Boards | Microsoft Docs . Definir features e \u00e9picos, organizar itens de backlog - Azure Boards | Microsoft Docs . Crie seu backlog de produto - Azure Boards | Microsoft Docs . Adicionar tarefas para apoiar o planejamento de sprint - Azure Boards | Microsoft Docs . Definir, capturar, triar e gerenciar bugs ou defeitos de c\u00f3digo - Azure Boards | Microsoft Docs . Adicionar e gerenciar problemas ou impedimentos - Azure Boards | Microsoft Docs .","title":"Informa\u00e7\u00f5es Relacionadas"},{"location":"documentation/recipes/deploy-docfx-azure-website/","text":"Entendi sua solicita\u00e7\u00e3o. Vou traduzir o documento t\u00e9cnico sobre o uso do Azure Website conforme as diretrizes fornecidas no seu prompt inicial. Implante o site de documenta\u00e7\u00e3o DocFx automaticamente em um site do Azure No artigo Usando o DocFx e Ferramentas Complementares para Gerar um Site de Documenta\u00e7\u00e3o , descreve-se o processo de gera\u00e7\u00e3o de conte\u00fado de um site de documenta\u00e7\u00e3o usando o DocFx. Este documento descreve como configurar um site do Azure para hospedar o conte\u00fado e automatizar a implanta\u00e7\u00e3o usando um pipeline no Azure DevOps. A amostra QuickStart fornecida para uma configura\u00e7\u00e3o r\u00e1pida da gera\u00e7\u00e3o do DocFx tamb\u00e9m cont\u00e9m os arquivos explicados neste documento. Especialmente as pastas .pipelines e infrastructure . Os seguintes passos podem ser seguidos ao usar a pasta Quick Start. Na pasta infrastructure , voc\u00ea pode encontrar os arquivos Terraform para criar o site em um ambiente do Azure. Por padr\u00e3o, o script criar\u00e1 um site onde o conte\u00fado da documenta\u00e7\u00e3o pode ser implantado. 1. Instale o Terraform Voc\u00ea pode usar ferramentas como o Chocolatey para instalar o Terraform: choco install terraform 2. Configure as vari\u00e1veis apropriadas IMPORTANTE: Certifique-se de modificar o valor das vari\u00e1veis app_name , rg_name e rg_location . O valor de app_name \u00e9 acrescentado por azurewebsites.net e deve ser exclusivo. Caso contr\u00e1rio, o script falhar\u00e1 ao criar o site. Na Quick Start, a autentica\u00e7\u00e3o est\u00e1 desativada. Se voc\u00ea deseja ativ\u00e1-la, certifique-se de criar um Aplicativo no Azure AD e obter o ID do cliente . Este ID do cliente deve ser definido como o valor da vari\u00e1vel client_id em variables.tf . No main.tf , certifique-se de descomentar as configura\u00e7\u00f5es de autentica\u00e7\u00e3o em app-service . Para obter mais informa\u00e7\u00f5es, consulte Configurar a autentica\u00e7\u00e3o do Azure AD - Azure App Service . Se voc\u00ea deseja configurar um dom\u00ednio personalizado para o seu site de documenta\u00e7\u00e3o com um certificado SSL, precisar\u00e1 seguir algumas etapas adicionais. Voc\u00ea deve criar um Key Vault e armazenar o certificado l\u00e1. O pr\u00f3ximo passo \u00e9 descomentar e definir os valores em variables.tf . Voc\u00ea tamb\u00e9m deve descomentar as etapas necess\u00e1rias em main.tf . Tudo \u00e9 indicado por caixas de coment\u00e1rios. Para obter mais informa\u00e7\u00f5es, consulte Adicionar um certificado TLS/SSL no Azure App Service . Algumas informa\u00e7\u00f5es adicionais sobre certificado SSL, dom\u00ednio personalizado e Azure App Service podem ser encontradas nos par\u00e1grafos a seguir. Se voc\u00ea estiver familiarizado com isso ou n\u00e3o precisar disso, prossiga com Passo 3 . Certificado SSL Para proteger um site com um nome de dom\u00ednio personalizado e um certificado, voc\u00ea pode encontrar as etapas a serem seguidas no artigo Adicionar um certificado TLS/SSL no Azure App Service . Esse artigo tamb\u00e9m cont\u00e9m uma descri\u00e7\u00e3o das maneiras de obter um certificado e os requisitos para um certificado. Normalmente, voc\u00ea obter\u00e1 um certificado do departamento de TI do cliente. Se voc\u00ea deseja come\u00e7ar com um certificado de desenvolvimento para testar o processo, pode criar um por conta pr\u00f3pria. Voc\u00ea pode fazer isso no PowerShell com o seguinte script. Substitua: [SEU DOM\u00cdNIO] pelo dom\u00ednio que deseja registrar, por exemplo, docs.somewhere.com . [SENHA] por uma senha do certificado. \u00c9 necess\u00e1rio ter uma senha ao carregar um certificado no Key Vault. Voc\u00ea precisar\u00e1 dessa senha nessa etapa. [NOME DO ARQUIVO] pelo nome do arquivo de sa\u00edda do certificado. Voc\u00ea pode at\u00e9 inserir o caminho aqui onde ele deve ser armazenado em sua m\u00e1quina. Voc\u00ea pode armazenar este script em um arquivo de script do PowerShell (com extens\u00e3o ps1). $cert = New-SelfSignedCertificate -CertStoreLocation cert :\\ currentuser \\ my -Subject \"cn=[SEU DOM\u00cdNIO]\" -DnsName \"[SEU DOM\u00cdNIO]\" $pwd = ConvertTo-SecureString -String '[SENHA]' -Force -AsPlainText $path = 'cert:\\currentuser\\my\\' + $cert . thumbprint Export-PfxCertificate -cert $path -FilePath [NOME DO ARQUIVO] . pfx -Password $pwd O certificado precisa ser armazenado no Key Vault comum. Acesse Configura\u00e7\u00f5es > Certificados no menu esquerdo do Key Vault e clique em Gerar/Importar . Forne\u00e7a esses detalhes: M\u00e9todo de cria\u00e7\u00e3o de certificado: Importar Nome do certificado: por exemplo, ssl-certificate Carregar arquivo de certificado: selecione o arquivo no disco. Senha: esta \u00e9 a [SENHA] que mencionamos anteriormente. Registro de dom\u00ednio personalizado Para usar um dom\u00ednio personalizado, algumas etapas precisam ser executadas. O processo no portal do Azure \u00e9 descrito no artigo Tutorial: Mapear um nome DNS personalizado existente para o Azure App Service . Uma parte importante \u00e9 descrita sob o cabe\u00e7alho Obter um ID de verifica\u00e7\u00e3o de dom\u00ednio . Este ID de verifica\u00e7\u00e3o de dom\u00ednio precisa ser registrado com a descri\u00e7\u00e3o DNS como um registro TXT. Importante saber que este \"ID de Verifica\u00e7\u00e3o de Dom\u00ednio Personalizado\" \u00e9 o mesmo para todos os recursos da Web na mesma assinatura do Azure. Veja esta quest\u00e3o no StackOverflow . Isso significa que este ID precisa ser registrado apenas uma vez para uma assinatura do Azure. E isso permite a (re)cria\u00e7\u00e3o de um Servi\u00e7o de Aplicativo com o dom\u00ednio personalizado por meio de um script. Adicionar Get-permissions para o Microsoft Azure App Service O Azure App Service precisa acessar o Key Vault para obter o certificado. Isso \u00e9 necess\u00e1rio na primeira execu\u00e7\u00e3o, mas tamb\u00e9m quando o certificado \u00e9 renovado no Key Vault. Para esse fim, o Azure App Service acessa o Key Vault com a identidade de recurso fornecida pelo servi\u00e7o. Essa identidade pode ser encontrada com o nome principal de servi\u00e7o abfa0a7c-a6b6-4736-8310-5855508787cd ou Microsoft Azure App Service e \u00e9 do tipo Aplicativo . Esse ID \u00e9 o mesmo para todas as assinaturas do Azure. Ele precisa ter permiss\u00f5es Get em segredos e certificados. Para obter mais informa\u00e7\u00f5es, consulte este artigo Importar um certificado do Key Vault . Adicione o dom\u00ednio personalizado e o certificado SSL ao Servi\u00e7o de Aplicativo Depois de obtermos o certificado SSL e houver um registro DNS completo conforme descrito, podemos descomentar o c\u00f3digo no script Terraform da pasta Quick Start para vincul\u00e1-lo ao Servi\u00e7o de Aplicativo. Neste script, voc\u00ea precisa fazer refer\u00eancia ao certificado no Key Vault comum e us\u00e1-lo na vincula\u00e7\u00e3o de nome de host personalizado. O nome de host personalizado tamb\u00e9m \u00e9 atribu\u00eddo no script. As configura\u00e7\u00f5es ssl_state devem ser SniEnabled se voc\u00ea estiver usando um certificado SSL. Agora a cria\u00e7\u00e3o do site autenticado com um dom\u00ednio personalizado est\u00e1 automatizada. 3. Implante recursos do Azure a partir do seu computador local Abra um prompt de comando. Para executar os comandos, voc\u00ea precisa ter uma conex\u00e3o com sua assinatura do Azure. Isso pode ser feito usando o Azure CLI . Digite este comando: az login Isso usar\u00e1 o navegador da web para fazer login na sua conta. Voc\u00ea pode verificar a assinatura conectada com este comando: az account show Se voc\u00ea precisar mudar para outra assinatura, use este comando, substituindo [id] pelo ID da assinatura a ser selecionada: az account set --subscription [ id ] Depois de fazer isso, execute este comando para inicializar: terraform init Agora voc\u00ea pode executar o comando para planejar o que o script far\u00e1. Execute este comando sempre que fizer altera\u00e7\u00f5es nos scripts do Terraform: terraform plan Verifique o resultado mostrado. Se isso for o que voc\u00ea espera, aplique essas altera\u00e7\u00f5es com este comando: terraform apply Quando for solicitada a aprova\u00e7\u00e3o, digite \"yes\" e pressione ENTER. Voc\u00ea tamb\u00e9m pode adicionar a op\u00e7\u00e3o -auto-approve ao comando apply. A implanta\u00e7\u00e3o usando o Terraform n\u00e3o est\u00e1 inclu\u00edda no pipeline da pasta Quick Start, conforme descrito no pr\u00f3ximo passo, pois requer mais configura\u00e7\u00e3o. Mas \u00e9 claro que isso pode sempre ser adicionado. 4. Implante o site a partir de um pipeline A melhor maneira de criar os recursos e implantar neles \u00e9 fazer isso automaticamente em um pipeline. Para esse fim, o pipeline .pipelines/documentation.yml \u00e9 fornecido. Este pipeline \u00e9 constru\u00eddo para um ambiente Azure DevOps. Crie um pipeline e fa\u00e7a refer\u00eancia a este arquivo YAML. IMPORTANTE: a pasta Quick Start cont\u00e9m um arquivo web.config necess\u00e1rio para a implanta\u00e7\u00e3o no IIS ou no Azure App Service. Isso permite o uso do arquivo json para solicita\u00e7\u00f5es de pesquisa. Se voc\u00ea n\u00e3o tiver isso, a pesquisa de texto nunca retornar\u00e1 nada e resultar\u00e1 em erros 404 nos bastidores. Voc\u00ea deve criar uma Conex\u00e3o de Servi\u00e7o em seu ambiente do DevOps para se conectar \u00e0 Assinatura do Azure \u00e0 qual deseja implantar. IMPORTANTE: configure as vari\u00e1veis AzureConnectionName como o nome da Conex\u00e3o de Servi\u00e7o e AzureAppServiceName como o nome que voc\u00ea determinou em infrastructure/variables.tf . Na pasta Quick Start, o pipeline usa master como acionador, o que significa que qualquer push feito para o master aciona o pipeline. Voc\u00ea provavelmente mudar\u00e1 isso para outra branch.","title":"Deploy docfx azure website"},{"location":"documentation/recipes/deploy-docfx-azure-website/#implante-o-site-de-documentacao-docfx-automaticamente-em-um-site-do-azure","text":"No artigo Usando o DocFx e Ferramentas Complementares para Gerar um Site de Documenta\u00e7\u00e3o , descreve-se o processo de gera\u00e7\u00e3o de conte\u00fado de um site de documenta\u00e7\u00e3o usando o DocFx. Este documento descreve como configurar um site do Azure para hospedar o conte\u00fado e automatizar a implanta\u00e7\u00e3o usando um pipeline no Azure DevOps. A amostra QuickStart fornecida para uma configura\u00e7\u00e3o r\u00e1pida da gera\u00e7\u00e3o do DocFx tamb\u00e9m cont\u00e9m os arquivos explicados neste documento. Especialmente as pastas .pipelines e infrastructure . Os seguintes passos podem ser seguidos ao usar a pasta Quick Start. Na pasta infrastructure , voc\u00ea pode encontrar os arquivos Terraform para criar o site em um ambiente do Azure. Por padr\u00e3o, o script criar\u00e1 um site onde o conte\u00fado da documenta\u00e7\u00e3o pode ser implantado.","title":"Implante o site de documenta\u00e7\u00e3o DocFx automaticamente em um site do Azure"},{"location":"documentation/recipes/deploy-docfx-azure-website/#1-instale-o-terraform","text":"Voc\u00ea pode usar ferramentas como o Chocolatey para instalar o Terraform: choco install terraform","title":"1. Instale o Terraform"},{"location":"documentation/recipes/deploy-docfx-azure-website/#2-configure-as-variaveis-apropriadas","text":"IMPORTANTE: Certifique-se de modificar o valor das vari\u00e1veis app_name , rg_name e rg_location . O valor de app_name \u00e9 acrescentado por azurewebsites.net e deve ser exclusivo. Caso contr\u00e1rio, o script falhar\u00e1 ao criar o site. Na Quick Start, a autentica\u00e7\u00e3o est\u00e1 desativada. Se voc\u00ea deseja ativ\u00e1-la, certifique-se de criar um Aplicativo no Azure AD e obter o ID do cliente . Este ID do cliente deve ser definido como o valor da vari\u00e1vel client_id em variables.tf . No main.tf , certifique-se de descomentar as configura\u00e7\u00f5es de autentica\u00e7\u00e3o em app-service . Para obter mais informa\u00e7\u00f5es, consulte Configurar a autentica\u00e7\u00e3o do Azure AD - Azure App Service . Se voc\u00ea deseja configurar um dom\u00ednio personalizado para o seu site de documenta\u00e7\u00e3o com um certificado SSL, precisar\u00e1 seguir algumas etapas adicionais. Voc\u00ea deve criar um Key Vault e armazenar o certificado l\u00e1. O pr\u00f3ximo passo \u00e9 descomentar e definir os valores em variables.tf . Voc\u00ea tamb\u00e9m deve descomentar as etapas necess\u00e1rias em main.tf . Tudo \u00e9 indicado por caixas de coment\u00e1rios. Para obter mais informa\u00e7\u00f5es, consulte Adicionar um certificado TLS/SSL no Azure App Service . Algumas informa\u00e7\u00f5es adicionais sobre certificado SSL, dom\u00ednio personalizado e Azure App Service podem ser encontradas nos par\u00e1grafos a seguir. Se voc\u00ea estiver familiarizado com isso ou n\u00e3o precisar disso, prossiga com Passo 3 .","title":"2. Configure as vari\u00e1veis apropriadas"},{"location":"documentation/recipes/deploy-docfx-azure-website/#certificado-ssl","text":"Para proteger um site com um nome de dom\u00ednio personalizado e um certificado, voc\u00ea pode encontrar as etapas a serem seguidas no artigo Adicionar um certificado TLS/SSL no Azure App Service . Esse artigo tamb\u00e9m cont\u00e9m uma descri\u00e7\u00e3o das maneiras de obter um certificado e os requisitos para um certificado. Normalmente, voc\u00ea obter\u00e1 um certificado do departamento de TI do cliente. Se voc\u00ea deseja come\u00e7ar com um certificado de desenvolvimento para testar o processo, pode criar um por conta pr\u00f3pria. Voc\u00ea pode fazer isso no PowerShell com o seguinte script. Substitua: [SEU DOM\u00cdNIO] pelo dom\u00ednio que deseja registrar, por exemplo, docs.somewhere.com . [SENHA] por uma senha do certificado. \u00c9 necess\u00e1rio ter uma senha ao carregar um certificado no Key Vault. Voc\u00ea precisar\u00e1 dessa senha nessa etapa. [NOME DO ARQUIVO] pelo nome do arquivo de sa\u00edda do certificado. Voc\u00ea pode at\u00e9 inserir o caminho aqui onde ele deve ser armazenado em sua m\u00e1quina. Voc\u00ea pode armazenar este script em um arquivo de script do PowerShell (com extens\u00e3o ps1). $cert = New-SelfSignedCertificate -CertStoreLocation cert :\\ currentuser \\ my -Subject \"cn=[SEU DOM\u00cdNIO]\" -DnsName \"[SEU DOM\u00cdNIO]\" $pwd = ConvertTo-SecureString -String '[SENHA]' -Force -AsPlainText $path = 'cert:\\currentuser\\my\\' + $cert . thumbprint Export-PfxCertificate -cert $path -FilePath [NOME DO ARQUIVO] . pfx -Password $pwd O certificado precisa ser armazenado no Key Vault comum. Acesse Configura\u00e7\u00f5es > Certificados no menu esquerdo do Key Vault e clique em Gerar/Importar . Forne\u00e7a esses detalhes: M\u00e9todo de cria\u00e7\u00e3o de certificado: Importar Nome do certificado: por exemplo, ssl-certificate Carregar arquivo de certificado: selecione o arquivo no disco. Senha: esta \u00e9 a [SENHA] que mencionamos anteriormente.","title":"Certificado SSL"},{"location":"documentation/recipes/deploy-docfx-azure-website/#registro-de-dominio-personalizado","text":"Para usar um dom\u00ednio personalizado, algumas etapas precisam ser executadas. O processo no portal do Azure \u00e9 descrito no artigo Tutorial: Mapear um nome DNS personalizado existente para o Azure App Service . Uma parte importante \u00e9 descrita sob o cabe\u00e7alho Obter um ID de verifica\u00e7\u00e3o de dom\u00ednio . Este ID de verifica\u00e7\u00e3o de dom\u00ednio precisa ser registrado com a descri\u00e7\u00e3o DNS como um registro TXT. Importante saber que este \"ID de Verifica\u00e7\u00e3o de Dom\u00ednio Personalizado\" \u00e9 o mesmo para todos os recursos da Web na mesma assinatura do Azure. Veja esta quest\u00e3o no StackOverflow . Isso significa que este ID precisa ser registrado apenas uma vez para uma assinatura do Azure. E isso permite a (re)cria\u00e7\u00e3o de um Servi\u00e7o de Aplicativo com o dom\u00ednio personalizado por meio de um script.","title":"Registro de dom\u00ednio personalizado"},{"location":"documentation/recipes/deploy-docfx-azure-website/#adicionar-get-permissions-para-o-microsoft","text":"Azure App Service O Azure App Service precisa acessar o Key Vault para obter o certificado. Isso \u00e9 necess\u00e1rio na primeira execu\u00e7\u00e3o, mas tamb\u00e9m quando o certificado \u00e9 renovado no Key Vault. Para esse fim, o Azure App Service acessa o Key Vault com a identidade de recurso fornecida pelo servi\u00e7o. Essa identidade pode ser encontrada com o nome principal de servi\u00e7o abfa0a7c-a6b6-4736-8310-5855508787cd ou Microsoft Azure App Service e \u00e9 do tipo Aplicativo . Esse ID \u00e9 o mesmo para todas as assinaturas do Azure. Ele precisa ter permiss\u00f5es Get em segredos e certificados. Para obter mais informa\u00e7\u00f5es, consulte este artigo Importar um certificado do Key Vault .","title":"Adicionar Get-permissions para o Microsoft"},{"location":"documentation/recipes/deploy-docfx-azure-website/#adicione-o-dominio-personalizado-e-o-certificado-ssl-ao-servico-de-aplicativo","text":"Depois de obtermos o certificado SSL e houver um registro DNS completo conforme descrito, podemos descomentar o c\u00f3digo no script Terraform da pasta Quick Start para vincul\u00e1-lo ao Servi\u00e7o de Aplicativo. Neste script, voc\u00ea precisa fazer refer\u00eancia ao certificado no Key Vault comum e us\u00e1-lo na vincula\u00e7\u00e3o de nome de host personalizado. O nome de host personalizado tamb\u00e9m \u00e9 atribu\u00eddo no script. As configura\u00e7\u00f5es ssl_state devem ser SniEnabled se voc\u00ea estiver usando um certificado SSL. Agora a cria\u00e7\u00e3o do site autenticado com um dom\u00ednio personalizado est\u00e1 automatizada.","title":"Adicione o dom\u00ednio personalizado e o certificado SSL ao Servi\u00e7o de Aplicativo"},{"location":"documentation/recipes/deploy-docfx-azure-website/#3-implante-recursos-do-azure-a-partir-do-seu-computador-local","text":"Abra um prompt de comando. Para executar os comandos, voc\u00ea precisa ter uma conex\u00e3o com sua assinatura do Azure. Isso pode ser feito usando o Azure CLI . Digite este comando: az login Isso usar\u00e1 o navegador da web para fazer login na sua conta. Voc\u00ea pode verificar a assinatura conectada com este comando: az account show Se voc\u00ea precisar mudar para outra assinatura, use este comando, substituindo [id] pelo ID da assinatura a ser selecionada: az account set --subscription [ id ] Depois de fazer isso, execute este comando para inicializar: terraform init Agora voc\u00ea pode executar o comando para planejar o que o script far\u00e1. Execute este comando sempre que fizer altera\u00e7\u00f5es nos scripts do Terraform: terraform plan Verifique o resultado mostrado. Se isso for o que voc\u00ea espera, aplique essas altera\u00e7\u00f5es com este comando: terraform apply Quando for solicitada a aprova\u00e7\u00e3o, digite \"yes\" e pressione ENTER. Voc\u00ea tamb\u00e9m pode adicionar a op\u00e7\u00e3o -auto-approve ao comando apply. A implanta\u00e7\u00e3o usando o Terraform n\u00e3o est\u00e1 inclu\u00edda no pipeline da pasta Quick Start, conforme descrito no pr\u00f3ximo passo, pois requer mais configura\u00e7\u00e3o. Mas \u00e9 claro que isso pode sempre ser adicionado.","title":"3. Implante recursos do Azure a partir do seu computador local"},{"location":"documentation/recipes/deploy-docfx-azure-website/#4-implante-o-site-a-partir-de-um-pipeline","text":"A melhor maneira de criar os recursos e implantar neles \u00e9 fazer isso automaticamente em um pipeline. Para esse fim, o pipeline .pipelines/documentation.yml \u00e9 fornecido. Este pipeline \u00e9 constru\u00eddo para um ambiente Azure DevOps. Crie um pipeline e fa\u00e7a refer\u00eancia a este arquivo YAML. IMPORTANTE: a pasta Quick Start cont\u00e9m um arquivo web.config necess\u00e1rio para a implanta\u00e7\u00e3o no IIS ou no Azure App Service. Isso permite o uso do arquivo json para solicita\u00e7\u00f5es de pesquisa. Se voc\u00ea n\u00e3o tiver isso, a pesquisa de texto nunca retornar\u00e1 nada e resultar\u00e1 em erros 404 nos bastidores. Voc\u00ea deve criar uma Conex\u00e3o de Servi\u00e7o em seu ambiente do DevOps para se conectar \u00e0 Assinatura do Azure \u00e0 qual deseja implantar. IMPORTANTE: configure as vari\u00e1veis AzureConnectionName como o nome da Conex\u00e3o de Servi\u00e7o e AzureAppServiceName como o nome que voc\u00ea determinou em infrastructure/variables.tf . Na pasta Quick Start, o pipeline usa master como acionador, o que significa que qualquer push feito para o master aciona o pipeline. Voc\u00ea provavelmente mudar\u00e1 isso para outra branch.","title":"4. Implante o site a partir de um pipeline"},{"location":"documentation/recipes/static-website-with-mkdocs/","text":"Como criar um site est\u00e1tico para a sua documenta\u00e7\u00e3o com base no MkDocs e MkDocs-Material MkDocs \u00e9 uma ferramenta desenvolvida para criar sites est\u00e1ticos a partir de arquivos markdown brutos. Outras alternativas incluem Sphinx e Jekyll . Utilizamos o MkDocs para criar o site est\u00e1tico do ISE Code-With Engineering Playbook a partir do conte\u00fado no reposit\u00f3rio do GitHub . Em seguida, o implantamos no GitHub Pages . Optamos pelo MkDocs por v\u00e1rias raz\u00f5es: \u00c9 f\u00e1cil de configurar e tem uma \u00f3tima apar\u00eancia mesmo na vers\u00e3o padr\u00e3o. Funciona bem com markdown, que \u00e9 o formato que j\u00e1 usamos no Manual. Usa uma pilha Python, o que \u00e9 amig\u00e1vel para muitos colaboradores do Manual. Para efeito de compara\u00e7\u00e3o, o Sphinx gera principalmente documenta\u00e7\u00f5es a partir do formato restructured-text (rst), e o Jekyll \u00e9 escrito em Ruby. Para configurar um site MkDocs, os principais recursos necess\u00e1rios s\u00e3o: Um arquivo mkdocs.yaml , semelhante ao que temos no Manual . Este \u00e9 o arquivo de configura\u00e7\u00e3o que define a apar\u00eancia do site, a navega\u00e7\u00e3o, os plugins utilizados e muito mais. Uma pasta chamada docs (o valor padr\u00e3o para o diret\u00f3rio) que cont\u00e9m os arquivos de origem da documenta\u00e7\u00e3o. Uma A\u00e7\u00e3o do GitHub para gerar automaticamente o site (por exemplo, a cada commit na branch principal), semelhante a esta do Manual . Uma lista de plugins usados durante a fase de constru\u00e7\u00e3o do site. Especificamos os nossos aqui . E estes s\u00e3o os plugins que utilizamos: - Material para MkDocs : Apar\u00eancia e experi\u00eancia de usu\u00e1rio baseadas no Material Design. - pymdown-extensions : Melhora a apar\u00eancia do conte\u00fado baseado em markdown. - mdx_truly_sane_lists : Para definir o n\u00edvel de recuo das listas sem precisar refatorar toda a documenta\u00e7\u00e3o que j\u00e1 t\u00ednhamos no Manual. A configura\u00e7\u00e3o local \u00e9 muito f\u00e1cil. Consulte Come\u00e7ando com o MkDocs para obter detalhes. Para publicar o site, h\u00e1 uma integra\u00e7\u00e3o f\u00e1cil com o GitHub para armazenar o site como uma P\u00e1gina do GitHub . Links adicionais Plugins do MkDocs Os melhores plugins e personaliza\u00e7\u00f5es do MkDocs","title":"Como criar um site est\u00e1tico para a sua documenta\u00e7\u00e3o com base no MkDocs e MkDocs-Material"},{"location":"documentation/recipes/static-website-with-mkdocs/#como-criar-um-site-estatico-para-a-sua-documentacao-com-base-no-mkdocs-e-mkdocs-material","text":"MkDocs \u00e9 uma ferramenta desenvolvida para criar sites est\u00e1ticos a partir de arquivos markdown brutos. Outras alternativas incluem Sphinx e Jekyll . Utilizamos o MkDocs para criar o site est\u00e1tico do ISE Code-With Engineering Playbook a partir do conte\u00fado no reposit\u00f3rio do GitHub . Em seguida, o implantamos no GitHub Pages . Optamos pelo MkDocs por v\u00e1rias raz\u00f5es: \u00c9 f\u00e1cil de configurar e tem uma \u00f3tima apar\u00eancia mesmo na vers\u00e3o padr\u00e3o. Funciona bem com markdown, que \u00e9 o formato que j\u00e1 usamos no Manual. Usa uma pilha Python, o que \u00e9 amig\u00e1vel para muitos colaboradores do Manual. Para efeito de compara\u00e7\u00e3o, o Sphinx gera principalmente documenta\u00e7\u00f5es a partir do formato restructured-text (rst), e o Jekyll \u00e9 escrito em Ruby. Para configurar um site MkDocs, os principais recursos necess\u00e1rios s\u00e3o: Um arquivo mkdocs.yaml , semelhante ao que temos no Manual . Este \u00e9 o arquivo de configura\u00e7\u00e3o que define a apar\u00eancia do site, a navega\u00e7\u00e3o, os plugins utilizados e muito mais. Uma pasta chamada docs (o valor padr\u00e3o para o diret\u00f3rio) que cont\u00e9m os arquivos de origem da documenta\u00e7\u00e3o. Uma A\u00e7\u00e3o do GitHub para gerar automaticamente o site (por exemplo, a cada commit na branch principal), semelhante a esta do Manual . Uma lista de plugins usados durante a fase de constru\u00e7\u00e3o do site. Especificamos os nossos aqui . E estes s\u00e3o os plugins que utilizamos: - Material para MkDocs : Apar\u00eancia e experi\u00eancia de usu\u00e1rio baseadas no Material Design. - pymdown-extensions : Melhora a apar\u00eancia do conte\u00fado baseado em markdown. - mdx_truly_sane_lists : Para definir o n\u00edvel de recuo das listas sem precisar refatorar toda a documenta\u00e7\u00e3o que j\u00e1 t\u00ednhamos no Manual. A configura\u00e7\u00e3o local \u00e9 muito f\u00e1cil. Consulte Come\u00e7ando com o MkDocs para obter detalhes. Para publicar o site, h\u00e1 uma integra\u00e7\u00e3o f\u00e1cil com o GitHub para armazenar o site como uma P\u00e1gina do GitHub .","title":"Como criar um site est\u00e1tico para a sua documenta\u00e7\u00e3o com base no MkDocs e MkDocs-Material"},{"location":"documentation/recipes/static-website-with-mkdocs/#links-adicionais","text":"Plugins do MkDocs Os melhores plugins e personaliza\u00e7\u00f5es do MkDocs","title":"Links adicionais"},{"location":"documentation/recipes/sync-wiki-between-repos/","text":"Como Sincronizar uma Wiki entre Reposit\u00f3rios Este \u00e9 um guia r\u00e1pido para espelhar uma Wiki de Projeto em outro reposit\u00f3rio. # Clonar a wiki git clone <URL do reposit\u00f3rio da wiki de origem> # Adicionar o reposit\u00f3rio espelhado como um controle remoto cd <pasta de trabalho do reposit\u00f3rio da wiki de origem> git remote add espelho <URL do reposit\u00f3rio espelhado que deve existir previamente> Agora, cada vez que voc\u00ea desejar sincronizar, execute o seguinte para obter as \u00faltimas atualiza\u00e7\u00f5es do reposit\u00f3rio da wiki de origem: # Obter tudo git pull -v Aviso : Verifique se a sa\u00edda do comando pull mostra \"From URL do reposit\u00f3rio de origem\". Se isso mostrar a URL do reposit\u00f3rio espelhado, voc\u00ea esqueceu de redefinir o rastreamento. Execute git branch -u origin/wikiMaster e depois continue. Em seguida, execute o seguinte para envi\u00e1-lo para o reposit\u00f3rio espelhado e redefinir o branch para rastrear o reposit\u00f3rio de origem novamente: # Enviar todos os branches para o controle remoto espelhado git push -u espelho # Ressincronizar localmente com o reposit\u00f3rio de origem git branch -u origin/wikiMaster A sa\u00edda deve ser semelhante a esta quando executada: PS C :\\ Git \\ MinhaWikiProjeto > git pull -v POST git-upload-pack ( 909 bytes ) remote : Reposit\u00f3rios Azure remote : Encontrados 5 objetos para enviar . ( 0 ms ) Descompactando objetos : 100 % ( 5 / 5 ), conclu\u00eddo . De https ://..... wikiMaster -> origin / wikiMaster Atualizando 7412b94 .. a0f543b Encaminhamento r\u00e1pido .../ dffffds . md | 4 ++++ 1 arquivo alterado , 4 inser\u00e7\u00f5es (+) PS C :\\ Git \\ MinhaWikiProjeto > git push -u espelho Enumerando objetos : 9 , conclu\u00eddo . Contando objetos : 100 % ( 9 / 9 ), conclu\u00eddo . Compacta\u00e7\u00e3o de objetos usando at\u00e9 8 threads Compacta\u00e7\u00e3o de objetos : 100 % ( 5 / 5 ), conclu\u00eddo . Gravando objetos : 100 % ( 5 / 5 ), 2 . 08 KiB | 2 . 08 MiB / s , conclu\u00eddo . Total 5 ( delta 4 ), reutilizados 0 ( delta 0 ) remote : Analisando objetos ... ( 5 / 5 ) ( 6 ms ) remote : Armazenando packfile ... conclu\u00eddo ( 48 ms ) remote : Armazenando \u00edndice ... conclu\u00eddo ( 59 ms ) Para https ://...... 7412b94 .. a0f543b wikiMaster -> wikiMaster Branch 'wikiMaster' configurado para rastrear o branch remoto 'wikiMaster' do 'espelho' . PS C :\\ Git \\ MinhaWikiProjeto > git branch -u origin / wikiMaster Branch 'wikiMaster' configurado para rastrear o branch remoto 'wikiMaster' do 'origin' .","title":"Como Sincronizar uma Wiki entre Reposit\u00f3rios"},{"location":"documentation/recipes/sync-wiki-between-repos/#como-sincronizar-uma-wiki-entre-repositorios","text":"Este \u00e9 um guia r\u00e1pido para espelhar uma Wiki de Projeto em outro reposit\u00f3rio. # Clonar a wiki git clone <URL do reposit\u00f3rio da wiki de origem> # Adicionar o reposit\u00f3rio espelhado como um controle remoto cd <pasta de trabalho do reposit\u00f3rio da wiki de origem> git remote add espelho <URL do reposit\u00f3rio espelhado que deve existir previamente> Agora, cada vez que voc\u00ea desejar sincronizar, execute o seguinte para obter as \u00faltimas atualiza\u00e7\u00f5es do reposit\u00f3rio da wiki de origem: # Obter tudo git pull -v Aviso : Verifique se a sa\u00edda do comando pull mostra \"From URL do reposit\u00f3rio de origem\". Se isso mostrar a URL do reposit\u00f3rio espelhado, voc\u00ea esqueceu de redefinir o rastreamento. Execute git branch -u origin/wikiMaster e depois continue. Em seguida, execute o seguinte para envi\u00e1-lo para o reposit\u00f3rio espelhado e redefinir o branch para rastrear o reposit\u00f3rio de origem novamente: # Enviar todos os branches para o controle remoto espelhado git push -u espelho # Ressincronizar localmente com o reposit\u00f3rio de origem git branch -u origin/wikiMaster A sa\u00edda deve ser semelhante a esta quando executada: PS C :\\ Git \\ MinhaWikiProjeto > git pull -v POST git-upload-pack ( 909 bytes ) remote : Reposit\u00f3rios Azure remote : Encontrados 5 objetos para enviar . ( 0 ms ) Descompactando objetos : 100 % ( 5 / 5 ), conclu\u00eddo . De https ://..... wikiMaster -> origin / wikiMaster Atualizando 7412b94 .. a0f543b Encaminhamento r\u00e1pido .../ dffffds . md | 4 ++++ 1 arquivo alterado , 4 inser\u00e7\u00f5es (+) PS C :\\ Git \\ MinhaWikiProjeto > git push -u espelho Enumerando objetos : 9 , conclu\u00eddo . Contando objetos : 100 % ( 9 / 9 ), conclu\u00eddo . Compacta\u00e7\u00e3o de objetos usando at\u00e9 8 threads Compacta\u00e7\u00e3o de objetos : 100 % ( 5 / 5 ), conclu\u00eddo . Gravando objetos : 100 % ( 5 / 5 ), 2 . 08 KiB | 2 . 08 MiB / s , conclu\u00eddo . Total 5 ( delta 4 ), reutilizados 0 ( delta 0 ) remote : Analisando objetos ... ( 5 / 5 ) ( 6 ms ) remote : Armazenando packfile ... conclu\u00eddo ( 48 ms ) remote : Armazenando \u00edndice ... conclu\u00eddo ( 59 ms ) Para https ://...... 7412b94 .. a0f543b wikiMaster -> wikiMaster Branch 'wikiMaster' configurado para rastrear o branch remoto 'wikiMaster' do 'espelho' . PS C :\\ Git \\ MinhaWikiProjeto > git branch -u origin / wikiMaster Branch 'wikiMaster' configurado para rastrear o branch remoto 'wikiMaster' do 'origin' .","title":"Como Sincronizar uma Wiki entre Reposit\u00f3rios"},{"location":"documentation/recipes/using-docfx-and-tools/","text":"Usando o DocFx e Ferramentas Complementares para Gerar um Site de Documenta\u00e7\u00e3o Se voc\u00ea deseja uma maneira f\u00e1cil de ter um site com toda a sua documenta\u00e7\u00e3o proveniente de arquivos Markdown e coment\u00e1rios do c\u00f3digo, voc\u00ea pode usar o DocFx . O site gerado pelo DocFx tamb\u00e9m inclui recursos de pesquisa r\u00e1pida. Existem algumas lacunas na solu\u00e7\u00e3o do DocFx, mas fornecemos ferramentas complementares que o ajudar\u00e3o a preencher essas lacunas. Consulte tamb\u00e9m o post do blog Fornecendo documenta\u00e7\u00e3o de qualidade em seu projeto com o DocFx e Ferramentas Complementares para obter mais informa\u00e7\u00f5es sobre a solu\u00e7\u00e3o. Pr\u00e9-requisitos Este documento \u00e9 melhor seguido clonando o exemplo em https://github.com/mtirionMSFT/DocFxQuickStart primeiro. Copie o conte\u00fado da pasta QuickStart para a raiz do seu pr\u00f3prio reposit\u00f3rio para come\u00e7ar em seu pr\u00f3prio ambiente. In\u00edcio R\u00e1pido Resumo: Se voc\u00ea deseja iniciar rapidamente usando o Azure DevOps e o Azure App Service sem ler o qu\u00ea e como, siga estas etapas: Azure DevOps: Se voc\u00ea ainda n\u00e3o tem, crie um projeto no Azure DevOps e crie uma Conex\u00e3o de Servi\u00e7o para o seu ambiente Azure . Clone o reposit\u00f3rio. Pasta QuickStart: Copie o conte\u00fado da pasta QuickStart para o reposit\u00f3rio. Voc\u00ea pode encontr\u00e1-lo em https://github.com/mtirionMSFT/DocFxQuickStart . Azure: Crie um grupo de recursos no seu ambiente Azure onde os recursos do site de documenta\u00e7\u00e3o devem ser criados. Criar recursos do Azure: Preencha os valores padr\u00e3o em infrastructure/variables.tf e execute os comandos da Etapa 3 - Implante recursos do Azure a partir do seu computador local para criar os Recursos Azure. Pipeline: Preencha as vari\u00e1veis em .pipelines/documentation.yml , fa\u00e7a o commit das altera\u00e7\u00f5es e envie o conte\u00fado do reposit\u00f3rio para o seu branch (possivelmente atrav\u00e9s de um PR). Agora voc\u00ea pode criar um pipeline no seu projeto Azure DevOps que usa o .pipelines/documentation.yml e execut\u00e1-lo. Estrutura de Pastas de Documentos e Projetos A maneira mais f\u00e1cil de trabalhar \u00e9 com um reposit\u00f3rio \u00fanico onde a documenta\u00e7\u00e3o e o c\u00f3digo coexistem. Se essa n\u00e3o for a situa\u00e7\u00e3o no seu caso, mas voc\u00ea ainda deseja combinar v\u00e1rios reposit\u00f3rios em um \u00fanico site de documenta\u00e7\u00e3o, voc\u00ea ter\u00e1 que clonar todos os reposit\u00f3rios primeiro para poder combinar as informa\u00e7\u00f5es. Nesta receita, assumiremos que um reposit\u00f3rio \u00fanico \u00e9 usado. Nas etapas a seguir, consideraremos a gera\u00e7\u00e3o do site de documenta\u00e7\u00e3o a partir desta estrutura de conte\u00fado: \u251c\u2500\u2500 .pipelines // Azure DevOps pipeline para gera\u00e7\u00e3o e implanta\u00e7\u00e3o autom\u00e1tica \u2502 \u251c\u2500\u2500 docs // todos os documentos \u2502 \u251c\u2500\u2500 .attachments // todas as imagens e outros anexos usados pelos documentos \u2502 \u251c\u2500\u2500 infrastructure // scripts Terraform para cria\u00e7\u00e3o do site Azure \u2502 \u251c\u2500\u2500 src // todos os projetos \u2502 \u251c\u2500\u2500 build // configura\u00e7\u00f5es de compila\u00e7\u00e3o \u2502 \u251c\u2500\u2500 dotnet // configura\u00e7\u00f5es de compila\u00e7\u00e3o do .NET \u2502 \u251c\u2500\u2500 Directory.Build.props // configura\u00e7\u00f5es do projeto para todos os projetos .NET nas subpastas \u2502 \u251c\u2500\u2500 [Pastas de Projeto] \u2502 \u251c\u2500\u2500 x-cross \u2502 \u251c\u2500\u2500 toc.yml // Defini\u00e7\u00e3o de refer\u00eancia cruzada (opcional) \u2502 \u251c\u2500\u2500 .markdownlint.json // Configura\u00e7\u00f5es do Markdownlinter \u251c\u2500\u2500 docfx.json // Configura\u00e7\u00e3o do DocFx \u251c\u2500\u2500 index.md // P\u00e1gina inicial do site \u251c\u2500\u2500 toc.yml // Defini\u00e7\u00e3o dos links de conte\u00fado do cabe\u00e7alho do site \u251c\u2500\u2500 web.config // web.config para habilitar a pesquisa no site implantado Usaremos a ferramenta DocLinkChecker para validar todos os links na documenta\u00e7\u00e3o e os anexos \u00f3rf\u00e3os. Essa \u00e9 a raz\u00e3o pela qual todos os anexos est\u00e3o na pasta .attachments . No site gerado a partir da pasta QuickStart, voc\u00ea ver\u00e1 que as hierarquias de documenta\u00e7\u00e3o e refer\u00eancias s\u00e3o combinadas na tabela de conte\u00fados \u00e0 esquerda. Isso \u00e9 alcan\u00e7ado pela defini\u00e7\u00e3o e uso de x-cross\\toc.yml . Se voc\u00ea n\u00e3o deseja que as hierarquias sejam combinadas, basta remover a pasta e o arquivo da sua estrutura e (re)gerar o site. Um arquivo .markdownlint.json est\u00e1 inclu\u00eddo com o conte\u00fado abaixo. A configura\u00e7\u00e3o MD013 est\u00e1 definida como false para evitar a verifica\u00e7\u00e3o do comprimento m\u00e1ximo da linha. Voc\u00ea pode modificar este arquivo de acordo com suas prefer\u00eancias para incluir ou excluir determinados testes. { \"MD013\" : false } O conte\u00fado das pastas .pipelines e infrastructure \u00e9 explicado na receita Implantar o site de Documenta\u00e7\u00e3o DocFx em um Site Azure automaticamente . Documenta\u00e7\u00e3o de refer\u00eancia do c\u00f3digo-fonte O Doc Fx pode gerar documenta\u00e7\u00e3o de refer\u00eancia a partir do c\u00f3digo, com suporte melhor para C# e TypeScript no momento. Na pasta QuickStart, usamos apenas projetos C#. Para que o DocFx gere uma documenta\u00e7\u00e3o de refer\u00eancia de qualidade, s\u00e3o necess\u00e1rios coment\u00e1rios de c\u00f3digo do tipo \"triple-slash\". Consulte Triple-slash (///) Code Comments Support . Para garantir isso, \u00e9 uma boa ideia utilizar o StyleCop . Existem algumas etapas que facilitar\u00e3o o in\u00edcio com isso. Primeiro, voc\u00ea pode usar o arquivo Directory.Build.props na pasta /src em combina\u00e7\u00e3o com os arquivos na pasta build/dotnet . Com isso, voc\u00ea pode impor o uso do StyleCop em todos os arquivos de projeto do Visual Studio em suas subpastas com uma configura\u00e7\u00e3o de quais regras devem ser usadas ou ignoradas. Voc\u00ea pode personalizar isso de acordo com suas necessidades. Para obter mais informa\u00e7\u00f5es, consulte Personalize sua compila\u00e7\u00e3o e Use conjuntos de regras para agrupar regras de an\u00e1lise de c\u00f3digo . Para garantir que os desenvolvedores sejam obrigados a adicionar os coment\u00e1rios \"triple-slash\" gerando erros do compilador e para ter as configura\u00e7\u00f5es adequadas para a gera\u00e7\u00e3o de arquivos XML de documenta\u00e7\u00e3o, adicione as configura\u00e7\u00f5es TreatWarningsAsErrors e GenerateDocumentationFile em todos os arquivos .csproj . Voc\u00ea pode adicionar isso no primeiro conjunto de propriedades PropertyGroup da seguinte forma: <Project Sdk= \"Microsoft.NET.Sdk\" > <PropertyGroup> ... <GenerateDocumentationFile> true </GenerateDocumentationFile> <TreatWarningsAsErrors> true </TreatWarningsAsErrors> </PropertyGroup> ... </Project> Agora voc\u00ea est\u00e1 pronto para gerar documenta\u00e7\u00e3o a partir do seu c\u00f3digo C#. Para obter mais informa\u00e7\u00f5es sobre os idiomas suportados pelo DocFx e como configur\u00e1-lo, consulte Introdu\u00e7\u00e3o ao Suporte a M\u00faltiplos Idiomas . NOTA: Voc\u00ea tamb\u00e9m pode adicionar uma defini\u00e7\u00e3o PropertyGroup com as duas configura\u00e7\u00f5es no arquivo Directory.Build.props para t\u00ea-las em todos os projetos. Mas, nesse caso, tamb\u00e9m ser\u00e3o herdados nos projetos de teste. 1. Instale o DocFx e o markdownlint-cli Acesse o site do DocFx na se\u00e7\u00e3o de Download e baixe a vers\u00e3o mais recente do DocFx. Acesse a p\u00e1gina do markdownlint-cli no GitHub para encontrar op\u00e7\u00f5es de download e instala\u00e7\u00e3o. Voc\u00ea tamb\u00e9m pode usar ferramentas como o Chocolatey para instalar: choco install docfx choco install markdownlint-cli 2. Configure o DocFx A configura\u00e7\u00e3o para o DocFx \u00e9 feita em um arquivo docfx.json . Armazene este arquivo na raiz do seu reposit\u00f3rio. NOTA: Voc\u00ea pode armazenar o docfx.json em algum lugar na hierarquia, mas ent\u00e3o voc\u00ea precisa fornecer o caminho do arquivo como um argumento para o comando docfx para que ele possa ser localizado. Aqui est\u00e1 uma boa configura\u00e7\u00e3o para come\u00e7ar, onde a documenta\u00e7\u00e3o est\u00e1 na pasta /docs e as fontes est\u00e3o na pasta /src : { \"metadata\" : [ { \"src\" : [ { \"files\" : [ \"src/**.csproj\" ], \"exclude\" : [ \"_site/**\" , \"**/bin/**\" , \"**/obj/**\" , \"**/[Tt]ests/**\" ] } ], \"dest\" : \"reference\" , \"disableGitFeatures\" : false } ], \"build\" : { \"content\" : [ { \"files\" : [ \"reference/**\" ] }, { \"files\" : [ \"**.md\" , \"**/toc.yml\" ], \"exclude\" : [ \"_site/**\" , \"**/bin/**\" , \"**/obj/**\" , \"**/[Tt]ests/**\" ] } ], \"resource\" : [ { \"files\" : [ \"docs/.attachments/**\" ] }, { \"files\" : [ \"web.config\" ] } ], \"template\" : [ \"templates/cse\" ], \"globalMetadata\" : { \"_appTitle\" : \"Documenta\u00e7\u00e3o CSE\" , \"_enableSearch\" : true }, \"markdownEngineName\" : \"markdig\" , \"dest\" : \"_site\" , \"xrefService\" : [ \"https://xref.learn.microsoft.com/query?uid={uid}\" ] } } 3. Configure alguns documentos b\u00e1sicos Sugerimos come\u00e7ar com uma estrutura b\u00e1sica de documenta\u00e7\u00e3o na pasta /docs . Na pasta QuickStart fornecida, temos uma configura\u00e7\u00e3o b\u00e1sica: \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 .attachments // Todas as imagens e outros anexos usados pelos documentos \u2502 \u2502 \u251c\u2500\u2500 architecture-decisions \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 decision-log.md // Exemplo de \u00edndice para todas as ADRs \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino das decis\u00f5es de arquitetura \u2502 \u2502 \u251c\u2500\u2500 getting-started \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 README.md // Este documento de exemplo. Substitua o conte\u00fado por algo significativo para o projeto. \u2502 \u2502 \u251c\u2500\u2500 guidelines \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 docs-guidelines.md // Diretrizes gerais de documenta\u00e7\u00e3o \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino das diretrizes \u2502 \u2502 \u251c\u2500\u2500 templates // todos os modelos, como o modelo ADR e outros \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino dos modelos \u2502 \u2502 \u251c\u2500\u2500 working-agreements \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino dos acordos de trabalho \u2502 \u2502 \u251c\u2500\u2500 .order // Fornecer uma ordem fixa de arquivos e diret\u00f3rios \u2502 \u251c\u2500\u2500 index.md // P\u00e1gina inicial do site de documenta\u00e7\u00e3o Voc\u00ea pode usar modelos como acordos de trabalho e outros do [ISE Playbook](https://github.com/microsoft /code-with-engineering-playbook/). Para ter uma p\u00e1gina de destino adequada para o seu site de documenta\u00e7\u00e3o, voc\u00ea pode usar um arquivo Markdown chamado INDEX.MD na raiz do seu reposit\u00f3rio. O conte\u00fado pode ser algo assim: # Documenta\u00e7\u00e3o CSE Esta \u00e9 a p\u00e1gina de destino do site de Documenta\u00e7\u00e3o CSE. Esta \u00e9 a p\u00e1gina para introduzir tudo no site. Voc\u00ea pode adicionar links espec\u00edficos que s\u00e3o importantes para fornecer acesso direto. > Tente n\u00e3o duplicar os links no topo da p\u00e1gina, a menos que realmente fa\u00e7a sentido. Para come\u00e7ar com a configura\u00e7\u00e3o deste site, leia o documento de in\u00edcio r\u00e1pido com o t\u00edtulo [ Usando o DocFx e Ferramentas Complementares ]( using-docfx-and-tools.md ). 4. Compile as ferramentas complementares e execute-as NOTA: Para explicar cada etapa, passaremos pelas v\u00e1rias etapas nos pr\u00f3ximos par\u00e1grafos. Na pasta QuickStart, um arquivo em lote chamado GenerateDocWebsite.cmd est\u00e1 inclu\u00eddo. Este script executar\u00e1 todas as etapas necess\u00e1rias para compilar as ferramentas, executar as verifica\u00e7\u00f5es, gerar a tabela de conte\u00fados e executar o DocFx para gerar o site. Para verificar a formata\u00e7\u00e3o adequada do Markdown, usamos a ferramenta markdownlint-cli . O comando obt\u00e9m sua configura\u00e7\u00e3o do arquivo .markdownlint.json na raiz do projeto. Para verificar todos os arquivos Markdown, basta executar este comando: markdownlint **/*.md Na pasta QuickStart, voc\u00ea dever\u00e1 ter copiado as duas ferramentas complementares TocDocFxCreation e DocLinkChecker , conforme descrito na introdu\u00e7\u00e3o deste artigo. Voc\u00ea pode compilar as ferramentas a partir do Visual Studio, mas tamb\u00e9m pode executar dotnet build em ambas as pastas de ferramentas. A ferramenta DocLinkChecker \u00e9 usada para validar o que est\u00e1 na pasta de documentos. Ele valida os links entre documentos e anexos na pasta de documentos e verifica se n\u00e3o h\u00e1 anexos \u00f3rf\u00e3os. Um exemplo de execu\u00e7\u00e3o dessa ferramenta, incluindo a verifica\u00e7\u00e3o de anexos: DocLinkChecker.exe -d ./docs -a A ferramenta TocDocFxCreation \u00e9 necess\u00e1ria para gerar uma tabela de conte\u00fados para a sua documenta\u00e7\u00e3o, para que os usu\u00e1rios possam navegar entre pastas e documentos. Se voc\u00ea compilou a ferramenta, use este comando para gerar um arquivo de tabela de conte\u00fados toc.yml . Para gerar uma tabela de conte\u00fados com o uso dos arquivos .order para determinar a sequ\u00eancia dos artigos e para gerar automaticamente documentos index.md se n\u00e3o houver documento padr\u00e3o dispon\u00edvel em uma pasta, voc\u00ea pode usar este comando: TocDocFxCreation.exe -d ./docs -sri 5. Execute o DocFx para gerar o site Execute o comando docfx para gerar o site, por padr\u00e3o na pasta _site . DICA: Se voc\u00ea deseja verificar o site em seu ambiente local, forne\u00e7a a op\u00e7\u00e3o --serve para o comando docfx ou o script GenerateDocWebsite . Um pequeno servidor web \u00e9 lan\u00e7ado que hospeda o seu site, que \u00e9 acess\u00edvel em localhost. Estilo do site Se voc\u00ea come\u00e7ou com a pasta QuickStart, o site \u00e9 gerado usando um tema personalizado com design material e o logotipo da Microsoft. Voc\u00ea pode alterar isso de acordo com suas prefer\u00eancias. Para obter mais informa\u00e7\u00f5es, consulte Como criar um modelo personalizado | Site do DocFX (dotnet.github.io) . Implante em um Site Azure Ap\u00f3s concluir as etapas, voc\u00ea deve ter um site padr\u00e3o gerado na pasta _site . No entanto, \u00e9 claro que voc\u00ea deseja que isso seja acess\u00edvel para todos. Portanto, o pr\u00f3ximo passo \u00e9 criar, por exemplo, um Site Azure e ter um processo para gerar e implantar automaticamente o conte\u00fado nesse site. Esse processo \u00e9 descrito na receita Implantar o site de Documenta\u00e7\u00e3o DocFx em um Site Azure automaticamente . Refer\u00eancias DocFX - gerador de documenta\u00e7\u00e3o est\u00e1tica Implantar o site de Documenta\u00e7\u00e3o DocFx em um Site Azure automaticamente Fornecer documenta\u00e7\u00e3o de qualidade em seu projeto com DocFx e Ferramentas Complementares Monorepo para Iniciantes","title":"Usando o DocFx e Ferramentas Complementares para Gerar um Site de Documenta\u00e7\u00e3o"},{"location":"documentation/recipes/using-docfx-and-tools/#usando-o-docfx-e-ferramentas-complementares-para-gerar-um-site-de-documentacao","text":"Se voc\u00ea deseja uma maneira f\u00e1cil de ter um site com toda a sua documenta\u00e7\u00e3o proveniente de arquivos Markdown e coment\u00e1rios do c\u00f3digo, voc\u00ea pode usar o DocFx . O site gerado pelo DocFx tamb\u00e9m inclui recursos de pesquisa r\u00e1pida. Existem algumas lacunas na solu\u00e7\u00e3o do DocFx, mas fornecemos ferramentas complementares que o ajudar\u00e3o a preencher essas lacunas. Consulte tamb\u00e9m o post do blog Fornecendo documenta\u00e7\u00e3o de qualidade em seu projeto com o DocFx e Ferramentas Complementares para obter mais informa\u00e7\u00f5es sobre a solu\u00e7\u00e3o.","title":"Usando o DocFx e Ferramentas Complementares para Gerar um Site de Documenta\u00e7\u00e3o"},{"location":"documentation/recipes/using-docfx-and-tools/#pre-requisitos","text":"Este documento \u00e9 melhor seguido clonando o exemplo em https://github.com/mtirionMSFT/DocFxQuickStart primeiro. Copie o conte\u00fado da pasta QuickStart para a raiz do seu pr\u00f3prio reposit\u00f3rio para come\u00e7ar em seu pr\u00f3prio ambiente.","title":"Pr\u00e9-requisitos"},{"location":"documentation/recipes/using-docfx-and-tools/#inicio-rapido","text":"Resumo: Se voc\u00ea deseja iniciar rapidamente usando o Azure DevOps e o Azure App Service sem ler o qu\u00ea e como, siga estas etapas: Azure DevOps: Se voc\u00ea ainda n\u00e3o tem, crie um projeto no Azure DevOps e crie uma Conex\u00e3o de Servi\u00e7o para o seu ambiente Azure . Clone o reposit\u00f3rio. Pasta QuickStart: Copie o conte\u00fado da pasta QuickStart para o reposit\u00f3rio. Voc\u00ea pode encontr\u00e1-lo em https://github.com/mtirionMSFT/DocFxQuickStart . Azure: Crie um grupo de recursos no seu ambiente Azure onde os recursos do site de documenta\u00e7\u00e3o devem ser criados. Criar recursos do Azure: Preencha os valores padr\u00e3o em infrastructure/variables.tf e execute os comandos da Etapa 3 - Implante recursos do Azure a partir do seu computador local para criar os Recursos Azure. Pipeline: Preencha as vari\u00e1veis em .pipelines/documentation.yml , fa\u00e7a o commit das altera\u00e7\u00f5es e envie o conte\u00fado do reposit\u00f3rio para o seu branch (possivelmente atrav\u00e9s de um PR). Agora voc\u00ea pode criar um pipeline no seu projeto Azure DevOps que usa o .pipelines/documentation.yml e execut\u00e1-lo.","title":"In\u00edcio R\u00e1pido"},{"location":"documentation/recipes/using-docfx-and-tools/#estrutura-de-pastas-de-documentos-e-projetos","text":"A maneira mais f\u00e1cil de trabalhar \u00e9 com um reposit\u00f3rio \u00fanico onde a documenta\u00e7\u00e3o e o c\u00f3digo coexistem. Se essa n\u00e3o for a situa\u00e7\u00e3o no seu caso, mas voc\u00ea ainda deseja combinar v\u00e1rios reposit\u00f3rios em um \u00fanico site de documenta\u00e7\u00e3o, voc\u00ea ter\u00e1 que clonar todos os reposit\u00f3rios primeiro para poder combinar as informa\u00e7\u00f5es. Nesta receita, assumiremos que um reposit\u00f3rio \u00fanico \u00e9 usado. Nas etapas a seguir, consideraremos a gera\u00e7\u00e3o do site de documenta\u00e7\u00e3o a partir desta estrutura de conte\u00fado: \u251c\u2500\u2500 .pipelines // Azure DevOps pipeline para gera\u00e7\u00e3o e implanta\u00e7\u00e3o autom\u00e1tica \u2502 \u251c\u2500\u2500 docs // todos os documentos \u2502 \u251c\u2500\u2500 .attachments // todas as imagens e outros anexos usados pelos documentos \u2502 \u251c\u2500\u2500 infrastructure // scripts Terraform para cria\u00e7\u00e3o do site Azure \u2502 \u251c\u2500\u2500 src // todos os projetos \u2502 \u251c\u2500\u2500 build // configura\u00e7\u00f5es de compila\u00e7\u00e3o \u2502 \u251c\u2500\u2500 dotnet // configura\u00e7\u00f5es de compila\u00e7\u00e3o do .NET \u2502 \u251c\u2500\u2500 Directory.Build.props // configura\u00e7\u00f5es do projeto para todos os projetos .NET nas subpastas \u2502 \u251c\u2500\u2500 [Pastas de Projeto] \u2502 \u251c\u2500\u2500 x-cross \u2502 \u251c\u2500\u2500 toc.yml // Defini\u00e7\u00e3o de refer\u00eancia cruzada (opcional) \u2502 \u251c\u2500\u2500 .markdownlint.json // Configura\u00e7\u00f5es do Markdownlinter \u251c\u2500\u2500 docfx.json // Configura\u00e7\u00e3o do DocFx \u251c\u2500\u2500 index.md // P\u00e1gina inicial do site \u251c\u2500\u2500 toc.yml // Defini\u00e7\u00e3o dos links de conte\u00fado do cabe\u00e7alho do site \u251c\u2500\u2500 web.config // web.config para habilitar a pesquisa no site implantado Usaremos a ferramenta DocLinkChecker para validar todos os links na documenta\u00e7\u00e3o e os anexos \u00f3rf\u00e3os. Essa \u00e9 a raz\u00e3o pela qual todos os anexos est\u00e3o na pasta .attachments . No site gerado a partir da pasta QuickStart, voc\u00ea ver\u00e1 que as hierarquias de documenta\u00e7\u00e3o e refer\u00eancias s\u00e3o combinadas na tabela de conte\u00fados \u00e0 esquerda. Isso \u00e9 alcan\u00e7ado pela defini\u00e7\u00e3o e uso de x-cross\\toc.yml . Se voc\u00ea n\u00e3o deseja que as hierarquias sejam combinadas, basta remover a pasta e o arquivo da sua estrutura e (re)gerar o site. Um arquivo .markdownlint.json est\u00e1 inclu\u00eddo com o conte\u00fado abaixo. A configura\u00e7\u00e3o MD013 est\u00e1 definida como false para evitar a verifica\u00e7\u00e3o do comprimento m\u00e1ximo da linha. Voc\u00ea pode modificar este arquivo de acordo com suas prefer\u00eancias para incluir ou excluir determinados testes. { \"MD013\" : false } O conte\u00fado das pastas .pipelines e infrastructure \u00e9 explicado na receita Implantar o site de Documenta\u00e7\u00e3o DocFx em um Site Azure automaticamente .","title":"Estrutura de Pastas de Documentos e Projetos"},{"location":"documentation/recipes/using-docfx-and-tools/#documentacao-de-referencia-do-codigo-fonte","text":"O Doc Fx pode gerar documenta\u00e7\u00e3o de refer\u00eancia a partir do c\u00f3digo, com suporte melhor para C# e TypeScript no momento. Na pasta QuickStart, usamos apenas projetos C#. Para que o DocFx gere uma documenta\u00e7\u00e3o de refer\u00eancia de qualidade, s\u00e3o necess\u00e1rios coment\u00e1rios de c\u00f3digo do tipo \"triple-slash\". Consulte Triple-slash (///) Code Comments Support . Para garantir isso, \u00e9 uma boa ideia utilizar o StyleCop . Existem algumas etapas que facilitar\u00e3o o in\u00edcio com isso. Primeiro, voc\u00ea pode usar o arquivo Directory.Build.props na pasta /src em combina\u00e7\u00e3o com os arquivos na pasta build/dotnet . Com isso, voc\u00ea pode impor o uso do StyleCop em todos os arquivos de projeto do Visual Studio em suas subpastas com uma configura\u00e7\u00e3o de quais regras devem ser usadas ou ignoradas. Voc\u00ea pode personalizar isso de acordo com suas necessidades. Para obter mais informa\u00e7\u00f5es, consulte Personalize sua compila\u00e7\u00e3o e Use conjuntos de regras para agrupar regras de an\u00e1lise de c\u00f3digo . Para garantir que os desenvolvedores sejam obrigados a adicionar os coment\u00e1rios \"triple-slash\" gerando erros do compilador e para ter as configura\u00e7\u00f5es adequadas para a gera\u00e7\u00e3o de arquivos XML de documenta\u00e7\u00e3o, adicione as configura\u00e7\u00f5es TreatWarningsAsErrors e GenerateDocumentationFile em todos os arquivos .csproj . Voc\u00ea pode adicionar isso no primeiro conjunto de propriedades PropertyGroup da seguinte forma: <Project Sdk= \"Microsoft.NET.Sdk\" > <PropertyGroup> ... <GenerateDocumentationFile> true </GenerateDocumentationFile> <TreatWarningsAsErrors> true </TreatWarningsAsErrors> </PropertyGroup> ... </Project> Agora voc\u00ea est\u00e1 pronto para gerar documenta\u00e7\u00e3o a partir do seu c\u00f3digo C#. Para obter mais informa\u00e7\u00f5es sobre os idiomas suportados pelo DocFx e como configur\u00e1-lo, consulte Introdu\u00e7\u00e3o ao Suporte a M\u00faltiplos Idiomas . NOTA: Voc\u00ea tamb\u00e9m pode adicionar uma defini\u00e7\u00e3o PropertyGroup com as duas configura\u00e7\u00f5es no arquivo Directory.Build.props para t\u00ea-las em todos os projetos. Mas, nesse caso, tamb\u00e9m ser\u00e3o herdados nos projetos de teste.","title":"Documenta\u00e7\u00e3o de refer\u00eancia do c\u00f3digo-fonte"},{"location":"documentation/recipes/using-docfx-and-tools/#1-instale-o-docfx-e-o-markdownlint-cli","text":"Acesse o site do DocFx na se\u00e7\u00e3o de Download e baixe a vers\u00e3o mais recente do DocFx. Acesse a p\u00e1gina do markdownlint-cli no GitHub para encontrar op\u00e7\u00f5es de download e instala\u00e7\u00e3o. Voc\u00ea tamb\u00e9m pode usar ferramentas como o Chocolatey para instalar: choco install docfx choco install markdownlint-cli","title":"1. Instale o DocFx e o markdownlint-cli"},{"location":"documentation/recipes/using-docfx-and-tools/#2-configure-o-docfx","text":"A configura\u00e7\u00e3o para o DocFx \u00e9 feita em um arquivo docfx.json . Armazene este arquivo na raiz do seu reposit\u00f3rio. NOTA: Voc\u00ea pode armazenar o docfx.json em algum lugar na hierarquia, mas ent\u00e3o voc\u00ea precisa fornecer o caminho do arquivo como um argumento para o comando docfx para que ele possa ser localizado. Aqui est\u00e1 uma boa configura\u00e7\u00e3o para come\u00e7ar, onde a documenta\u00e7\u00e3o est\u00e1 na pasta /docs e as fontes est\u00e3o na pasta /src : { \"metadata\" : [ { \"src\" : [ { \"files\" : [ \"src/**.csproj\" ], \"exclude\" : [ \"_site/**\" , \"**/bin/**\" , \"**/obj/**\" , \"**/[Tt]ests/**\" ] } ], \"dest\" : \"reference\" , \"disableGitFeatures\" : false } ], \"build\" : { \"content\" : [ { \"files\" : [ \"reference/**\" ] }, { \"files\" : [ \"**.md\" , \"**/toc.yml\" ], \"exclude\" : [ \"_site/**\" , \"**/bin/**\" , \"**/obj/**\" , \"**/[Tt]ests/**\" ] } ], \"resource\" : [ { \"files\" : [ \"docs/.attachments/**\" ] }, { \"files\" : [ \"web.config\" ] } ], \"template\" : [ \"templates/cse\" ], \"globalMetadata\" : { \"_appTitle\" : \"Documenta\u00e7\u00e3o CSE\" , \"_enableSearch\" : true }, \"markdownEngineName\" : \"markdig\" , \"dest\" : \"_site\" , \"xrefService\" : [ \"https://xref.learn.microsoft.com/query?uid={uid}\" ] } }","title":"2. Configure o DocFx"},{"location":"documentation/recipes/using-docfx-and-tools/#3-configure-alguns-documentos-basicos","text":"Sugerimos come\u00e7ar com uma estrutura b\u00e1sica de documenta\u00e7\u00e3o na pasta /docs . Na pasta QuickStart fornecida, temos uma configura\u00e7\u00e3o b\u00e1sica: \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 .attachments // Todas as imagens e outros anexos usados pelos documentos \u2502 \u2502 \u251c\u2500\u2500 architecture-decisions \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 decision-log.md // Exemplo de \u00edndice para todas as ADRs \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino das decis\u00f5es de arquitetura \u2502 \u2502 \u251c\u2500\u2500 getting-started \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 README.md // Este documento de exemplo. Substitua o conte\u00fado por algo significativo para o projeto. \u2502 \u2502 \u251c\u2500\u2500 guidelines \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 docs-guidelines.md // Diretrizes gerais de documenta\u00e7\u00e3o \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino das diretrizes \u2502 \u2502 \u251c\u2500\u2500 templates // todos os modelos, como o modelo ADR e outros \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino dos modelos \u2502 \u2502 \u251c\u2500\u2500 working-agreements \u2502 \u2514\u2500\u2500 .order \u2502 \u2514\u2500\u2500 README.md // P\u00e1gina de destino dos acordos de trabalho \u2502 \u2502 \u251c\u2500\u2500 .order // Fornecer uma ordem fixa de arquivos e diret\u00f3rios \u2502 \u251c\u2500\u2500 index.md // P\u00e1gina inicial do site de documenta\u00e7\u00e3o Voc\u00ea pode usar modelos como acordos de trabalho e outros do [ISE Playbook](https://github.com/microsoft /code-with-engineering-playbook/). Para ter uma p\u00e1gina de destino adequada para o seu site de documenta\u00e7\u00e3o, voc\u00ea pode usar um arquivo Markdown chamado INDEX.MD na raiz do seu reposit\u00f3rio. O conte\u00fado pode ser algo assim: # Documenta\u00e7\u00e3o CSE Esta \u00e9 a p\u00e1gina de destino do site de Documenta\u00e7\u00e3o CSE. Esta \u00e9 a p\u00e1gina para introduzir tudo no site. Voc\u00ea pode adicionar links espec\u00edficos que s\u00e3o importantes para fornecer acesso direto. > Tente n\u00e3o duplicar os links no topo da p\u00e1gina, a menos que realmente fa\u00e7a sentido. Para come\u00e7ar com a configura\u00e7\u00e3o deste site, leia o documento de in\u00edcio r\u00e1pido com o t\u00edtulo [ Usando o DocFx e Ferramentas Complementares ]( using-docfx-and-tools.md ).","title":"3. Configure alguns documentos b\u00e1sicos"},{"location":"documentation/recipes/using-docfx-and-tools/#4-compile-as-ferramentas-complementares-e-execute-as","text":"NOTA: Para explicar cada etapa, passaremos pelas v\u00e1rias etapas nos pr\u00f3ximos par\u00e1grafos. Na pasta QuickStart, um arquivo em lote chamado GenerateDocWebsite.cmd est\u00e1 inclu\u00eddo. Este script executar\u00e1 todas as etapas necess\u00e1rias para compilar as ferramentas, executar as verifica\u00e7\u00f5es, gerar a tabela de conte\u00fados e executar o DocFx para gerar o site. Para verificar a formata\u00e7\u00e3o adequada do Markdown, usamos a ferramenta markdownlint-cli . O comando obt\u00e9m sua configura\u00e7\u00e3o do arquivo .markdownlint.json na raiz do projeto. Para verificar todos os arquivos Markdown, basta executar este comando: markdownlint **/*.md Na pasta QuickStart, voc\u00ea dever\u00e1 ter copiado as duas ferramentas complementares TocDocFxCreation e DocLinkChecker , conforme descrito na introdu\u00e7\u00e3o deste artigo. Voc\u00ea pode compilar as ferramentas a partir do Visual Studio, mas tamb\u00e9m pode executar dotnet build em ambas as pastas de ferramentas. A ferramenta DocLinkChecker \u00e9 usada para validar o que est\u00e1 na pasta de documentos. Ele valida os links entre documentos e anexos na pasta de documentos e verifica se n\u00e3o h\u00e1 anexos \u00f3rf\u00e3os. Um exemplo de execu\u00e7\u00e3o dessa ferramenta, incluindo a verifica\u00e7\u00e3o de anexos: DocLinkChecker.exe -d ./docs -a A ferramenta TocDocFxCreation \u00e9 necess\u00e1ria para gerar uma tabela de conte\u00fados para a sua documenta\u00e7\u00e3o, para que os usu\u00e1rios possam navegar entre pastas e documentos. Se voc\u00ea compilou a ferramenta, use este comando para gerar um arquivo de tabela de conte\u00fados toc.yml . Para gerar uma tabela de conte\u00fados com o uso dos arquivos .order para determinar a sequ\u00eancia dos artigos e para gerar automaticamente documentos index.md se n\u00e3o houver documento padr\u00e3o dispon\u00edvel em uma pasta, voc\u00ea pode usar este comando: TocDocFxCreation.exe -d ./docs -sri","title":"4. Compile as ferramentas complementares e execute-as"},{"location":"documentation/recipes/using-docfx-and-tools/#5-execute-o-docfx-para-gerar-o-site","text":"Execute o comando docfx para gerar o site, por padr\u00e3o na pasta _site . DICA: Se voc\u00ea deseja verificar o site em seu ambiente local, forne\u00e7a a op\u00e7\u00e3o --serve para o comando docfx ou o script GenerateDocWebsite . Um pequeno servidor web \u00e9 lan\u00e7ado que hospeda o seu site, que \u00e9 acess\u00edvel em localhost.","title":"5. Execute o DocFx para gerar o site"},{"location":"documentation/recipes/using-docfx-and-tools/#estilo-do-site","text":"Se voc\u00ea come\u00e7ou com a pasta QuickStart, o site \u00e9 gerado usando um tema personalizado com design material e o logotipo da Microsoft. Voc\u00ea pode alterar isso de acordo com suas prefer\u00eancias. Para obter mais informa\u00e7\u00f5es, consulte Como criar um modelo personalizado | Site do DocFX (dotnet.github.io) .","title":"Estilo do site"},{"location":"documentation/recipes/using-docfx-and-tools/#implante-em-um-site-azure","text":"Ap\u00f3s concluir as etapas, voc\u00ea deve ter um site padr\u00e3o gerado na pasta _site . No entanto, \u00e9 claro que voc\u00ea deseja que isso seja acess\u00edvel para todos. Portanto, o pr\u00f3ximo passo \u00e9 criar, por exemplo, um Site Azure e ter um processo para gerar e implantar automaticamente o conte\u00fado nesse site. Esse processo \u00e9 descrito na receita Implantar o site de Documenta\u00e7\u00e3o DocFx em um Site Azure automaticamente .","title":"Implante em um Site Azure"},{"location":"documentation/recipes/using-docfx-and-tools/#referencias","text":"DocFX - gerador de documenta\u00e7\u00e3o est\u00e1tica Implantar o site de Documenta\u00e7\u00e3o DocFx em um Site Azure automaticamente Fornecer documenta\u00e7\u00e3o de qualidade em seu projeto com DocFx e Ferramentas Complementares Monorepo para Iniciantes","title":"Refer\u00eancias"},{"location":"documentation/tools/automation/","text":"Como Automatizar Verifica\u00e7\u00f5es Simples Se voc\u00ea deseja automatizar algumas verifica\u00e7\u00f5es em seus documentos Markdown, existem v\u00e1rias ferramentas que voc\u00ea pode utilizar. Por exemplo: An\u00e1lise de C\u00f3digo / Linting markdownlint para verificar a sintaxe do Markdown e aplicar regras que tornem o texto mais leg\u00edvel. markdown-link-check para extrair links de textos em Markdown e verificar se cada link est\u00e1 funcionando (200 OK) ou morto. proselint para verificar jarg\u00e3o, erros de ortografia, redund\u00e2ncia, linguagem corporativa e outras quest\u00f5es relacionadas \u00e0 linguagem. write-good para verificar a prosa em ingl\u00eas. Imagem Docker para node-markdown-spellcheck , uma imagem Docker leve para verificar a ortografia de arquivos Markdown. An\u00e1lise de c\u00f3digo est\u00e1tico Extens\u00f5es do VS Code Write Good Linter para obter conselhos gramaticais e de linguagem enquanto edita um documento. markdownlint para examinar documentos Markdown e obter avisos sobre viola\u00e7\u00f5es de regras durante a edi\u00e7\u00e3o. Automa\u00e7\u00e3o pre-commit para usar scripts de hook do Git para identificar problemas simples antes de enviar nosso c\u00f3digo ou documenta\u00e7\u00e3o para revis\u00e3o. Verifique Valida\u00e7\u00e3o de Build para automatizar a verifica\u00e7\u00e3o de PRs. Verifique Pipeline de CI para melhor documenta\u00e7\u00e3o para um exemplo de pipeline com markdownlint , markdown-link-check e write-good . Exemplo de sa\u00edda: Sobre as regras de linting A equipe precisa estar clara sobre quais regras de linting s\u00e3o necess\u00e1rias e n\u00e3o devem ser substitu\u00eddas por ferramentas ou coment\u00e1rios. A equipe deve chegar a um consenso sobre quando substituir as regras das ferramentas.","title":"Como Automatizar Verifica\u00e7\u00f5es Simples"},{"location":"documentation/tools/automation/#como-automatizar-verificacoes-simples","text":"Se voc\u00ea deseja automatizar algumas verifica\u00e7\u00f5es em seus documentos Markdown, existem v\u00e1rias ferramentas que voc\u00ea pode utilizar. Por exemplo: An\u00e1lise de C\u00f3digo / Linting markdownlint para verificar a sintaxe do Markdown e aplicar regras que tornem o texto mais leg\u00edvel. markdown-link-check para extrair links de textos em Markdown e verificar se cada link est\u00e1 funcionando (200 OK) ou morto. proselint para verificar jarg\u00e3o, erros de ortografia, redund\u00e2ncia, linguagem corporativa e outras quest\u00f5es relacionadas \u00e0 linguagem. write-good para verificar a prosa em ingl\u00eas. Imagem Docker para node-markdown-spellcheck , uma imagem Docker leve para verificar a ortografia de arquivos Markdown. An\u00e1lise de c\u00f3digo est\u00e1tico Extens\u00f5es do VS Code Write Good Linter para obter conselhos gramaticais e de linguagem enquanto edita um documento. markdownlint para examinar documentos Markdown e obter avisos sobre viola\u00e7\u00f5es de regras durante a edi\u00e7\u00e3o. Automa\u00e7\u00e3o pre-commit para usar scripts de hook do Git para identificar problemas simples antes de enviar nosso c\u00f3digo ou documenta\u00e7\u00e3o para revis\u00e3o. Verifique Valida\u00e7\u00e3o de Build para automatizar a verifica\u00e7\u00e3o de PRs. Verifique Pipeline de CI para melhor documenta\u00e7\u00e3o para um exemplo de pipeline com markdownlint , markdown-link-check e write-good . Exemplo de sa\u00edda:","title":"Como Automatizar Verifica\u00e7\u00f5es Simples"},{"location":"documentation/tools/automation/#sobre-as-regras-de-linting","text":"A equipe precisa estar clara sobre quais regras de linting s\u00e3o necess\u00e1rias e n\u00e3o devem ser substitu\u00eddas por ferramentas ou coment\u00e1rios. A equipe deve chegar a um consenso sobre quando substituir as regras das ferramentas.","title":"Sobre as regras de linting"},{"location":"documentation/tools/integrations/","text":"Integra\u00e7\u00e3o com Teams/Slack Monitore seus reposit\u00f3rios do Azure e receba notifica\u00e7\u00f5es em seu canal sempre que c\u00f3digo for enviado/verificado e sempre que uma solicita\u00e7\u00e3o de pull request (PR) for criada, atualizada ou uma mesclagem for tentada. Reposit\u00f3rios do Azure com o Microsoft Teams Reposit\u00f3rios do Azure com o Slack","title":"Integra\u00e7\u00e3o com Teams/Slack"},{"location":"documentation/tools/integrations/#integracao-com-teamsslack","text":"Monitore seus reposit\u00f3rios do Azure e receba notifica\u00e7\u00f5es em seu canal sempre que c\u00f3digo for enviado/verificado e sempre que uma solicita\u00e7\u00e3o de pull request (PR) for criada, atualizada ou uma mesclagem for tentada. Reposit\u00f3rios do Azure com o Microsoft Teams Reposit\u00f3rios do Azure com o Slack","title":"Integra\u00e7\u00e3o com Teams/Slack"},{"location":"documentation/tools/languages/","text":"Linguagens Markdown Markdown \u00e9 uma das linguagens de marca\u00e7\u00e3o mais populares para adicionar formata\u00e7\u00e3o rica, tabelas e imagens \u00e0 sua documenta\u00e7\u00e3o usando documentos de texto simples. Arquivos Markdown (.md) podem ser controlados por origem juntamente com seu c\u00f3digo. Mais informa\u00e7\u00f5es: Come\u00e7ando Folha de Trapa\u00e7a Sintaxe B\u00e1sica Sintaxe Estendida Sintaxe do Markdown da Wiki Ferramentas: Markdown e Visual Studio Code Como automatizar verifica\u00e7\u00f5es simples Mermaid Mermaid permite que voc\u00ea crie diagramas usando defini\u00e7\u00f5es de texto que podem ser renderizadas posteriormente com uma ferramenta de diagrama\u00e7\u00e3o e gr\u00e1ficos. Arquivos Mermaid (.mmd) podem ser controlados por origem juntamente com seu c\u00f3digo. Tamb\u00e9m \u00e9 recomend\u00e1vel incluir arquivos de imagem (.png) com os diagramas renderizados sob controle de origem. Seus arquivos Markdown devem vincular os arquivos de imagem, para que possam ser lidos sem a necessidade de uma ferramenta de renderiza\u00e7\u00e3o do Mermaid (por exemplo, durante a revis\u00e3o de solicita\u00e7\u00e3o de pull request). Exemplo de diagrama Mermaid Este \u00e9 um exemplo de um diagrama de fluxo Mermaid escrito como c\u00f3digo. graph LR A[Ideia do Diagrama] -->|Escrever c\u00f3digo mermaid| B(arquivo mermaid.mmd) B -->|Adicionar ao controle de origem| C{Reposit\u00f3rio de C\u00f3digo} B -->|Exportar como .png| G(arquivo .png do diagrama) G -->|Adicionar ao controle de origem| C Este \u00e9 um exemplo de como ele pode ser renderizado como uma imagem. Mais informa\u00e7\u00f5es: Sobre o Mermaid Sintaxe do Diagrama Ferramentas: Editor Mermaid Live Suporte ao Mermaid para Visual Studio Code na Visualiza\u00e7\u00e3o de Markdown","title":"Linguagens"},{"location":"documentation/tools/languages/#linguagens","text":"","title":"Linguagens"},{"location":"documentation/tools/languages/#markdown","text":"Markdown \u00e9 uma das linguagens de marca\u00e7\u00e3o mais populares para adicionar formata\u00e7\u00e3o rica, tabelas e imagens \u00e0 sua documenta\u00e7\u00e3o usando documentos de texto simples. Arquivos Markdown (.md) podem ser controlados por origem juntamente com seu c\u00f3digo. Mais informa\u00e7\u00f5es: Come\u00e7ando Folha de Trapa\u00e7a Sintaxe B\u00e1sica Sintaxe Estendida Sintaxe do Markdown da Wiki Ferramentas: Markdown e Visual Studio Code Como automatizar verifica\u00e7\u00f5es simples","title":"Markdown"},{"location":"documentation/tools/languages/#mermaid","text":"Mermaid permite que voc\u00ea crie diagramas usando defini\u00e7\u00f5es de texto que podem ser renderizadas posteriormente com uma ferramenta de diagrama\u00e7\u00e3o e gr\u00e1ficos. Arquivos Mermaid (.mmd) podem ser controlados por origem juntamente com seu c\u00f3digo. Tamb\u00e9m \u00e9 recomend\u00e1vel incluir arquivos de imagem (.png) com os diagramas renderizados sob controle de origem. Seus arquivos Markdown devem vincular os arquivos de imagem, para que possam ser lidos sem a necessidade de uma ferramenta de renderiza\u00e7\u00e3o do Mermaid (por exemplo, durante a revis\u00e3o de solicita\u00e7\u00e3o de pull request).","title":"Mermaid"},{"location":"documentation/tools/languages/#exemplo-de-diagrama-mermaid","text":"Este \u00e9 um exemplo de um diagrama de fluxo Mermaid escrito como c\u00f3digo. graph LR A[Ideia do Diagrama] -->|Escrever c\u00f3digo mermaid| B(arquivo mermaid.mmd) B -->|Adicionar ao controle de origem| C{Reposit\u00f3rio de C\u00f3digo} B -->|Exportar como .png| G(arquivo .png do diagrama) G -->|Adicionar ao controle de origem| C Este \u00e9 um exemplo de como ele pode ser renderizado como uma imagem. Mais informa\u00e7\u00f5es: Sobre o Mermaid Sintaxe do Diagrama Ferramentas: Editor Mermaid Live Suporte ao Mermaid para Visual Studio Code na Visualiza\u00e7\u00e3o de Markdown","title":"Exemplo de diagrama Mermaid"},{"location":"documentation/tools/wikis/","text":"Wikis Use um wiki de projeto em equipe para compartilhar informa\u00e7\u00f5es com outros membros da equipe. Quando voc\u00ea provisiona um wiki do zero, um novo reposit\u00f3rio Git armazena seus arquivos Markdown , imagens, anexos e sequ\u00eancia de p\u00e1ginas. Este wiki suporta a edi\u00e7\u00e3o colaborativa de seu conte\u00fado e estrutura. No Azure DevOps, voc\u00ea tem as seguintes op\u00e7\u00f5es para manter o conte\u00fado do wiki : Provisionar um wiki para o projeto da sua equipe. Essa op\u00e7\u00e3o suporta apenas um wiki para o projeto da equipe. Publicar arquivos Markdown definidos em um reposit\u00f3rio Git em um wiki. Com essa op\u00e7\u00e3o, voc\u00ea pode manter v\u00e1rios wikis versionados para atender \u00e0s suas necessidades de conte\u00fado. Mais informa\u00e7\u00f5es: Sobre Wikis, READMEs e Markdown . Wikis provisionados vs. c\u00f3digo publicado como um wiki . Crie um Wiki para seu projeto . Gerencie wikis . Wikis vs. cadernos digitais (por exemplo, OneNote) Quando voc\u00ea trabalha em um projeto, pode decidir documentar detalhes relevantes ou registrar decis\u00f5es importantes sobre o projeto em um caderno digital. Ferramentas como o OneNote permitem que voc\u00ea organize, navegue e pesquise facilmente suas anota\u00e7\u00f5es. Voc\u00ea pode fornecer tipo, realce ou anota\u00e7\u00f5es de tinta \u00e0s suas anota\u00e7\u00f5es. Essas notas podem ser facilmente compartilhadas e criadas em conjunto com outras pessoas. Ainda assim, os Wikis facilitam muito o processo de estabelecer e gerenciar documenta\u00e7\u00e3o ao permitir que n\u00f3s controlemos a origem da documenta\u00e7\u00e3o.","title":"Wikis"},{"location":"documentation/tools/wikis/#wikis","text":"Use um wiki de projeto em equipe para compartilhar informa\u00e7\u00f5es com outros membros da equipe. Quando voc\u00ea provisiona um wiki do zero, um novo reposit\u00f3rio Git armazena seus arquivos Markdown , imagens, anexos e sequ\u00eancia de p\u00e1ginas. Este wiki suporta a edi\u00e7\u00e3o colaborativa de seu conte\u00fado e estrutura. No Azure DevOps, voc\u00ea tem as seguintes op\u00e7\u00f5es para manter o conte\u00fado do wiki : Provisionar um wiki para o projeto da sua equipe. Essa op\u00e7\u00e3o suporta apenas um wiki para o projeto da equipe. Publicar arquivos Markdown definidos em um reposit\u00f3rio Git em um wiki. Com essa op\u00e7\u00e3o, voc\u00ea pode manter v\u00e1rios wikis versionados para atender \u00e0s suas necessidades de conte\u00fado. Mais informa\u00e7\u00f5es: Sobre Wikis, READMEs e Markdown . Wikis provisionados vs. c\u00f3digo publicado como um wiki . Crie um Wiki para seu projeto . Gerencie wikis .","title":"Wikis"},{"location":"documentation/tools/wikis/#wikis-vs-cadernos-digitais-por-exemplo-onenote","text":"Quando voc\u00ea trabalha em um projeto, pode decidir documentar detalhes relevantes ou registrar decis\u00f5es importantes sobre o projeto em um caderno digital. Ferramentas como o OneNote permitem que voc\u00ea organize, navegue e pesquise facilmente suas anota\u00e7\u00f5es. Voc\u00ea pode fornecer tipo, realce ou anota\u00e7\u00f5es de tinta \u00e0s suas anota\u00e7\u00f5es. Essas notas podem ser facilmente compartilhadas e criadas em conjunto com outras pessoas. Ainda assim, os Wikis facilitam muito o processo de estabelecer e gerenciar documenta\u00e7\u00e3o ao permitir que n\u00f3s controlemos a origem da documenta\u00e7\u00e3o.","title":"Wikis vs. cadernos digitais (por exemplo, OneNote)"},{"location":"engineering-feedback/","text":"Feedback de Engenharia da Microsoft Por que \u00e9 importante enviar Feedback de Engenharia da Microsoft O Feedback de Engenharia captura a \"voz do cliente\" e \u00e9 um mecanismo importante para fornecer insights acion\u00e1veis e ajudar os grupos de produtos da Microsoft a melhorar continuamente a plataforma e os servi\u00e7os em nuvem para permitir que todos os clientes sejam o mais produtivos poss\u00edvel. Observe que o Feedback de Engenharia \u00e9 um m\u00e9todo ass\u00edncrono (ou seja, n\u00e3o em tempo real) para capturar e agregar pontos de atrito entre v\u00e1rios clientes e intera\u00e7\u00f5es com c\u00f3digo. Portanto, se voc\u00ea precisa relatar uma interrup\u00e7\u00e3o no servi\u00e7o ou um bug que esteja bloqueando imediatamente, voc\u00ea deve abrir um ticket de suporte oficial da Azure e, se poss\u00edvel, fazer refer\u00eancia ao ID do ticket no feedback que voc\u00ea enviar posteriormente. Mesmo que o feedback j\u00e1 tenha sido apresentado diretamente a um grupo de produtos ou por meio de canais online como GitHub ou Stack Overflow, ainda \u00e9 importante apresent\u00e1-lo via Feedback de Engenharia da Microsoft, para que possa ser consolidado com outros projetos de clientes que tenham o mesmo feedback, a fim de auxiliar na prioriza\u00e7\u00e3o. Quando enviar Feedback de Engenharia Capturar e fornecer Feedback de Engenharia acion\u00e1vel de alta qualidade \u00e9 uma parte cont\u00ednua e integral de todas as intera\u00e7\u00f5es com c\u00f3digo. Recomenda-se enviar feedback de forma cont\u00ednua, em vez de agrup\u00e1-lo para envio no final da intera\u00e7\u00e3o. Voc\u00ea deve anotar os detalhes do feedback perto do momento em que encontrar os bloqueios, desafios e atritos espec\u00edficos, pois \u00e9 quando eles est\u00e3o mais frescos em sua mente. A equipe do projeto pode ent\u00e3o decidir como priorizar e quando enviar o feedback para o sistema oficial de Feedback da CSE (acess\u00edvel aos membros da equipe ISE) durante cada sprint. O que \u00e9 Feedback de Engenharia bom e de alta qualidade Um feedback de engenharia bom fornece informa\u00e7\u00f5es suficientes para aqueles que n\u00e3o fazem parte da intera\u00e7\u00e3o com c\u00f3digo entenderem a dor do cliente, os problemas do produto associados, o impacto e a prioridade desses problemas, e quaisquer solu\u00e7\u00f5es alternativas potenciais para minimizar esse impacto. Feedback de Engenharia de Alta Qualidade \u00e9 Orientado para Objetivos - indica o que o cliente est\u00e1 tentando realizar Espec\u00edfico - detalha o cen\u00e1rio, observa\u00e7\u00e3o ou desafio enfrentado pelo cliente Acion\u00e1vel - inclui as informa\u00e7\u00f5es necess\u00e1rias para permitir uma decis\u00e3o Exemplos de Feedback de Engenharia Bom Por exemplo, aqui est\u00e1 uma evolu\u00e7\u00e3o transformando um feedback fict\u00edcio com as orienta\u00e7\u00f5es de feedback de engenharia de alta qualidade mencionadas acima: Est\u00e1gio Evolu\u00e7\u00e3o do Feedback Feedback inicial Azure Functions Service Bus Trigger \u00e9 lento para cen\u00e1rios em ordem Tornando-o Orientado para Objetivos O cliente solicita o recebimento em lote para o desencadeador de Azure Functions Service Bus com sess\u00f5es habilitadas para melhor suportar mensagens de maior throughput. Eles desejam usar o Azure Functions para processar o m\u00e1ximo de mensagens por segundo poss\u00edvel com lat\u00eancia m\u00ednima e em uma ordem espec\u00edfica. Adicionando Detalhes Espec\u00edficos O cen\u00e1rio do cliente era receber um total de 250 mensagens/segundo de 50 produtores com requisitos de ordena\u00e7\u00e3o por produtor e lat\u00eancia m\u00ednima, usando um t\u00f3pico Service Bus com sess\u00f5es habilitadas para ordena\u00e7\u00e3o. O recebimento em lote n\u00e3o \u00e9 suportado no Azure Functions Service Bus Trigger. Tornando-o Acion\u00e1vel O cen\u00e1rio do cliente era receber um total de 250 mensagens/segundo de 50 produtores com requisitos de ordena\u00e7\u00e3o por produtor e lat\u00eancia m\u00ednima, usando um t\u00f3pico Service Bus com sess\u00f5es habilitadas para ordena\u00e7\u00e3o. De acordo com a documenta\u00e7\u00e3o da Microsoft , o recebimento em lote \u00e9 recomendado para melhor desempenho, mas atualmente n\u00e3o \u00e9 suportado no Azure Functions Service Bus Trigger. O impacto e a solu\u00e7\u00e3o alternativa foram escolher cont\u00eaineres em vez de Fun\u00e7\u00f5es. O resultado desejado \u00e9 que o Azure Functions suporte sess\u00f5es do Service Bus com processamento em lote e n\u00e3o em lote para todas as linguagens GA do Azure Functions. Para exemplos do mundo real, siga Exemplos de Feedback . Como enviar Feedback de Engenharia Siga o Guia de Feedback de Engenharia para garantir que voc\u00ea forne\u00e7a feedback que possa ser triado e processado de forma mais eficiente. Revise a p\u00e1gina de Perguntas Frequentes para obter informa\u00e7\u00f5es adicionais sobre o processo de feedback de engenharia.","title":"Feedback de Engenharia da Microsoft"},{"location":"engineering-feedback/#feedback-de-engenharia-da-microsoft","text":"","title":"Feedback de Engenharia da Microsoft"},{"location":"engineering-feedback/#por-que-e-importante-enviar-feedback-de-engenharia-da-microsoft","text":"O Feedback de Engenharia captura a \"voz do cliente\" e \u00e9 um mecanismo importante para fornecer insights acion\u00e1veis e ajudar os grupos de produtos da Microsoft a melhorar continuamente a plataforma e os servi\u00e7os em nuvem para permitir que todos os clientes sejam o mais produtivos poss\u00edvel. Observe que o Feedback de Engenharia \u00e9 um m\u00e9todo ass\u00edncrono (ou seja, n\u00e3o em tempo real) para capturar e agregar pontos de atrito entre v\u00e1rios clientes e intera\u00e7\u00f5es com c\u00f3digo. Portanto, se voc\u00ea precisa relatar uma interrup\u00e7\u00e3o no servi\u00e7o ou um bug que esteja bloqueando imediatamente, voc\u00ea deve abrir um ticket de suporte oficial da Azure e, se poss\u00edvel, fazer refer\u00eancia ao ID do ticket no feedback que voc\u00ea enviar posteriormente. Mesmo que o feedback j\u00e1 tenha sido apresentado diretamente a um grupo de produtos ou por meio de canais online como GitHub ou Stack Overflow, ainda \u00e9 importante apresent\u00e1-lo via Feedback de Engenharia da Microsoft, para que possa ser consolidado com outros projetos de clientes que tenham o mesmo feedback, a fim de auxiliar na prioriza\u00e7\u00e3o.","title":"Por que \u00e9 importante enviar Feedback de Engenharia da Microsoft"},{"location":"engineering-feedback/#quando-enviar-feedback-de-engenharia","text":"Capturar e fornecer Feedback de Engenharia acion\u00e1vel de alta qualidade \u00e9 uma parte cont\u00ednua e integral de todas as intera\u00e7\u00f5es com c\u00f3digo. Recomenda-se enviar feedback de forma cont\u00ednua, em vez de agrup\u00e1-lo para envio no final da intera\u00e7\u00e3o. Voc\u00ea deve anotar os detalhes do feedback perto do momento em que encontrar os bloqueios, desafios e atritos espec\u00edficos, pois \u00e9 quando eles est\u00e3o mais frescos em sua mente. A equipe do projeto pode ent\u00e3o decidir como priorizar e quando enviar o feedback para o sistema oficial de Feedback da CSE (acess\u00edvel aos membros da equipe ISE) durante cada sprint.","title":"Quando enviar Feedback de Engenharia"},{"location":"engineering-feedback/#o-que-e-feedback-de-engenharia-bom-e-de-alta-qualidade","text":"Um feedback de engenharia bom fornece informa\u00e7\u00f5es suficientes para aqueles que n\u00e3o fazem parte da intera\u00e7\u00e3o com c\u00f3digo entenderem a dor do cliente, os problemas do produto associados, o impacto e a prioridade desses problemas, e quaisquer solu\u00e7\u00f5es alternativas potenciais para minimizar esse impacto.","title":"O que \u00e9 Feedback de Engenharia bom e de alta qualidade"},{"location":"engineering-feedback/#feedback-de-engenharia-de-alta-qualidade-e","text":"Orientado para Objetivos - indica o que o cliente est\u00e1 tentando realizar Espec\u00edfico - detalha o cen\u00e1rio, observa\u00e7\u00e3o ou desafio enfrentado pelo cliente Acion\u00e1vel - inclui as informa\u00e7\u00f5es necess\u00e1rias para permitir uma decis\u00e3o","title":"Feedback de Engenharia de Alta Qualidade \u00e9"},{"location":"engineering-feedback/#exemplos-de-feedback-de-engenharia-bom","text":"Por exemplo, aqui est\u00e1 uma evolu\u00e7\u00e3o transformando um feedback fict\u00edcio com as orienta\u00e7\u00f5es de feedback de engenharia de alta qualidade mencionadas acima: Est\u00e1gio Evolu\u00e7\u00e3o do Feedback Feedback inicial Azure Functions Service Bus Trigger \u00e9 lento para cen\u00e1rios em ordem Tornando-o Orientado para Objetivos O cliente solicita o recebimento em lote para o desencadeador de Azure Functions Service Bus com sess\u00f5es habilitadas para melhor suportar mensagens de maior throughput. Eles desejam usar o Azure Functions para processar o m\u00e1ximo de mensagens por segundo poss\u00edvel com lat\u00eancia m\u00ednima e em uma ordem espec\u00edfica. Adicionando Detalhes Espec\u00edficos O cen\u00e1rio do cliente era receber um total de 250 mensagens/segundo de 50 produtores com requisitos de ordena\u00e7\u00e3o por produtor e lat\u00eancia m\u00ednima, usando um t\u00f3pico Service Bus com sess\u00f5es habilitadas para ordena\u00e7\u00e3o. O recebimento em lote n\u00e3o \u00e9 suportado no Azure Functions Service Bus Trigger. Tornando-o Acion\u00e1vel O cen\u00e1rio do cliente era receber um total de 250 mensagens/segundo de 50 produtores com requisitos de ordena\u00e7\u00e3o por produtor e lat\u00eancia m\u00ednima, usando um t\u00f3pico Service Bus com sess\u00f5es habilitadas para ordena\u00e7\u00e3o. De acordo com a documenta\u00e7\u00e3o da Microsoft , o recebimento em lote \u00e9 recomendado para melhor desempenho, mas atualmente n\u00e3o \u00e9 suportado no Azure Functions Service Bus Trigger. O impacto e a solu\u00e7\u00e3o alternativa foram escolher cont\u00eaineres em vez de Fun\u00e7\u00f5es. O resultado desejado \u00e9 que o Azure Functions suporte sess\u00f5es do Service Bus com processamento em lote e n\u00e3o em lote para todas as linguagens GA do Azure Functions. Para exemplos do mundo real, siga Exemplos de Feedback .","title":"Exemplos de Feedback de Engenharia Bom"},{"location":"engineering-feedback/#como-enviar-feedback-de-engenharia","text":"Siga o Guia de Feedback de Engenharia para garantir que voc\u00ea forne\u00e7a feedback que possa ser triado e processado de forma mais eficiente. Revise a p\u00e1gina de Perguntas Frequentes para obter informa\u00e7\u00f5es adicionais sobre o processo de feedback de engenharia.","title":"Como enviar Feedback de Engenharia"},{"location":"engineering-feedback/feedback-examples/","text":"Exemplos de Feedback de Engenharia A seguir, apresento exemplos do mundo real de Feedback de Engenharia que resultaram em melhorias nos produtos e na remo\u00e7\u00e3o de bloqueios para os clientes. Suporte a Cont\u00eaineres do Windows Server no Azure Kubernetes Service O Azure Kubernetes Service deve ter suporte de primeira classe para cont\u00eaineres do Windows para que solu\u00e7\u00f5es que requerem cargas de trabalho do Windows possam ser implantadas em uma plataforma de orquestra\u00e7\u00e3o de cont\u00eaineres amplamente popular. A necessidade era ser capaz de implantar cont\u00eaineres do Windows Server no AKS, o Servi\u00e7o Gerenciado de Kubernetes da Azure. De acordo com esta FAQ (e confirma\u00e7\u00e3o paralela), isso ainda n\u00e3o est\u00e1 dispon\u00edvel. Tentamos implantar mesmo assim como teste, e n\u00e3o funcionou - a implanta\u00e7\u00e3o ficava pendente sem sucesso. Mais de uma d\u00fazia de grandes parceiros/clientes est\u00e3o impedidos de implantar cargas de trabalho do Windows no AKS devido \u00e0 falta de suporte para cont\u00eaineres do Windows Server. Eles precisam desse recurso para que solu\u00e7\u00f5es que requerem cargas de trabalho do Windows possam ser implantadas nesta popular plataforma de orquestra\u00e7\u00e3o de cont\u00eaineres. Estamos vendo o surgimento de empresas come\u00e7ando a experimentar cont\u00eaineres do Windows como uma op\u00e7\u00e3o para mover suas cargas de trabalho do Windows para a nuvem. A Gartner afirma que 80% das aplica\u00e7\u00f5es empresariais rodam no Windows. Cont\u00eaineres se tornaram o mecanismo de implanta\u00e7\u00e3o padr\u00e3o na ind\u00fastria, e consist\u00eancia e velocidade de implanta\u00e7\u00e3o s\u00e3o alguns dos fatores importantes que as empresas est\u00e3o buscando. Permitir aplicativos do Windows e garantir que os desenvolvedores tenham uma boa experi\u00eancia ao mover suas cargas de trabalho para o Azure por meio de cont\u00eaineres do Windows \u00e9 fundamental para manter os clientes existentes do Windows no ecossistema Azure e impulsionar a ado\u00e7\u00e3o do Azure para novas cargas de trabalho. Tamb\u00e9m estamos vendo um aumento de interesse, especialmente entre clientes empresariais, em usar um \u00fanico plano de controle de orquestra\u00e7\u00e3o para gerenciar tanto cargas de trabalho do Linux quanto do Windows. Este feedback foi criado como um feedback de alta prioridade e seguiu internamente at\u00e9 ser abordado. Aqui est\u00e1 o an\u00fancio . Suporte ao Recebimento em Lote com Sess\u00f5es no Azure Functions Service Bus Trigger O cen\u00e1rio do cliente era receber um total de 250 mensagens por segundo de 50 produtores com requisitos de ordena\u00e7\u00e3o e lat\u00eancia m\u00ednima, usando um t\u00f3pico Service Bus com sess\u00f5es habilitadas para ordena\u00e7\u00e3o. De acordo com a documenta\u00e7\u00e3o da Microsoft , o recebimento em lote \u00e9 recomendado para melhor desempenho, mas atualmente n\u00e3o \u00e9 suportado no Azure Functions Service Bus Trigger. O impacto (e a solu\u00e7\u00e3o alternativa) foi escolher cont\u00eaineres em vez de Fun\u00e7\u00f5es. O Crit\u00e9rio de Aceita\u00e7\u00e3o \u00e9 que o Azure Functions suporte sess\u00f5es do Service Bus com processamento em lote e n\u00e3o em lote para todas as linguagens GA do Azure Functions. Este feedback foi criado como um feedback com o grupo de produtos Azure Functions e tamb\u00e9m seguiu internamente at\u00e9 ser abordado. Stream Analytics - Sem suporte para dimensionamento para baixo sem tempo de inatividade Para atualizar o n\u00famero de Unidades de Streaming no Stream Analytics, \u00e9 necess\u00e1rio interromper o servi\u00e7o e esperar minutos para que ele reinicie. Isso \u00e9 inaceit\u00e1vel para clientes que precisam de an\u00e1lise quase em tempo real. Para reiniciar um trabalho, s\u00e3o necess\u00e1rios at\u00e9 2 minutos, o que n\u00e3o \u00e9 aceit\u00e1vel para uma solu\u00e7\u00e3o de streaming em tempo real. Tamb\u00e9m seria ideal se o dimensionamento para cima e para baixo pudesse ser feito automaticamente, definindo valores de limite que, quando alcan\u00e7ados, aumentam ou diminuem automaticamente a quantidade de UDs dispon\u00edveis. Esse feedback \u00e9 para solicitar aos clientes a capacidade de dimensionar para baixo sem tempo de inatividade no Stream Analytics. Declara\u00e7\u00e3o do Problema: Para atualizar o n\u00famero de \"Unidades de Streaming\", os parceiros devem interromper o servi\u00e7o e esperar at\u00e9 que ele reinicie. O parceiro deve ser capaz de atualizar o n\u00famero sem interromper o servi\u00e7o. Experi\u00eancia Desejada: Os parceiros devem poder atualizar o n\u00famero de Unidades de Streaming sem interromper o servi\u00e7o associado. Este feedback foi criado como um feedback de alta prioridade e seguiu at\u00e9 ser abordado em dezembro de 2019. Suporte ao Python para o Azure Functions V\u00e1rios clientes j\u00e1 usam o Python como parte de seu fluxo de trabalho e gostariam de poder usar o Python para o Azure Functions. Isso \u00e9 especialmente verdadeiro, pois muitos deles j\u00e1 t\u00eam scripts em execu\u00e7\u00e3o em outras nuvens e servi\u00e7os. Al\u00e9m disso, o suporte ao Python estava em Preview por muito tempo e est\u00e1 faltando muita funcionalidade. Essa solicita\u00e7\u00e3o de recurso \u00e9 uma das mais pedidas e tem um grande potencial para impulsionar as cargas de trabalho baseadas em Machine Learning (ML). Este feedback foi criado como um feedback com o grupo de produtos Azure Functions e tamb\u00e9m seguiu internamente at\u00e9 ser abordado. Aqui est\u00e1 o an\u00fancio .","title":"Exemplos de Feedback de Engenharia"},{"location":"engineering-feedback/feedback-examples/#exemplos-de-feedback-de-engenharia","text":"A seguir, apresento exemplos do mundo real de Feedback de Engenharia que resultaram em melhorias nos produtos e na remo\u00e7\u00e3o de bloqueios para os clientes.","title":"Exemplos de Feedback de Engenharia"},{"location":"engineering-feedback/feedback-examples/#suporte-a-conteineres-do-windows-server-no-azure-kubernetes-service","text":"O Azure Kubernetes Service deve ter suporte de primeira classe para cont\u00eaineres do Windows para que solu\u00e7\u00f5es que requerem cargas de trabalho do Windows possam ser implantadas em uma plataforma de orquestra\u00e7\u00e3o de cont\u00eaineres amplamente popular. A necessidade era ser capaz de implantar cont\u00eaineres do Windows Server no AKS, o Servi\u00e7o Gerenciado de Kubernetes da Azure. De acordo com esta FAQ (e confirma\u00e7\u00e3o paralela), isso ainda n\u00e3o est\u00e1 dispon\u00edvel. Tentamos implantar mesmo assim como teste, e n\u00e3o funcionou - a implanta\u00e7\u00e3o ficava pendente sem sucesso. Mais de uma d\u00fazia de grandes parceiros/clientes est\u00e3o impedidos de implantar cargas de trabalho do Windows no AKS devido \u00e0 falta de suporte para cont\u00eaineres do Windows Server. Eles precisam desse recurso para que solu\u00e7\u00f5es que requerem cargas de trabalho do Windows possam ser implantadas nesta popular plataforma de orquestra\u00e7\u00e3o de cont\u00eaineres. Estamos vendo o surgimento de empresas come\u00e7ando a experimentar cont\u00eaineres do Windows como uma op\u00e7\u00e3o para mover suas cargas de trabalho do Windows para a nuvem. A Gartner afirma que 80% das aplica\u00e7\u00f5es empresariais rodam no Windows. Cont\u00eaineres se tornaram o mecanismo de implanta\u00e7\u00e3o padr\u00e3o na ind\u00fastria, e consist\u00eancia e velocidade de implanta\u00e7\u00e3o s\u00e3o alguns dos fatores importantes que as empresas est\u00e3o buscando. Permitir aplicativos do Windows e garantir que os desenvolvedores tenham uma boa experi\u00eancia ao mover suas cargas de trabalho para o Azure por meio de cont\u00eaineres do Windows \u00e9 fundamental para manter os clientes existentes do Windows no ecossistema Azure e impulsionar a ado\u00e7\u00e3o do Azure para novas cargas de trabalho. Tamb\u00e9m estamos vendo um aumento de interesse, especialmente entre clientes empresariais, em usar um \u00fanico plano de controle de orquestra\u00e7\u00e3o para gerenciar tanto cargas de trabalho do Linux quanto do Windows. Este feedback foi criado como um feedback de alta prioridade e seguiu internamente at\u00e9 ser abordado. Aqui est\u00e1 o an\u00fancio .","title":"Suporte a Cont\u00eaineres do Windows Server no Azure Kubernetes Service"},{"location":"engineering-feedback/feedback-examples/#suporte-ao-recebimento-em-lote-com-sessoes-no-azure-functions-service-bus-trigger","text":"O cen\u00e1rio do cliente era receber um total de 250 mensagens por segundo de 50 produtores com requisitos de ordena\u00e7\u00e3o e lat\u00eancia m\u00ednima, usando um t\u00f3pico Service Bus com sess\u00f5es habilitadas para ordena\u00e7\u00e3o. De acordo com a documenta\u00e7\u00e3o da Microsoft , o recebimento em lote \u00e9 recomendado para melhor desempenho, mas atualmente n\u00e3o \u00e9 suportado no Azure Functions Service Bus Trigger. O impacto (e a solu\u00e7\u00e3o alternativa) foi escolher cont\u00eaineres em vez de Fun\u00e7\u00f5es. O Crit\u00e9rio de Aceita\u00e7\u00e3o \u00e9 que o Azure Functions suporte sess\u00f5es do Service Bus com processamento em lote e n\u00e3o em lote para todas as linguagens GA do Azure Functions. Este feedback foi criado como um feedback com o grupo de produtos Azure Functions e tamb\u00e9m seguiu internamente at\u00e9 ser abordado.","title":"Suporte ao Recebimento em Lote com Sess\u00f5es no Azure Functions Service Bus Trigger"},{"location":"engineering-feedback/feedback-examples/#stream-analytics-sem-suporte-para-dimensionamento-para-baixo-sem-tempo-de-inatividade","text":"Para atualizar o n\u00famero de Unidades de Streaming no Stream Analytics, \u00e9 necess\u00e1rio interromper o servi\u00e7o e esperar minutos para que ele reinicie. Isso \u00e9 inaceit\u00e1vel para clientes que precisam de an\u00e1lise quase em tempo real. Para reiniciar um trabalho, s\u00e3o necess\u00e1rios at\u00e9 2 minutos, o que n\u00e3o \u00e9 aceit\u00e1vel para uma solu\u00e7\u00e3o de streaming em tempo real. Tamb\u00e9m seria ideal se o dimensionamento para cima e para baixo pudesse ser feito automaticamente, definindo valores de limite que, quando alcan\u00e7ados, aumentam ou diminuem automaticamente a quantidade de UDs dispon\u00edveis. Esse feedback \u00e9 para solicitar aos clientes a capacidade de dimensionar para baixo sem tempo de inatividade no Stream Analytics. Declara\u00e7\u00e3o do Problema: Para atualizar o n\u00famero de \"Unidades de Streaming\", os parceiros devem interromper o servi\u00e7o e esperar at\u00e9 que ele reinicie. O parceiro deve ser capaz de atualizar o n\u00famero sem interromper o servi\u00e7o. Experi\u00eancia Desejada: Os parceiros devem poder atualizar o n\u00famero de Unidades de Streaming sem interromper o servi\u00e7o associado. Este feedback foi criado como um feedback de alta prioridade e seguiu at\u00e9 ser abordado em dezembro de 2019.","title":"Stream Analytics - Sem suporte para dimensionamento para baixo sem tempo de inatividade"},{"location":"engineering-feedback/feedback-examples/#suporte-ao-python-para-o-azure-functions","text":"V\u00e1rios clientes j\u00e1 usam o Python como parte de seu fluxo de trabalho e gostariam de poder usar o Python para o Azure Functions. Isso \u00e9 especialmente verdadeiro, pois muitos deles j\u00e1 t\u00eam scripts em execu\u00e7\u00e3o em outras nuvens e servi\u00e7os. Al\u00e9m disso, o suporte ao Python estava em Preview por muito tempo e est\u00e1 faltando muita funcionalidade. Essa solicita\u00e7\u00e3o de recurso \u00e9 uma das mais pedidas e tem um grande potencial para impulsionar as cargas de trabalho baseadas em Machine Learning (ML). Este feedback foi criado como um feedback com o grupo de produtos Azure Functions e tamb\u00e9m seguiu internamente at\u00e9 ser abordado. Aqui est\u00e1 o an\u00fancio .","title":"Suporte ao Python para o Azure Functions"},{"location":"engineering-feedback/feedback-faq/","text":"Perguntas Frequentes sobre Feedback de Engenharia (F.A.Q.) As perguntas a seguir s\u00e3o comuns em rela\u00e7\u00e3o ao processo de feedback. As respostas destinam-se a ajudar tanto os funcion\u00e1rios da Microsoft quanto os clientes. Quando devo enviar feedback versus criar um problema no GitHub, UserVoice ou enviar um e-mail diretamente para um funcion\u00e1rio da Microsoft? \u00c9 apropriado fazer ambos. Como cliente ou funcion\u00e1rio da Microsoft, voc\u00ea tem o poder de criar um problema ou enviar feedback atrav\u00e9s do meio apropriado para o servi\u00e7o em quest\u00e3o. Al\u00e9m de criar um problema no GitHub, fornecer feedback no UserVoice ou enviar um e-mail pessoal, os funcion\u00e1rios da Microsoft na CSE devem enviar feedback atrav\u00e9s do Feedback da CSE. Ao fazer isso, por favor, fa\u00e7a refer\u00eancia ao problema do GitHub, ao feedback do UserVoice ou ao e-mail, incluindo um link para o item ou anexando o e-mail. O envio do Feedback da CSE permite que a equipe de Feedback da CSE consolide feedback de v\u00e1rias fontes e, assim, crie um caso unificado para enviar para as equipes de engenharia da Azure apropriadas. Como um cliente pode acompanhar o status de um item de feedback espec\u00edfico? Atualmente, os clientes n\u00e3o podem acompanhar diretamente o status do feedback enviado via Feedback da CSE. O processo de Feedback da CSE \u00e9 interno \u00e0 Microsoft e, como tal, est\u00e1 dispon\u00edvel apenas para funcion\u00e1rios da Microsoft. Os clientes podem solicitar uma atualiza\u00e7\u00e3o de seu parceiro de engenharia da CSE ou representantes de contas da Microsoft. Os clientes tamb\u00e9m podem enviar seu feedback diretamente via GitHub ou UserVoice (conforme apropriado para o servi\u00e7o espec\u00edfico) e informar seu parceiro de engenharia da CSE. O engenheiro da CSE deve enviar o feedback atrav\u00e9s do processo de Feedback da CSE e, ao fazer isso, fazer refer\u00eancia ao problema previamente criado. Os clientes podem acompanhar o item do GitHub ou UserVoice para receber alertas sobre atualiza\u00e7\u00f5es. Como um funcion\u00e1rio da Microsoft pode acompanhar o status de um item de feedback espec\u00edfico? A maneira mais f\u00e1cil para um funcion\u00e1rio da Microsoft dentro da CSE acompanhar um item de feedback espec\u00edfico \u00e9 seguir o feedback (um item de trabalho) no Azure DevOps. Como funcion\u00e1rio da Microsoft na CSE, se eu enviar um feedback e depois me mudar para outro engajamento de desenvolvimento, como meu cliente pode obter uma atualiza\u00e7\u00e3o sobre esse feedback? Se o feedback tamb\u00e9m for enviado via GitHub ou UserVoice, o cliente pode optar por seguir esse item para receber atualiza\u00e7\u00f5es publicamente dispon\u00edveis. O cliente tamb\u00e9m pode entrar em contato com seu representante de contas da Microsoft para solicitar uma atualiza\u00e7\u00e3o. Como funcion\u00e1rio da Microsoft na CSE, o que devo esperar/fazer ap\u00f3s enviar feedback via Feedback da CSE? Ap\u00f3s enviar o feedback, \u00e9 recomend\u00e1vel seguir o feedback (um item de trabalho) no Azure DevOps. Se voc\u00ea configurou notifica\u00e7\u00f5es do Azure DevOps para enviar um e-mail sobre atualiza\u00e7\u00f5es de itens de trabalho, receber\u00e1 um e-mail quando o feedback for atualizado. Se for necess\u00e1rio mais informa\u00e7\u00f5es sobre o feedback, um membro da equipe de Feedback da CSE entrar\u00e1 em contato com voc\u00ea para obter mais informa\u00e7\u00f5es. Como/quando o feedback \u00e9 agregado? Membros da equipe de Feedback da CSE far\u00e3o o melhor esfor\u00e7o para triar e revisar novos itens de Feedback da CSE dentro de duas semanas a partir da data de envio original. Se houver semelhan\u00e7a entre v\u00e1rios itens de feedback, um membro da equipe de Feedback da CSE pode decidir criar um novo item de feedback que seja uma agrega\u00e7\u00e3o de itens semelhantes. Isso \u00e9 feito para auxiliar na cria\u00e7\u00e3o de um item de feedback unificado para apresentar \u00e0 equipe de engenharia apropriada da Microsoft. Mensalmente, a equipe de Feedback da CSE revisar\u00e1 todo o feedback e gerar\u00e1 um relat\u00f3rio com os feedbacks de mais alta prioridade. O relat\u00f3rio \u00e9 apresentado \u00e0s equipes de lideran\u00e7a adequadas da CSE e da Microsoft.","title":"Perguntas Frequentes sobre Feedback de Engenharia (F.A.Q.)"},{"location":"engineering-feedback/feedback-faq/#perguntas-frequentes-sobre-feedback-de-engenharia-faq","text":"As perguntas a seguir s\u00e3o comuns em rela\u00e7\u00e3o ao processo de feedback. As respostas destinam-se a ajudar tanto os funcion\u00e1rios da Microsoft quanto os clientes.","title":"Perguntas Frequentes sobre Feedback de Engenharia (F.A.Q.)"},{"location":"engineering-feedback/feedback-faq/#quando-devo-enviar-feedback-versus-criar-um-problema-no-github-uservoice-ou-enviar-um-e-mail-diretamente-para-um-funcionario-da-microsoft","text":"\u00c9 apropriado fazer ambos. Como cliente ou funcion\u00e1rio da Microsoft, voc\u00ea tem o poder de criar um problema ou enviar feedback atrav\u00e9s do meio apropriado para o servi\u00e7o em quest\u00e3o. Al\u00e9m de criar um problema no GitHub, fornecer feedback no UserVoice ou enviar um e-mail pessoal, os funcion\u00e1rios da Microsoft na CSE devem enviar feedback atrav\u00e9s do Feedback da CSE. Ao fazer isso, por favor, fa\u00e7a refer\u00eancia ao problema do GitHub, ao feedback do UserVoice ou ao e-mail, incluindo um link para o item ou anexando o e-mail. O envio do Feedback da CSE permite que a equipe de Feedback da CSE consolide feedback de v\u00e1rias fontes e, assim, crie um caso unificado para enviar para as equipes de engenharia da Azure apropriadas.","title":"Quando devo enviar feedback versus criar um problema no GitHub, UserVoice ou enviar um e-mail diretamente para um funcion\u00e1rio da Microsoft?"},{"location":"engineering-feedback/feedback-faq/#como-um-cliente-pode-acompanhar-o-status-de-um-item-de-feedback-especifico","text":"Atualmente, os clientes n\u00e3o podem acompanhar diretamente o status do feedback enviado via Feedback da CSE. O processo de Feedback da CSE \u00e9 interno \u00e0 Microsoft e, como tal, est\u00e1 dispon\u00edvel apenas para funcion\u00e1rios da Microsoft. Os clientes podem solicitar uma atualiza\u00e7\u00e3o de seu parceiro de engenharia da CSE ou representantes de contas da Microsoft. Os clientes tamb\u00e9m podem enviar seu feedback diretamente via GitHub ou UserVoice (conforme apropriado para o servi\u00e7o espec\u00edfico) e informar seu parceiro de engenharia da CSE. O engenheiro da CSE deve enviar o feedback atrav\u00e9s do processo de Feedback da CSE e, ao fazer isso, fazer refer\u00eancia ao problema previamente criado. Os clientes podem acompanhar o item do GitHub ou UserVoice para receber alertas sobre atualiza\u00e7\u00f5es.","title":"Como um cliente pode acompanhar o status de um item de feedback espec\u00edfico?"},{"location":"engineering-feedback/feedback-faq/#como-um-funcionario-da-microsoft-pode-acompanhar-o-status-de-um-item-de-feedback-especifico","text":"A maneira mais f\u00e1cil para um funcion\u00e1rio da Microsoft dentro da CSE acompanhar um item de feedback espec\u00edfico \u00e9 seguir o feedback (um item de trabalho) no Azure DevOps.","title":"Como um funcion\u00e1rio da Microsoft pode acompanhar o status de um item de feedback espec\u00edfico?"},{"location":"engineering-feedback/feedback-faq/#como-funcionario-da-microsoft-na-cse-se-eu-enviar-um-feedback-e-depois-me-mudar-para-outro-engajamento-de-desenvolvimento-como-meu-cliente-pode-obter-uma-atualizacao-sobre-esse-feedback","text":"Se o feedback tamb\u00e9m for enviado via GitHub ou UserVoice, o cliente pode optar por seguir esse item para receber atualiza\u00e7\u00f5es publicamente dispon\u00edveis. O cliente tamb\u00e9m pode entrar em contato com seu representante de contas da Microsoft para solicitar uma atualiza\u00e7\u00e3o.","title":"Como funcion\u00e1rio da Microsoft na CSE, se eu enviar um feedback e depois me mudar para outro engajamento de desenvolvimento, como meu cliente pode obter uma atualiza\u00e7\u00e3o sobre esse feedback?"},{"location":"engineering-feedback/feedback-faq/#como-funcionario-da-microsoft-na-cse-o-que-devo-esperarfazer-apos-enviar-feedback-via-feedback-da-cse","text":"Ap\u00f3s enviar o feedback, \u00e9 recomend\u00e1vel seguir o feedback (um item de trabalho) no Azure DevOps. Se voc\u00ea configurou notifica\u00e7\u00f5es do Azure DevOps para enviar um e-mail sobre atualiza\u00e7\u00f5es de itens de trabalho, receber\u00e1 um e-mail quando o feedback for atualizado. Se for necess\u00e1rio mais informa\u00e7\u00f5es sobre o feedback, um membro da equipe de Feedback da CSE entrar\u00e1 em contato com voc\u00ea para obter mais informa\u00e7\u00f5es.","title":"Como funcion\u00e1rio da Microsoft na CSE, o que devo esperar/fazer ap\u00f3s enviar feedback via Feedback da CSE?"},{"location":"engineering-feedback/feedback-faq/#comoquando-o-feedback-e-agregado","text":"Membros da equipe de Feedback da CSE far\u00e3o o melhor esfor\u00e7o para triar e revisar novos itens de Feedback da CSE dentro de duas semanas a partir da data de envio original. Se houver semelhan\u00e7a entre v\u00e1rios itens de feedback, um membro da equipe de Feedback da CSE pode decidir criar um novo item de feedback que seja uma agrega\u00e7\u00e3o de itens semelhantes. Isso \u00e9 feito para auxiliar na cria\u00e7\u00e3o de um item de feedback unificado para apresentar \u00e0 equipe de engenharia apropriada da Microsoft. Mensalmente, a equipe de Feedback da CSE revisar\u00e1 todo o feedback e gerar\u00e1 um relat\u00f3rio com os feedbacks de mais alta prioridade. O relat\u00f3rio \u00e9 apresentado \u00e0s equipes de lideran\u00e7a adequadas da CSE e da Microsoft.","title":"Como/quando o feedback \u00e9 agregado?"},{"location":"engineering-feedback/feedback-guidance/","text":"Orienta\u00e7\u00f5es para Feedback de Engenharia As seguintes orienta\u00e7\u00f5es fornecem um conjunto m\u00ednimo de detalhes que resultar\u00e3o em feedback de engenharia acion\u00e1vel. Certifique-se de fornecer o m\u00e1ximo de detalhes poss\u00edvel para cada uma das seguintes se\u00e7\u00f5es, conforme relevante. T\u00edtulo Forne\u00e7a um t\u00edtulo significativo e descritivo. N\u00e3o \u00e9 necess\u00e1rio incluir o servi\u00e7o Azure no t\u00edtulo, pois isso ser\u00e1 inclu\u00eddo como parte da se\u00e7\u00e3o de Categoriza\u00e7\u00e3o . Exemplos bons: Vers\u00f5es de X suportadas n\u00e3o documentadas Requer hist\u00f3ria Y completa Resumo Resuma o feedback em um par\u00e1grafo curto. Categoriza\u00e7\u00e3o Servi\u00e7o Azure A que servi\u00e7o Azure se refere este item de feedback? Se houver v\u00e1rios servi\u00e7os Azure envolvidos, escolha o servi\u00e7o principal e inclua os detalhes dos outros na se\u00e7\u00e3o Notas . Tipo Selecione um dos seguintes para descrever que tipo de feedback est\u00e1 sendo fornecido: Impedimento de Neg\u00f3cios (por exemplo, Sem SLA em X, Servi\u00e7o Y n\u00e3o est\u00e1 na GA, Servi\u00e7o A n\u00e3o est\u00e1 na Regi\u00e3o B) Impedimento T\u00e9cnico (por exemplo, Rede Acelerada n\u00e3o dispon\u00edvel no Servi\u00e7o X) Documenta\u00e7\u00e3o (por exemplo, Instru\u00e7\u00f5es para configurar o cen\u00e1rio X ausentes) Solicita\u00e7\u00e3o de Recurso (por exemplo, Habilitar integra\u00e7\u00e3o simples com X no Servi\u00e7o Y) Est\u00e1gio Selecione um dos seguintes para descrever o est\u00e1gio do ciclo de vida do engajamento que gerou este feedback: Produ\u00e7\u00e3o Est\u00e1gio Teste Desenvolvimento Impacto Descreva o impacto para o cliente e o engajamento que esse feedback implica. Prazo Forne\u00e7a um prazo dentro do qual este item de feedback precisa ser resolvido (se relevante). Prioridade Forne\u00e7a a prioridade do ponto de vista do cliente para o feedback. O feedback \u00e9 priorizado em um dos quatro n\u00edveis a seguir: P0 - O impacto \u00e9 cr\u00edtico e grande : Precisa ser abordado imediatamente; o impacto \u00e9 cr\u00edtico e de grande alcance (ou seja, grande interrup\u00e7\u00e3o do servi\u00e7o; torna o servi\u00e7o ou fun\u00e7\u00f5es inutiliz\u00e1veis/inacess\u00edveis para uma grande parte do espa\u00e7o abrang\u00edvel; sem solu\u00e7\u00e3o conhecida). P1 - O impacto \u00e9 alto e significativo : Precisa ser abordado rapidamente; impacta uma grande porcentagem do espa\u00e7o abrang\u00edvel e dificulta o progresso. Uma solu\u00e7\u00e3o alternativa parcial existe ou \u00e9 muito problem\u00e1tica. P2 - O impacto \u00e9 moderado e varia em alcance : Precisa ser abordado em um per\u00edodo de tempo razo\u00e1vel (ou seja, quest\u00f5es que est\u00e3o prejudicando a ado\u00e7\u00e3o e o uso sem solu\u00e7\u00f5es alternativas razo\u00e1veis). Por exemplo, o feedback pode estar relacionado a problemas de n\u00edvel de recurso para resolver a fric\u00e7\u00e3o. P3 - O impacto \u00e9 baixo : O problema pode ser resolvido quando poss\u00edvel ou mais tarde (ou seja, relevante para o espa\u00e7o abrang\u00edvel central, mas o problema n\u00e3o impede o progresso ou possui solu\u00e7\u00e3o razo\u00e1vel). Por exemplo, o feedback pode estar relacionado a ideias ou oportunidades de recursos. Passos de Reprodu\u00e7\u00e3o Os passos de reprodu\u00e7\u00e3o s\u00e3o importantes, pois ajudam a confirmar e reproduzir o problema e s\u00e3o essenciais para demonstrar o sucesso quando houver uma solu\u00e7\u00e3o. Pr\u00e9-requisitos Forne\u00e7a um conjunto claro de todas as condi\u00e7\u00f5es e pr\u00e9-requisitos necess\u00e1rios antes de seguir os passos de reprodu\u00e7\u00e3o. Isso pode incluir: Plataforma (por exemplo, cluster AKS 1.16.4 com Azure CNI, VM Ubuntu 19.04) Servi\u00e7os (por exemplo, Azure Key Vault, Azure Monitor) Rede (por exemplo, VNET com sub-rede) Passos Forne\u00e7a um conjunto claro de passos repet\u00edveis que permitir\u00e3o a reprodu\u00e7\u00e3o deste feedback. Isso pode assumir a forma de: Scripts (por exemplo, bash, PowerShell, terraform, modelo de bra\u00e7o) Instru\u00e7\u00f5es de linha de comando (por exemplo, az, helm, terraform) Capturas de tela (por exemplo, telas do portal Azure) Notas Inclua itens como diagramas de arquitetura, capturas de tela, logs, traces, etc., que possam ajudar a entender suas anota\u00e7\u00f5es e o item de feedback. Inclua tamb\u00e9m detalhes sobre o cen\u00e1rio do cliente/parceiro, o m\u00e1ximo poss\u00edvel, no conte\u00fado principal. O que n\u00e3o funcionou Descreva o que n\u00e3o funcionou ou que lacuna de recurso voc\u00ea identificou. Qual era a sua expectativa ou resultado desejado Descreva o que voc\u00ea esperava que acontecesse. Qual era o resultado esperado? Descreva os passos que voc\u00ea seguiu Forne\u00e7a uma descri\u00e7\u00e3o clara dos passos tomados e o resultado/descri\u00e7\u00e3o em cada ponto.","title":"Orienta\u00e7\u00f5es para Feedback de Engenharia"},{"location":"engineering-feedback/feedback-guidance/#orientacoes-para-feedback-de-engenharia","text":"As seguintes orienta\u00e7\u00f5es fornecem um conjunto m\u00ednimo de detalhes que resultar\u00e3o em feedback de engenharia acion\u00e1vel. Certifique-se de fornecer o m\u00e1ximo de detalhes poss\u00edvel para cada uma das seguintes se\u00e7\u00f5es, conforme relevante.","title":"Orienta\u00e7\u00f5es para Feedback de Engenharia"},{"location":"engineering-feedback/feedback-guidance/#titulo","text":"Forne\u00e7a um t\u00edtulo significativo e descritivo. N\u00e3o \u00e9 necess\u00e1rio incluir o servi\u00e7o Azure no t\u00edtulo, pois isso ser\u00e1 inclu\u00eddo como parte da se\u00e7\u00e3o de Categoriza\u00e7\u00e3o . Exemplos bons: Vers\u00f5es de X suportadas n\u00e3o documentadas Requer hist\u00f3ria Y completa","title":"T\u00edtulo"},{"location":"engineering-feedback/feedback-guidance/#resumo","text":"Resuma o feedback em um par\u00e1grafo curto.","title":"Resumo"},{"location":"engineering-feedback/feedback-guidance/#categorizacao","text":"","title":"Categoriza\u00e7\u00e3o"},{"location":"engineering-feedback/feedback-guidance/#servico-azure","text":"A que servi\u00e7o Azure se refere este item de feedback? Se houver v\u00e1rios servi\u00e7os Azure envolvidos, escolha o servi\u00e7o principal e inclua os detalhes dos outros na se\u00e7\u00e3o Notas .","title":"Servi\u00e7o Azure"},{"location":"engineering-feedback/feedback-guidance/#tipo","text":"Selecione um dos seguintes para descrever que tipo de feedback est\u00e1 sendo fornecido: Impedimento de Neg\u00f3cios (por exemplo, Sem SLA em X, Servi\u00e7o Y n\u00e3o est\u00e1 na GA, Servi\u00e7o A n\u00e3o est\u00e1 na Regi\u00e3o B) Impedimento T\u00e9cnico (por exemplo, Rede Acelerada n\u00e3o dispon\u00edvel no Servi\u00e7o X) Documenta\u00e7\u00e3o (por exemplo, Instru\u00e7\u00f5es para configurar o cen\u00e1rio X ausentes) Solicita\u00e7\u00e3o de Recurso (por exemplo, Habilitar integra\u00e7\u00e3o simples com X no Servi\u00e7o Y)","title":"Tipo"},{"location":"engineering-feedback/feedback-guidance/#estagio","text":"Selecione um dos seguintes para descrever o est\u00e1gio do ciclo de vida do engajamento que gerou este feedback: Produ\u00e7\u00e3o Est\u00e1gio Teste Desenvolvimento","title":"Est\u00e1gio"},{"location":"engineering-feedback/feedback-guidance/#impacto","text":"Descreva o impacto para o cliente e o engajamento que esse feedback implica.","title":"Impacto"},{"location":"engineering-feedback/feedback-guidance/#prazo","text":"Forne\u00e7a um prazo dentro do qual este item de feedback precisa ser resolvido (se relevante).","title":"Prazo"},{"location":"engineering-feedback/feedback-guidance/#prioridade","text":"Forne\u00e7a a prioridade do ponto de vista do cliente para o feedback. O feedback \u00e9 priorizado em um dos quatro n\u00edveis a seguir: P0 - O impacto \u00e9 cr\u00edtico e grande : Precisa ser abordado imediatamente; o impacto \u00e9 cr\u00edtico e de grande alcance (ou seja, grande interrup\u00e7\u00e3o do servi\u00e7o; torna o servi\u00e7o ou fun\u00e7\u00f5es inutiliz\u00e1veis/inacess\u00edveis para uma grande parte do espa\u00e7o abrang\u00edvel; sem solu\u00e7\u00e3o conhecida). P1 - O impacto \u00e9 alto e significativo : Precisa ser abordado rapidamente; impacta uma grande porcentagem do espa\u00e7o abrang\u00edvel e dificulta o progresso. Uma solu\u00e7\u00e3o alternativa parcial existe ou \u00e9 muito problem\u00e1tica. P2 - O impacto \u00e9 moderado e varia em alcance : Precisa ser abordado em um per\u00edodo de tempo razo\u00e1vel (ou seja, quest\u00f5es que est\u00e3o prejudicando a ado\u00e7\u00e3o e o uso sem solu\u00e7\u00f5es alternativas razo\u00e1veis). Por exemplo, o feedback pode estar relacionado a problemas de n\u00edvel de recurso para resolver a fric\u00e7\u00e3o. P3 - O impacto \u00e9 baixo : O problema pode ser resolvido quando poss\u00edvel ou mais tarde (ou seja, relevante para o espa\u00e7o abrang\u00edvel central, mas o problema n\u00e3o impede o progresso ou possui solu\u00e7\u00e3o razo\u00e1vel). Por exemplo, o feedback pode estar relacionado a ideias ou oportunidades de recursos.","title":"Prioridade"},{"location":"engineering-feedback/feedback-guidance/#passos-de-reproducao","text":"Os passos de reprodu\u00e7\u00e3o s\u00e3o importantes, pois ajudam a confirmar e reproduzir o problema e s\u00e3o essenciais para demonstrar o sucesso quando houver uma solu\u00e7\u00e3o.","title":"Passos de Reprodu\u00e7\u00e3o"},{"location":"engineering-feedback/feedback-guidance/#pre-requisitos","text":"Forne\u00e7a um conjunto claro de todas as condi\u00e7\u00f5es e pr\u00e9-requisitos necess\u00e1rios antes de seguir os passos de reprodu\u00e7\u00e3o. Isso pode incluir: Plataforma (por exemplo, cluster AKS 1.16.4 com Azure CNI, VM Ubuntu 19.04) Servi\u00e7os (por exemplo, Azure Key Vault, Azure Monitor) Rede (por exemplo, VNET com sub-rede)","title":"Pr\u00e9-requisitos"},{"location":"engineering-feedback/feedback-guidance/#passos","text":"Forne\u00e7a um conjunto claro de passos repet\u00edveis que permitir\u00e3o a reprodu\u00e7\u00e3o deste feedback. Isso pode assumir a forma de: Scripts (por exemplo, bash, PowerShell, terraform, modelo de bra\u00e7o) Instru\u00e7\u00f5es de linha de comando (por exemplo, az, helm, terraform) Capturas de tela (por exemplo, telas do portal Azure)","title":"Passos"},{"location":"engineering-feedback/feedback-guidance/#notas","text":"Inclua itens como diagramas de arquitetura, capturas de tela, logs, traces, etc., que possam ajudar a entender suas anota\u00e7\u00f5es e o item de feedback. Inclua tamb\u00e9m detalhes sobre o cen\u00e1rio do cliente/parceiro, o m\u00e1ximo poss\u00edvel, no conte\u00fado principal.","title":"Notas"},{"location":"engineering-feedback/feedback-guidance/#o-que-nao-funcionou","text":"Descreva o que n\u00e3o funcionou ou que lacuna de recurso voc\u00ea identificou.","title":"O que n\u00e3o funcionou"},{"location":"engineering-feedback/feedback-guidance/#qual-era-a-sua-expectativa-ou-resultado-desejado","text":"Descreva o que voc\u00ea esperava que acontecesse. Qual era o resultado esperado?","title":"Qual era a sua expectativa ou resultado desejado"},{"location":"engineering-feedback/feedback-guidance/#descreva-os-passos-que-voce-seguiu","text":"Forne\u00e7a uma descri\u00e7\u00e3o clara dos passos tomados e o resultado/descri\u00e7\u00e3o em cada ponto.","title":"Descreva os passos que voc\u00ea seguiu"},{"location":"machine-learning/","text":"Fundamentos de Aprendizado de M\u00e1quina na ISE Este guia documenta as pr\u00e1ticas de Aprendizado de M\u00e1quina (ML) na ISE. A ISE trabalha com clientes no desenvolvimento de modelos de ML e na coloca\u00e7\u00e3o deles em produ\u00e7\u00e3o, com \u00eanfase em boas pr\u00e1ticas de engenharia e pesquisa ao longo do ciclo de vida do projeto. Objetivos Fornecer um conjunto de pr\u00e1ticas de ML a serem seguidas em um projeto de ML. Fornecer clareza sobre o processo de ML e como ele se encaixa em um projeto de engenharia de software. Fornecer as melhores pr\u00e1ticas para as diferentes etapas de um projeto de ML. Como usar esses fundamentos Se voc\u00ea est\u00e1 iniciando um novo projeto de ML, considere ler os documentos de orienta\u00e7\u00e3o geral . Para aspectos espec\u00edficos de um projeto de ML, consulte as diretrizes para as diferentes fases do projeto de ML . Fases do Projeto de ML O diagrama abaixo mostra diferentes fases em um projeto de ML ideal. Devido a restri\u00e7\u00f5es pr\u00e1ticas e requisitos, nem sempre \u00e9 poss\u00edvel ter um projeto estruturado dessa maneira, no entanto, as melhores pr\u00e1ticas devem ser seguidas para cada fase individual. Concep\u00e7\u00e3o : Compreens\u00e3o inicial do problema, metas e objetivos do cliente. Estudo de Viabilidade : Avaliar se o problema em quest\u00e3o \u00e9 vi\u00e1vel de ser resolvido satisfatoriamente usando ML com os dados dispon\u00edveis. Marco do Modelo : H\u00e1 um modelo b\u00e1sico que est\u00e1 alcan\u00e7ando o desempenho m\u00ednimo requerido, tanto em termos de desempenho de ML quanto de desempenho do sistema. Usando o conhecimento adquirido at\u00e9 este marco, defina o escopo, objetivos, arquitetura de alto n\u00edvel, defini\u00e7\u00e3o de pronto e plano para todo o projeto. Experimenta\u00e7\u00e3o de Modelo(s) : Ferramentas e melhores pr\u00e1ticas para conduzir experimentos de modelo bem-sucedidos. Operacionaliza\u00e7\u00e3o de Modelo(s) : Lista de verifica\u00e7\u00e3o de prepara\u00e7\u00e3o do modelo para produ\u00e7\u00e3o . Orienta\u00e7\u00e3o Geral Orienta\u00e7\u00e3o do Processo de ML Lista de Verifica\u00e7\u00e3o de Fundamentos de ML Explora\u00e7\u00e3o de Dados Desenvolvimento \u00c1gil de ML Teste de C\u00f3digo de Ci\u00eancia de Dados e ML Ops Perfil de C\u00f3digo de Aprendizado de M\u00e1quina e ML Ops IA Respons\u00e1vel Gerenciamento de Programa para Projetos de ML Refer\u00eancias Operacionaliza\u00e7\u00e3o de Modelo","title":"Fundamentos de Aprendizado de M\u00e1quina na ISE"},{"location":"machine-learning/#fundamentos-de-aprendizado-de-maquina-na-ise","text":"Este guia documenta as pr\u00e1ticas de Aprendizado de M\u00e1quina (ML) na ISE. A ISE trabalha com clientes no desenvolvimento de modelos de ML e na coloca\u00e7\u00e3o deles em produ\u00e7\u00e3o, com \u00eanfase em boas pr\u00e1ticas de engenharia e pesquisa ao longo do ciclo de vida do projeto.","title":"Fundamentos de Aprendizado de M\u00e1quina na ISE"},{"location":"machine-learning/#objetivos","text":"Fornecer um conjunto de pr\u00e1ticas de ML a serem seguidas em um projeto de ML. Fornecer clareza sobre o processo de ML e como ele se encaixa em um projeto de engenharia de software. Fornecer as melhores pr\u00e1ticas para as diferentes etapas de um projeto de ML.","title":"Objetivos"},{"location":"machine-learning/#como-usar-esses-fundamentos","text":"Se voc\u00ea est\u00e1 iniciando um novo projeto de ML, considere ler os documentos de orienta\u00e7\u00e3o geral . Para aspectos espec\u00edficos de um projeto de ML, consulte as diretrizes para as diferentes fases do projeto de ML .","title":"Como usar esses fundamentos"},{"location":"machine-learning/#fases-do-projeto-de-ml","text":"O diagrama abaixo mostra diferentes fases em um projeto de ML ideal. Devido a restri\u00e7\u00f5es pr\u00e1ticas e requisitos, nem sempre \u00e9 poss\u00edvel ter um projeto estruturado dessa maneira, no entanto, as melhores pr\u00e1ticas devem ser seguidas para cada fase individual. Concep\u00e7\u00e3o : Compreens\u00e3o inicial do problema, metas e objetivos do cliente. Estudo de Viabilidade : Avaliar se o problema em quest\u00e3o \u00e9 vi\u00e1vel de ser resolvido satisfatoriamente usando ML com os dados dispon\u00edveis. Marco do Modelo : H\u00e1 um modelo b\u00e1sico que est\u00e1 alcan\u00e7ando o desempenho m\u00ednimo requerido, tanto em termos de desempenho de ML quanto de desempenho do sistema. Usando o conhecimento adquirido at\u00e9 este marco, defina o escopo, objetivos, arquitetura de alto n\u00edvel, defini\u00e7\u00e3o de pronto e plano para todo o projeto. Experimenta\u00e7\u00e3o de Modelo(s) : Ferramentas e melhores pr\u00e1ticas para conduzir experimentos de modelo bem-sucedidos. Operacionaliza\u00e7\u00e3o de Modelo(s) : Lista de verifica\u00e7\u00e3o de prepara\u00e7\u00e3o do modelo para produ\u00e7\u00e3o .","title":"Fases do Projeto de ML"},{"location":"machine-learning/#orientacao-geral","text":"Orienta\u00e7\u00e3o do Processo de ML Lista de Verifica\u00e7\u00e3o de Fundamentos de ML Explora\u00e7\u00e3o de Dados Desenvolvimento \u00c1gil de ML Teste de C\u00f3digo de Ci\u00eancia de Dados e ML Ops Perfil de C\u00f3digo de Aprendizado de M\u00e1quina e ML Ops IA Respons\u00e1vel Gerenciamento de Programa para Projetos de ML","title":"Orienta\u00e7\u00e3o Geral"},{"location":"machine-learning/#referencias","text":"Operacionaliza\u00e7\u00e3o de Modelo","title":"Refer\u00eancias"},{"location":"machine-learning/ml-data-exploration/","text":"Explora\u00e7\u00e3o de Dados Ap\u00f3s a concep\u00e7\u00e3o e tipicamente como parte do estudo de viabilidade de ML , o pr\u00f3ximo passo \u00e9 confirmar o acesso aos recursos e, em seguida, mergulhar profundamente nos dados dispon\u00edveis por meio de workshops de explora\u00e7\u00e3o de dados. Objetivo do Workshop de Explora\u00e7\u00e3o de Dados O objetivo do workshop de explora\u00e7\u00e3o de dados \u00e9 o seguinte: Garantir que a equipe tenha acesso aos dados e recursos computacionais necess\u00e1rios para o estudo de viabilidade de ML. Certificar-se de que os dados fornecidos t\u00eam qualidade e s\u00e3o relevantes para a solu\u00e7\u00e3o de ML. Certificar-se de que a equipe do projeto tenha um bom entendimento dos dados. Certificar-se de que os SMEs (Especialistas em Assunto) necess\u00e1rios estejam presentes no Workshop de Explora\u00e7\u00e3o de Dados. Listar as pessoas necess\u00e1rias para o workshop de explora\u00e7\u00e3o de dados. Acesso a Recursos Antes de iniciar os workshops de explora\u00e7\u00e3o de dados, \u00e9 importante confirmar que voc\u00ea tem acesso aos recursos necess\u00e1rios (incluindo dados). Abaixo est\u00e1 uma lista de exemplo de perguntas a serem consideradas antes de iniciar um workshop de explora\u00e7\u00e3o de dados. Quais s\u00e3o os requisitos para a cria\u00e7\u00e3o de uma conta para que a equipe possa acessar dados e recursos computacionais? Existem requisitos de seguran\u00e7a para acessar recursos (assinaturas, Recursos Azure, gerenciamento de projetos, etc.), como VPN, autentica\u00e7\u00e3o de dois fatores (2FA), jump boxes, etc.? Acesso aos dados: * Est\u00e1 localizado localmente ou j\u00e1 est\u00e1 no Azure? * Se estiver localizado localmente, podemos mover os dados necess\u00e1rios para o Azure sob a assinatura apropriada? Quem tem permiss\u00e3o para mover os dados? * O acesso aos dados \u00e9 aprovado do ponto de vista legal e de conformidade? Computa\u00e7\u00e3o: * \u00c9 necess\u00e1rio uma VPN para a equipe do projeto acessar esses n\u00f3s de computa\u00e7\u00e3o (M\u00e1quinas Virtuais, clusters Databricks, etc.) de seus PCs/Macs de trabalho? * Alguma restri\u00e7\u00e3o para acessar o sistema de dados de origem a partir desses n\u00f3s de computa\u00e7\u00e3o? * Se quisermos criar recursos de computa\u00e7\u00e3o, quem tem permiss\u00e3o para faz\u00ea-lo? Reposit\u00f3rio de c\u00f3digo-fonte: * Voc\u00ea tem alguma prefer\u00eancia quanto \u00e0 localiza\u00e7\u00e3o do reposit\u00f3rio de c\u00f3digo-fonte? Gerenciamento de backlog e planejamento de trabalho: * Voc\u00ea tem alguma prefer\u00eancia quanto ao gerenciamento de backlog e planejamento de trabalho, como Azure DevOps, Jira ou qualquer outra coisa? * Se for um sistema existente, s\u00e3o necess\u00e1rias contas especiais/configura\u00e7\u00f5es de sistema para acessar? Linguagem de programa\u00e7\u00e3o: * Python/PySpark \u00e9 a linguagem preferida? * Existem processos de aprova\u00e7\u00e3o interna para as bibliotecas Python/PySpark que desejamos usar neste projeto? Workshop de Explora\u00e7\u00e3o de Dados Os principais objetivos dos workshops de explora\u00e7\u00e3o incluem o seguinte: Compreender e documentar as caracter\u00edsticas, localiza\u00e7\u00e3o e disponibilidade dos dados. Qual \u00e9 a ordem de grandeza dos dados atuais (por exemplo, GB, TB)? Isso \u00e9 relevante? Como a organiza\u00e7\u00e3o decide quando coletar dados adicionais ou adquirir dados externos? Existem exemplos disso? Compreender a qualidade dos dados. J\u00e1 existe uma estrat\u00e9gia de valida\u00e7\u00e3o de dados em vigor? Que dados foram usados at\u00e9 agora para analisar projetos recentes baseados em dados? O que se mostrou mais \u00fatil? O que n\u00e3o foi \u00fatil? Como isso foi avaliado? Que dados internos adicionais podem fornecer insights \u00fateis para a tomada de decis\u00f5es baseada em dados para projetos propostos? Quais dados externos podem ser \u00fateis? Quais s\u00e3o as poss\u00edveis restri\u00e7\u00f5es ou desafios no acesso ou incorpora\u00e7\u00e3o desses dados? Como os dados foram coletados? Existem vi\u00e9ses \u00f3bvios devido \u00e0 forma como os dados foram coletados? Que mudan\u00e7as na coleta de dados, codifica\u00e7\u00e3o, integra\u00e7\u00e3o, etc., ocorreram nos \u00faltimos 2 anos que podem afetar a interpreta\u00e7\u00e3o ou disponibilidade dos dados coletados?","title":"Explora\u00e7\u00e3o de Dados"},{"location":"machine-learning/ml-data-exploration/#exploracao-de-dados","text":"Ap\u00f3s a concep\u00e7\u00e3o e tipicamente como parte do estudo de viabilidade de ML , o pr\u00f3ximo passo \u00e9 confirmar o acesso aos recursos e, em seguida, mergulhar profundamente nos dados dispon\u00edveis por meio de workshops de explora\u00e7\u00e3o de dados.","title":"Explora\u00e7\u00e3o de Dados"},{"location":"machine-learning/ml-data-exploration/#objetivo-do-workshop-de-exploracao-de-dados","text":"O objetivo do workshop de explora\u00e7\u00e3o de dados \u00e9 o seguinte: Garantir que a equipe tenha acesso aos dados e recursos computacionais necess\u00e1rios para o estudo de viabilidade de ML. Certificar-se de que os dados fornecidos t\u00eam qualidade e s\u00e3o relevantes para a solu\u00e7\u00e3o de ML. Certificar-se de que a equipe do projeto tenha um bom entendimento dos dados. Certificar-se de que os SMEs (Especialistas em Assunto) necess\u00e1rios estejam presentes no Workshop de Explora\u00e7\u00e3o de Dados. Listar as pessoas necess\u00e1rias para o workshop de explora\u00e7\u00e3o de dados.","title":"Objetivo do Workshop de Explora\u00e7\u00e3o de Dados"},{"location":"machine-learning/ml-data-exploration/#acesso-a-recursos","text":"Antes de iniciar os workshops de explora\u00e7\u00e3o de dados, \u00e9 importante confirmar que voc\u00ea tem acesso aos recursos necess\u00e1rios (incluindo dados). Abaixo est\u00e1 uma lista de exemplo de perguntas a serem consideradas antes de iniciar um workshop de explora\u00e7\u00e3o de dados. Quais s\u00e3o os requisitos para a cria\u00e7\u00e3o de uma conta para que a equipe possa acessar dados e recursos computacionais? Existem requisitos de seguran\u00e7a para acessar recursos (assinaturas, Recursos Azure, gerenciamento de projetos, etc.), como VPN, autentica\u00e7\u00e3o de dois fatores (2FA), jump boxes, etc.? Acesso aos dados: * Est\u00e1 localizado localmente ou j\u00e1 est\u00e1 no Azure? * Se estiver localizado localmente, podemos mover os dados necess\u00e1rios para o Azure sob a assinatura apropriada? Quem tem permiss\u00e3o para mover os dados? * O acesso aos dados \u00e9 aprovado do ponto de vista legal e de conformidade? Computa\u00e7\u00e3o: * \u00c9 necess\u00e1rio uma VPN para a equipe do projeto acessar esses n\u00f3s de computa\u00e7\u00e3o (M\u00e1quinas Virtuais, clusters Databricks, etc.) de seus PCs/Macs de trabalho? * Alguma restri\u00e7\u00e3o para acessar o sistema de dados de origem a partir desses n\u00f3s de computa\u00e7\u00e3o? * Se quisermos criar recursos de computa\u00e7\u00e3o, quem tem permiss\u00e3o para faz\u00ea-lo? Reposit\u00f3rio de c\u00f3digo-fonte: * Voc\u00ea tem alguma prefer\u00eancia quanto \u00e0 localiza\u00e7\u00e3o do reposit\u00f3rio de c\u00f3digo-fonte? Gerenciamento de backlog e planejamento de trabalho: * Voc\u00ea tem alguma prefer\u00eancia quanto ao gerenciamento de backlog e planejamento de trabalho, como Azure DevOps, Jira ou qualquer outra coisa? * Se for um sistema existente, s\u00e3o necess\u00e1rias contas especiais/configura\u00e7\u00f5es de sistema para acessar? Linguagem de programa\u00e7\u00e3o: * Python/PySpark \u00e9 a linguagem preferida? * Existem processos de aprova\u00e7\u00e3o interna para as bibliotecas Python/PySpark que desejamos usar neste projeto?","title":"Acesso a Recursos"},{"location":"machine-learning/ml-data-exploration/#workshop-de-exploracao-de-dados","text":"Os principais objetivos dos workshops de explora\u00e7\u00e3o incluem o seguinte: Compreender e documentar as caracter\u00edsticas, localiza\u00e7\u00e3o e disponibilidade dos dados. Qual \u00e9 a ordem de grandeza dos dados atuais (por exemplo, GB, TB)? Isso \u00e9 relevante? Como a organiza\u00e7\u00e3o decide quando coletar dados adicionais ou adquirir dados externos? Existem exemplos disso? Compreender a qualidade dos dados. J\u00e1 existe uma estrat\u00e9gia de valida\u00e7\u00e3o de dados em vigor? Que dados foram usados at\u00e9 agora para analisar projetos recentes baseados em dados? O que se mostrou mais \u00fatil? O que n\u00e3o foi \u00fatil? Como isso foi avaliado? Que dados internos adicionais podem fornecer insights \u00fateis para a tomada de decis\u00f5es baseada em dados para projetos propostos? Quais dados externos podem ser \u00fateis? Quais s\u00e3o as poss\u00edveis restri\u00e7\u00f5es ou desafios no acesso ou incorpora\u00e7\u00e3o desses dados? Como os dados foram coletados? Existem vi\u00e9ses \u00f3bvios devido \u00e0 forma como os dados foram coletados? Que mudan\u00e7as na coleta de dados, codifica\u00e7\u00e3o, integra\u00e7\u00e3o, etc., ocorreram nos \u00faltimos 2 anos que podem afetar a interpreta\u00e7\u00e3o ou disponibilidade dos dados coletados?","title":"Workshop de Explora\u00e7\u00e3o de Dados"},{"location":"machine-learning/ml-envisioning-summary-template/","text":"Resumo Gen\u00e9rico da Concep\u00e7\u00e3o Prop\u00f3sito deste modelo Este \u00e9 um exemplo de um resumo de concep\u00e7\u00e3o conclu\u00eddo ap\u00f3s as sess\u00f5es de concep\u00e7\u00e3o. Ele resume os materiais revisados, os cen\u00e1rios de aplica\u00e7\u00e3o discutidos e decididos, e os pr\u00f3ximos passos no processo. Resumo da Concep\u00e7\u00e3o Introdu\u00e7\u00e3o Este documento tem como objetivo resumir o que discutimos nessas sess\u00f5es de concep\u00e7\u00e3o e o que decidimos trabalhar neste engajamento de aprendizado de m\u00e1quina (ML). Com este documento, esperamos que todos estejam na mesma p\u00e1gina em rela\u00e7\u00e3o ao escopo deste engajamento de ML e garantir\u00e1 um in\u00edcio bem-sucedido para o projeto. Materiais Compartilhados com a Equipe Liste os materiais compartilhados com voc\u00ea aqui. A lista abaixo cont\u00e9m alguns exemplos. Voc\u00ea vai querer ser mais espec\u00edfico. Declara\u00e7\u00e3o de vis\u00e3o de neg\u00f3cios Amostra de dados Declara\u00e7\u00e3o de problema atual Tamb\u00e9m discuta: Como a solu\u00e7\u00e3o atual \u00e9 constru\u00edda e implementada Detalhes sobre o estado atual dos sistemas e processos. Cen\u00e1rios de Aplica\u00e7\u00e3o que Podem Ajudar [Pessoas] a Alcan\u00e7ar [Tarefa] Os seguintes cen\u00e1rios de aplica\u00e7\u00e3o foram discutidos: Cen\u00e1rio 1: Cen\u00e1rio 2: Adicione mais cen\u00e1rios conforme necess\u00e1rio Para cada cen\u00e1rio, forne\u00e7a um nome descritivo apropriado e siga com mais detalhes. Para cada cen\u00e1rio, discuta: Qual declara\u00e7\u00e3o de problema foi discutida Como propomos resolver o problema (pode haver v\u00e1rias propostas) Quem usaria a solu\u00e7\u00e3o Como seria usar nossa solu\u00e7\u00e3o? Um exemplo de como isso traria valor ao usu\u00e1rio final. Cen\u00e1rio Selecionado para Este Engajamento de ML Qual cen\u00e1rio foi selecionado? Por que esse cen\u00e1rio foi priorizado em rela\u00e7\u00e3o aos outros? Outros cen\u00e1rios ser\u00e3o considerados no futuro? Quando os revisaremos / que condi\u00e7\u00f5es precisam ser atendidas para persegui-los? Mais Detalhes do Escopo para o Cen\u00e1rio Selecionado O que est\u00e1 dentro do escopo? Que dados est\u00e3o dispon\u00edveis? Qual m\u00e9trica de desempenho usar? Barra de m\u00e9tricas de desempenho Quais s\u00e3o os entreg\u00e1veis? Pr\u00f3ximos Passos Documentos legais a serem assinados Especifique os documentos e o cronograma. Revis\u00e3o de IA Respons\u00e1vel Planeje quando realizar um processo de IA respons\u00e1vel. Quais s\u00e3o os pr\u00e9-requisitos para iniciar este processo? Workshop de Explora\u00e7\u00e3o de Dados Um workshop de explora\u00e7\u00e3o de dados est\u00e1 planejado para o PER\u00cdODO . Este workshop de explora\u00e7\u00e3o de dados ter\u00e1 X a Y dias, excluindo o tempo para obter acesso aos recursos. O objetivo do workshop de explora\u00e7\u00e3o de dados \u00e9 o seguinte: Garantir que a equipe possa acessar os dados e recursos de computa\u00e7\u00e3o necess\u00e1rios para o estudo de viabilidade de ML. Certificar-se de que os dados fornecidos tenham qualidade e sejam relevantes para a solu\u00e7\u00e3o de ML. Certificar-se de que a equipe do projeto tenha um bom entendimento dos dados. Certificar-se de que os SMEs (Especialistas em Assunto) necess\u00e1rios estejam presentes no Workshop de Explora\u00e7\u00e3o de Dados. Listar as pessoas necess\u00e1rias para o workshop de explora\u00e7\u00e3o de dados. Estudo de Viabilidade de ML at\u00e9 [data] Objetivos Declare o que esperamos ser o objetivo no estudo de viabilidade. Cronograma D\u00ea um cronograma poss\u00edvel para o estudo de viabilidade. Pessoal necess\u00e1rio Que tipos de pessoas/pap\u00e9is s\u00e3o necess\u00e1rios para o estudo de viabilidade? O que Vem Depois do Estudo de Viabilidade de ML Detalhe aqui. Resumo do Cronograma Abaixo est\u00e1 um resumo de alto n\u00edvel do cronograma futuro: Discuta datas para o workshop de explora\u00e7\u00e3o de dados e estudo de viabilidade, juntamente com quaisquer itens a fazer, como iniciar o processo de IA respons\u00e1vel, identificar recursos de engenharia. Sugerimos usar uma lista de marcadores concisa ou uma tabela para transmitir facilmente as informa\u00e7\u00f5es.","title":"Resumo Gen\u00e9rico da Concep\u00e7\u00e3o"},{"location":"machine-learning/ml-envisioning-summary-template/#resumo-generico-da-concepcao","text":"","title":"Resumo Gen\u00e9rico da Concep\u00e7\u00e3o"},{"location":"machine-learning/ml-envisioning-summary-template/#proposito-deste-modelo","text":"Este \u00e9 um exemplo de um resumo de concep\u00e7\u00e3o conclu\u00eddo ap\u00f3s as sess\u00f5es de concep\u00e7\u00e3o. Ele resume os materiais revisados, os cen\u00e1rios de aplica\u00e7\u00e3o discutidos e decididos, e os pr\u00f3ximos passos no processo.","title":"Prop\u00f3sito deste modelo"},{"location":"machine-learning/ml-envisioning-summary-template/#resumo-da-concepcao","text":"","title":"Resumo da Concep\u00e7\u00e3o"},{"location":"machine-learning/ml-envisioning-summary-template/#introducao","text":"Este documento tem como objetivo resumir o que discutimos nessas sess\u00f5es de concep\u00e7\u00e3o e o que decidimos trabalhar neste engajamento de aprendizado de m\u00e1quina (ML). Com este documento, esperamos que todos estejam na mesma p\u00e1gina em rela\u00e7\u00e3o ao escopo deste engajamento de ML e garantir\u00e1 um in\u00edcio bem-sucedido para o projeto.","title":"Introdu\u00e7\u00e3o"},{"location":"machine-learning/ml-envisioning-summary-template/#materiais-compartilhados-com-a-equipe","text":"Liste os materiais compartilhados com voc\u00ea aqui. A lista abaixo cont\u00e9m alguns exemplos. Voc\u00ea vai querer ser mais espec\u00edfico. Declara\u00e7\u00e3o de vis\u00e3o de neg\u00f3cios Amostra de dados Declara\u00e7\u00e3o de problema atual Tamb\u00e9m discuta: Como a solu\u00e7\u00e3o atual \u00e9 constru\u00edda e implementada Detalhes sobre o estado atual dos sistemas e processos.","title":"Materiais Compartilhados com a Equipe"},{"location":"machine-learning/ml-envisioning-summary-template/#cenarios-de-aplicacao-que-podem-ajudar-pessoas-a-alcancar-tarefa","text":"Os seguintes cen\u00e1rios de aplica\u00e7\u00e3o foram discutidos: Cen\u00e1rio 1: Cen\u00e1rio 2: Adicione mais cen\u00e1rios conforme necess\u00e1rio Para cada cen\u00e1rio, forne\u00e7a um nome descritivo apropriado e siga com mais detalhes. Para cada cen\u00e1rio, discuta: Qual declara\u00e7\u00e3o de problema foi discutida Como propomos resolver o problema (pode haver v\u00e1rias propostas) Quem usaria a solu\u00e7\u00e3o Como seria usar nossa solu\u00e7\u00e3o? Um exemplo de como isso traria valor ao usu\u00e1rio final.","title":"Cen\u00e1rios de Aplica\u00e7\u00e3o que Podem Ajudar [Pessoas] a Alcan\u00e7ar [Tarefa]"},{"location":"machine-learning/ml-envisioning-summary-template/#cenario-selecionado-para-este-engajamento-de-ml","text":"Qual cen\u00e1rio foi selecionado? Por que esse cen\u00e1rio foi priorizado em rela\u00e7\u00e3o aos outros? Outros cen\u00e1rios ser\u00e3o considerados no futuro? Quando os revisaremos / que condi\u00e7\u00f5es precisam ser atendidas para persegui-los?","title":"Cen\u00e1rio Selecionado para Este Engajamento de ML"},{"location":"machine-learning/ml-envisioning-summary-template/#mais-detalhes-do-escopo-para-o-cenario-selecionado","text":"O que est\u00e1 dentro do escopo? Que dados est\u00e3o dispon\u00edveis? Qual m\u00e9trica de desempenho usar? Barra de m\u00e9tricas de desempenho Quais s\u00e3o os entreg\u00e1veis?","title":"Mais Detalhes do Escopo para o Cen\u00e1rio Selecionado"},{"location":"machine-learning/ml-envisioning-summary-template/#proximos-passos","text":"","title":"Pr\u00f3ximos Passos"},{"location":"machine-learning/ml-envisioning-summary-template/#documentos-legais-a-serem-assinados","text":"Especifique os documentos e o cronograma.","title":"Documentos legais a serem assinados"},{"location":"machine-learning/ml-envisioning-summary-template/#revisao-de-ia-responsavel","text":"Planeje quando realizar um processo de IA respons\u00e1vel. Quais s\u00e3o os pr\u00e9-requisitos para iniciar este processo?","title":"Revis\u00e3o de IA Respons\u00e1vel"},{"location":"machine-learning/ml-envisioning-summary-template/#workshop-de-exploracao-de-dados","text":"Um workshop de explora\u00e7\u00e3o de dados est\u00e1 planejado para o PER\u00cdODO . Este workshop de explora\u00e7\u00e3o de dados ter\u00e1 X a Y dias, excluindo o tempo para obter acesso aos recursos. O objetivo do workshop de explora\u00e7\u00e3o de dados \u00e9 o seguinte: Garantir que a equipe possa acessar os dados e recursos de computa\u00e7\u00e3o necess\u00e1rios para o estudo de viabilidade de ML. Certificar-se de que os dados fornecidos tenham qualidade e sejam relevantes para a solu\u00e7\u00e3o de ML. Certificar-se de que a equipe do projeto tenha um bom entendimento dos dados. Certificar-se de que os SMEs (Especialistas em Assunto) necess\u00e1rios estejam presentes no Workshop de Explora\u00e7\u00e3o de Dados. Listar as pessoas necess\u00e1rias para o workshop de explora\u00e7\u00e3o de dados.","title":"Workshop de Explora\u00e7\u00e3o de Dados"},{"location":"machine-learning/ml-envisioning-summary-template/#estudo-de-viabilidade-de-ml-ate-data","text":"","title":"Estudo de Viabilidade de ML at\u00e9 [data]"},{"location":"machine-learning/ml-envisioning-summary-template/#objetivos","text":"Declare o que esperamos ser o objetivo no estudo de viabilidade.","title":"Objetivos"},{"location":"machine-learning/ml-envisioning-summary-template/#cronograma","text":"D\u00ea um cronograma poss\u00edvel para o estudo de viabilidade.","title":"Cronograma"},{"location":"machine-learning/ml-envisioning-summary-template/#pessoal-necessario","text":"Que tipos de pessoas/pap\u00e9is s\u00e3o necess\u00e1rios para o estudo de viabilidade?","title":"Pessoal necess\u00e1rio"},{"location":"machine-learning/ml-envisioning-summary-template/#o-que-vem-depois-do-estudo-de-viabilidade-de-ml","text":"Detalhe aqui.","title":"O que Vem Depois do Estudo de Viabilidade de ML"},{"location":"machine-learning/ml-envisioning-summary-template/#resumo-do-cronograma","text":"Abaixo est\u00e1 um resumo de alto n\u00edvel do cronograma futuro: Discuta datas para o workshop de explora\u00e7\u00e3o de dados e estudo de viabilidade, juntamente com quaisquer itens a fazer, como iniciar o processo de IA respons\u00e1vel, identificar recursos de engenharia. Sugerimos usar uma lista de marcadores concisa ou uma tabela para transmitir facilmente as informa\u00e7\u00f5es.","title":"Resumo do Cronograma"},{"location":"machine-learning/ml-experimentation/","text":"Experimenta\u00e7\u00e3o de Modelos Vis\u00e3o Geral A experimenta\u00e7\u00e3o de modelos de aprendizado de m\u00e1quina envolve incerteza em torno dos resultados esperados do modelo e futura operacionaliza\u00e7\u00e3o. Para lidar com essa incerteza o m\u00e1ximo poss\u00edvel, propomos um processo semi-estruturado, equilibrando as melhores pr\u00e1ticas de engenharia/pesquisa e explora\u00e7\u00e3o r\u00e1pida de modelo/dados. Objetivos da experimenta\u00e7\u00e3o de modelos Desempenho : Encontrar a solu\u00e7\u00e3o com melhor desempenho. Operacionaliza\u00e7\u00e3o : Manter um olho na produ\u00e7\u00e3o, garantindo que a operacionaliza\u00e7\u00e3o seja vi\u00e1vel. Qualidade do c\u00f3digo : Manter a qualidade do c\u00f3digo e dos artefatos. Reprodutibilidade : Manter a pesquisa ativa permitindo o rastreamento e a reprodutibilidade dos experimentos. Colabora\u00e7\u00e3o : Fomentar a colabora\u00e7\u00e3o e o trabalho conjunto de v\u00e1rias pessoas na equipe. Desafios da experimenta\u00e7\u00e3o de modelos Processo de tentativa e erro : Dif\u00edcil de planejar e estimar dura\u00e7\u00f5es e capacidade. R\u00e1pido e sujo : Queremos falhar rapidamente e ter uma ideia do que est\u00e1 funcionando eficientemente. Colabora\u00e7\u00e3o : Como formar um processo de tentativa e erro em toda a equipe e brainstorming eficaz. Qualidade do c\u00f3digo : Como manter a qualidade do c\u00f3digo que n\u00e3o \u00e9 de produ\u00e7\u00e3o durante a pesquisa. Operacionaliza\u00e7\u00e3o : A mudan\u00e7a entre abordagens pode ter um impacto significativo na operacionaliza\u00e7\u00e3o (por exemplo, GPU/CPU, lote/online, paralelo/sequencial, ambientes de tempo de execu\u00e7\u00e3o). Criar um framework de experimenta\u00e7\u00e3o que facilite a experimenta\u00e7\u00e3o r\u00e1pida, colabora\u00e7\u00e3o, reprodutibilidade dos experimentos e modelos, avalia\u00e7\u00e3o e APIs definidas, e permita que cada membro da equipe se concentre no desenvolvimento e aprimoramento do modelo, enquanto confia no framework para fazer o resto. As seguintes ferramentas e diretrizes t\u00eam como objetivo alcan\u00e7ar os objetivos da experimenta\u00e7\u00e3o, bem como abordar os desafios mencionados anteriormente. Ferramentas e diretrizes para experimenta\u00e7\u00e3o de modelos bem-sucedida Ambientes virtuais Controle de c\u00f3digo-fonte e estrutura de pastas/pacotes Rastreamento de experimentos Abstra\u00e7\u00f5es de conjuntos de dados e modelos Avalia\u00e7\u00e3o de modelos Ambientes virtuais Em linguagens como Python e R, \u00e9 sempre aconselh\u00e1vel usar ambientes virtuais. Ambientes virtuais facilitam a reprodutibilidade, colabora\u00e7\u00e3o e productiza\u00e7\u00e3o. Ambientes virtuais nos permitem ser consistentes em nossos ambientes locais de desenvolvimento, assim como com os recursos de computa\u00e7\u00e3o. Os arquivos de configura\u00e7\u00e3o desses ambientes podem ser usados para construir o c\u00f3digo a partir da fonte de uma maneira consistente. Para obter mais detalhes sobre por que precisamos de ambientes virtuais, visite este post no blog . Qual framework de ambiente virtual devo escolher Todos os frameworks de ambiente virtual criam isolamento, alguns tamb\u00e9m prop\u00f5em gerenciamento de depend\u00eancias e recursos adicionais. A decis\u00e3o sobre qual framework usar depende da complexidade do ambiente de desenvolvimento (depend\u00eancias e outros recursos necess\u00e1rios) e da facilidade de uso do framework. Tipos de ambientes virtuais Na ISE, frequentemente escolhemos entre venv , Conda ou Poetry , dependendo dos requisitos e complexidade do projeto. venv est\u00e1 inclu\u00eddo no Python, \u00e9 o mais f\u00e1cil de usar, mas carece de recursos mais avan\u00e7ados, como gerenciamento de depend\u00eancias. Conda \u00e9 um framework popular de gerenciamento de pacotes, depend\u00eancias e ambiente. Suporta v\u00e1rias pilhas (Python, R) e v\u00e1rias vers\u00f5es do mesmo ambiente (por exemplo, v\u00e1rias vers\u00f5es do Python). O Conda mant\u00e9m seu pr\u00f3prio reposit\u00f3rio de pacotes, portanto, alguns pacotes podem n\u00e3o ser baixados e gerenciados diretamente pelo Conda . Poetry \u00e9 um sistema de gerenciamento de depend\u00eancias Python que gerencia depend\u00eancias de maneira padr\u00e3o usando arquivos pyproject.toml e arquivos lock . Semelhante ao Conda , o processo de resolu\u00e7\u00e3o de depend\u00eancias do Poetry \u00e0s vezes \u00e9 lento (consulte FAQ ), mas em casos em que problemas de depend\u00eancia s\u00e3o comuns ou complicados, ele fornece uma maneira robusta de criar ambientes reproduz\u00edveis e est\u00e1veis. Resultados esperados para a configura\u00e7\u00e3o de ambientes virtuais Documenta\u00e7\u00e3o descrevendo como criar o ambiente virtual selecionado e como instalar as depend\u00eancias. Arquivos de configura\u00e7\u00e3o do ambiente, se aplic\u00e1vel (por exemplo, requirements.txt para venv , environment.yml para Conda ou pyrpoject.toml para Poetry ). Benef\u00edcios de ambientes virtuais Productiza\u00e7\u00e3o Colabora\u00e7\u00e3o Reprodutibilidade Controle de c\u00f3digo-fonte e estr utura de pastas ou pacotes Projetos de ML aplicado frequentemente cont\u00eam c\u00f3digo-fonte, notebooks, scripts de DevOps, documenta\u00e7\u00e3o, recursos cient\u00edficos, conjuntos de dados e muito mais. Recomendamos criar uma estrutura de pastas acordada para manter os recursos organizados. Considere decidir sobre uma estrutura de pastas gen\u00e9rica para projetos (por exemplo, que contenha as pastas data , src , docs e notebooks ), ou adote estruturas populares como a estrutura de pastas CookieCutter Data Science . Controle de c\u00f3digo-fonte deve ser aplicado para permitir colabora\u00e7\u00e3o, versionamento, revis\u00f5es de c\u00f3digo, rastreabilidade e backup. Em projetos de ci\u00eancia de dados, o controle de c\u00f3digo-fonte deve ser usado para c\u00f3digo, e o armazenamento e versionamento de outros artefatos (por exemplo, dados, literatura cient\u00edfica) deve ser decidido dependendo do cen\u00e1rio. Resultados da estrutura de pastas e controle de c\u00f3digo-fonte Estrutura de pastas definida para que todos os usu\u00e1rios a utilizem, enviada para o reposit\u00f3rio. Arquivo .gitignore determinando quais pastas devem ser sincronizadas com o git e quais devem ser mantidas localmente. Por exemplo, este . Determinar como os notebooks s\u00e3o armazenados e versionados (por exemplo, remover a sa\u00edda dos notebooks Jupyter ). Benef\u00edcios de controle de c\u00f3digo-fonte e estrutura de pastas Colabora\u00e7\u00e3o Reprodutibilidade Qualidade do c\u00f3digo Rastreamento de experimentos Ferramentas de rastreamento de experimentos permitem que cientistas de dados e pesquisadores acompanhem experimentos anteriores para uma melhor compreens\u00e3o do processo de experimenta\u00e7\u00e3o e para a reproducibilidade de experimentos ou modelos. Tipos de frameworks de rastreamento de experimentos Frameworks de rastreamento de experimentos diferem pelo conjunto de recursos que oferecem para coletar metadados de experimentos e comparar e analisar experimentos. Na ISE, principalmente usamos MLFlow no Databricks ou Azure ML Experimentation . Observe que alguns frameworks de rastreamento de experimentos exigem uma implanta\u00e7\u00e3o, enquanto outros s\u00e3o SaaS. Resultados do rastreamento de experimentos Decida sobre um framework de rastreamento de experimentos. Garanta que ele seja acess\u00edvel a todos os usu\u00e1rios. Documente a configura\u00e7\u00e3o em ambientes locais. Defina conjuntos de dados e avalia\u00e7\u00f5es de uma maneira que permita a compara\u00e7\u00e3o de todos os experimentos. A consist\u00eancia nos conjuntos de dados e avalia\u00e7\u00e3o \u00e9 fundamental para a compara\u00e7\u00e3o de experimentos . Garanta a plena reprodutibilidade, assegurando que todos os detalhes necess\u00e1rios sejam rastreados (ou seja, nomes e vers\u00f5es de conjuntos de dados, par\u00e2metros, c\u00f3digo, ambiente). Benef\u00edcios do rastreamento de experimentos Desempenho do modelo Reprodutibilidade Colabora\u00e7\u00e3o Qualidade do c\u00f3digo Abstra\u00e7\u00f5es de conjuntos de dados e modelos Ao criar abstra\u00e7\u00f5es para blocos de constru\u00e7\u00e3o (por exemplo, conjuntos de dados, modelos, avaliadores), permitimos a f\u00e1cil introdu\u00e7\u00e3o de novas l\u00f3gicas na tubula\u00e7\u00e3o de experimenta\u00e7\u00e3o, mantendo intacta a tubula\u00e7\u00e3o de experimenta\u00e7\u00e3o acordada. Essas abstra\u00e7\u00f5es podem ser criadas usando diferentes mecanismos. Por exemplo, podemos usar solu\u00e7\u00f5es de Programa\u00e7\u00e3o Orientada a Objetos (OOP) como classes abstratas: Um exemplo do scikit-learn descrevendo a cria\u00e7\u00e3o de novos estimadores compat\u00edveis com a API . [Um exemplo do PyTorch sobre a extens\u00e3o da classe abstrata Dataset ](https://pytorch.org/tutorials /beginner/data_loading_tutorial.html#dataset-class). Resultados de abstra\u00e7\u00e3o Diferentes blocos de constru\u00e7\u00e3o t\u00eam APIs definidas que permitem substitu\u00ed-los ou estend\u00ea-los. A substitui\u00e7\u00e3o dos blocos de constru\u00e7\u00e3o n\u00e3o quebra o fluxo original de experimenta\u00e7\u00e3o. Blocos de constru\u00e7\u00e3o simulados s\u00e3o usados para testes unit\u00e1rios. APIs/mocks s\u00e3o compartilhados com as equipes de engenharia para integra\u00e7\u00e3o com outros m\u00f3dulos. Benef\u00edcios de abstra\u00e7\u00f5es Colabora\u00e7\u00e3o Qualidade do c\u00f3digo Reprodutibilidade Operacionaliza\u00e7\u00e3o Desempenho do modelo Avalia\u00e7\u00e3o de modelos Ao decidir sobre a avalia\u00e7\u00e3o do modelo de ML/processo, considere a seguinte lista de verifica\u00e7\u00e3o: A l\u00f3gica de avalia\u00e7\u00e3o \u00e9 aprovada por todas as partes interessadas. A rela\u00e7\u00e3o entre a l\u00f3gica de avalia\u00e7\u00e3o e os KPIs de neg\u00f3cios \u00e9 analisada e decidida. O fluxo de avalia\u00e7\u00e3o \u00e9 aplic\u00e1vel a todos os modelos presentes e futuros (ou seja, n\u00e3o assume alguma estrutura de previs\u00e3o ou processo espec\u00edfico do m\u00e9todo). O c\u00f3digo de avalia\u00e7\u00e3o \u00e9 testado unitariamente e revisado por todos os membros da equipe. O fluxo de avalia\u00e7\u00e3o facilita an\u00e1lises adicionais de resultados e erros. Resultados do processo de desenvolvimento de avalia\u00e7\u00e3o A estrat\u00e9gia de avalia\u00e7\u00e3o \u00e9 acordada por todas as partes interessadas. Pesquisa e discuss\u00e3o sobre v\u00e1rios m\u00e9todos e m\u00e9tricas de avalia\u00e7\u00e3o s\u00e3o documentados. O c\u00f3digo que cont\u00e9m a l\u00f3gica e as estruturas de dados para avalia\u00e7\u00e3o \u00e9 revisado e testado. A documenta\u00e7\u00e3o sobre como aplicar a avalia\u00e7\u00e3o \u00e9 revisada. As m\u00e9tricas de desempenho s\u00e3o rastreadas automaticamente no rastreador de experimentos. Benef\u00edcios do processo de desenvolvimento de avalia\u00e7\u00e3o Desempenho do modelo Qualidade do c\u00f3digo Colabora\u00e7\u00e3o Reprodutibilidade","title":"Experimenta\u00e7\u00e3o de Modelos"},{"location":"machine-learning/ml-experimentation/#experimentacao-de-modelos","text":"","title":"Experimenta\u00e7\u00e3o de Modelos"},{"location":"machine-learning/ml-experimentation/#visao-geral","text":"A experimenta\u00e7\u00e3o de modelos de aprendizado de m\u00e1quina envolve incerteza em torno dos resultados esperados do modelo e futura operacionaliza\u00e7\u00e3o. Para lidar com essa incerteza o m\u00e1ximo poss\u00edvel, propomos um processo semi-estruturado, equilibrando as melhores pr\u00e1ticas de engenharia/pesquisa e explora\u00e7\u00e3o r\u00e1pida de modelo/dados.","title":"Vis\u00e3o Geral"},{"location":"machine-learning/ml-experimentation/#objetivos-da-experimentacao-de-modelos","text":"Desempenho : Encontrar a solu\u00e7\u00e3o com melhor desempenho. Operacionaliza\u00e7\u00e3o : Manter um olho na produ\u00e7\u00e3o, garantindo que a operacionaliza\u00e7\u00e3o seja vi\u00e1vel. Qualidade do c\u00f3digo : Manter a qualidade do c\u00f3digo e dos artefatos. Reprodutibilidade : Manter a pesquisa ativa permitindo o rastreamento e a reprodutibilidade dos experimentos. Colabora\u00e7\u00e3o : Fomentar a colabora\u00e7\u00e3o e o trabalho conjunto de v\u00e1rias pessoas na equipe.","title":"Objetivos da experimenta\u00e7\u00e3o de modelos"},{"location":"machine-learning/ml-experimentation/#desafios-da-experimentacao-de-modelos","text":"Processo de tentativa e erro : Dif\u00edcil de planejar e estimar dura\u00e7\u00f5es e capacidade. R\u00e1pido e sujo : Queremos falhar rapidamente e ter uma ideia do que est\u00e1 funcionando eficientemente. Colabora\u00e7\u00e3o : Como formar um processo de tentativa e erro em toda a equipe e brainstorming eficaz. Qualidade do c\u00f3digo : Como manter a qualidade do c\u00f3digo que n\u00e3o \u00e9 de produ\u00e7\u00e3o durante a pesquisa. Operacionaliza\u00e7\u00e3o : A mudan\u00e7a entre abordagens pode ter um impacto significativo na operacionaliza\u00e7\u00e3o (por exemplo, GPU/CPU, lote/online, paralelo/sequencial, ambientes de tempo de execu\u00e7\u00e3o). Criar um framework de experimenta\u00e7\u00e3o que facilite a experimenta\u00e7\u00e3o r\u00e1pida, colabora\u00e7\u00e3o, reprodutibilidade dos experimentos e modelos, avalia\u00e7\u00e3o e APIs definidas, e permita que cada membro da equipe se concentre no desenvolvimento e aprimoramento do modelo, enquanto confia no framework para fazer o resto. As seguintes ferramentas e diretrizes t\u00eam como objetivo alcan\u00e7ar os objetivos da experimenta\u00e7\u00e3o, bem como abordar os desafios mencionados anteriormente.","title":"Desafios da experimenta\u00e7\u00e3o de modelos"},{"location":"machine-learning/ml-experimentation/#ferramentas-e-diretrizes-para-experimentacao-de-modelos-bem-sucedida","text":"Ambientes virtuais Controle de c\u00f3digo-fonte e estrutura de pastas/pacotes Rastreamento de experimentos Abstra\u00e7\u00f5es de conjuntos de dados e modelos Avalia\u00e7\u00e3o de modelos","title":"Ferramentas e diretrizes para experimenta\u00e7\u00e3o de modelos bem-sucedida"},{"location":"machine-learning/ml-experimentation/#ambientes-virtuais","text":"Em linguagens como Python e R, \u00e9 sempre aconselh\u00e1vel usar ambientes virtuais. Ambientes virtuais facilitam a reprodutibilidade, colabora\u00e7\u00e3o e productiza\u00e7\u00e3o. Ambientes virtuais nos permitem ser consistentes em nossos ambientes locais de desenvolvimento, assim como com os recursos de computa\u00e7\u00e3o. Os arquivos de configura\u00e7\u00e3o desses ambientes podem ser usados para construir o c\u00f3digo a partir da fonte de uma maneira consistente. Para obter mais detalhes sobre por que precisamos de ambientes virtuais, visite este post no blog .","title":"Ambientes virtuais"},{"location":"machine-learning/ml-experimentation/#qual-framework-de-ambiente-virtual-devo-escolher","text":"Todos os frameworks de ambiente virtual criam isolamento, alguns tamb\u00e9m prop\u00f5em gerenciamento de depend\u00eancias e recursos adicionais. A decis\u00e3o sobre qual framework usar depende da complexidade do ambiente de desenvolvimento (depend\u00eancias e outros recursos necess\u00e1rios) e da facilidade de uso do framework.","title":"Qual framework de ambiente virtual devo escolher"},{"location":"machine-learning/ml-experimentation/#tipos-de-ambientes-virtuais","text":"Na ISE, frequentemente escolhemos entre venv , Conda ou Poetry , dependendo dos requisitos e complexidade do projeto. venv est\u00e1 inclu\u00eddo no Python, \u00e9 o mais f\u00e1cil de usar, mas carece de recursos mais avan\u00e7ados, como gerenciamento de depend\u00eancias. Conda \u00e9 um framework popular de gerenciamento de pacotes, depend\u00eancias e ambiente. Suporta v\u00e1rias pilhas (Python, R) e v\u00e1rias vers\u00f5es do mesmo ambiente (por exemplo, v\u00e1rias vers\u00f5es do Python). O Conda mant\u00e9m seu pr\u00f3prio reposit\u00f3rio de pacotes, portanto, alguns pacotes podem n\u00e3o ser baixados e gerenciados diretamente pelo Conda . Poetry \u00e9 um sistema de gerenciamento de depend\u00eancias Python que gerencia depend\u00eancias de maneira padr\u00e3o usando arquivos pyproject.toml e arquivos lock . Semelhante ao Conda , o processo de resolu\u00e7\u00e3o de depend\u00eancias do Poetry \u00e0s vezes \u00e9 lento (consulte FAQ ), mas em casos em que problemas de depend\u00eancia s\u00e3o comuns ou complicados, ele fornece uma maneira robusta de criar ambientes reproduz\u00edveis e est\u00e1veis.","title":"Tipos de ambientes virtuais"},{"location":"machine-learning/ml-experimentation/#resultados-esperados-para-a-configuracao-de-ambientes-virtuais","text":"Documenta\u00e7\u00e3o descrevendo como criar o ambiente virtual selecionado e como instalar as depend\u00eancias. Arquivos de configura\u00e7\u00e3o do ambiente, se aplic\u00e1vel (por exemplo, requirements.txt para venv , environment.yml para Conda ou pyrpoject.toml para Poetry ).","title":"Resultados esperados para a configura\u00e7\u00e3o de ambientes virtuais"},{"location":"machine-learning/ml-experimentation/#beneficios-de-ambientes-virtuais","text":"Productiza\u00e7\u00e3o Colabora\u00e7\u00e3o Reprodutibilidade","title":"Benef\u00edcios de ambientes virtuais"},{"location":"machine-learning/ml-experimentation/#controle-de-codigo-fonte-e-estr","text":"utura de pastas ou pacotes Projetos de ML aplicado frequentemente cont\u00eam c\u00f3digo-fonte, notebooks, scripts de DevOps, documenta\u00e7\u00e3o, recursos cient\u00edficos, conjuntos de dados e muito mais. Recomendamos criar uma estrutura de pastas acordada para manter os recursos organizados. Considere decidir sobre uma estrutura de pastas gen\u00e9rica para projetos (por exemplo, que contenha as pastas data , src , docs e notebooks ), ou adote estruturas populares como a estrutura de pastas CookieCutter Data Science . Controle de c\u00f3digo-fonte deve ser aplicado para permitir colabora\u00e7\u00e3o, versionamento, revis\u00f5es de c\u00f3digo, rastreabilidade e backup. Em projetos de ci\u00eancia de dados, o controle de c\u00f3digo-fonte deve ser usado para c\u00f3digo, e o armazenamento e versionamento de outros artefatos (por exemplo, dados, literatura cient\u00edfica) deve ser decidido dependendo do cen\u00e1rio.","title":"Controle de c\u00f3digo-fonte e estr"},{"location":"machine-learning/ml-experimentation/#resultados-da-estrutura-de-pastas-e-controle-de-codigo-fonte","text":"Estrutura de pastas definida para que todos os usu\u00e1rios a utilizem, enviada para o reposit\u00f3rio. Arquivo .gitignore determinando quais pastas devem ser sincronizadas com o git e quais devem ser mantidas localmente. Por exemplo, este . Determinar como os notebooks s\u00e3o armazenados e versionados (por exemplo, remover a sa\u00edda dos notebooks Jupyter ).","title":"Resultados da estrutura de pastas e controle de c\u00f3digo-fonte"},{"location":"machine-learning/ml-experimentation/#beneficios-de-controle-de-codigo-fonte-e-estrutura-de-pastas","text":"Colabora\u00e7\u00e3o Reprodutibilidade Qualidade do c\u00f3digo","title":"Benef\u00edcios de controle de c\u00f3digo-fonte e estrutura de pastas"},{"location":"machine-learning/ml-experimentation/#rastreamento-de-experimentos","text":"Ferramentas de rastreamento de experimentos permitem que cientistas de dados e pesquisadores acompanhem experimentos anteriores para uma melhor compreens\u00e3o do processo de experimenta\u00e7\u00e3o e para a reproducibilidade de experimentos ou modelos.","title":"Rastreamento de experimentos"},{"location":"machine-learning/ml-experimentation/#tipos-de-frameworks-de-rastreamento-de-experimentos","text":"Frameworks de rastreamento de experimentos diferem pelo conjunto de recursos que oferecem para coletar metadados de experimentos e comparar e analisar experimentos. Na ISE, principalmente usamos MLFlow no Databricks ou Azure ML Experimentation . Observe que alguns frameworks de rastreamento de experimentos exigem uma implanta\u00e7\u00e3o, enquanto outros s\u00e3o SaaS.","title":"Tipos de frameworks de rastreamento de experimentos"},{"location":"machine-learning/ml-experimentation/#resultados-do-rastreamento-de-experimentos","text":"Decida sobre um framework de rastreamento de experimentos. Garanta que ele seja acess\u00edvel a todos os usu\u00e1rios. Documente a configura\u00e7\u00e3o em ambientes locais. Defina conjuntos de dados e avalia\u00e7\u00f5es de uma maneira que permita a compara\u00e7\u00e3o de todos os experimentos. A consist\u00eancia nos conjuntos de dados e avalia\u00e7\u00e3o \u00e9 fundamental para a compara\u00e7\u00e3o de experimentos . Garanta a plena reprodutibilidade, assegurando que todos os detalhes necess\u00e1rios sejam rastreados (ou seja, nomes e vers\u00f5es de conjuntos de dados, par\u00e2metros, c\u00f3digo, ambiente).","title":"Resultados do rastreamento de experimentos"},{"location":"machine-learning/ml-experimentation/#beneficios-do-rastreamento-de-experimentos","text":"Desempenho do modelo Reprodutibilidade Colabora\u00e7\u00e3o Qualidade do c\u00f3digo","title":"Benef\u00edcios do rastreamento de experimentos"},{"location":"machine-learning/ml-experimentation/#abstracoes-de-conjuntos-de-dados-e-modelos","text":"Ao criar abstra\u00e7\u00f5es para blocos de constru\u00e7\u00e3o (por exemplo, conjuntos de dados, modelos, avaliadores), permitimos a f\u00e1cil introdu\u00e7\u00e3o de novas l\u00f3gicas na tubula\u00e7\u00e3o de experimenta\u00e7\u00e3o, mantendo intacta a tubula\u00e7\u00e3o de experimenta\u00e7\u00e3o acordada. Essas abstra\u00e7\u00f5es podem ser criadas usando diferentes mecanismos. Por exemplo, podemos usar solu\u00e7\u00f5es de Programa\u00e7\u00e3o Orientada a Objetos (OOP) como classes abstratas: Um exemplo do scikit-learn descrevendo a cria\u00e7\u00e3o de novos estimadores compat\u00edveis com a API . [Um exemplo do PyTorch sobre a extens\u00e3o da classe abstrata Dataset ](https://pytorch.org/tutorials /beginner/data_loading_tutorial.html#dataset-class).","title":"Abstra\u00e7\u00f5es de conjuntos de dados e modelos"},{"location":"machine-learning/ml-experimentation/#resultados-de-abstracao","text":"Diferentes blocos de constru\u00e7\u00e3o t\u00eam APIs definidas que permitem substitu\u00ed-los ou estend\u00ea-los. A substitui\u00e7\u00e3o dos blocos de constru\u00e7\u00e3o n\u00e3o quebra o fluxo original de experimenta\u00e7\u00e3o. Blocos de constru\u00e7\u00e3o simulados s\u00e3o usados para testes unit\u00e1rios. APIs/mocks s\u00e3o compartilhados com as equipes de engenharia para integra\u00e7\u00e3o com outros m\u00f3dulos.","title":"Resultados de abstra\u00e7\u00e3o"},{"location":"machine-learning/ml-experimentation/#beneficios-de-abstracoes","text":"Colabora\u00e7\u00e3o Qualidade do c\u00f3digo Reprodutibilidade Operacionaliza\u00e7\u00e3o Desempenho do modelo","title":"Benef\u00edcios de abstra\u00e7\u00f5es"},{"location":"machine-learning/ml-experimentation/#avaliacao-de-modelos","text":"Ao decidir sobre a avalia\u00e7\u00e3o do modelo de ML/processo, considere a seguinte lista de verifica\u00e7\u00e3o: A l\u00f3gica de avalia\u00e7\u00e3o \u00e9 aprovada por todas as partes interessadas. A rela\u00e7\u00e3o entre a l\u00f3gica de avalia\u00e7\u00e3o e os KPIs de neg\u00f3cios \u00e9 analisada e decidida. O fluxo de avalia\u00e7\u00e3o \u00e9 aplic\u00e1vel a todos os modelos presentes e futuros (ou seja, n\u00e3o assume alguma estrutura de previs\u00e3o ou processo espec\u00edfico do m\u00e9todo). O c\u00f3digo de avalia\u00e7\u00e3o \u00e9 testado unitariamente e revisado por todos os membros da equipe. O fluxo de avalia\u00e7\u00e3o facilita an\u00e1lises adicionais de resultados e erros.","title":"Avalia\u00e7\u00e3o de modelos"},{"location":"machine-learning/ml-experimentation/#resultados-do-processo-de-desenvolvimento-de-avaliacao","text":"A estrat\u00e9gia de avalia\u00e7\u00e3o \u00e9 acordada por todas as partes interessadas. Pesquisa e discuss\u00e3o sobre v\u00e1rios m\u00e9todos e m\u00e9tricas de avalia\u00e7\u00e3o s\u00e3o documentados. O c\u00f3digo que cont\u00e9m a l\u00f3gica e as estruturas de dados para avalia\u00e7\u00e3o \u00e9 revisado e testado. A documenta\u00e7\u00e3o sobre como aplicar a avalia\u00e7\u00e3o \u00e9 revisada. As m\u00e9tricas de desempenho s\u00e3o rastreadas automaticamente no rastreador de experimentos.","title":"Resultados do processo de desenvolvimento de avalia\u00e7\u00e3o"},{"location":"machine-learning/ml-experimentation/#beneficios-do-processo-de-desenvolvimento-de-avaliacao","text":"Desempenho do modelo Qualidade do c\u00f3digo Colabora\u00e7\u00e3o Reprodutibilidade","title":"Benef\u00edcios do processo de desenvolvimento de avalia\u00e7\u00e3o"},{"location":"machine-learning/ml-feasibility-study/","text":"Estudos de Viabilidade O principal objetivo dos estudos de viabilidade \u00e9 avaliar se \u00e9 vi\u00e1vel resolver o problema de forma satisfat\u00f3ria usando aprendizado de m\u00e1quina (ML) com os dados dispon\u00edveis. Queremos evitar investir demais na solu\u00e7\u00e3o antes de termos: Evid\u00eancias suficientes de que uma solu\u00e7\u00e3o seria a melhor solu\u00e7\u00e3o t\u00e9cnica, dadas as considera\u00e7\u00f5es do caso de neg\u00f3cios. Evid\u00eancias suficientes de que uma solu\u00e7\u00e3o \u00e9 compat\u00edvel com o contexto do problema. Evid\u00eancias suficientes de que uma solu\u00e7\u00e3o \u00e9 poss\u00edvel. Alguma dire\u00e7\u00e3o validada sobre como uma solu\u00e7\u00e3o deve ser. Esse esfor\u00e7o garante solu\u00e7\u00f5es de qualidade respaldadas pela quantidade apropriada de considera\u00e7\u00e3o e evid\u00eancia. Quando s\u00e3o \u00fateis os estudos de viabilidade? Cada engajamento pode se beneficiar de um estudo de viabilidade no in\u00edcio do projeto. Discuss\u00f5es arquitet\u00f4nicas ainda podem ocorrer em paralelo enquanto a equipe trabalha para obter uma compreens\u00e3o s\u00f3lida e defini\u00e7\u00e3o do que ser\u00e1 constru\u00eddo. Os estudos de viabilidade podem durar entre 4 e 16 semanas, dependendo dos detalhes espec\u00edficos do problema, volume de dados, estado dos dados, etc. Come\u00e7ar com um marco de 4 semanas pode ser \u00fatil, durante o qual pode ser determinado quanto mais tempo, se houver, \u00e9 necess\u00e1rio para a conclus\u00e3o. Quem colabora nos estudos de viabilidade? A colabora\u00e7\u00e3o de pessoas com conjuntos de habilidades diversas \u00e9 desejada nessa fase, incluindo cientistas de dados, engenheiros de dados, engenheiros de software, gerentes de projeto, pesquisadores de experi\u00eancia humana e especialistas do dom\u00ednio. Isso abra\u00e7a o uso de fundamentos de engenharia, com alguma flexibilidade. Por exemplo, nem toda experimenta\u00e7\u00e3o requer cobertura de teste completa e revis\u00e3o de c\u00f3digo. A experimenta\u00e7\u00e3o geralmente n\u00e3o faz parte de um pipeline de CI/CD (Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua). Os artefatos podem estar na branch main como uma pasta exclu\u00edda do pipeline de CI/CD ou como uma branch experimental separada, dependendo das prefer\u00eancias do cliente/equipe. O que os estudos de viabilidade envolvem? Defini\u00e7\u00e3o do problema e resultado desejado Garantir que o problema seja complexo o suficiente para que regras de codifica\u00e7\u00e3o ou dimensionamento manual sejam irrealistas. Defini\u00e7\u00e3o clara do problema do ponto de vista de neg\u00f3cios e t\u00e9cnico. Compreens\u00e3o contextual profunda Confirme que as seguintes perguntas podem ser respondidas com base no que foi aprendido durante a Fase de Descoberta do projeto. Para itens que n\u00e3o podem ser respondidos satisfatoriamente, empreenda investiga\u00e7\u00f5es adicionais para respond\u00ea-los. Compreender as pessoas que est\u00e3o usando e/ou sendo afetadas pela solu\u00e7\u00e3o. Compreender as for\u00e7as contextuais em jogo em torno do problema, incluindo metas, cultura e contexto hist\u00f3rico. Para realizar isso, um pesquisador ir\u00e1: Colaborar com clientes e colegas para explorar o cen\u00e1rio das pessoas que se relacionam e podem ser afetadas pelo espa\u00e7o do problema sendo explorado (usu\u00e1rios, partes interessadas, especialistas no assunto, etc.). Formular as perguntas de pesquisa a serem abordadas. Selecionar e projetar a pesquisa que melhor servir\u00e1 \u00e0s perguntas de pesquisa. Identificar e selecionar participantes representativos da pesquisa em todo o espa\u00e7o do problema com os quais conduzir a pesquisa. Construir um plano de pesquisa e documentos de prepara\u00e7\u00e3o necess\u00e1rios para o m\u00e9todo de pesquisa selecionado. Conduzir a atividade de pesquisa com os participantes por meio dos m\u00e9todos selecionados. Sintetizar, analisar e interpretar as descobertas da pesquisa. Quando relevante, construir estruturas, artefatos e processos que ajudem a explorar as descobertas e implica\u00e7\u00f5es da pesquisa em toda a equipe. Compartilhar o que foi descoberto e entendido, bem como suas implica\u00e7\u00f5es, com toda a equipe de engajamento e partes interessadas relevantes. Se a pesquisa acima foi conduzida durante a fase de Descoberta, ela deve ser revisada, e quaisquer lacunas significativas de conhecimento devem ser identificadas e preenchidas seguindo o processo acima. Acesso aos dados Verificar se toda a equipe tem acesso aos dados. Configurar um ambiente dedicado e/ou restrito, se necess\u00e1rio. Realizar qualquer desidentifica\u00e7\u00e3o ou omiss\u00e3o de informa\u00e7\u00f5es sens\u00edveis. Compreender os requisitos de acesso aos dados (reten\u00e7\u00e3o, acesso baseado em fun\u00e7\u00e3o, etc.). Descoberta de dados Realizar uma oficina de explora\u00e7\u00e3o de dados e aprofundar com especialistas do dom\u00ednio. Compreender a disponibilidade dos dados e confirmar o acesso da equipe. Compreender o dicion\u00e1rio de dados, se dispon\u00edvel. Compreender a qualidade dos dados. J\u00e1 existe uma estrat\u00e9gia de valida\u00e7\u00e3o de dados em vigor? Garantir que os dados necess\u00e1rios estejam presentes em volumes razo\u00e1veis. Para problemas supervisionados (mais comuns), avaliar a disponibilidade de r\u00f3tulos ou dados que possam ser usados para aproximar efetivamente r\u00f3tulos. Se aplic\u00e1vel, garantir que todos os dados possam ser unidos conforme necess\u00e1rio e entender como isso \u00e9 feito. Idealmente, obter ou criar um diagrama de relacionamento de entidades (ERD). Potencialmente descobrir novas fontes \u00fateis de dados. Descoberta de arquitetura Imagem clara da arquitetura existente. Pontos de arquitetura. Idea\u00e7\u00e3o e itera\u00e7\u00e3o de conceitos Desenvolver propostas de valor para usu\u00e1rios e partes interessadas com base na compreens\u00e3o contextual desenvolvida por meio do processo de descoberta (por exemplo, elementos-chave de valor, benef\u00edcios). Conforme relevante, fa\u00e7a uso de Co-cria\u00e7\u00e3o com a equipe. Co-cria\u00e7\u00e3o com usu\u00e1rios e partes interessadas. Conforme relevante, crie vinhetas, narrativas ou outros materiais para comunicar o conceito. Identificar o pr\u00f3ximo conjunto de hip\u00f3teses ou inc\u00f3gnitas a serem testadas (veja teste de conceito). Revisitar e iterar o conceito ao longo da descoberta \u00e0 medida que a compreens\u00e3o do espa\u00e7o do problema evolui. An\u00e1lise explorat\u00f3 ria de dados (AED) Aprofundamento nos dados. Compreender as distribui\u00e7\u00f5es de valores de recursos e r\u00f3tulos. Compreender as correla\u00e7\u00f5es entre recursos e entre recursos e r\u00f3tulos. Compreender restri\u00e7\u00f5es espec\u00edficas do problema de dados, como valores ausentes, cardinalidade categ\u00f3rica, potencial para vazamento de dados, etc. Identificar quaisquer lacunas nos dados que n\u00e3o puderam ser identificadas na fase de descoberta de dados. Abrir o caminho para uma compreens\u00e3o mais aprofundada sobre quais t\u00e9cnicas s\u00e3o aplic\u00e1veis. Estabelecer uma compreens\u00e3o m\u00fatua do que est\u00e1 dentro ou fora do escopo para viabilidade, garantindo que os dados dentro do escopo sejam significativos para o neg\u00f3cio. Pr\u00e9-processamento de dados Acontece durante a AED e o teste de hip\u00f3teses. Engenharia de recursos. Amostragem. Dimensionamento e/ou discretiza\u00e7\u00e3o. Tratamento de ru\u00eddo. Teste de hip\u00f3teses Projete v\u00e1rias solu\u00e7\u00f5es potenciais usando algoritmos e t\u00e9cnicas teoricamente aplic\u00e1veis, come\u00e7ando com a linha de base mais simples razo\u00e1vel. Treine modelos. Avalie o desempenho e determine se \u00e9 satisfat\u00f3rio. Ajuste os designs de solu\u00e7\u00e3o experimental com base nos resultados. Itere. Documente minuciosamente cada etapa e resultado, al\u00e9m de quaisquer hip\u00f3teses resultantes para facilitar o acompanhamento do processo de tomada de decis\u00e3o. Teste de conceito Conforme relevante, para testar a proposta de valor, conceitos ou aspectos da experi\u00eancia. Planeje pesquisa com usu\u00e1rios, partes interessadas e especialistas. Desenvolva e projete materiais de pesquisa necess\u00e1rios. Sintetize e avalie feedback para incorporar no desenvolvimento do conceito. Continue a iterar e testar diferentes elementos do conceito conforme necess\u00e1rio, incluindo testes para melhor atender aos objetivos e diretrizes de AI respons\u00e1vel. Garanta que a solu\u00e7\u00e3o proposta e o enquadramento sejam compat\u00edveis e aceit\u00e1veis para as pessoas afetadas. Garanta que a solu\u00e7\u00e3o proposta e o enquadramento sejam compat\u00edveis com os objetivos e contexto de neg\u00f3cios existentes. Avalia\u00e7\u00e3o de risco Identifica\u00e7\u00e3o e avalia\u00e7\u00e3o de riscos e restri\u00e7\u00f5es. AI Respons\u00e1vel Considera\u00e7\u00e3o dos princ\u00edpios de AI respons\u00e1vel. Compreens\u00e3o dos contextos, necessidades e preocupa\u00e7\u00f5es dos usu\u00e1rios e partes interessadas para informar o desenvolvimento da AI respons\u00e1vel. Teste de conceito de AI e elementos de experi\u00eancia com usu\u00e1rios e partes interessadas. Discuss\u00e3o e feedback de diversas perspectivas em torno de preocupa\u00e7\u00f5es de AI respons\u00e1vel, quando relevante. Resultado de um estudo de viabilidade Poss\u00edveis resultados O principal resultado \u00e9 um relat\u00f3rio de estudo de viabilidade, com uma recomenda\u00e7\u00e3o sobre os pr\u00f3ximos passos: - Se n\u00e3o houver evid\u00eancias suficientes para apoiar a hip\u00f3tese de que este problema pode ser resolvido usando ML, de acordo com as medidas de desempenho predefinidas e o impacto nos neg\u00f3cios: * Detalhamos as lacunas e desafios que nos impediram de alcan\u00e7ar um resultado positivo. * Podemos restringir o escopo do projeto, se aplic\u00e1vel. * Podemos reavaliar o problema levando em considera\u00e7\u00e3o as descobertas do estudo de viabilidade. * Avaliamos a possibilidade de coletar mais dados ou melhorar a qualidade dos dados. Se houver evid\u00eancias suficientes para apoiar a hip\u00f3tese de que este problema pode ser resolvido usando ML Fornecer recomenda\u00e7\u00f5es e ativos t\u00e9cnicos para avan\u00e7ar para a fase de operacionaliza\u00e7\u00e3o.","title":"Estudos de Viabilidade"},{"location":"machine-learning/ml-feasibility-study/#estudos-de-viabilidade","text":"O principal objetivo dos estudos de viabilidade \u00e9 avaliar se \u00e9 vi\u00e1vel resolver o problema de forma satisfat\u00f3ria usando aprendizado de m\u00e1quina (ML) com os dados dispon\u00edveis. Queremos evitar investir demais na solu\u00e7\u00e3o antes de termos: Evid\u00eancias suficientes de que uma solu\u00e7\u00e3o seria a melhor solu\u00e7\u00e3o t\u00e9cnica, dadas as considera\u00e7\u00f5es do caso de neg\u00f3cios. Evid\u00eancias suficientes de que uma solu\u00e7\u00e3o \u00e9 compat\u00edvel com o contexto do problema. Evid\u00eancias suficientes de que uma solu\u00e7\u00e3o \u00e9 poss\u00edvel. Alguma dire\u00e7\u00e3o validada sobre como uma solu\u00e7\u00e3o deve ser. Esse esfor\u00e7o garante solu\u00e7\u00f5es de qualidade respaldadas pela quantidade apropriada de considera\u00e7\u00e3o e evid\u00eancia.","title":"Estudos de Viabilidade"},{"location":"machine-learning/ml-feasibility-study/#quando-sao-uteis-os-estudos-de-viabilidade","text":"Cada engajamento pode se beneficiar de um estudo de viabilidade no in\u00edcio do projeto. Discuss\u00f5es arquitet\u00f4nicas ainda podem ocorrer em paralelo enquanto a equipe trabalha para obter uma compreens\u00e3o s\u00f3lida e defini\u00e7\u00e3o do que ser\u00e1 constru\u00eddo. Os estudos de viabilidade podem durar entre 4 e 16 semanas, dependendo dos detalhes espec\u00edficos do problema, volume de dados, estado dos dados, etc. Come\u00e7ar com um marco de 4 semanas pode ser \u00fatil, durante o qual pode ser determinado quanto mais tempo, se houver, \u00e9 necess\u00e1rio para a conclus\u00e3o.","title":"Quando s\u00e3o \u00fateis os estudos de viabilidade?"},{"location":"machine-learning/ml-feasibility-study/#quem-colabora-nos-estudos-de-viabilidade","text":"A colabora\u00e7\u00e3o de pessoas com conjuntos de habilidades diversas \u00e9 desejada nessa fase, incluindo cientistas de dados, engenheiros de dados, engenheiros de software, gerentes de projeto, pesquisadores de experi\u00eancia humana e especialistas do dom\u00ednio. Isso abra\u00e7a o uso de fundamentos de engenharia, com alguma flexibilidade. Por exemplo, nem toda experimenta\u00e7\u00e3o requer cobertura de teste completa e revis\u00e3o de c\u00f3digo. A experimenta\u00e7\u00e3o geralmente n\u00e3o faz parte de um pipeline de CI/CD (Integra\u00e7\u00e3o Cont\u00ednua e Entrega Cont\u00ednua). Os artefatos podem estar na branch main como uma pasta exclu\u00edda do pipeline de CI/CD ou como uma branch experimental separada, dependendo das prefer\u00eancias do cliente/equipe.","title":"Quem colabora nos estudos de viabilidade?"},{"location":"machine-learning/ml-feasibility-study/#o-que-os-estudos-de-viabilidade-envolvem","text":"","title":"O que os estudos de viabilidade envolvem?"},{"location":"machine-learning/ml-feasibility-study/#definicao-do-problema-e-resultado-desejado","text":"Garantir que o problema seja complexo o suficiente para que regras de codifica\u00e7\u00e3o ou dimensionamento manual sejam irrealistas. Defini\u00e7\u00e3o clara do problema do ponto de vista de neg\u00f3cios e t\u00e9cnico.","title":"Defini\u00e7\u00e3o do problema e resultado desejado"},{"location":"machine-learning/ml-feasibility-study/#compreensao-contextual-profunda","text":"Confirme que as seguintes perguntas podem ser respondidas com base no que foi aprendido durante a Fase de Descoberta do projeto. Para itens que n\u00e3o podem ser respondidos satisfatoriamente, empreenda investiga\u00e7\u00f5es adicionais para respond\u00ea-los. Compreender as pessoas que est\u00e3o usando e/ou sendo afetadas pela solu\u00e7\u00e3o. Compreender as for\u00e7as contextuais em jogo em torno do problema, incluindo metas, cultura e contexto hist\u00f3rico. Para realizar isso, um pesquisador ir\u00e1: Colaborar com clientes e colegas para explorar o cen\u00e1rio das pessoas que se relacionam e podem ser afetadas pelo espa\u00e7o do problema sendo explorado (usu\u00e1rios, partes interessadas, especialistas no assunto, etc.). Formular as perguntas de pesquisa a serem abordadas. Selecionar e projetar a pesquisa que melhor servir\u00e1 \u00e0s perguntas de pesquisa. Identificar e selecionar participantes representativos da pesquisa em todo o espa\u00e7o do problema com os quais conduzir a pesquisa. Construir um plano de pesquisa e documentos de prepara\u00e7\u00e3o necess\u00e1rios para o m\u00e9todo de pesquisa selecionado. Conduzir a atividade de pesquisa com os participantes por meio dos m\u00e9todos selecionados. Sintetizar, analisar e interpretar as descobertas da pesquisa. Quando relevante, construir estruturas, artefatos e processos que ajudem a explorar as descobertas e implica\u00e7\u00f5es da pesquisa em toda a equipe. Compartilhar o que foi descoberto e entendido, bem como suas implica\u00e7\u00f5es, com toda a equipe de engajamento e partes interessadas relevantes. Se a pesquisa acima foi conduzida durante a fase de Descoberta, ela deve ser revisada, e quaisquer lacunas significativas de conhecimento devem ser identificadas e preenchidas seguindo o processo acima.","title":"Compreens\u00e3o contextual profunda"},{"location":"machine-learning/ml-feasibility-study/#acesso-aos-dados","text":"Verificar se toda a equipe tem acesso aos dados. Configurar um ambiente dedicado e/ou restrito, se necess\u00e1rio. Realizar qualquer desidentifica\u00e7\u00e3o ou omiss\u00e3o de informa\u00e7\u00f5es sens\u00edveis. Compreender os requisitos de acesso aos dados (reten\u00e7\u00e3o, acesso baseado em fun\u00e7\u00e3o, etc.).","title":"Acesso aos dados"},{"location":"machine-learning/ml-feasibility-study/#descoberta-de-dados","text":"Realizar uma oficina de explora\u00e7\u00e3o de dados e aprofundar com especialistas do dom\u00ednio. Compreender a disponibilidade dos dados e confirmar o acesso da equipe. Compreender o dicion\u00e1rio de dados, se dispon\u00edvel. Compreender a qualidade dos dados. J\u00e1 existe uma estrat\u00e9gia de valida\u00e7\u00e3o de dados em vigor? Garantir que os dados necess\u00e1rios estejam presentes em volumes razo\u00e1veis. Para problemas supervisionados (mais comuns), avaliar a disponibilidade de r\u00f3tulos ou dados que possam ser usados para aproximar efetivamente r\u00f3tulos. Se aplic\u00e1vel, garantir que todos os dados possam ser unidos conforme necess\u00e1rio e entender como isso \u00e9 feito. Idealmente, obter ou criar um diagrama de relacionamento de entidades (ERD). Potencialmente descobrir novas fontes \u00fateis de dados.","title":"Descoberta de dados"},{"location":"machine-learning/ml-feasibility-study/#descoberta-de-arquitetura","text":"Imagem clara da arquitetura existente. Pontos de arquitetura.","title":"Descoberta de arquitetura"},{"location":"machine-learning/ml-feasibility-study/#ideacao-e-iteracao-de-conceitos","text":"Desenvolver propostas de valor para usu\u00e1rios e partes interessadas com base na compreens\u00e3o contextual desenvolvida por meio do processo de descoberta (por exemplo, elementos-chave de valor, benef\u00edcios). Conforme relevante, fa\u00e7a uso de Co-cria\u00e7\u00e3o com a equipe. Co-cria\u00e7\u00e3o com usu\u00e1rios e partes interessadas. Conforme relevante, crie vinhetas, narrativas ou outros materiais para comunicar o conceito. Identificar o pr\u00f3ximo conjunto de hip\u00f3teses ou inc\u00f3gnitas a serem testadas (veja teste de conceito). Revisitar e iterar o conceito ao longo da descoberta \u00e0 medida que a compreens\u00e3o do espa\u00e7o do problema evolui.","title":"Idea\u00e7\u00e3o e itera\u00e7\u00e3o de conceitos"},{"location":"machine-learning/ml-feasibility-study/#analise-explorato","text":"ria de dados (AED) Aprofundamento nos dados. Compreender as distribui\u00e7\u00f5es de valores de recursos e r\u00f3tulos. Compreender as correla\u00e7\u00f5es entre recursos e entre recursos e r\u00f3tulos. Compreender restri\u00e7\u00f5es espec\u00edficas do problema de dados, como valores ausentes, cardinalidade categ\u00f3rica, potencial para vazamento de dados, etc. Identificar quaisquer lacunas nos dados que n\u00e3o puderam ser identificadas na fase de descoberta de dados. Abrir o caminho para uma compreens\u00e3o mais aprofundada sobre quais t\u00e9cnicas s\u00e3o aplic\u00e1veis. Estabelecer uma compreens\u00e3o m\u00fatua do que est\u00e1 dentro ou fora do escopo para viabilidade, garantindo que os dados dentro do escopo sejam significativos para o neg\u00f3cio.","title":"An\u00e1lise explorat\u00f3"},{"location":"machine-learning/ml-feasibility-study/#pre-processamento-de-dados","text":"Acontece durante a AED e o teste de hip\u00f3teses. Engenharia de recursos. Amostragem. Dimensionamento e/ou discretiza\u00e7\u00e3o. Tratamento de ru\u00eddo.","title":"Pr\u00e9-processamento de dados"},{"location":"machine-learning/ml-feasibility-study/#teste-de-hipoteses","text":"Projete v\u00e1rias solu\u00e7\u00f5es potenciais usando algoritmos e t\u00e9cnicas teoricamente aplic\u00e1veis, come\u00e7ando com a linha de base mais simples razo\u00e1vel. Treine modelos. Avalie o desempenho e determine se \u00e9 satisfat\u00f3rio. Ajuste os designs de solu\u00e7\u00e3o experimental com base nos resultados. Itere. Documente minuciosamente cada etapa e resultado, al\u00e9m de quaisquer hip\u00f3teses resultantes para facilitar o acompanhamento do processo de tomada de decis\u00e3o.","title":"Teste de hip\u00f3teses"},{"location":"machine-learning/ml-feasibility-study/#teste-de-conceito","text":"Conforme relevante, para testar a proposta de valor, conceitos ou aspectos da experi\u00eancia. Planeje pesquisa com usu\u00e1rios, partes interessadas e especialistas. Desenvolva e projete materiais de pesquisa necess\u00e1rios. Sintetize e avalie feedback para incorporar no desenvolvimento do conceito. Continue a iterar e testar diferentes elementos do conceito conforme necess\u00e1rio, incluindo testes para melhor atender aos objetivos e diretrizes de AI respons\u00e1vel. Garanta que a solu\u00e7\u00e3o proposta e o enquadramento sejam compat\u00edveis e aceit\u00e1veis para as pessoas afetadas. Garanta que a solu\u00e7\u00e3o proposta e o enquadramento sejam compat\u00edveis com os objetivos e contexto de neg\u00f3cios existentes.","title":"Teste de conceito"},{"location":"machine-learning/ml-feasibility-study/#avaliacao-de-risco","text":"Identifica\u00e7\u00e3o e avalia\u00e7\u00e3o de riscos e restri\u00e7\u00f5es.","title":"Avalia\u00e7\u00e3o de risco"},{"location":"machine-learning/ml-feasibility-study/#ai-responsavel","text":"Considera\u00e7\u00e3o dos princ\u00edpios de AI respons\u00e1vel. Compreens\u00e3o dos contextos, necessidades e preocupa\u00e7\u00f5es dos usu\u00e1rios e partes interessadas para informar o desenvolvimento da AI respons\u00e1vel. Teste de conceito de AI e elementos de experi\u00eancia com usu\u00e1rios e partes interessadas. Discuss\u00e3o e feedback de diversas perspectivas em torno de preocupa\u00e7\u00f5es de AI respons\u00e1vel, quando relevante.","title":"AI Respons\u00e1vel"},{"location":"machine-learning/ml-feasibility-study/#resultado-de-um-estudo-de-viabilidade","text":"","title":"Resultado de um estudo de viabilidade"},{"location":"machine-learning/ml-feasibility-study/#possiveis-resultados","text":"O principal resultado \u00e9 um relat\u00f3rio de estudo de viabilidade, com uma recomenda\u00e7\u00e3o sobre os pr\u00f3ximos passos: - Se n\u00e3o houver evid\u00eancias suficientes para apoiar a hip\u00f3tese de que este problema pode ser resolvido usando ML, de acordo com as medidas de desempenho predefinidas e o impacto nos neg\u00f3cios: * Detalhamos as lacunas e desafios que nos impediram de alcan\u00e7ar um resultado positivo. * Podemos restringir o escopo do projeto, se aplic\u00e1vel. * Podemos reavaliar o problema levando em considera\u00e7\u00e3o as descobertas do estudo de viabilidade. * Avaliamos a possibilidade de coletar mais dados ou melhorar a qualidade dos dados. Se houver evid\u00eancias suficientes para apoiar a hip\u00f3tese de que este problema pode ser resolvido usando ML Fornecer recomenda\u00e7\u00f5es e ativos t\u00e9cnicos para avan\u00e7ar para a fase de operacionaliza\u00e7\u00e3o.","title":"Poss\u00edveis resultados"},{"location":"machine-learning/ml-fundamentals-checklist/","text":"Checklist de Fundamentos de ML Este checklist ajuda a garantir que nossos projetos de ML atendam aos nossos Fundamentos de ML. Os itens abaixo n\u00e3o s\u00e3o sequenciais, mas sim organizados por diferentes partes de um projeto de ML. Qualidade e Governan\u00e7a dos Dados H\u00e1 acesso aos dados. Existem r\u00f3tulos para o conjunto de dados de interesse. Avalia\u00e7\u00e3o da qualidade dos dados. \u00c9 poss\u00edvel rastrear a linhagem dos dados. Compreens\u00e3o de onde os dados est\u00e3o vindo e de quais pol\u00edticas est\u00e3o relacionadas ao acesso aos dados. Coleta de requisitos de seguran\u00e7a e conformidade. Estudo de Viabilidade Um estudo de viabilidade foi realizado para avaliar se os dados suportam as tarefas propostas. Foi realizada uma an\u00e1lise rigorosa dos dados explorat\u00f3rios (incluindo an\u00e1lise da distribui\u00e7\u00e3o dos dados). Hip\u00f3teses foram testadas, produzindo evid\u00eancias suficientes para apoiar ou rejeitar que uma abordagem de ML seja vi\u00e1vel para resolver o problema. Foi realizada uma estimativa de ROI (Retorno sobre o Investimento) e an\u00e1lise de risco para o projeto. Os resultados/sa\u00eddas de ML podem ser integrados ao sistema de produ\u00e7\u00e3o. As recomenda\u00e7\u00f5es sobre como proceder foram documentadas. Avalia\u00e7\u00e3o e M\u00e9tricas Defini\u00e7\u00e3o clara de como o desempenho ser\u00e1 medido. As m\u00e9tricas de avalia\u00e7\u00e3o est\u00e3o de alguma forma conectadas aos crit\u00e9rios de sucesso. As m\u00e9tricas podem ser calculadas com os conjuntos de dados dispon\u00edveis. O fluxo de avalia\u00e7\u00e3o pode ser aplicado a todas as vers\u00f5es do modelo. O c\u00f3digo de avalia\u00e7\u00e3o \u00e9 testado unitariamente e revisado por todos os membros da equipe. O fluxo de avalia\u00e7\u00e3o facilita an\u00e1lises adicionais de resultados e erros. Baseline do Modelo Existe um modelo de baseline bem definido e seu desempenho \u00e9 calculado. ( Mais detalhes sobre baselines bem definidos ) O desempenho de outros modelos de ML pode ser comparado com o modelo de baseline. Configura\u00e7\u00e3o de Experimenta\u00e7\u00e3o Conjunto de dados de treinamento/teste bem definido com r\u00f3tulos. Experimentos reprodut\u00edveis e registrados em um ambiente acess\u00edvel por todos os cientistas de dados para itera\u00e7\u00f5es r\u00e1pidas. Experimentos/hip\u00f3teses definidas para testar. Os resultados dos experimentos s\u00e3o documentados. Hiperpar\u00e2metros do modelo s\u00e3o ajustados sistematicamente. S\u00e3o usadas as mesmas m\u00e9tricas de avalia\u00e7\u00e3o de desempenho e conjuntos de dados consistentes ao comparar modelos candidatos. Produ\u00e7\u00e3o Revis\u00e3o da lista de verifica\u00e7\u00e3o de prontid\u00e3o do modelo . Foram realizadas revis\u00f5es do modelo (cobrindo depura\u00e7\u00e3o do modelo, revis\u00f5es das abordagens de treinamento e avalia\u00e7\u00e3o, desempenho do modelo). Pipeline de dados para infer\u00eancia, incluindo testes de ponta a ponta. Requisitos de SLAs (Acordos de N\u00edvel de Servi\u00e7o) para os modelos s\u00e3o coletados e documentados. Monitoramento dos feeds de dados e sa\u00edda do modelo. Garantir que um esquema consistente seja usado em todo o sistema, com entrada/sa\u00edda esperada definida para cada componente dos pipelines (processamento de dados, bem como modelos). Revis\u00e3o de IA Respons\u00e1vel .","title":"Checklist de Fundamentos de ML"},{"location":"machine-learning/ml-fundamentals-checklist/#checklist-de-fundamentos-de-ml","text":"Este checklist ajuda a garantir que nossos projetos de ML atendam aos nossos Fundamentos de ML. Os itens abaixo n\u00e3o s\u00e3o sequenciais, mas sim organizados por diferentes partes de um projeto de ML.","title":"Checklist de Fundamentos de ML"},{"location":"machine-learning/ml-fundamentals-checklist/#qualidade-e-governanca-dos-dados","text":"H\u00e1 acesso aos dados. Existem r\u00f3tulos para o conjunto de dados de interesse. Avalia\u00e7\u00e3o da qualidade dos dados. \u00c9 poss\u00edvel rastrear a linhagem dos dados. Compreens\u00e3o de onde os dados est\u00e3o vindo e de quais pol\u00edticas est\u00e3o relacionadas ao acesso aos dados. Coleta de requisitos de seguran\u00e7a e conformidade.","title":"Qualidade e Governan\u00e7a dos Dados"},{"location":"machine-learning/ml-fundamentals-checklist/#estudo-de-viabilidade","text":"Um estudo de viabilidade foi realizado para avaliar se os dados suportam as tarefas propostas. Foi realizada uma an\u00e1lise rigorosa dos dados explorat\u00f3rios (incluindo an\u00e1lise da distribui\u00e7\u00e3o dos dados). Hip\u00f3teses foram testadas, produzindo evid\u00eancias suficientes para apoiar ou rejeitar que uma abordagem de ML seja vi\u00e1vel para resolver o problema. Foi realizada uma estimativa de ROI (Retorno sobre o Investimento) e an\u00e1lise de risco para o projeto. Os resultados/sa\u00eddas de ML podem ser integrados ao sistema de produ\u00e7\u00e3o. As recomenda\u00e7\u00f5es sobre como proceder foram documentadas.","title":"Estudo de Viabilidade"},{"location":"machine-learning/ml-fundamentals-checklist/#avaliacao-e-metricas","text":"Defini\u00e7\u00e3o clara de como o desempenho ser\u00e1 medido. As m\u00e9tricas de avalia\u00e7\u00e3o est\u00e3o de alguma forma conectadas aos crit\u00e9rios de sucesso. As m\u00e9tricas podem ser calculadas com os conjuntos de dados dispon\u00edveis. O fluxo de avalia\u00e7\u00e3o pode ser aplicado a todas as vers\u00f5es do modelo. O c\u00f3digo de avalia\u00e7\u00e3o \u00e9 testado unitariamente e revisado por todos os membros da equipe. O fluxo de avalia\u00e7\u00e3o facilita an\u00e1lises adicionais de resultados e erros.","title":"Avalia\u00e7\u00e3o e M\u00e9tricas"},{"location":"machine-learning/ml-fundamentals-checklist/#baseline-do-modelo","text":"Existe um modelo de baseline bem definido e seu desempenho \u00e9 calculado. ( Mais detalhes sobre baselines bem definidos ) O desempenho de outros modelos de ML pode ser comparado com o modelo de baseline.","title":"Baseline do Modelo"},{"location":"machine-learning/ml-fundamentals-checklist/#configuracao-de-experimentacao","text":"Conjunto de dados de treinamento/teste bem definido com r\u00f3tulos. Experimentos reprodut\u00edveis e registrados em um ambiente acess\u00edvel por todos os cientistas de dados para itera\u00e7\u00f5es r\u00e1pidas. Experimentos/hip\u00f3teses definidas para testar. Os resultados dos experimentos s\u00e3o documentados. Hiperpar\u00e2metros do modelo s\u00e3o ajustados sistematicamente. S\u00e3o usadas as mesmas m\u00e9tricas de avalia\u00e7\u00e3o de desempenho e conjuntos de dados consistentes ao comparar modelos candidatos.","title":"Configura\u00e7\u00e3o de Experimenta\u00e7\u00e3o"},{"location":"machine-learning/ml-fundamentals-checklist/#producao","text":"Revis\u00e3o da lista de verifica\u00e7\u00e3o de prontid\u00e3o do modelo . Foram realizadas revis\u00f5es do modelo (cobrindo depura\u00e7\u00e3o do modelo, revis\u00f5es das abordagens de treinamento e avalia\u00e7\u00e3o, desempenho do modelo). Pipeline de dados para infer\u00eancia, incluindo testes de ponta a ponta. Requisitos de SLAs (Acordos de N\u00edvel de Servi\u00e7o) para os modelos s\u00e3o coletados e documentados. Monitoramento dos feeds de dados e sa\u00edda do modelo. Garantir que um esquema consistente seja usado em todo o sistema, com entrada/sa\u00edda esperada definida para cada componente dos pipelines (processamento de dados, bem como modelos). Revis\u00e3o de IA Respons\u00e1vel .","title":"Produ\u00e7\u00e3o"},{"location":"machine-learning/ml-model-checklist/","text":"Lista de Verifica\u00e7\u00e3o para Produ\u00e7\u00e3o de Modelo de ML O objetivo desta lista de verifica\u00e7\u00e3o \u00e9 garantir que: A equipe avaliou se o modelo est\u00e1 pronto para a produ\u00e7\u00e3o antes de avan\u00e7ar para o processo de pontua\u00e7\u00e3o. A equipe preparou um plano de produ\u00e7\u00e3o para o modelo. A lista de verifica\u00e7\u00e3o fornece diretrizes para a cria\u00e7\u00e3o deste plano de produ\u00e7\u00e3o. Deve ser utilizada por equipes/organiza\u00e7\u00f5es que j\u00e1 constru\u00edram/treinaram um modelo de ML e agora est\u00e3o considerando coloc\u00e1-lo em produ\u00e7\u00e3o. Lista de Verifica\u00e7\u00e3o Antes de colocar um modelo de ML individual em produ\u00e7\u00e3o, os seguintes aspectos devem ser considerados: Existe uma linha de base bem definida? O modelo est\u00e1 se saindo melhor do que a linha de base? As m\u00e9tricas de desempenho de aprendizado de m\u00e1quina est\u00e3o definidas tanto para o treinamento quanto para a pontua\u00e7\u00e3o? O modelo foi comparado com outros modelos de refer\u00eancia? \u00c9 poss\u00edvel obter ou inferir a verdade fundamental na produ\u00e7\u00e3o? A distribui\u00e7\u00e3o dos dados nos conjuntos de treinamento, teste e valida\u00e7\u00e3o foi analisada? Foram estabelecidos objetivos e limites r\u00edgidos para o desempenho, velocidade de previs\u00e3o e custos, de modo que possam ser considerados se forem necess\u00e1rias compensa\u00e7\u00f5es? Como o modelo ser\u00e1 integrado a outros sistemas e qual ser\u00e1 seu impacto? Como a qualidade dos dados de entrada ser\u00e1 monitorada? Como ser\u00e1 monitorada a varia\u00e7\u00e3o nas caracter\u00edsticas dos dados? Como o desempenho ser\u00e1 monitorado? Foram consideradas preocupa\u00e7\u00f5es \u00e9ticas? Por favor, observe que pode haver cen\u00e1rios em que n\u00e3o seja poss\u00edvel verificar todos os itens desta lista de verifica\u00e7\u00e3o. No entanto, \u00e9 aconselh\u00e1vel passar por todos os itens e tomar decis\u00f5es informadas com base em seu caso de uso espec\u00edfico. A performance do seu modelo ser\u00e1 diferente na produ\u00e7\u00e3o do que na fase de treinamento Uma vez implantado na produ\u00e7\u00e3o, o modelo pode apresentar um desempenho muito pior do que o esperado. Esse desempenho ruim pode ser resultado de: Os dados a serem pontuados na produ\u00e7\u00e3o s\u00e3o significativamente diferentes dos conjuntos de treinamento e teste. As etapas de engenharia de recursos s\u00e3o diferentes ou inconsistentes na produ\u00e7\u00e3o em compara\u00e7\u00e3o com o processo de treinamento. A medida de desempenho n\u00e3o \u00e9 consistente (por exemplo, seu conjunto de testes abrange v\u00e1rios meses de dados, enquanto a m\u00e9trica de desempenho para a produ\u00e7\u00e3o foi calculada para um m\u00eas de dados). Existe uma linha de base bem definida? O modelo est\u00e1 se saindo melhor do que a linha de base? Uma boa maneira de pensar em uma linha de base para um modelo \u00e9 o modelo mais simples que se pode imaginar: seja um limite simples, uma suposi\u00e7\u00e3o aleat\u00f3ria ou um modelo linear muito b\u00e1sico. Esta linha de base \u00e9 o ponto de refer\u00eancia que seu modelo precisa superar. Uma linha de base bem definida \u00e9 diferente para cada tipo de problema e n\u00e3o h\u00e1 uma abordagem \u00fanica para todos os casos. Como exemplo, consideremos alguns tipos comuns de problemas de aprendizado de m\u00e1quina: Classifica\u00e7\u00e3o : Prever entre uma classe positiva e uma classe negativa. A classe com mais observa\u00e7\u00f5es ou um modelo de regress\u00e3o log\u00edstica simples pode ser a linha de base. Regress\u00e3o : Prever os pre\u00e7os das casas em uma cidade. O pre\u00e7o m\u00e9dio das casas no \u00faltimo ano ou no \u00faltimo m\u00eas, um modelo de regress\u00e3o linear simples ou o pre\u00e7o m\u00e9dio anterior das casas em um bairro podem ser a linha de base. Classifica\u00e7\u00e3o de imagens : Construir um classificador de imagens para distinguir entre gatos e n\u00e3o gatos em uma imagem. Se suas classes forem desequilibradas, por exemplo, 70% de gatos e 30% de n\u00e3o gatos, e se voc\u00ea sempre prever gatos, seu classificador ing\u00eanuo ter\u00e1 uma precis\u00e3o de 70%, e isso pode ser sua linha de base. Se suas classes forem equilibradas, por exemplo, 52% de gatos e 48% de n\u00e3o gatos, ent\u00e3o uma arquitetura convolucional simples pode ser a linha de base (1 camada convolucional + 1 max pooling + 1 densa). Al\u00e9m disso, a precis\u00e3o humana na rotula\u00e7\u00e3o tamb\u00e9m pode ser a linha de base em um cen\u00e1rio de classifica\u00e7\u00e3o de imagens. Algumas perguntas a fazer ao comparar com uma linha de base: Como o seu modelo se compara a uma suposi\u00e7\u00e3o aleat\u00f3ria? Como o desempenho do seu modelo se compara \u00e0 aplica\u00e7\u00e3o de um limite simples? Como o seu modelo se compara com a previs\u00e3o constante do valor mais comum? Nota : Em alguns casos, a paridade humana pode ser muito ambiciosa como linha de base, mas isso deve ser decidido caso a caso. A precis\u00e3o humana \u00e9 uma das op\u00e7\u00f5es dispon\u00edveis, mas n\u00e3o a \u00fanica. Recursos: Artigo \"Como obter Resultados de Linha de Base e por que eles Importam\" Artigo \"Sempre comece com um modelo tolo, sem exce\u00e7\u00f5es\" As m\u00e9tricas de desempenho de aprendizado de m\u00e1quina est\u00e3o definidas tanto para o treinamento quanto para a pontua\u00e7\u00e3o? A metodologia de traduzir as m\u00e9tricas de treinamento para as m\u00e9tricas de pontua\u00e7\u00e3o deve ser bem definida e compreendida. Dependendo do tipo de dados e do modelo, o c\u00e1lculo das m\u00e9tricas do modelo pode ser diferente na produ\u00e7\u00e3o e no treinamento. Por exemplo, o procedimento de treinamento calculou m\u00e9tricas por um longo per\u00edodo de tempo (um ano, uma d\u00e9cada) com diferentes caracter\u00edsticas sazonais, enquanto o procedimento de pontua\u00e7\u00e3o calcular\u00e1 as m\u00e9tricas em um intervalo de tempo restrito (por exemplo, uma semana, um m\u00eas, um trimestre). M\u00e9tricas de desempenho de ML bem definidas s\u00e3o essenciais na produ\u00e7\u00e3o para que uma diminui\u00e7\u00e3o ou aumento no desempenho do modelo possa ser detectada com precis\u00e3o. Coisas a serem consideradas: No caso de previs\u00e3o, se voc\u00ea alterar o per\u00edodo de avalia\u00e7\u00e3o do desempenho, de um m\u00eas para um ano, por exemplo, voc\u00ea pode obter um resultado diferente. Por exemplo, se seu modelo est\u00e1 prevendo as vendas de um produto por dia e o RMSE (Erro Quadr\u00e1tico M\u00e9dio) \u00e9 muito baixo no primeiro m\u00eas em que o modelo est\u00e1 em produ\u00e7\u00e3o. Conforme o modelo fica ativo por mais tempo, o RMSE aumenta, tornando-se 10 vezes maior do que o RMSE do primeiro m\u00eas em compara\u00e7\u00e3o com o primeiro ano. Em um cen\u00e1rio de classifica\u00e7\u00e3o, a precis\u00e3o geral pode ser boa, mas o modelo pode estar se saindo mal para alguns subgrupos. Por exemplo, um classificador tem uma precis\u00e3o de 80% no geral, mas apenas 55% para o grupo et\u00e1rio de 20-30 anos. Se este for um grupo et\u00e1rio significativo para os dados de produ\u00e7\u00e3o, sua precis\u00e3o pode sofrer consideravelmente quando estiver em produ\u00e7\u00e3o. Em um cen\u00e1rio de classifica\u00e7\u00e3o de cena, o modelo tenta identificar uma cena espec\u00edfica em um v\u00eddeo, e o modelo foi treinado e testado (divis\u00e3o de 80-20) em 50000 segmentos, onde metade dos segmentos cont\u00e9m a cena e metade n\u00e3o cont\u00e9m. A precis\u00e3o no conjunto de treinamento \u00e9 de 85% e 84% no conjunto de teste. No entanto, quando um v\u00eddeo inteiro \u00e9 pontuado, as pontua\u00e7\u00f5es s\u00e3o obtidas em todos os segmentos, e esperamos que poucos segmentos contenham a cena. A precis\u00e3o para um v\u00eddeo inteiro n\u00e3o \u00e9 compar\u00e1vel ao procedimento de treinamento/teste neste caso, portanto, m\u00e9tricas diferentes devem ser consideradas. Se t\u00e9cnicas de amostragem (sobreamostragem, subamostragem) forem usadas para treinar o modelo quando as classes estiverem desequilibradas, certifique-se de que as m\u00e9tricas usadas durante o treinamento sejam compar\u00e1veis com as usadas na pontua\u00e7\u00e3o. Se o n\u00famero de amostras usadas para treinamento e teste for pequeno, as m\u00e9tricas de desempenho podem mudar significativamente \u00e0 medida que novos dados s\u00e3o pontuados. O modelo foi benchmarked? O modelo treinado a ser colocado em produ\u00e7\u00e3o est\u00e1 bem benchmarked se as m\u00e9tricas de desempenho de aprendizado de m\u00e1quina (como precis\u00e3o, recall, RMSE ou o que for apropriado) forem medidas no conjunto de treinamento e teste. Al\u00e9m disso, a divis\u00e3o entre conjunto de treinamento e teste deve estar bem documentada e ser reproduz\u00edvel. \u00c9 poss\u00edvel obter ou inferir a verdade fundamental na produ\u00e7\u00e3o? Sem uma verdade fundamental confi\u00e1vel, as m\u00e9tricas de aprendizado de m\u00e1quina n\u00e3o podem ser calculadas. \u00c9 importante identificar se a verdade fundamental pode ser obtida \u00e0 medida que o modelo pontua novos dados por meio de meios manuais ou autom\u00e1ticos. Se a verdade fundamental n\u00e3o puder ser obtida de forma sistem\u00e1tica, outras proxies e metodologias devem ser investigadas para obter alguma medida do desempenho do modelo. Uma op\u00e7\u00e3o \u00e9 usar seres humanos para rotular amostras manualmente. Um aspecto importante da rotulagem humana \u00e9 levar em considera\u00e7\u00e3o a precis\u00e3o humana. Se dois indiv\u00edduos diferentes rotularem uma imagem, \u00e9 prov\u00e1vel que os r\u00f3tulos sejam diferentes para algumas amostras. \u00c9 importante entender como os r\u00f3tulos foram obtidos para avaliar a confiabilidade da verdade fundamental (da\u00ed falarmos sobre a precis\u00e3o humana). Para maior clareza, consideremos os seguintes exemplos (de forma alguma uma lista exaustiva): Previs\u00e3o : Cen\u00e1rios de previs\u00e3o s\u00e3o exemplos de problemas de aprendizado de m\u00e1quina em que a verdade fundamental pode ser obtida na maioria dos casos, mesmo que haja um atraso. Por exemplo, para um modelo que prev\u00ea as vendas de sorvete em uma loja local, a verdade fundamental ser\u00e1 obtida \u00e0 medida que as vendas acontecerem, mas pode aparecer no sistema em um momento posterior em rela\u00e7\u00e3o \u00e0 previs\u00e3o do modelo. Sistemas de recomenda\u00e7\u00e3o : Para sistemas de recomenda\u00e7\u00e3o, obter a verdade fundamental \u00e9 um problema complexo na maioria dos casos, pois n\u00e3o h\u00e1 como identificar a recomenda\u00e7\u00e3o ideal. Para um site de varejo, por exemplo, cliques/n\u00e3o cliques, compra/n\u00e3o compra ou outras intera\u00e7\u00f5es do usu\u00e1rio com a recomenda\u00e7\u00e3o podem ser usados como proxies da verdade fundamental. Detec\u00e7\u00e3o de objetos em imagens : Para um modelo de detec\u00e7\u00e3o de objetos, \u00e0 medida que novas imagens s\u00e3o pontuadas, n\u00e3o h\u00e1 novos r\u00f3tulos sendo gerados automaticamente. Uma op\u00e7\u00e3o para obter a verdade fundamental para as novas imagens \u00e9 usar pessoas para rotular as imagens manualmente. A rotulagem humana \u00e9 cara, demorada e n\u00e3o \u00e9 100% precisa, ent\u00e3o na maioria dos casos, apenas um subconjunto das imagens pode ser rotulado. Essas amostras podem ser escolhidas aleatoriamente ou usando t\u00e9cnicas de aprendizado ativo para selecionar as amostras n\u00e3o rotuladas mais informativas. A distribui\u00e7\u00e3o de dados dos conjuntos de treinamento, teste e valida\u00e7\u00e3o (se aplic\u00e1vel) foi analisada? A distribui\u00e7\u00e3o de dados dos seus conjuntos de treinamento, teste e valida\u00e7\u00e3o (se aplic\u00e1vel) deve ser analisada para garantir que todos eles provenham da mesma distribui\u00e7\u00e3o. Se isso n\u00e3o for o caso, algumas op\u00e7\u00f5es a serem consideradas s\u00e3o: reembaralhar, reamostrar, modificar os dados, coletar mais amostras ou remover recursos do conjunto de dados. Diferen\u00e7as significativas nas distribui\u00e7\u00f5es de dados dos diferentes conjuntos de dados podem afetar grandemente o desempenho do modelo. Algumas perguntas potenciais a fazer: Quanto os dados de treinamento e teste representam o resultado final? A distribui\u00e7\u00e3o de cada caracter\u00edstica individual \u00e9 consistente em todos os seus conjuntos de dados? (ou seja, a mesma representa\u00e7\u00e3o de grupos et\u00e1rios, g\u00eanero, ra\u00e7a, etc.) Existem informa\u00e7\u00f5es sobre a origem dos dados? De onde vieram os dados? Como os dados foram coletados? A coleta e a rotulagem podem ser automatizadas? Recursos: Tutorial \"Dividindo em conjuntos de treinamento, desenvolvimento e teste\" Foram estabelecidos objetivos e limites r\u00edgidos para o desempenho, velocidade de previs\u00e3o e custos, de modo que possam ser considerados se forem necess\u00e1rias compensa\u00e7\u00f5es? Alguns modelos de aprendizado de m\u00e1quina alcan\u00e7am alto desempenho de ML, mas s\u00e3o caros e demorados para serem executados. Nesses casos, um modelo menos perform\u00e1tico e mais barato pode ser preferido. Portanto, \u00e9 importante calcular as m\u00e9tricas de desempenho do modelo (precis\u00e3o, precis\u00e3o, recall, RMSE etc.), mas tamb\u00e9m coletar dados sobre o custo de execu\u00e7\u00e3o do modelo e quanto tempo levar\u00e1 para executar. Uma vez que esses dados sejam reunidos, uma decis\u00e3o informada deve ser tomada sobre qual modelo ser\u00e1 colocado em produ\u00e7\u00e3o. M\u00e9tricas do sistema a serem consideradas: Uso de CPU/GPU/mem\u00f3ria Custo por previs\u00e3o Tempo necess\u00e1rio para fazer uma previs\u00e3o Como o modelo ser\u00e1 integrado a outros sistemas e qual ser\u00e1 o impacto? Modelos de Aprendizado de M\u00e1quina n\u00e3o existem isoladamente, mas fazem parte de um sistema muito maior. Esses sistemas podem ser sistemas antigos e propriet\u00e1rios ou novos sistemas sendo desenvolvidos como resultado da cria\u00e7\u00e3o de um novo modelo de aprendizado de m\u00e1quina. Em ambos os casos, \u00e9 importante entender onde o modelo real se encaixar\u00e1, qual sa\u00edda \u00e9 esperada do modelo e como essa sa\u00edda ser\u00e1 usada pelo sistema maior. Al\u00e9m disso, \u00e9 essencial decidir se o modelo ser\u00e1 usado para infer\u00eancia em lote e/ou em tempo real, pois os caminhos de produ\u00e7\u00e3o podem ser diferentes. Poss\u00edveis perguntas para avaliar o impacto do modelo: H\u00e1 um humano no loop? Como o feedback \u00e9 coletado por meio do sistema? (por exemplo, como sabemos se uma previs\u00e3o est\u00e1 errada) Existe um mecanismo de fallback quando as coisas d\u00e3o errado? O sistema \u00e9 transparente de que h\u00e1 um modelo fazendo uma previs\u00e3o e quais dados s\u00e3o usados para fazer essa previs\u00e3o? Qual \u00e9 o custo de uma previs\u00e3o errada? Como a qualidade dos dados de entrada ser\u00e1 monitorada? \u00c0 medida que os sistemas de dados se tornam cada vez mais complexos no cen\u00e1rio atual, \u00e9 especialmente vital empregar protocolos de monitoramento, alerta e corre\u00e7\u00e3o de qualidade de dados. Seguir as melhores pr\u00e1ticas de valida\u00e7\u00e3o de dados pode prevenir problemas insidiosos que se infiltram nos modelos de aprendizado de m\u00e1quina, reduzindo a utilidade do modelo na melhor das hip\u00f3teses e introduzindo riscos na pior das hip\u00f3teses. A valida\u00e7\u00e3o de dados reduz o risco de interrup\u00e7\u00f5es nos dados (aumentando a folga) e d\u00edvidas t\u00e9cnicas, al\u00e9m de apoiar o sucesso a longo prazo de modelos de aprendizado de m\u00e1quina e outras aplica\u00e7\u00f5es que dependem dos dados. As melhores pr\u00e1ticas de valida\u00e7\u00e3o de dados incluem: Utilizar processos automatizados de teste de qualidade de dados em cada est\u00e1gio do pipeline de dados. Roteamento de dados que falham nos testes de qualidade para um armazenamento de dados separado para diagn\u00f3stico e resolu\u00e7\u00e3o. Utiliza\u00e7\u00e3o de observabilidade de dados de ponta a ponta quanto \u00e0 atualidade, distribui\u00e7\u00e3o, volume, esquema e linhagem dos dados. Observe que a valida\u00e7\u00e3o de dados \u00e9 distinta da detec\u00e7\u00e3o de deriva de dados. A valida\u00e7\u00e3o de dados detecta erros nos dados (por exemplo, um dado est\u00e1 fora da faixa esperada), enquanto a detec\u00e7\u00e3o de deriva de dados descobre mudan\u00e7as leg\u00edtimas nos dados que s\u00e3o verdadeiramente representativas do fen\u00f4meno em quest\u00e3o (por exemplo, as prefer\u00eancias do usu\u00e1rio mudam). Problemas de valida\u00e7\u00e3o de dados devem acionar o roteamento e a corre\u00e7\u00e3o, enquanto a deriva de dados deve acionar a adapta\u00e7\u00e3o ou o retrabalho de um modelo. Recursos: \"Fundamentos da Qualidade de Dados\" por Moses et al. Como ser\u00e1 monitorada a deriva nas caracter\u00edsticas dos dados? A detec\u00e7\u00e3o de deriva de dados descobre mudan\u00e7as leg\u00edtimas nos dados de entrada que s\u00e3o verdadeiramente representativas do fen\u00f4meno em quest\u00e3o e n\u00e3o s\u00e3o err\u00f4neas (por exemplo, mudan\u00e7a nas prefer\u00eancias do usu\u00e1rio). \u00c9 imperativo entender se os novos dados em produ\u00e7\u00e3o ser\u00e3o significativamente diferentes dos dados na fase de treinamento. Tamb\u00e9m \u00e9 importante verificar se as informa\u00e7\u00f5es de distribui\u00e7\u00e3o de dados podem ser obtidas para qualquer um dos novos dados que est\u00e3o chegando. O monitoramento de deriva pode informar quando as mudan\u00e7as est\u00e3o ocorrendo e quais s\u00e3o suas caracter\u00edsticas (por exemplo, abruptas vs. graduais) e guiar estrat\u00e9gias eficazes de adapta\u00e7\u00e3o ou retrabalho para manter o desempenho. Poss\u00edveis perguntas a fazer: Quais s\u00e3o alguns exemplos de deriva, ou desvio da norma, que foram experimentados no passado ou que podem ser esperados? Existe uma estrat\u00e9gia de detec\u00e7\u00e3o de deriva em vigor? Ela est\u00e1 alinhada com os tipos esperados de mudan\u00e7as? Existem avisos quando anomalias nos dados de entrada est\u00e3o ocorrendo? Existe uma estrat\u00e9gia de adapta\u00e7\u00e3o em vigor? Ela est\u00e1 alinhada com os tipos esperados de mudan\u00e7as? Recursos: \"Aprendizado sob Deriva de Conceito: Uma Revis\u00e3o\" por Lu et al. Compreendendo a mudan\u00e7a de conjunto de dados Como o desempenho ser\u00e1 monitorado? \u00c9 importante definir como o modelo ser\u00e1 monitorado quando estiver em produ\u00e7\u00e3o e como esses dados ser\u00e3o usados para tomar decis\u00f5es. Por exemplo, quando um modelo precisa ser re-treinado devido \u00e0 degrada\u00e7\u00e3o do desempenho e como identificar as causas subjacentes dessa degrada\u00e7\u00e3o podem fazer parte dessa metodologia de monitoramento. Idealmente, o monitoramento do modelo deve ser feito automaticamente. No entanto, se isso n\u00e3o for poss\u00edvel, deve haver uma verifica\u00e7\u00e3o manual peri\u00f3dica do desempenho do modelo. O monitoramento do modelo deve levar a: Capacidade de identificar mudan\u00e7as no desempenho do modelo. Avisos quando anomalias na sa\u00edda do modelo est\u00e3o ocorrendo. Decis\u00f5es de re-treinamento e estrat\u00e9gia de adapta\u00e7\u00e3o. Foram consideradas quaisquer preocupa\u00e7\u00f5es \u00e9ticas? Todos os projetos de Aprendizado de M\u00e1quina passam pelo processo de AI Respons\u00e1vel para garantir que eles sigam os 6 princ\u00edpios de AI Respons\u00e1vel da Microsoft .","title":"Lista de Verifica\u00e7\u00e3o para Produ\u00e7\u00e3o de Modelo de ML"},{"location":"machine-learning/ml-model-checklist/#lista-de-verificacao-para-producao-de-modelo-de-ml","text":"O objetivo desta lista de verifica\u00e7\u00e3o \u00e9 garantir que: A equipe avaliou se o modelo est\u00e1 pronto para a produ\u00e7\u00e3o antes de avan\u00e7ar para o processo de pontua\u00e7\u00e3o. A equipe preparou um plano de produ\u00e7\u00e3o para o modelo. A lista de verifica\u00e7\u00e3o fornece diretrizes para a cria\u00e7\u00e3o deste plano de produ\u00e7\u00e3o. Deve ser utilizada por equipes/organiza\u00e7\u00f5es que j\u00e1 constru\u00edram/treinaram um modelo de ML e agora est\u00e3o considerando coloc\u00e1-lo em produ\u00e7\u00e3o.","title":"Lista de Verifica\u00e7\u00e3o para Produ\u00e7\u00e3o de Modelo de ML"},{"location":"machine-learning/ml-model-checklist/#lista-de-verificacao","text":"Antes de colocar um modelo de ML individual em produ\u00e7\u00e3o, os seguintes aspectos devem ser considerados: Existe uma linha de base bem definida? O modelo est\u00e1 se saindo melhor do que a linha de base? As m\u00e9tricas de desempenho de aprendizado de m\u00e1quina est\u00e3o definidas tanto para o treinamento quanto para a pontua\u00e7\u00e3o? O modelo foi comparado com outros modelos de refer\u00eancia? \u00c9 poss\u00edvel obter ou inferir a verdade fundamental na produ\u00e7\u00e3o? A distribui\u00e7\u00e3o dos dados nos conjuntos de treinamento, teste e valida\u00e7\u00e3o foi analisada? Foram estabelecidos objetivos e limites r\u00edgidos para o desempenho, velocidade de previs\u00e3o e custos, de modo que possam ser considerados se forem necess\u00e1rias compensa\u00e7\u00f5es? Como o modelo ser\u00e1 integrado a outros sistemas e qual ser\u00e1 seu impacto? Como a qualidade dos dados de entrada ser\u00e1 monitorada? Como ser\u00e1 monitorada a varia\u00e7\u00e3o nas caracter\u00edsticas dos dados? Como o desempenho ser\u00e1 monitorado? Foram consideradas preocupa\u00e7\u00f5es \u00e9ticas? Por favor, observe que pode haver cen\u00e1rios em que n\u00e3o seja poss\u00edvel verificar todos os itens desta lista de verifica\u00e7\u00e3o. No entanto, \u00e9 aconselh\u00e1vel passar por todos os itens e tomar decis\u00f5es informadas com base em seu caso de uso espec\u00edfico.","title":"Lista de Verifica\u00e7\u00e3o"},{"location":"machine-learning/ml-model-checklist/#a-performance-do-seu-modelo-sera-diferente-na-producao-do-que-na-fase-de-treinamento","text":"Uma vez implantado na produ\u00e7\u00e3o, o modelo pode apresentar um desempenho muito pior do que o esperado. Esse desempenho ruim pode ser resultado de: Os dados a serem pontuados na produ\u00e7\u00e3o s\u00e3o significativamente diferentes dos conjuntos de treinamento e teste. As etapas de engenharia de recursos s\u00e3o diferentes ou inconsistentes na produ\u00e7\u00e3o em compara\u00e7\u00e3o com o processo de treinamento. A medida de desempenho n\u00e3o \u00e9 consistente (por exemplo, seu conjunto de testes abrange v\u00e1rios meses de dados, enquanto a m\u00e9trica de desempenho para a produ\u00e7\u00e3o foi calculada para um m\u00eas de dados).","title":"A performance do seu modelo ser\u00e1 diferente na produ\u00e7\u00e3o do que na fase de treinamento"},{"location":"machine-learning/ml-model-checklist/#existe-uma-linha-de-base-bem-definida-o-modelo-esta-se-saindo-melhor-do-que-a-linha-de-base","text":"Uma boa maneira de pensar em uma linha de base para um modelo \u00e9 o modelo mais simples que se pode imaginar: seja um limite simples, uma suposi\u00e7\u00e3o aleat\u00f3ria ou um modelo linear muito b\u00e1sico. Esta linha de base \u00e9 o ponto de refer\u00eancia que seu modelo precisa superar. Uma linha de base bem definida \u00e9 diferente para cada tipo de problema e n\u00e3o h\u00e1 uma abordagem \u00fanica para todos os casos. Como exemplo, consideremos alguns tipos comuns de problemas de aprendizado de m\u00e1quina: Classifica\u00e7\u00e3o : Prever entre uma classe positiva e uma classe negativa. A classe com mais observa\u00e7\u00f5es ou um modelo de regress\u00e3o log\u00edstica simples pode ser a linha de base. Regress\u00e3o : Prever os pre\u00e7os das casas em uma cidade. O pre\u00e7o m\u00e9dio das casas no \u00faltimo ano ou no \u00faltimo m\u00eas, um modelo de regress\u00e3o linear simples ou o pre\u00e7o m\u00e9dio anterior das casas em um bairro podem ser a linha de base. Classifica\u00e7\u00e3o de imagens : Construir um classificador de imagens para distinguir entre gatos e n\u00e3o gatos em uma imagem. Se suas classes forem desequilibradas, por exemplo, 70% de gatos e 30% de n\u00e3o gatos, e se voc\u00ea sempre prever gatos, seu classificador ing\u00eanuo ter\u00e1 uma precis\u00e3o de 70%, e isso pode ser sua linha de base. Se suas classes forem equilibradas, por exemplo, 52% de gatos e 48% de n\u00e3o gatos, ent\u00e3o uma arquitetura convolucional simples pode ser a linha de base (1 camada convolucional + 1 max pooling + 1 densa). Al\u00e9m disso, a precis\u00e3o humana na rotula\u00e7\u00e3o tamb\u00e9m pode ser a linha de base em um cen\u00e1rio de classifica\u00e7\u00e3o de imagens. Algumas perguntas a fazer ao comparar com uma linha de base: Como o seu modelo se compara a uma suposi\u00e7\u00e3o aleat\u00f3ria? Como o desempenho do seu modelo se compara \u00e0 aplica\u00e7\u00e3o de um limite simples? Como o seu modelo se compara com a previs\u00e3o constante do valor mais comum? Nota : Em alguns casos, a paridade humana pode ser muito ambiciosa como linha de base, mas isso deve ser decidido caso a caso. A precis\u00e3o humana \u00e9 uma das op\u00e7\u00f5es dispon\u00edveis, mas n\u00e3o a \u00fanica. Recursos: Artigo \"Como obter Resultados de Linha de Base e por que eles Importam\" Artigo \"Sempre comece com um modelo tolo, sem exce\u00e7\u00f5es\"","title":"Existe uma linha de base bem definida? O modelo est\u00e1 se saindo melhor do que a linha de base?"},{"location":"machine-learning/ml-model-checklist/#as-metricas-de-desempenho-de-aprendizado-de-maquina-estao-definidas-tanto-para-o-treinamento-quanto-para-a-pontuacao","text":"A metodologia de traduzir as m\u00e9tricas de treinamento para as m\u00e9tricas de pontua\u00e7\u00e3o deve ser bem definida e compreendida. Dependendo do tipo de dados e do modelo, o c\u00e1lculo das m\u00e9tricas do modelo pode ser diferente na produ\u00e7\u00e3o e no treinamento. Por exemplo, o procedimento de treinamento calculou m\u00e9tricas por um longo per\u00edodo de tempo (um ano, uma d\u00e9cada) com diferentes caracter\u00edsticas sazonais, enquanto o procedimento de pontua\u00e7\u00e3o calcular\u00e1 as m\u00e9tricas em um intervalo de tempo restrito (por exemplo, uma semana, um m\u00eas, um trimestre). M\u00e9tricas de desempenho de ML bem definidas s\u00e3o essenciais na produ\u00e7\u00e3o para que uma diminui\u00e7\u00e3o ou aumento no desempenho do modelo possa ser detectada com precis\u00e3o. Coisas a serem consideradas: No caso de previs\u00e3o, se voc\u00ea alterar o per\u00edodo de avalia\u00e7\u00e3o do desempenho, de um m\u00eas para um ano, por exemplo, voc\u00ea pode obter um resultado diferente. Por exemplo, se seu modelo est\u00e1 prevendo as vendas de um produto por dia e o RMSE (Erro Quadr\u00e1tico M\u00e9dio) \u00e9 muito baixo no primeiro m\u00eas em que o modelo est\u00e1 em produ\u00e7\u00e3o. Conforme o modelo fica ativo por mais tempo, o RMSE aumenta, tornando-se 10 vezes maior do que o RMSE do primeiro m\u00eas em compara\u00e7\u00e3o com o primeiro ano. Em um cen\u00e1rio de classifica\u00e7\u00e3o, a precis\u00e3o geral pode ser boa, mas o modelo pode estar se saindo mal para alguns subgrupos. Por exemplo, um classificador tem uma precis\u00e3o de 80% no geral, mas apenas 55% para o grupo et\u00e1rio de 20-30 anos. Se este for um grupo et\u00e1rio significativo para os dados de produ\u00e7\u00e3o, sua precis\u00e3o pode sofrer consideravelmente quando estiver em produ\u00e7\u00e3o. Em um cen\u00e1rio de classifica\u00e7\u00e3o de cena, o modelo tenta identificar uma cena espec\u00edfica em um v\u00eddeo, e o modelo foi treinado e testado (divis\u00e3o de 80-20) em 50000 segmentos, onde metade dos segmentos cont\u00e9m a cena e metade n\u00e3o cont\u00e9m. A precis\u00e3o no conjunto de treinamento \u00e9 de 85% e 84% no conjunto de teste. No entanto, quando um v\u00eddeo inteiro \u00e9 pontuado, as pontua\u00e7\u00f5es s\u00e3o obtidas em todos os segmentos, e esperamos que poucos segmentos contenham a cena. A precis\u00e3o para um v\u00eddeo inteiro n\u00e3o \u00e9 compar\u00e1vel ao procedimento de treinamento/teste neste caso, portanto, m\u00e9tricas diferentes devem ser consideradas. Se t\u00e9cnicas de amostragem (sobreamostragem, subamostragem) forem usadas para treinar o modelo quando as classes estiverem desequilibradas, certifique-se de que as m\u00e9tricas usadas durante o treinamento sejam compar\u00e1veis com as usadas na pontua\u00e7\u00e3o. Se o n\u00famero de amostras usadas para treinamento e teste for pequeno, as m\u00e9tricas de desempenho podem mudar significativamente \u00e0 medida que novos dados s\u00e3o pontuados.","title":"As m\u00e9tricas de desempenho de aprendizado de m\u00e1quina est\u00e3o definidas tanto para o treinamento quanto para a pontua\u00e7\u00e3o?"},{"location":"machine-learning/ml-model-checklist/#o-modelo-foi-benchmarked","text":"O modelo treinado a ser colocado em produ\u00e7\u00e3o est\u00e1 bem benchmarked se as m\u00e9tricas de desempenho de aprendizado de m\u00e1quina (como precis\u00e3o, recall, RMSE ou o que for apropriado) forem medidas no conjunto de treinamento e teste. Al\u00e9m disso, a divis\u00e3o entre conjunto de treinamento e teste deve estar bem documentada e ser reproduz\u00edvel.","title":"O modelo foi benchmarked?"},{"location":"machine-learning/ml-model-checklist/#e-possivel-obter-ou-inferir-a-verdade-fundamental-na-producao","text":"Sem uma verdade fundamental confi\u00e1vel, as m\u00e9tricas de aprendizado de m\u00e1quina n\u00e3o podem ser calculadas. \u00c9 importante identificar se a verdade fundamental pode ser obtida \u00e0 medida que o modelo pontua novos dados por meio de meios manuais ou autom\u00e1ticos. Se a verdade fundamental n\u00e3o puder ser obtida de forma sistem\u00e1tica, outras proxies e metodologias devem ser investigadas para obter alguma medida do desempenho do modelo. Uma op\u00e7\u00e3o \u00e9 usar seres humanos para rotular amostras manualmente. Um aspecto importante da rotulagem humana \u00e9 levar em considera\u00e7\u00e3o a precis\u00e3o humana. Se dois indiv\u00edduos diferentes rotularem uma imagem, \u00e9 prov\u00e1vel que os r\u00f3tulos sejam diferentes para algumas amostras. \u00c9 importante entender como os r\u00f3tulos foram obtidos para avaliar a confiabilidade da verdade fundamental (da\u00ed falarmos sobre a precis\u00e3o humana). Para maior clareza, consideremos os seguintes exemplos (de forma alguma uma lista exaustiva): Previs\u00e3o : Cen\u00e1rios de previs\u00e3o s\u00e3o exemplos de problemas de aprendizado de m\u00e1quina em que a verdade fundamental pode ser obtida na maioria dos casos, mesmo que haja um atraso. Por exemplo, para um modelo que prev\u00ea as vendas de sorvete em uma loja local, a verdade fundamental ser\u00e1 obtida \u00e0 medida que as vendas acontecerem, mas pode aparecer no sistema em um momento posterior em rela\u00e7\u00e3o \u00e0 previs\u00e3o do modelo. Sistemas de recomenda\u00e7\u00e3o : Para sistemas de recomenda\u00e7\u00e3o, obter a verdade fundamental \u00e9 um problema complexo na maioria dos casos, pois n\u00e3o h\u00e1 como identificar a recomenda\u00e7\u00e3o ideal. Para um site de varejo, por exemplo, cliques/n\u00e3o cliques, compra/n\u00e3o compra ou outras intera\u00e7\u00f5es do usu\u00e1rio com a recomenda\u00e7\u00e3o podem ser usados como proxies da verdade fundamental. Detec\u00e7\u00e3o de objetos em imagens : Para um modelo de detec\u00e7\u00e3o de objetos, \u00e0 medida que novas imagens s\u00e3o pontuadas, n\u00e3o h\u00e1 novos r\u00f3tulos sendo gerados automaticamente. Uma op\u00e7\u00e3o para obter a verdade fundamental para as novas imagens \u00e9 usar pessoas para rotular as imagens manualmente. A rotulagem humana \u00e9 cara, demorada e n\u00e3o \u00e9 100% precisa, ent\u00e3o na maioria dos casos, apenas um subconjunto das imagens pode ser rotulado. Essas amostras podem ser escolhidas aleatoriamente ou usando t\u00e9cnicas de aprendizado ativo para selecionar as amostras n\u00e3o rotuladas mais informativas.","title":"\u00c9 poss\u00edvel obter ou inferir a verdade fundamental na produ\u00e7\u00e3o?"},{"location":"machine-learning/ml-model-checklist/#a-distribuicao-de-dados-dos-conjuntos-de-treinamento-teste-e-validacao-se-aplicavel-foi-analisada","text":"A distribui\u00e7\u00e3o de dados dos seus conjuntos de treinamento, teste e valida\u00e7\u00e3o (se aplic\u00e1vel) deve ser analisada para garantir que todos eles provenham da mesma distribui\u00e7\u00e3o. Se isso n\u00e3o for o caso, algumas op\u00e7\u00f5es a serem consideradas s\u00e3o: reembaralhar, reamostrar, modificar os dados, coletar mais amostras ou remover recursos do conjunto de dados. Diferen\u00e7as significativas nas distribui\u00e7\u00f5es de dados dos diferentes conjuntos de dados podem afetar grandemente o desempenho do modelo. Algumas perguntas potenciais a fazer: Quanto os dados de treinamento e teste representam o resultado final? A distribui\u00e7\u00e3o de cada caracter\u00edstica individual \u00e9 consistente em todos os seus conjuntos de dados? (ou seja, a mesma representa\u00e7\u00e3o de grupos et\u00e1rios, g\u00eanero, ra\u00e7a, etc.) Existem informa\u00e7\u00f5es sobre a origem dos dados? De onde vieram os dados? Como os dados foram coletados? A coleta e a rotulagem podem ser automatizadas? Recursos: Tutorial \"Dividindo em conjuntos de treinamento, desenvolvimento e teste\"","title":"A distribui\u00e7\u00e3o de dados dos conjuntos de treinamento, teste e valida\u00e7\u00e3o (se aplic\u00e1vel) foi analisada?"},{"location":"machine-learning/ml-model-checklist/#foram-estabelecidos-objetivos-e-limites-rigidos-para-o-desempenho-velocidade-de-previsao-e-custos-de-modo-que-possam-ser-considerados-se-forem-necessarias-compensacoes","text":"Alguns modelos de aprendizado de m\u00e1quina alcan\u00e7am alto desempenho de ML, mas s\u00e3o caros e demorados para serem executados. Nesses casos, um modelo menos perform\u00e1tico e mais barato pode ser preferido. Portanto, \u00e9 importante calcular as m\u00e9tricas de desempenho do modelo (precis\u00e3o, precis\u00e3o, recall, RMSE etc.), mas tamb\u00e9m coletar dados sobre o custo de execu\u00e7\u00e3o do modelo e quanto tempo levar\u00e1 para executar. Uma vez que esses dados sejam reunidos, uma decis\u00e3o informada deve ser tomada sobre qual modelo ser\u00e1 colocado em produ\u00e7\u00e3o. M\u00e9tricas do sistema a serem consideradas: Uso de CPU/GPU/mem\u00f3ria Custo por previs\u00e3o Tempo necess\u00e1rio para fazer uma previs\u00e3o","title":"Foram estabelecidos objetivos e limites r\u00edgidos para o desempenho, velocidade de previs\u00e3o e custos, de modo que possam ser considerados se forem necess\u00e1rias compensa\u00e7\u00f5es?"},{"location":"machine-learning/ml-model-checklist/#como-o-modelo-sera-integrado-a-outros-sistemas-e-qual-sera-o-impacto","text":"Modelos de Aprendizado de M\u00e1quina n\u00e3o existem isoladamente, mas fazem parte de um sistema muito maior. Esses sistemas podem ser sistemas antigos e propriet\u00e1rios ou novos sistemas sendo desenvolvidos como resultado da cria\u00e7\u00e3o de um novo modelo de aprendizado de m\u00e1quina. Em ambos os casos, \u00e9 importante entender onde o modelo real se encaixar\u00e1, qual sa\u00edda \u00e9 esperada do modelo e como essa sa\u00edda ser\u00e1 usada pelo sistema maior. Al\u00e9m disso, \u00e9 essencial decidir se o modelo ser\u00e1 usado para infer\u00eancia em lote e/ou em tempo real, pois os caminhos de produ\u00e7\u00e3o podem ser diferentes. Poss\u00edveis perguntas para avaliar o impacto do modelo: H\u00e1 um humano no loop? Como o feedback \u00e9 coletado por meio do sistema? (por exemplo, como sabemos se uma previs\u00e3o est\u00e1 errada) Existe um mecanismo de fallback quando as coisas d\u00e3o errado? O sistema \u00e9 transparente de que h\u00e1 um modelo fazendo uma previs\u00e3o e quais dados s\u00e3o usados para fazer essa previs\u00e3o? Qual \u00e9 o custo de uma previs\u00e3o errada?","title":"Como o modelo ser\u00e1 integrado a outros sistemas e qual ser\u00e1 o impacto?"},{"location":"machine-learning/ml-model-checklist/#como-a-qualidade-dos-dados-de-entrada-sera-monitorada","text":"\u00c0 medida que os sistemas de dados se tornam cada vez mais complexos no cen\u00e1rio atual, \u00e9 especialmente vital empregar protocolos de monitoramento, alerta e corre\u00e7\u00e3o de qualidade de dados. Seguir as melhores pr\u00e1ticas de valida\u00e7\u00e3o de dados pode prevenir problemas insidiosos que se infiltram nos modelos de aprendizado de m\u00e1quina, reduzindo a utilidade do modelo na melhor das hip\u00f3teses e introduzindo riscos na pior das hip\u00f3teses. A valida\u00e7\u00e3o de dados reduz o risco de interrup\u00e7\u00f5es nos dados (aumentando a folga) e d\u00edvidas t\u00e9cnicas, al\u00e9m de apoiar o sucesso a longo prazo de modelos de aprendizado de m\u00e1quina e outras aplica\u00e7\u00f5es que dependem dos dados. As melhores pr\u00e1ticas de valida\u00e7\u00e3o de dados incluem: Utilizar processos automatizados de teste de qualidade de dados em cada est\u00e1gio do pipeline de dados. Roteamento de dados que falham nos testes de qualidade para um armazenamento de dados separado para diagn\u00f3stico e resolu\u00e7\u00e3o. Utiliza\u00e7\u00e3o de observabilidade de dados de ponta a ponta quanto \u00e0 atualidade, distribui\u00e7\u00e3o, volume, esquema e linhagem dos dados. Observe que a valida\u00e7\u00e3o de dados \u00e9 distinta da detec\u00e7\u00e3o de deriva de dados. A valida\u00e7\u00e3o de dados detecta erros nos dados (por exemplo, um dado est\u00e1 fora da faixa esperada), enquanto a detec\u00e7\u00e3o de deriva de dados descobre mudan\u00e7as leg\u00edtimas nos dados que s\u00e3o verdadeiramente representativas do fen\u00f4meno em quest\u00e3o (por exemplo, as prefer\u00eancias do usu\u00e1rio mudam). Problemas de valida\u00e7\u00e3o de dados devem acionar o roteamento e a corre\u00e7\u00e3o, enquanto a deriva de dados deve acionar a adapta\u00e7\u00e3o ou o retrabalho de um modelo. Recursos: \"Fundamentos da Qualidade de Dados\" por Moses et al.","title":"Como a qualidade dos dados de entrada ser\u00e1 monitorada?"},{"location":"machine-learning/ml-model-checklist/#como-sera-monitorada-a-deriva-nas-caracteristicas-dos-dados","text":"A detec\u00e7\u00e3o de deriva de dados descobre mudan\u00e7as leg\u00edtimas nos dados de entrada que s\u00e3o verdadeiramente representativas do fen\u00f4meno em quest\u00e3o e n\u00e3o s\u00e3o err\u00f4neas (por exemplo, mudan\u00e7a nas prefer\u00eancias do usu\u00e1rio). \u00c9 imperativo entender se os novos dados em produ\u00e7\u00e3o ser\u00e3o significativamente diferentes dos dados na fase de treinamento. Tamb\u00e9m \u00e9 importante verificar se as informa\u00e7\u00f5es de distribui\u00e7\u00e3o de dados podem ser obtidas para qualquer um dos novos dados que est\u00e3o chegando. O monitoramento de deriva pode informar quando as mudan\u00e7as est\u00e3o ocorrendo e quais s\u00e3o suas caracter\u00edsticas (por exemplo, abruptas vs. graduais) e guiar estrat\u00e9gias eficazes de adapta\u00e7\u00e3o ou retrabalho para manter o desempenho. Poss\u00edveis perguntas a fazer: Quais s\u00e3o alguns exemplos de deriva, ou desvio da norma, que foram experimentados no passado ou que podem ser esperados? Existe uma estrat\u00e9gia de detec\u00e7\u00e3o de deriva em vigor? Ela est\u00e1 alinhada com os tipos esperados de mudan\u00e7as? Existem avisos quando anomalias nos dados de entrada est\u00e3o ocorrendo? Existe uma estrat\u00e9gia de adapta\u00e7\u00e3o em vigor? Ela est\u00e1 alinhada com os tipos esperados de mudan\u00e7as? Recursos: \"Aprendizado sob Deriva de Conceito: Uma Revis\u00e3o\" por Lu et al. Compreendendo a mudan\u00e7a de conjunto de dados","title":"Como ser\u00e1 monitorada a deriva nas caracter\u00edsticas dos dados?"},{"location":"machine-learning/ml-model-checklist/#como-o-desempenho-sera-monitorado","text":"\u00c9 importante definir como o modelo ser\u00e1 monitorado quando estiver em produ\u00e7\u00e3o e como esses dados ser\u00e3o usados para tomar decis\u00f5es. Por exemplo, quando um modelo precisa ser re-treinado devido \u00e0 degrada\u00e7\u00e3o do desempenho e como identificar as causas subjacentes dessa degrada\u00e7\u00e3o podem fazer parte dessa metodologia de monitoramento. Idealmente, o monitoramento do modelo deve ser feito automaticamente. No entanto, se isso n\u00e3o for poss\u00edvel, deve haver uma verifica\u00e7\u00e3o manual peri\u00f3dica do desempenho do modelo. O monitoramento do modelo deve levar a: Capacidade de identificar mudan\u00e7as no desempenho do modelo. Avisos quando anomalias na sa\u00edda do modelo est\u00e3o ocorrendo. Decis\u00f5es de re-treinamento e estrat\u00e9gia de adapta\u00e7\u00e3o.","title":"Como o desempenho ser\u00e1 monitorado?"},{"location":"machine-learning/ml-model-checklist/#foram-consideradas-quaisquer-preocupacoes-eticas","text":"Todos os projetos de Aprendizado de M\u00e1quina passam pelo processo de AI Respons\u00e1vel para garantir que eles sigam os 6 princ\u00edpios de AI Respons\u00e1vel da Microsoft .","title":"Foram consideradas quaisquer preocupa\u00e7\u00f5es \u00e9ticas?"},{"location":"machine-learning/ml-problem-formulation-envisioning/","text":"Vis\u00e3o e Formula\u00e7\u00e3o do Problema Antes de iniciar uma investiga\u00e7\u00e3o de ci\u00eancia de dados, \u00e9 necess\u00e1rio definir uma declara\u00e7\u00e3o de problema que a equipe de ci\u00eancia de dados possa explorar; essa declara\u00e7\u00e3o de problema pode ter uma influ\u00eancia significativa na probabilidade de sucesso do projeto. Metas de Vis\u00e3o As principais metas do processo de vis\u00e3o s\u00e3o: Estabelecer uma compreens\u00e3o clara do dom\u00ednio do problema e do objetivo de neg\u00f3cio subjacente Definir como uma solu\u00e7\u00e3o potencial seria usada e como seu desempenho deve ser medido Determinar quais dados est\u00e3o dispon\u00edveis para resolver o problema Compreender as capacidades e pr\u00e1ticas de trabalho da equipe de ci\u00eancia de dados Garantir que todas as partes tenham a mesma compreens\u00e3o do escopo e dos pr\u00f3ximos passos (por exemplo, integra\u00e7\u00e3o, workshop de explora\u00e7\u00e3o de dados) O processo de vis\u00e3o geralmente envolve uma s\u00e9rie de sess\u00f5es de 'vis\u00e3o' onde a equipe de ci\u00eancia de dados trabalha junto com especialistas no assunto para formular o problema de tal maneira que haja uma compreens\u00e3o compartilhada do dom\u00ednio do problema, um objetivo claro e uma abordagem predefinida para avaliar uma solu\u00e7\u00e3o potencial. Compreens\u00e3o do Dom\u00ednio do Problema Geralmente, antes de definir o escopo de um projeto para uma investiga\u00e7\u00e3o de ci\u00eancia de dados, devemos primeiro compreender o dom\u00ednio do problema: Qual \u00e9 o problema? Por que o problema precisa ser resolvido? Este problema requer uma solu\u00e7\u00e3o de aprendizado de m\u00e1quina? Como uma solu\u00e7\u00e3o potencial seria usada? No entanto, estabelecer essa compreens\u00e3o pode ser dif\u00edcil, especialmente para aqueles que n\u00e3o est\u00e3o familiarizados com o dom\u00ednio do problema. Para facilitar esse processo, podemos abordar problemas de maneira estruturada, seguindo as etapas a seguir: Identifique um problema mensur\u00e1vel e defina-o em termos de neg\u00f3cios. O objetivo deve ser claro, e devemos ter uma boa compreens\u00e3o dos fatores que podemos controlar - que podem ser usados como entradas - e como eles afetam o objetivo. Seja o mais espec\u00edfico poss\u00edvel. Decida como o desempenho de uma solu\u00e7\u00e3o ser\u00e1 medido e identifique se isso \u00e9 poss\u00edvel dentro das restri\u00e7\u00f5es desse problema. Certifique-se de que esteja alinhado com o objetivo de neg\u00f3cios e que voc\u00ea identificou os dados necess\u00e1rios para avaliar a solu\u00e7\u00e3o. Observe que os dados necess\u00e1rios para avaliar uma solu\u00e7\u00e3o podem ser diferentes dos dados necess\u00e1rios para criar uma solu\u00e7\u00e3o. Pensando na solu\u00e7\u00e3o como uma caixa preta, detalhe a fun\u00e7\u00e3o que uma solu\u00e7\u00e3o para este problema deve desempenhar para cumprir o objetivo e verifique se os dados relevantes est\u00e3o dispon\u00edveis para resolver o problema. Uma maneira de abordar isso \u00e9 pensar em como um especialista no assunto poderia resolver o problema manualmente e nos dados necess\u00e1rios; se um especialista humano no assunto n\u00e3o conseguir resolver o problema com os dados dispon\u00edveis, isso indica que informa\u00e7\u00f5es adicionais s\u00e3o necess\u00e1rias e/ou mais dados precisam ser coletados. Com base nos dados dispon\u00edveis, defina declara\u00e7\u00f5es de hip\u00f3teses espec\u00edficas - que podem ser comprovadas ou refutadas - para orientar a explora\u00e7\u00e3o da equipe de ci\u00eancia de dados. Sempre que poss\u00edvel, cada declara\u00e7\u00e3o de hip\u00f3tese deve ter crit\u00e9rios de sucesso claramente definidos (por exemplo, com uma precis\u00e3o superior a 60% ), no entanto, isso nem sempre \u00e9 poss\u00edvel - especialmente para projetos em que atualmente n\u00e3o existe solu\u00e7\u00e3o para o problema. Nesses casos, a medida de sucesso pode ser baseada na verifica\u00e7\u00e3o de um especialista no assunto de que os resultados atendem \u00e0s suas expectativas. Documente todas as informa\u00e7\u00f5es acima para garantir alinhamento entre as partes interessadas e estabelecer uma compreens\u00e3o clara do problema a ser resolvido. Tente garantir que o m\u00e1ximo de conhecimento de dom\u00ednio relevante seja capturado e que as caracter\u00edsticas presentes nos dados dispon\u00edveis - e a maneira como os dados foram coletados - sejam claramente explicadas, de modo que possam ser entendidas por um n\u00e3o especialista no assunto. Depois que uma compreens\u00e3o do dom\u00ednio do problema for estabelecida, pode ser necess\u00e1rio decompor o problema geral em partes menores e significativas para manter o foco da equipe e garantir um escopo de projeto realista dentro do prazo estabelecido. Ouvindo o Usu\u00e1rio Final Esses problemas s\u00e3o complexos e requerem compreens\u00e3o de uma variedade de perspectivas. N\u00e3o \u00e9 incomum que as partes interessadas n\u00e3o sejam os usu\u00e1rios finais do framework de solu\u00e7\u00e3o. Nesses casos, ouvir os usu\u00e1rios finais reais \u00e9 fundamental para o sucesso do projeto. As seguintes perguntas podem ajudar a orientar a discuss\u00e3o na compreens\u00e3o das perspectivas das partes interessadas: Quem \u00e9 o usu\u00e1rio final? Qual \u00e9 a pr\u00e1tica atual relacionada ao problema de neg\u00f3cios? Qual \u00e9 o desempenho da solu\u00e7\u00e3o atual? Quais s\u00e3o seus pontos problem\u00e1ticos? Qual \u00e9 o problema mais dif\u00edcil deles? Qual \u00e9 o estado dos dados usados para construir a solu\u00e7\u00e3o? Como o usu\u00e1rio final ou o SME (Especialista no Assunto) enxerga a solu\u00e7\u00e3o? Orienta\u00e7\u00f5es para a Vis\u00e3o Durante as sess\u00f5es de vis\u00e3o, o seguinte pode ser \u00fatil para orientar a discuss\u00e3o. Muitos desses pontos s\u00e3o retirados diretamente, ou adaptados de, [1] e [2] . Formula\u00e7\u00e3o do Problema Defina o objetivo em termos de neg\u00f3cios. Como a solu\u00e7\u00e3o ser\u00e1 usada? Quais s\u00e3o as solu\u00e7\u00f5es atuais/truques (se houver)? Que trabalho foi feito nessa \u00e1rea at\u00e9 agora? Essa solu\u00e7\u00e3o precisa se encaixar em um sistema existente? Como o desempenho deve ser medido? A medida de desempenho est\u00e1 alinhada com o objetivo de neg\u00f3cios? Qual seria o desempenho m\u00ednimo necess\u00e1rio para atingir o objetivo de neg\u00f3cios? Existem restri\u00e7\u00f5es conhecidas em rela\u00e7\u00e3o a requisitos n\u00e3o funcionais que precisariam ser considerados? (por exemplo, tempos de computa\u00e7\u00e3o) Estruture esse problema (supervisionado/n\u00e3o supervisionado, online/offline, etc.) Existe experi\u00eancia humana dispon\u00edvel? Como voc\u00ea resolveria o problema manualmente? Existem restri\u00e7\u00f5es quanto ao tipo de abordagens que podem ser usadas? (por exemplo, a solu\u00e7\u00e3o precisa ser completamente explic\u00e1vel?) Liste as suposi\u00e7\u00f5es que voc\u00ea ou outros fizeram at\u00e9 agora. Verifique essas suposi\u00e7\u00f5es, se poss\u00edvel. Defina algumas declara\u00e7\u00f5es de hip\u00f3teses iniciais a serem exploradas. Destaque e discuta quaisquer preocupa\u00e7\u00f5es de AI respons\u00e1vel, se apropriado. Fluxo de Trabalho Quais habilidades de ci\u00eancia de dados existem na organiza\u00e7\u00e3o? Quantos cientistas/engenheiros de dados estariam dispon\u00edveis para trabalhar neste projeto? Em que capacidade esses recursos estariam dispon\u00edveis (tempo integral, meio per\u00edodo, etc.)? Como s\u00e3o as pr\u00e1ticas atuais de fluxo de trabalho da equipe? Eles trabalham na nuvem/local? Em cadernos/IDE? O controle de vers\u00e3o \u00e9 usado? Como os dados, experimentos e modelos s\u00e3o rastreados atualmente? A equipe utiliza uma metodologia \u00c1gil? Como o trabalho \u00e9 rastreado? Existem atualmente solu\u00e7\u00f5es de ML em produ\u00e7\u00e3o? Quem \u00e9 respons\u00e1vel por manter essas solu\u00e7\u00f5es? Quem seria respons\u00e1vel por manter uma solu\u00e7\u00e3o produzida durante este projeto? Existem restri\u00e7\u00f5es quanto \u00e0s ferramentas que devem/n\u00e3o devem ser usadas? Exemplo - um problema de mecanismo de recomenda\u00e7\u00e3o Para ilustrar como o processo acima pode ser aplicado a um dom\u00ednio de problema tang\u00edvel, considere, como exemplo, que estamos olhando para implementar um mecanismo de recomenda\u00e7\u00e3o para uma loja de roupas. Este exemplo foi, em parte, inspirado em [3] . Frequentemente, o objetivo pode ser apresentado de forma simples, como \"aumentar as vendas\". No entanto, embora este seja o principal objetivo, podemos nos beneficiar sendo mais espec\u00edficos aqui. Suponha que implantamos uma solu\u00e7\u00e3o em novembro e observamos um aumento nas vendas em dezembro; como poder\u00edamos distinguir quanto disso se deve ao novo mecanismo de recomenda\u00e7\u00e3o, em oposi\u00e7\u00e3o ao fato de dezembro ser uma temporada de compras de pico? Um objetivo melhor, neste caso, seria \"aumentar as vendas adicionais, apresentando ao cliente itens que eles n\u00e3o teriam comprado sem a recomenda\u00e7\u00e3o \". Aqui, os inputs que podemos controlar s\u00e3o a escolha dos itens apresentados a cada cliente e a ordem em que s\u00e3o exibidos, considerando fatores como com que frequ\u00eancia devem ser alterados, sazonalidade, etc. Os dados necess\u00e1rios para avaliar uma solu\u00e7\u00e3o potencial neste caso seriam quais recomenda\u00e7\u00f5es resultaram em novas vendas e uma estimativa da probabilidade de um cliente comprar um item espec\u00edfico sem uma recomenda\u00e7\u00e3o. Observe que, embora esses dados tamb\u00e9m possam ser usados para construir um mecanismo de recomenda\u00e7\u00e3o, \u00e9 improv\u00e1vel que esses dados estejam dispon\u00edveis antes que um sistema de recomenda\u00e7\u00e3o tenha sido implementado. Portanto, \u00e9 prov\u00e1vel que tenhamos que usar uma fonte de dados alternativa para construir o modelo. Podemos ter uma ideia inicial de como abordar uma solu\u00e7\u00e3o para esse problema considerando como ele seria resolvido por um especialista no assunto. Pensando em como um estilista pessoal pode fazer uma recomenda\u00e7\u00e3o, \u00e9 prov\u00e1vel que eles recomendem itens com base em um ou mais dos seguintes crit\u00e9rios: itens geralmente populares itens semelhantes aos que o cliente gosta/compra itens que foram gostados/comprados por clientes semelhantes itens que s\u00e3o complementares aos que o cliente possui Embora esta lista n\u00e3o seja exaustiva, ela fornece uma boa indica\u00e7\u00e3o dos dados que provavelmente ser\u00e3o \u00fateis para n\u00f3s: dados de vendas de itens hist\u00f3ricos de compra do cliente dados demogr\u00e1ficos do cliente descri\u00e7\u00f5es e tags de itens conjuntos de itens anteriormente montados ou conjuntos que foram criados pelo estilista Ent\u00e3o, poder\u00edamos usar esses dados para explorar: um m\u00e9todo para medir a semelhan\u00e7a entre itens um m\u00e9todo para medir a semelhan\u00e7a entre clientes um m\u00e9todo para medir como os itens s\u00e3o complementares uns aos outros que podem ser usados para criar e classificar recomenda\u00e7\u00f5es. Dependendo do escopo do projeto e dos dados dispon\u00edveis, uma ou mais dessas \u00e1reas podem ser selecionadas para criar hip\u00f3teses a serem exploradas pela equipe de ci\u00eancia de dados. Alguns exemplos de hip\u00f3teses podem ser: A partir das descri\u00e7\u00f5es de cada item, podemos determinar uma medida de semelhan\u00e7a entre diferentes itens com um grau de precis\u00e3o especificado por um estilista. Com base no comportamento de clientes com hist\u00f3ricos de compra semelhantes, somos capazes de prever quais itens um cliente provavelmente comprar\u00e1; com uma certeza maior do que a escolha aleat\u00f3ria. Usando conjuntos de itens que foram vendidos juntos anteriormente, podemos formular regras em torno das caracter\u00edsticas que determinam se os itens s\u00e3o complementares ou n\u00e3o, o que pode ser verificado por um estilista. Pr\u00f3ximos Passos Para garantir clareza e alinhamento, \u00e9 \u00fatil resumir as descobertas da etapa de concep\u00e7\u00e3o, concentrando-se em cen\u00e1rios detalhados propostos, suposi\u00e7\u00f5es e decis\u00f5es acordadas, bem como pr\u00f3ximos passos. Sugerimos confirmar que voc\u00ea tem acesso a todos os recursos necess\u00e1rios (incluindo dados) como pr\u00f3ximo passo antes de prosseguir com as oficinas de explora\u00e7\u00e3o de dados. Aqui est\u00e3o os links para o modelo de documento de sa\u00edda e algumas perguntas que podem ser \u00fateis para confirmar o acesso aos recursos. Modelo de Documento de Sa\u00edda de Escopo Resumido Lista de Perguntas de Acesso a Recursos Lista de Perguntas da Oficina de Explora\u00e7\u00e3o de Dados Refer\u00eancias Muitas das ideias apresentadas aqui - e muito mais - foram inspiradas por e podem ser encontradas nos seguintes recursos, todos altamente recomendados. Lista de Verifica\u00e7\u00e3o de Projetos de Aprendizado de M\u00e1quina de Aur\u00e9lien G\u00e9ron Lista de Verifica\u00e7\u00e3o de Projetos de Dados da Fast.ai Designing great data products. Jeremy Howard, Margit Zwemer e Mike Loukides","title":"Vis\u00e3o e Formula\u00e7\u00e3o do Problema"},{"location":"machine-learning/ml-problem-formulation-envisioning/#visao-e-formulacao-do-problema","text":"Antes de iniciar uma investiga\u00e7\u00e3o de ci\u00eancia de dados, \u00e9 necess\u00e1rio definir uma declara\u00e7\u00e3o de problema que a equipe de ci\u00eancia de dados possa explorar; essa declara\u00e7\u00e3o de problema pode ter uma influ\u00eancia significativa na probabilidade de sucesso do projeto.","title":"Vis\u00e3o e Formula\u00e7\u00e3o do Problema"},{"location":"machine-learning/ml-problem-formulation-envisioning/#metas-de-visao","text":"As principais metas do processo de vis\u00e3o s\u00e3o: Estabelecer uma compreens\u00e3o clara do dom\u00ednio do problema e do objetivo de neg\u00f3cio subjacente Definir como uma solu\u00e7\u00e3o potencial seria usada e como seu desempenho deve ser medido Determinar quais dados est\u00e3o dispon\u00edveis para resolver o problema Compreender as capacidades e pr\u00e1ticas de trabalho da equipe de ci\u00eancia de dados Garantir que todas as partes tenham a mesma compreens\u00e3o do escopo e dos pr\u00f3ximos passos (por exemplo, integra\u00e7\u00e3o, workshop de explora\u00e7\u00e3o de dados) O processo de vis\u00e3o geralmente envolve uma s\u00e9rie de sess\u00f5es de 'vis\u00e3o' onde a equipe de ci\u00eancia de dados trabalha junto com especialistas no assunto para formular o problema de tal maneira que haja uma compreens\u00e3o compartilhada do dom\u00ednio do problema, um objetivo claro e uma abordagem predefinida para avaliar uma solu\u00e7\u00e3o potencial.","title":"Metas de Vis\u00e3o"},{"location":"machine-learning/ml-problem-formulation-envisioning/#compreensao-do-dominio-do-problema","text":"Geralmente, antes de definir o escopo de um projeto para uma investiga\u00e7\u00e3o de ci\u00eancia de dados, devemos primeiro compreender o dom\u00ednio do problema: Qual \u00e9 o problema? Por que o problema precisa ser resolvido? Este problema requer uma solu\u00e7\u00e3o de aprendizado de m\u00e1quina? Como uma solu\u00e7\u00e3o potencial seria usada? No entanto, estabelecer essa compreens\u00e3o pode ser dif\u00edcil, especialmente para aqueles que n\u00e3o est\u00e3o familiarizados com o dom\u00ednio do problema. Para facilitar esse processo, podemos abordar problemas de maneira estruturada, seguindo as etapas a seguir: Identifique um problema mensur\u00e1vel e defina-o em termos de neg\u00f3cios. O objetivo deve ser claro, e devemos ter uma boa compreens\u00e3o dos fatores que podemos controlar - que podem ser usados como entradas - e como eles afetam o objetivo. Seja o mais espec\u00edfico poss\u00edvel. Decida como o desempenho de uma solu\u00e7\u00e3o ser\u00e1 medido e identifique se isso \u00e9 poss\u00edvel dentro das restri\u00e7\u00f5es desse problema. Certifique-se de que esteja alinhado com o objetivo de neg\u00f3cios e que voc\u00ea identificou os dados necess\u00e1rios para avaliar a solu\u00e7\u00e3o. Observe que os dados necess\u00e1rios para avaliar uma solu\u00e7\u00e3o podem ser diferentes dos dados necess\u00e1rios para criar uma solu\u00e7\u00e3o. Pensando na solu\u00e7\u00e3o como uma caixa preta, detalhe a fun\u00e7\u00e3o que uma solu\u00e7\u00e3o para este problema deve desempenhar para cumprir o objetivo e verifique se os dados relevantes est\u00e3o dispon\u00edveis para resolver o problema. Uma maneira de abordar isso \u00e9 pensar em como um especialista no assunto poderia resolver o problema manualmente e nos dados necess\u00e1rios; se um especialista humano no assunto n\u00e3o conseguir resolver o problema com os dados dispon\u00edveis, isso indica que informa\u00e7\u00f5es adicionais s\u00e3o necess\u00e1rias e/ou mais dados precisam ser coletados. Com base nos dados dispon\u00edveis, defina declara\u00e7\u00f5es de hip\u00f3teses espec\u00edficas - que podem ser comprovadas ou refutadas - para orientar a explora\u00e7\u00e3o da equipe de ci\u00eancia de dados. Sempre que poss\u00edvel, cada declara\u00e7\u00e3o de hip\u00f3tese deve ter crit\u00e9rios de sucesso claramente definidos (por exemplo, com uma precis\u00e3o superior a 60% ), no entanto, isso nem sempre \u00e9 poss\u00edvel - especialmente para projetos em que atualmente n\u00e3o existe solu\u00e7\u00e3o para o problema. Nesses casos, a medida de sucesso pode ser baseada na verifica\u00e7\u00e3o de um especialista no assunto de que os resultados atendem \u00e0s suas expectativas. Documente todas as informa\u00e7\u00f5es acima para garantir alinhamento entre as partes interessadas e estabelecer uma compreens\u00e3o clara do problema a ser resolvido. Tente garantir que o m\u00e1ximo de conhecimento de dom\u00ednio relevante seja capturado e que as caracter\u00edsticas presentes nos dados dispon\u00edveis - e a maneira como os dados foram coletados - sejam claramente explicadas, de modo que possam ser entendidas por um n\u00e3o especialista no assunto. Depois que uma compreens\u00e3o do dom\u00ednio do problema for estabelecida, pode ser necess\u00e1rio decompor o problema geral em partes menores e significativas para manter o foco da equipe e garantir um escopo de projeto realista dentro do prazo estabelecido.","title":"Compreens\u00e3o do Dom\u00ednio do Problema"},{"location":"machine-learning/ml-problem-formulation-envisioning/#ouvindo-o-usuario-final","text":"Esses problemas s\u00e3o complexos e requerem compreens\u00e3o de uma variedade de perspectivas. N\u00e3o \u00e9 incomum que as partes interessadas n\u00e3o sejam os usu\u00e1rios finais do framework de solu\u00e7\u00e3o. Nesses casos, ouvir os usu\u00e1rios finais reais \u00e9 fundamental para o sucesso do projeto. As seguintes perguntas podem ajudar a orientar a discuss\u00e3o na compreens\u00e3o das perspectivas das partes interessadas: Quem \u00e9 o usu\u00e1rio final? Qual \u00e9 a pr\u00e1tica atual relacionada ao problema de neg\u00f3cios? Qual \u00e9 o desempenho da solu\u00e7\u00e3o atual? Quais s\u00e3o seus pontos problem\u00e1ticos? Qual \u00e9 o problema mais dif\u00edcil deles? Qual \u00e9 o estado dos dados usados para construir a solu\u00e7\u00e3o? Como o usu\u00e1rio final ou o SME (Especialista no Assunto) enxerga a solu\u00e7\u00e3o?","title":"Ouvindo o Usu\u00e1rio Final"},{"location":"machine-learning/ml-problem-formulation-envisioning/#orientacoes-para-a-visao","text":"Durante as sess\u00f5es de vis\u00e3o, o seguinte pode ser \u00fatil para orientar a discuss\u00e3o. Muitos desses pontos s\u00e3o retirados diretamente, ou adaptados de, [1] e [2] .","title":"Orienta\u00e7\u00f5es para a Vis\u00e3o"},{"location":"machine-learning/ml-problem-formulation-envisioning/#formulacao-do-problema","text":"Defina o objetivo em termos de neg\u00f3cios. Como a solu\u00e7\u00e3o ser\u00e1 usada? Quais s\u00e3o as solu\u00e7\u00f5es atuais/truques (se houver)? Que trabalho foi feito nessa \u00e1rea at\u00e9 agora? Essa solu\u00e7\u00e3o precisa se encaixar em um sistema existente? Como o desempenho deve ser medido? A medida de desempenho est\u00e1 alinhada com o objetivo de neg\u00f3cios? Qual seria o desempenho m\u00ednimo necess\u00e1rio para atingir o objetivo de neg\u00f3cios? Existem restri\u00e7\u00f5es conhecidas em rela\u00e7\u00e3o a requisitos n\u00e3o funcionais que precisariam ser considerados? (por exemplo, tempos de computa\u00e7\u00e3o) Estruture esse problema (supervisionado/n\u00e3o supervisionado, online/offline, etc.) Existe experi\u00eancia humana dispon\u00edvel? Como voc\u00ea resolveria o problema manualmente? Existem restri\u00e7\u00f5es quanto ao tipo de abordagens que podem ser usadas? (por exemplo, a solu\u00e7\u00e3o precisa ser completamente explic\u00e1vel?) Liste as suposi\u00e7\u00f5es que voc\u00ea ou outros fizeram at\u00e9 agora. Verifique essas suposi\u00e7\u00f5es, se poss\u00edvel. Defina algumas declara\u00e7\u00f5es de hip\u00f3teses iniciais a serem exploradas. Destaque e discuta quaisquer preocupa\u00e7\u00f5es de AI respons\u00e1vel, se apropriado.","title":"Formula\u00e7\u00e3o do Problema"},{"location":"machine-learning/ml-problem-formulation-envisioning/#fluxo-de-trabalho","text":"Quais habilidades de ci\u00eancia de dados existem na organiza\u00e7\u00e3o? Quantos cientistas/engenheiros de dados estariam dispon\u00edveis para trabalhar neste projeto? Em que capacidade esses recursos estariam dispon\u00edveis (tempo integral, meio per\u00edodo, etc.)? Como s\u00e3o as pr\u00e1ticas atuais de fluxo de trabalho da equipe? Eles trabalham na nuvem/local? Em cadernos/IDE? O controle de vers\u00e3o \u00e9 usado? Como os dados, experimentos e modelos s\u00e3o rastreados atualmente? A equipe utiliza uma metodologia \u00c1gil? Como o trabalho \u00e9 rastreado? Existem atualmente solu\u00e7\u00f5es de ML em produ\u00e7\u00e3o? Quem \u00e9 respons\u00e1vel por manter essas solu\u00e7\u00f5es? Quem seria respons\u00e1vel por manter uma solu\u00e7\u00e3o produzida durante este projeto? Existem restri\u00e7\u00f5es quanto \u00e0s ferramentas que devem/n\u00e3o devem ser usadas?","title":"Fluxo de Trabalho"},{"location":"machine-learning/ml-problem-formulation-envisioning/#exemplo-um-problema-de-mecanismo-de-recomendacao","text":"Para ilustrar como o processo acima pode ser aplicado a um dom\u00ednio de problema tang\u00edvel, considere, como exemplo, que estamos olhando para implementar um mecanismo de recomenda\u00e7\u00e3o para uma loja de roupas. Este exemplo foi, em parte, inspirado em [3] . Frequentemente, o objetivo pode ser apresentado de forma simples, como \"aumentar as vendas\". No entanto, embora este seja o principal objetivo, podemos nos beneficiar sendo mais espec\u00edficos aqui. Suponha que implantamos uma solu\u00e7\u00e3o em novembro e observamos um aumento nas vendas em dezembro; como poder\u00edamos distinguir quanto disso se deve ao novo mecanismo de recomenda\u00e7\u00e3o, em oposi\u00e7\u00e3o ao fato de dezembro ser uma temporada de compras de pico? Um objetivo melhor, neste caso, seria \"aumentar as vendas adicionais, apresentando ao cliente itens que eles n\u00e3o teriam comprado sem a recomenda\u00e7\u00e3o \". Aqui, os inputs que podemos controlar s\u00e3o a escolha dos itens apresentados a cada cliente e a ordem em que s\u00e3o exibidos, considerando fatores como com que frequ\u00eancia devem ser alterados, sazonalidade, etc. Os dados necess\u00e1rios para avaliar uma solu\u00e7\u00e3o potencial neste caso seriam quais recomenda\u00e7\u00f5es resultaram em novas vendas e uma estimativa da probabilidade de um cliente comprar um item espec\u00edfico sem uma recomenda\u00e7\u00e3o. Observe que, embora esses dados tamb\u00e9m possam ser usados para construir um mecanismo de recomenda\u00e7\u00e3o, \u00e9 improv\u00e1vel que esses dados estejam dispon\u00edveis antes que um sistema de recomenda\u00e7\u00e3o tenha sido implementado. Portanto, \u00e9 prov\u00e1vel que tenhamos que usar uma fonte de dados alternativa para construir o modelo. Podemos ter uma ideia inicial de como abordar uma solu\u00e7\u00e3o para esse problema considerando como ele seria resolvido por um especialista no assunto. Pensando em como um estilista pessoal pode fazer uma recomenda\u00e7\u00e3o, \u00e9 prov\u00e1vel que eles recomendem itens com base em um ou mais dos seguintes crit\u00e9rios: itens geralmente populares itens semelhantes aos que o cliente gosta/compra itens que foram gostados/comprados por clientes semelhantes itens que s\u00e3o complementares aos que o cliente possui Embora esta lista n\u00e3o seja exaustiva, ela fornece uma boa indica\u00e7\u00e3o dos dados que provavelmente ser\u00e3o \u00fateis para n\u00f3s: dados de vendas de itens hist\u00f3ricos de compra do cliente dados demogr\u00e1ficos do cliente descri\u00e7\u00f5es e tags de itens conjuntos de itens anteriormente montados ou conjuntos que foram criados pelo estilista Ent\u00e3o, poder\u00edamos usar esses dados para explorar: um m\u00e9todo para medir a semelhan\u00e7a entre itens um m\u00e9todo para medir a semelhan\u00e7a entre clientes um m\u00e9todo para medir como os itens s\u00e3o complementares uns aos outros que podem ser usados para criar e classificar recomenda\u00e7\u00f5es. Dependendo do escopo do projeto e dos dados dispon\u00edveis, uma ou mais dessas \u00e1reas podem ser selecionadas para criar hip\u00f3teses a serem exploradas pela equipe de ci\u00eancia de dados. Alguns exemplos de hip\u00f3teses podem ser: A partir das descri\u00e7\u00f5es de cada item, podemos determinar uma medida de semelhan\u00e7a entre diferentes itens com um grau de precis\u00e3o especificado por um estilista. Com base no comportamento de clientes com hist\u00f3ricos de compra semelhantes, somos capazes de prever quais itens um cliente provavelmente comprar\u00e1; com uma certeza maior do que a escolha aleat\u00f3ria. Usando conjuntos de itens que foram vendidos juntos anteriormente, podemos formular regras em torno das caracter\u00edsticas que determinam se os itens s\u00e3o complementares ou n\u00e3o, o que pode ser verificado por um estilista.","title":"Exemplo - um problema de mecanismo de recomenda\u00e7\u00e3o"},{"location":"machine-learning/ml-problem-formulation-envisioning/#proximos-passos","text":"Para garantir clareza e alinhamento, \u00e9 \u00fatil resumir as descobertas da etapa de concep\u00e7\u00e3o, concentrando-se em cen\u00e1rios detalhados propostos, suposi\u00e7\u00f5es e decis\u00f5es acordadas, bem como pr\u00f3ximos passos. Sugerimos confirmar que voc\u00ea tem acesso a todos os recursos necess\u00e1rios (incluindo dados) como pr\u00f3ximo passo antes de prosseguir com as oficinas de explora\u00e7\u00e3o de dados. Aqui est\u00e3o os links para o modelo de documento de sa\u00edda e algumas perguntas que podem ser \u00fateis para confirmar o acesso aos recursos. Modelo de Documento de Sa\u00edda de Escopo Resumido Lista de Perguntas de Acesso a Recursos Lista de Perguntas da Oficina de Explora\u00e7\u00e3o de Dados","title":"Pr\u00f3ximos Passos"},{"location":"machine-learning/ml-problem-formulation-envisioning/#referencias","text":"Muitas das ideias apresentadas aqui - e muito mais - foram inspiradas por e podem ser encontradas nos seguintes recursos, todos altamente recomendados. Lista de Verifica\u00e7\u00e3o de Projetos de Aprendizado de M\u00e1quina de Aur\u00e9lien G\u00e9ron Lista de Verifica\u00e7\u00e3o de Projetos de Dados da Fast.ai Designing great data products. Jeremy Howard, Margit Zwemer e Mike Loukides","title":"Refer\u00eancias"},{"location":"machine-learning/ml-profiling/","text":"Perfilagem de C\u00f3digo em Aprendizado de M\u00e1quina e MLOps Projetos de Ci\u00eancia de Dados, especialmente aqueles que envolvem t\u00e9cnicas de Aprendizado Profundo, geralmente consomem muitos recursos. Uma itera\u00e7\u00e3o de treinamento de modelo pode levar v\u00e1rias horas. Embora o processamento de grandes volumes de dados realmente leve tempo, pequenos bugs e implementa\u00e7\u00f5es sub\u00f3timas de algumas partes funcionais podem causar um consumo extra de recursos. A perfilagem pode ser usada para identificar gargalos de desempenho e ver quais fun\u00e7\u00f5es s\u00e3o mais custosas no c\u00f3digo do aplicativo. Com base nas sa\u00eddas do perfilador, \u00e9 poss\u00edvel se concentrar nas inefici\u00eancias mais significativas e f\u00e1ceis de resolver, e, assim, alcan\u00e7ar um melhor desempenho do c\u00f3digo. Embora a perfilagem siga os mesmos princ\u00edpios de qualquer outro projeto de software, o objetivo deste documento \u00e9 fornecer exemplos de perfilagem para os cen\u00e1rios mais comuns em projetos de MLOps / Ci\u00eancia de Dados. Abaixo est\u00e3o alguns cen\u00e1rios comuns em projetos de MLOps / Ci\u00eancia de Dados, juntamente com sugest\u00f5es sobre como perfil\u00e1-los. Perfilagem gen\u00e9rica em Python Perfilagem de treinamento de modelo PyTorch Perfilagem de pipeline de Azure Machine Learning Perfilagem gen\u00e9rica em Python Normalmente, uma solu\u00e7\u00e3o de MLOps / Ci\u00eancia de Dados cont\u00e9m c\u00f3digo Python simples que atende a diferentes finalidades (por exemplo, processamento de dados), juntamente com c\u00f3digo de treinamento de modelo especializado. Embora muitos frameworks de Aprendizado de M\u00e1quina forne\u00e7am seu pr\u00f3prio perfilador, \u00e0s vezes tamb\u00e9m \u00e9 \u00fatil perfilar toda a solu\u00e7\u00e3o. Existem dois tipos de perfiladores: determin\u00edsticos (todos os eventos s\u00e3o rastreados, por exemplo, cProfile ) e estat\u00edsticos (amostragem em intervalos regulares, por exemplo, py-spy ). O exemplo abaixo mostra um exemplo de perfilador determin\u00edstico. Existem muitas op\u00e7\u00f5es de perfilagem de c\u00f3digo Python gen\u00e9rico determin\u00edstico. Uma das op\u00e7\u00f5es padr\u00e3o de perfilagem \u00e9 o profiler embutido cProfile . Usando o cProfile , \u00e9 poss\u00edvel perfilar facilmente um script Python ou apenas um trecho de c\u00f3digo. Essa ferramenta de perfilagem produz um arquivo que pode ser visualizado usando ferramentas de c\u00f3digo aberto ou analisado usando a classe stats.Stats . A \u00faltima op\u00e7\u00e3o requer a configura\u00e7\u00e3o de par\u00e2metros de filtragem e classifica\u00e7\u00e3o para uma melhor experi\u00eancia de an\u00e1lise. Abaixo, voc\u00ea encontra um exemplo de uso do cProfile para perfilar um trecho de c\u00f3digo. import cProfile # Iniciar a perfilagem profiler = cProfile . Profile () profiler . enable () # -- SEU C\u00d3DIGO AQUI --- # Parar a perfilagem profiler . disable () # Escrever os resultados do perfilador em um arquivo HTML profiler . dump_stats ( \"resultados_do_perfilador.prof\" ) Voc\u00ea tamb\u00e9m pode executar o cProfile fora do script Python usando o seguinte comando: python -m cProfile [ -o arquivo_de_saida ] [ -s ordem_de_classifica\u00e7\u00e3o ] ( -m m\u00f3dulo | meu_script.py ) Observa\u00e7\u00e3o: geralmente, uma \u00e9poca de treinamento de modelo \u00e9 suficiente para a perfilagem. N\u00e3o \u00e9 necess\u00e1rio executar mais \u00e9pocas e aumentar o custo. Consulte The Python Profilers para obter mais detalhes. Perfilagem de Treinamento de Modelo PyTorch O PyTorch 1.8 inclui um profiler PyTorch atualizado que \u00e9 fornecido junto com a distribui\u00e7\u00e3o do PyTorch e n\u00e3o requer instala\u00e7\u00e3o adicional. Usando o profiler PyTorch , \u00e9 poss\u00edvel registrar opera\u00e7\u00f5es no lado da CPU, bem como lan\u00e7amentos de kernel CUDA no lado da GPU. O profiler pode visualizar os resultados da an\u00e1lise usando o plugin TensorBoard e fornecer sugest\u00f5es sobre gargalos e melhorias potenciais no c\u00f3digo. import torch with torch . profiler . profile ( # Limitar o n\u00famero de etapas de treinamento inclu\u00eddas na perfilagem schedule = torch . profiler . schedule ( wait = 1 , warmup = 1 , active = 3 , repeat = 2 ), # Salvar automaticamente os resultados da perfilagem no disco on_trace_ready = torch . profiler . tensorboard_trace_handler , with_stack = True ) as profiler : for step , data in enumerate ( trainloader , 0 ): # -- O C\u00d3DIGO DA ETAPA DE TREINAMENTO VAI AQUI --- profiler . step () O tensorboard_trace_handler pode ser usado para gerar arquivos de resultado para o TensorBoard. Eles podem ser visualizados instalando o plugin TensorBoard e executando o TensorBoard no diret\u00f3rio de log. pip install torch_tb_profiler tensorboard --logdir = <Caminho do Diret\u00f3rio de Log> # Acesse `http://localhost:6006/#pytorch_profiler` Nota: certifique-se de fornecer os par\u00e2metros corretos para o torch.profiler.schedule . Geralmente, voc\u00ea desejar\u00e1 perfilar v\u00e1rias etapas de treinamento em vez de toda a \u00e9poca. Mais informa\u00e7\u00f5es sobre o profiler PyTorch : Receita do Profiler PyTorch Apresentando o PyTorch Profiler - a nova e melhorada ferramenta de desempenho Perfilagem de Pipelines Azure Machine Learning Em nossos projetos, frequentemente usamos Azure Machine Learning pipelines para treinar modelos de Machine Learning. A maioria dos profilers tamb\u00e9m pode ser usada em conjunto com o Azure Machine Learning. Para um profiler ser usado com o Azure Machine Learning, ele deve atender aos seguintes crit\u00e9rios: Ativar ou desativar o profiler deve ser poss\u00edvel passando um par\u00e2metro para o script executado pelo Azure Machine Learning. O profiler deve produzir um arquivo como sa\u00edda. Em geral, o procedimento para usar profilers com o Azure Machine Learning \u00e9 o seguinte: (Opcional) Se voc\u00ea estiver usando a perfilagem em um pipeline do Azure Machine Learning, pode adicionar uma flag booleana --profile como um par\u00e2metro do pipeline. Use um dos profilers descritos acima ou qualquer outro profiler que possa produzir um arquivo como sa\u00edda. Dentro do seu script Python, crie uma pasta de sa\u00edda para os resultados do profiler, por exemplo: output_dir = \"./outputs/profiler_results\" os . makedirs ( output_dir , exist_ok = True ) Execute o seu pipeline de treinamento. Assim que o pipeline estiver conclu\u00eddo, acesse o portal do Azure ML e abra os detalhes da etapa que cont\u00e9m o c\u00f3digo de treinamento. Os resultados podem ser encontrados na guia Outputs+logs , na pasta outputs/profiler_results . Voc\u00ea pode querer baixar os resultados e visualiz\u00e1-los localmente. Nota: n\u00e3o \u00e9 recomend\u00e1vel executar profilers simultaneamente. Os perfis tamb\u00e9m consomem recursos, portanto, a execu\u00e7\u00e3o simult\u00e2nea pode afetar significativamente os resultados.","title":"Perfilagem de C\u00f3digo em Aprendizado de M\u00e1quina e MLOps"},{"location":"machine-learning/ml-profiling/#perfilagem-de-codigo-em-aprendizado-de-maquina-e-mlops","text":"Projetos de Ci\u00eancia de Dados, especialmente aqueles que envolvem t\u00e9cnicas de Aprendizado Profundo, geralmente consomem muitos recursos. Uma itera\u00e7\u00e3o de treinamento de modelo pode levar v\u00e1rias horas. Embora o processamento de grandes volumes de dados realmente leve tempo, pequenos bugs e implementa\u00e7\u00f5es sub\u00f3timas de algumas partes funcionais podem causar um consumo extra de recursos. A perfilagem pode ser usada para identificar gargalos de desempenho e ver quais fun\u00e7\u00f5es s\u00e3o mais custosas no c\u00f3digo do aplicativo. Com base nas sa\u00eddas do perfilador, \u00e9 poss\u00edvel se concentrar nas inefici\u00eancias mais significativas e f\u00e1ceis de resolver, e, assim, alcan\u00e7ar um melhor desempenho do c\u00f3digo. Embora a perfilagem siga os mesmos princ\u00edpios de qualquer outro projeto de software, o objetivo deste documento \u00e9 fornecer exemplos de perfilagem para os cen\u00e1rios mais comuns em projetos de MLOps / Ci\u00eancia de Dados. Abaixo est\u00e3o alguns cen\u00e1rios comuns em projetos de MLOps / Ci\u00eancia de Dados, juntamente com sugest\u00f5es sobre como perfil\u00e1-los. Perfilagem gen\u00e9rica em Python Perfilagem de treinamento de modelo PyTorch Perfilagem de pipeline de Azure Machine Learning","title":"Perfilagem de C\u00f3digo em Aprendizado de M\u00e1quina e MLOps"},{"location":"machine-learning/ml-profiling/#perfilagem-generica-em-python","text":"Normalmente, uma solu\u00e7\u00e3o de MLOps / Ci\u00eancia de Dados cont\u00e9m c\u00f3digo Python simples que atende a diferentes finalidades (por exemplo, processamento de dados), juntamente com c\u00f3digo de treinamento de modelo especializado. Embora muitos frameworks de Aprendizado de M\u00e1quina forne\u00e7am seu pr\u00f3prio perfilador, \u00e0s vezes tamb\u00e9m \u00e9 \u00fatil perfilar toda a solu\u00e7\u00e3o. Existem dois tipos de perfiladores: determin\u00edsticos (todos os eventos s\u00e3o rastreados, por exemplo, cProfile ) e estat\u00edsticos (amostragem em intervalos regulares, por exemplo, py-spy ). O exemplo abaixo mostra um exemplo de perfilador determin\u00edstico. Existem muitas op\u00e7\u00f5es de perfilagem de c\u00f3digo Python gen\u00e9rico determin\u00edstico. Uma das op\u00e7\u00f5es padr\u00e3o de perfilagem \u00e9 o profiler embutido cProfile . Usando o cProfile , \u00e9 poss\u00edvel perfilar facilmente um script Python ou apenas um trecho de c\u00f3digo. Essa ferramenta de perfilagem produz um arquivo que pode ser visualizado usando ferramentas de c\u00f3digo aberto ou analisado usando a classe stats.Stats . A \u00faltima op\u00e7\u00e3o requer a configura\u00e7\u00e3o de par\u00e2metros de filtragem e classifica\u00e7\u00e3o para uma melhor experi\u00eancia de an\u00e1lise. Abaixo, voc\u00ea encontra um exemplo de uso do cProfile para perfilar um trecho de c\u00f3digo. import cProfile # Iniciar a perfilagem profiler = cProfile . Profile () profiler . enable () # -- SEU C\u00d3DIGO AQUI --- # Parar a perfilagem profiler . disable () # Escrever os resultados do perfilador em um arquivo HTML profiler . dump_stats ( \"resultados_do_perfilador.prof\" ) Voc\u00ea tamb\u00e9m pode executar o cProfile fora do script Python usando o seguinte comando: python -m cProfile [ -o arquivo_de_saida ] [ -s ordem_de_classifica\u00e7\u00e3o ] ( -m m\u00f3dulo | meu_script.py ) Observa\u00e7\u00e3o: geralmente, uma \u00e9poca de treinamento de modelo \u00e9 suficiente para a perfilagem. N\u00e3o \u00e9 necess\u00e1rio executar mais \u00e9pocas e aumentar o custo. Consulte The Python Profilers para obter mais detalhes.","title":"Perfilagem gen\u00e9rica em Python"},{"location":"machine-learning/ml-profiling/#perfilagem-de-treinamento-de-modelo-pytorch","text":"O PyTorch 1.8 inclui um profiler PyTorch atualizado que \u00e9 fornecido junto com a distribui\u00e7\u00e3o do PyTorch e n\u00e3o requer instala\u00e7\u00e3o adicional. Usando o profiler PyTorch , \u00e9 poss\u00edvel registrar opera\u00e7\u00f5es no lado da CPU, bem como lan\u00e7amentos de kernel CUDA no lado da GPU. O profiler pode visualizar os resultados da an\u00e1lise usando o plugin TensorBoard e fornecer sugest\u00f5es sobre gargalos e melhorias potenciais no c\u00f3digo. import torch with torch . profiler . profile ( # Limitar o n\u00famero de etapas de treinamento inclu\u00eddas na perfilagem schedule = torch . profiler . schedule ( wait = 1 , warmup = 1 , active = 3 , repeat = 2 ), # Salvar automaticamente os resultados da perfilagem no disco on_trace_ready = torch . profiler . tensorboard_trace_handler , with_stack = True ) as profiler : for step , data in enumerate ( trainloader , 0 ): # -- O C\u00d3DIGO DA ETAPA DE TREINAMENTO VAI AQUI --- profiler . step () O tensorboard_trace_handler pode ser usado para gerar arquivos de resultado para o TensorBoard. Eles podem ser visualizados instalando o plugin TensorBoard e executando o TensorBoard no diret\u00f3rio de log. pip install torch_tb_profiler tensorboard --logdir = <Caminho do Diret\u00f3rio de Log> # Acesse `http://localhost:6006/#pytorch_profiler` Nota: certifique-se de fornecer os par\u00e2metros corretos para o torch.profiler.schedule . Geralmente, voc\u00ea desejar\u00e1 perfilar v\u00e1rias etapas de treinamento em vez de toda a \u00e9poca. Mais informa\u00e7\u00f5es sobre o profiler PyTorch : Receita do Profiler PyTorch Apresentando o PyTorch Profiler - a nova e melhorada ferramenta de desempenho","title":"Perfilagem de Treinamento de Modelo PyTorch"},{"location":"machine-learning/ml-profiling/#perfilagem-de-pipelines-azure-machine-learning","text":"Em nossos projetos, frequentemente usamos Azure Machine Learning pipelines para treinar modelos de Machine Learning. A maioria dos profilers tamb\u00e9m pode ser usada em conjunto com o Azure Machine Learning. Para um profiler ser usado com o Azure Machine Learning, ele deve atender aos seguintes crit\u00e9rios: Ativar ou desativar o profiler deve ser poss\u00edvel passando um par\u00e2metro para o script executado pelo Azure Machine Learning. O profiler deve produzir um arquivo como sa\u00edda. Em geral, o procedimento para usar profilers com o Azure Machine Learning \u00e9 o seguinte: (Opcional) Se voc\u00ea estiver usando a perfilagem em um pipeline do Azure Machine Learning, pode adicionar uma flag booleana --profile como um par\u00e2metro do pipeline. Use um dos profilers descritos acima ou qualquer outro profiler que possa produzir um arquivo como sa\u00edda. Dentro do seu script Python, crie uma pasta de sa\u00edda para os resultados do profiler, por exemplo: output_dir = \"./outputs/profiler_results\" os . makedirs ( output_dir , exist_ok = True ) Execute o seu pipeline de treinamento. Assim que o pipeline estiver conclu\u00eddo, acesse o portal do Azure ML e abra os detalhes da etapa que cont\u00e9m o c\u00f3digo de treinamento. Os resultados podem ser encontrados na guia Outputs+logs , na pasta outputs/profiler_results . Voc\u00ea pode querer baixar os resultados e visualiz\u00e1-los localmente. Nota: n\u00e3o \u00e9 recomend\u00e1vel executar profilers simultaneamente. Os perfis tamb\u00e9m consomem recursos, portanto, a execu\u00e7\u00e3o simult\u00e2nea pode afetar significativamente os resultados.","title":"Perfilagem de Pipelines Azure Machine Learning"},{"location":"machine-learning/ml-project-management/","text":"Considera\u00e7\u00f5es sobre Desenvolvimento \u00c1gil para Projetos de Aprendizado de M\u00e1quina Vis\u00e3o Geral Ao conduzir projetos de Aprendizado de M\u00e1quina (ML), seguimos a metodologia \u00c1gil para o desenvolvimento de software, com algumas adapta\u00e7\u00f5es, pois reconhecemos que a pesquisa e experimenta\u00e7\u00e3o s\u00e3o, por vezes, dif\u00edceis de planejar e estimar. Objetivos Executar e gerenciar projetos de ML de forma eficaz. Criar uma colabora\u00e7\u00e3o eficaz entre a equipe de ML e as outras equipes que trabalham no projeto. Para saber mais sobre como a ISE conduz o processo \u00c1gil para equipes de desenvolvimento de software, consulte este documento . Dentro deste framework, a equipe segue essas cerim\u00f4nias \u00c1geis: Gerenciamento do Backlog Retrospectivas Scrum of Scrums (quando aplic\u00e1vel) Planejamento de Sprint Reuni\u00f5es Di\u00e1rias (Stand-ups) Acordo de Trabalho (Working agreement) Observa\u00e7\u00f5es sobre o processo \u00c1gil durante a explora\u00e7\u00e3o e experimenta\u00e7\u00e3o Reconhecendo que hist\u00f3rias de usu\u00e1rio de ML e an\u00e1lises explorat\u00f3rias s\u00e3o menos previs\u00edveis do que as de desenvolvimento de software, nos esfor\u00e7amos para ter um entreg\u00e1vel para cada hist\u00f3ria de usu\u00e1rio em cada sprint. Hist\u00f3rias de usu\u00e1rio e an\u00e1lises explorat\u00f3rias s\u00e3o geralmente estimadas usando tamanhos de camisetas (T-shirt sizes) ou similares, e n\u00e3o em dias/horas reais. Veja mais aqui sobre estimativa de hist\u00f3rias. As sess\u00f5es de design de ML devem ser inclu\u00eddas em cada sprint. Exemplos de entreg\u00e1veis de ML para cada sprint C\u00f3digo funcional (por exemplo, modelos, pipelines, c\u00f3digo explorat\u00f3rio) Documenta\u00e7\u00e3o de novas hip\u00f3teses e a aceita\u00e7\u00e3o ou rejei\u00e7\u00e3o de hip\u00f3teses anteriores como parte de uma An\u00e1lise Orientada por Hip\u00f3teses (HDA). Para mais informa\u00e7\u00f5es, consulte Desenvolvimento Orientado por Hip\u00f3teses no site de Barry Oreilly Resultados e aprendizados da An\u00e1lise Explorat\u00f3ria de Dados (EDA) documentados Notas sobre a colabora\u00e7\u00e3o entre a equipe de ML e a equipe de desenvolvimento de software As equipes de ML e Desenvolvimento de Software trabalham juntas no projeto. A equipe usa um \u00fanico backlog e participa das mesmas cerim\u00f4nias \u00c1geis. Em casos em que o projeto envolve muitos participantes, dividimos em grupos de trabalho, mas ainda mantemos toda a equipe participando das cerim\u00f4nias \u00c1geis. Se poss\u00edvel, o estudo de viabilidade e a experimenta\u00e7\u00e3o inicial do modelo ocorrem antes do in\u00edcio do trabalho de operacionaliza\u00e7\u00e3o. A equipe de ML e a equipe de desenvolvimento compartilham a responsabilidade pela solu\u00e7\u00e3o de MLOps. A interface do modelo de ML (API) \u00e9 determinada o mais cedo poss\u00edvel, para permitir que os desenvolvedores considerem sua integra\u00e7\u00e3o \u00e0 linha de produ\u00e7\u00e3o. Os artefatos de MLOps s\u00e3o desenvolvidos com uma colabora\u00e7\u00e3o cont\u00ednua e revis\u00e3o da equipe de ML, para garantir que abordagens apropriadas para experimenta\u00e7\u00e3o e produtiza\u00e7\u00e3o sejam utilizadas. As retrospectivas e o planejamento de sprints s\u00e3o realizados no n\u00edvel de toda a equipe e n\u00e3o no n\u00edvel de grupos de trabalho espec\u00edficos.","title":"Considera\u00e7\u00f5es sobre Desenvolvimento \u00c1gil para Projetos de Aprendizado de M\u00e1quina"},{"location":"machine-learning/ml-project-management/#consideracoes-sobre-desenvolvimento-agil-para-projetos-de-aprendizado-de-maquina","text":"","title":"Considera\u00e7\u00f5es sobre Desenvolvimento \u00c1gil para Projetos de Aprendizado de M\u00e1quina"},{"location":"machine-learning/ml-project-management/#visao-geral","text":"Ao conduzir projetos de Aprendizado de M\u00e1quina (ML), seguimos a metodologia \u00c1gil para o desenvolvimento de software, com algumas adapta\u00e7\u00f5es, pois reconhecemos que a pesquisa e experimenta\u00e7\u00e3o s\u00e3o, por vezes, dif\u00edceis de planejar e estimar.","title":"Vis\u00e3o Geral"},{"location":"machine-learning/ml-project-management/#objetivos","text":"Executar e gerenciar projetos de ML de forma eficaz. Criar uma colabora\u00e7\u00e3o eficaz entre a equipe de ML e as outras equipes que trabalham no projeto. Para saber mais sobre como a ISE conduz o processo \u00c1gil para equipes de desenvolvimento de software, consulte este documento . Dentro deste framework, a equipe segue essas cerim\u00f4nias \u00c1geis: Gerenciamento do Backlog Retrospectivas Scrum of Scrums (quando aplic\u00e1vel) Planejamento de Sprint Reuni\u00f5es Di\u00e1rias (Stand-ups) Acordo de Trabalho (Working agreement)","title":"Objetivos"},{"location":"machine-learning/ml-project-management/#observacoes-sobre-o-processo-agil-durante-a-exploracao-e-experimentacao","text":"Reconhecendo que hist\u00f3rias de usu\u00e1rio de ML e an\u00e1lises explorat\u00f3rias s\u00e3o menos previs\u00edveis do que as de desenvolvimento de software, nos esfor\u00e7amos para ter um entreg\u00e1vel para cada hist\u00f3ria de usu\u00e1rio em cada sprint. Hist\u00f3rias de usu\u00e1rio e an\u00e1lises explorat\u00f3rias s\u00e3o geralmente estimadas usando tamanhos de camisetas (T-shirt sizes) ou similares, e n\u00e3o em dias/horas reais. Veja mais aqui sobre estimativa de hist\u00f3rias. As sess\u00f5es de design de ML devem ser inclu\u00eddas em cada sprint.","title":"Observa\u00e7\u00f5es sobre o processo \u00c1gil durante a explora\u00e7\u00e3o e experimenta\u00e7\u00e3o"},{"location":"machine-learning/ml-project-management/#exemplos-de-entregaveis-de-ml-para-cada-sprint","text":"C\u00f3digo funcional (por exemplo, modelos, pipelines, c\u00f3digo explorat\u00f3rio) Documenta\u00e7\u00e3o de novas hip\u00f3teses e a aceita\u00e7\u00e3o ou rejei\u00e7\u00e3o de hip\u00f3teses anteriores como parte de uma An\u00e1lise Orientada por Hip\u00f3teses (HDA). Para mais informa\u00e7\u00f5es, consulte Desenvolvimento Orientado por Hip\u00f3teses no site de Barry Oreilly Resultados e aprendizados da An\u00e1lise Explorat\u00f3ria de Dados (EDA) documentados","title":"Exemplos de entreg\u00e1veis de ML para cada sprint"},{"location":"machine-learning/ml-project-management/#notas-sobre-a-colaboracao-entre-a-equipe-de-ml-e-a-equipe-de-desenvolvimento-de-software","text":"As equipes de ML e Desenvolvimento de Software trabalham juntas no projeto. A equipe usa um \u00fanico backlog e participa das mesmas cerim\u00f4nias \u00c1geis. Em casos em que o projeto envolve muitos participantes, dividimos em grupos de trabalho, mas ainda mantemos toda a equipe participando das cerim\u00f4nias \u00c1geis. Se poss\u00edvel, o estudo de viabilidade e a experimenta\u00e7\u00e3o inicial do modelo ocorrem antes do in\u00edcio do trabalho de operacionaliza\u00e7\u00e3o. A equipe de ML e a equipe de desenvolvimento compartilham a responsabilidade pela solu\u00e7\u00e3o de MLOps. A interface do modelo de ML (API) \u00e9 determinada o mais cedo poss\u00edvel, para permitir que os desenvolvedores considerem sua integra\u00e7\u00e3o \u00e0 linha de produ\u00e7\u00e3o. Os artefatos de MLOps s\u00e3o desenvolvidos com uma colabora\u00e7\u00e3o cont\u00ednua e revis\u00e3o da equipe de ML, para garantir que abordagens apropriadas para experimenta\u00e7\u00e3o e produtiza\u00e7\u00e3o sejam utilizadas. As retrospectivas e o planejamento de sprints s\u00e3o realizados no n\u00edvel de toda a equipe e n\u00e3o no n\u00edvel de grupos de trabalho espec\u00edficos.","title":"Notas sobre a colabora\u00e7\u00e3o entre a equipe de ML e a equipe de desenvolvimento de software"},{"location":"machine-learning/ml-proposed-process/","text":"Processo Proposto de Aprendizado de M\u00e1quina (ML) Introdu\u00e7\u00e3o O objetivo deste documento \u00e9 fornecer orienta\u00e7\u00f5es para produzir aplica\u00e7\u00f5es de aprendizado de m\u00e1quina (ML) baseadas em c\u00f3digo, dados e modelos que podem ser reproduzidos e lan\u00e7ados de forma confi\u00e1vel em ambientes de produ\u00e7\u00e3o. Ao desenvolver aplica\u00e7\u00f5es de ML, consideramos as seguintes abordagens: Melhores pr\u00e1ticas em engenharia de ML: O desenvolvimento de aplica\u00e7\u00f5es de ML deve usar fundamentos de engenharia para garantir entreg\u00e1veis de software de alta qualidade. A aplica\u00e7\u00e3o de ML deve ser lan\u00e7ada com confiabilidade na produ\u00e7\u00e3o, aproveitando a automa\u00e7\u00e3o o m\u00e1ximo poss\u00edvel. A aplica\u00e7\u00e3o de ML pode ser implantada na produ\u00e7\u00e3o a qualquer momento. Isso torna a decis\u00e3o de quando lan\u00e7\u00e1-la uma decis\u00e3o de neg\u00f3cios, em vez de uma decis\u00e3o t\u00e9cnica. Melhores pr\u00e1ticas em pesquisa de ML: Todos os artefatos, especialmente dados, c\u00f3digo e modelos de ML, devem ser versionados e gerenciados usando ferramentas e fluxos de trabalho padr\u00e3o, a fim de facilitar a pesquisa e desenvolvimento cont\u00ednuos. Enquanto as sa\u00eddas do modelo podem ser n\u00e3o determin\u00edsticas e dif\u00edceis de reproduzir, o processo de lan\u00e7ar software de ML na produ\u00e7\u00e3o deve ser reproduz\u00edvel. Aspectos de IA respons\u00e1vel s\u00e3o cuidadosamente analisados e abordados. Equipe multidisciplinar: \u00c9 necess\u00e1ria uma equipe multidisciplinar composta por diferentes conjuntos de habilidades em ci\u00eancia de dados, engenharia de dados, desenvolvimento, opera\u00e7\u00f5es e especialistas em dom\u00ednio da ind\u00fastria. Processo de ML O processo de desenvolvimento de ML proposto consiste em: Compreens\u00e3o dos dados e do problema Avalia\u00e7\u00e3o de IA respons\u00e1vel Estudo de viabilidade Experimenta\u00e7\u00e3o com modelo de linha de base Avalia\u00e7\u00e3o e experimenta\u00e7\u00e3o do modelo Operacionaliza\u00e7\u00e3o do modelo * Testes de unidade e integra\u00e7\u00e3o * Implanta\u00e7\u00e3o * Monitoramento e Observabilidade Controle de vers\u00e3o Durante todas as etapas do processo, sugere-se que os artefatos sejam controlados por vers\u00e3o. Tipicamente, o processo \u00e9 iterativo e artefatos versionados podem ajudar na rastreabilidade e revis\u00e3o. Veja mais aqui . Compreens\u00e3o do problema Defina o problema de neg\u00f3cios para o projeto de ML: Concordar com os crit\u00e9rios de sucesso com o cliente. Identificar fontes de dados potenciais e determinar a disponibilidade dessas fontes. Definir m\u00e9tricas de avalia\u00e7\u00e3o de desempenho nos dados de refer\u00eancia. Realize uma avalia\u00e7\u00e3o de IA respons\u00e1vel para garantir o desenvolvimento e implanta\u00e7\u00e3o da solu\u00e7\u00e3o de ML de maneira respons\u00e1vel. Realize um estudo de viabilidade para avaliar se o problema de neg\u00f3cios \u00e9 vi\u00e1vel de ser resolvido de forma satisfat\u00f3ria usando ML com os dados dispon\u00edveis. O objetivo do estudo de viabilidade \u00e9 mitigar o potencial superinvestimento, garantindo evid\u00eancias suficientes de que o ML \u00e9 poss\u00edvel e seria a melhor solu\u00e7\u00e3o. O estudo tamb\u00e9m fornece indica\u00e7\u00f5es iniciais de como a solu\u00e7\u00e3o de ML deve ser. Isso garante solu\u00e7\u00f5es de qualidade com base em considera\u00e7\u00e3o e evid\u00eancia rigorosas. Consulte estudo de viabilidade . A an\u00e1lise explorat\u00f3ria de dados \u00e9 realizada e discutida com a equipe. Sa\u00edda t\u00edpica : C\u00f3digo-fonte da explora\u00e7\u00e3o de dados (notebooks Jupyter/scripts) e slides/documenta\u00e7\u00e3o C\u00f3digo inicial do modelo de ML (notebook Jupyter ou scripts) Arquitetura inicial da solu\u00e7\u00e3o com requisitos iniciais de engenharia de dados Dicion\u00e1rio de dados (se ainda n\u00e3o estiver dispon\u00edvel) Lista de suposi\u00e7\u00f5es Experimenta\u00e7\u00e3o com Modelo de Linha de Base Prepara\u00e7\u00e3o de dados: cria\u00e7\u00e3o de conectores de fonte de dados, determina\u00e7\u00e3o de servi\u00e7os de armazenamento a serem usados e versionamento potencial de conjuntos de dados brutos. Engenharia de recursos: cria\u00e7\u00e3o de novos recursos a partir de dados brutos para aumentar o poder preditivo do algoritmo de aprendizado. Os recursos devem capturar informa\u00e7\u00f5es adicionais que n\u00e3o s\u00e3o aparentes no conjunto de recursos original. Divis\u00e3o de dados em conjuntos de treinamento, valida\u00e7\u00e3o e teste: cria\u00e7\u00e3o de conjuntos de dados de treinamento, valida\u00e7\u00e3o e teste com dados de refer\u00eancia para desenvolver modelos de ML. Isso envolveria a jun\u00e7\u00e3o ou fus\u00e3o de v\u00e1rios conjuntos de dados de engenharia de recursos. O conjunto de treinamento \u00e9 usado para treinar o modelo para encontrar os padr\u00f5es entre seus recursos e r\u00f3tulos (dados de refer\u00eancia). O conjunto de valida\u00e7\u00e3o \u00e9 usado para avaliar a arquitetura do modelo, e os dados de teste s\u00e3o usados para confirmar a qualidade das previs\u00f5es do modelo. C\u00f3digo inicial para acessar fontes de dados, transformar dados brutos em recursos e treinar modelos, bem como c\u00f3digo de pontua\u00e7\u00e3o de modelo. Durante esta fase, o c\u00f3digo de experimenta\u00e7\u00e3o (notebooks Jupyter ou scripts) e o c\u00f3digo de utilidade correspondente devem ser controlados por vers\u00e3o usando ferramentas como o ADO (Azure DevOps). Sa\u00edda t\u00edpica : Notebooks Jupyter ou scripts em Python ou R, resultados iniciais do modelo de linha de base. Para obter mais informa\u00e7\u00f5es sobre experimenta\u00e7\u00e3o, consulte a se\u00e7\u00e3o de experimenta\u00e7\u00e3o . Avalia\u00e7\u00e3o do Modelo Compare a efic\u00e1cia de diferentes algoritmos no problema dado. Sa\u00edda t\u00edpica : O fluxo de avalia\u00e7\u00e3o est\u00e1 totalmente configurado . Experimentos reproduz\u00edveis para as diferentes abordagens testadas. Operacionaliza\u00e7\u00e3o do Modelo Transformar o c\u00f3digo \"experimental\" para que possa ser implantado. Isso inclui pr\u00e9-processamento de dados, c\u00f3digo de featuriza\u00e7\u00e3o, c\u00f3digo de treinamento de modelo (se necess\u00e1rio treinar usando CI/CD) e c\u00f3digo de infer\u00eancia de modelo. Sa\u00edda t\u00edpica : C\u00f3digo de produ\u00e7\u00e3o (preferencialmente na forma de um pacote) para: Pr\u00e9-processamento / p\u00f3s-processamento de dados Servir um modelo Treinar um modelo Scripts de CI/CD. Etapas de reprodutibilidade para o modelo em produ\u00e7\u00e3o. Veja mais aqui . Testes de Unidade e Integra\u00e7\u00e3o Garantir que o c\u00f3digo de produ\u00e7\u00e3o se comporte da maneira que esperamos e que seus resultados correspondam aos que vimos durante as fases de Avalia\u00e7\u00e3o e Experimenta\u00e7\u00e3o do Modelo. Consulte o teste de ML para obter mais detalhes. Sa\u00edda t\u00edpica : Conjunto de testes com testes de unidade e testes de ponta a ponta criados e conclu\u00eddos com sucesso. Implanta\u00e7\u00e3o Considera\u00e7\u00f5es de IA respons\u00e1vel , como an\u00e1lise de vi\u00e9s e equidade. Al\u00e9m disso, a explicabilidade/interpretabilidade do modelo tamb\u00e9m deve ser considerada. \u00c9 recomend\u00e1vel que um ser humano participe do processo de verifica\u00e7\u00e3o do modelo e aprove a implanta\u00e7\u00e3o para produ\u00e7\u00e3o. Colocar o modelo em produ\u00e7\u00e3o, onde ele pode come\u00e7ar a adicionar valor servindo previs\u00f5es. Artefatos t\u00edpicos s\u00e3o APIs para acessar o modelo e integrar o modelo \u00e0 arquitetura da solu\u00e7\u00e3o. Al\u00e9m disso, determinados cen\u00e1rios podem exigir o treinamento peri\u00f3dico do modelo em produ\u00e7\u00e3o. Etapas de reprodutibilidade do modelo em produ\u00e7\u00e3o est\u00e3o dispon\u00edveis. Sa\u00edda t\u00edpica : Lista de verifica\u00e7\u00e3o de prepara\u00e7\u00e3o do modelo model readiness checklist est\u00e1 conclu\u00edda. Monitoramento e Observabilidade Esta \u00e9 a fase final, onde garantimos que nosso modelo esteja fazendo o que esperamos na produ\u00e7\u00e3o. Saiba mais sobre a observabilidade de ML . Saiba mais sobre as ofertas de ML da Azure em torno do monitoramento de modelos de ML em produ\u00e7\u00e3o aqui . \u00c9 recomend\u00e1vel considerar a incorpora\u00e7\u00e3o do processo de monitoramento de deriva de dados na solu\u00e7\u00e3o de produ\u00e7\u00e3o. Isso ajudar\u00e1 a detectar poss\u00edveis mudan\u00e7as nos novos conjuntos de dados apresentados para infer\u00eancia que podem impactar significativamente o desempenho do modelo. Para obter mais informa\u00e7\u00f5es sobre como detectar a deriva de dados com o Azure ML, consulte o artigo da Microsoft sobre como monitorar conjuntos de dados . Sa\u00edda t\u00edpica : Scripts e ferramentas de registro e monitoramento configurados, permiss\u00f5es para que os usu\u00e1rios acessem ferramentas de monitoramento.","title":"Processo Proposto de Aprendizado de M\u00e1quina (ML)"},{"location":"machine-learning/ml-proposed-process/#processo-proposto-de-aprendizado-de-maquina-ml","text":"","title":"Processo Proposto de Aprendizado de M\u00e1quina (ML)"},{"location":"machine-learning/ml-proposed-process/#introducao","text":"O objetivo deste documento \u00e9 fornecer orienta\u00e7\u00f5es para produzir aplica\u00e7\u00f5es de aprendizado de m\u00e1quina (ML) baseadas em c\u00f3digo, dados e modelos que podem ser reproduzidos e lan\u00e7ados de forma confi\u00e1vel em ambientes de produ\u00e7\u00e3o. Ao desenvolver aplica\u00e7\u00f5es de ML, consideramos as seguintes abordagens: Melhores pr\u00e1ticas em engenharia de ML: O desenvolvimento de aplica\u00e7\u00f5es de ML deve usar fundamentos de engenharia para garantir entreg\u00e1veis de software de alta qualidade. A aplica\u00e7\u00e3o de ML deve ser lan\u00e7ada com confiabilidade na produ\u00e7\u00e3o, aproveitando a automa\u00e7\u00e3o o m\u00e1ximo poss\u00edvel. A aplica\u00e7\u00e3o de ML pode ser implantada na produ\u00e7\u00e3o a qualquer momento. Isso torna a decis\u00e3o de quando lan\u00e7\u00e1-la uma decis\u00e3o de neg\u00f3cios, em vez de uma decis\u00e3o t\u00e9cnica. Melhores pr\u00e1ticas em pesquisa de ML: Todos os artefatos, especialmente dados, c\u00f3digo e modelos de ML, devem ser versionados e gerenciados usando ferramentas e fluxos de trabalho padr\u00e3o, a fim de facilitar a pesquisa e desenvolvimento cont\u00ednuos. Enquanto as sa\u00eddas do modelo podem ser n\u00e3o determin\u00edsticas e dif\u00edceis de reproduzir, o processo de lan\u00e7ar software de ML na produ\u00e7\u00e3o deve ser reproduz\u00edvel. Aspectos de IA respons\u00e1vel s\u00e3o cuidadosamente analisados e abordados. Equipe multidisciplinar: \u00c9 necess\u00e1ria uma equipe multidisciplinar composta por diferentes conjuntos de habilidades em ci\u00eancia de dados, engenharia de dados, desenvolvimento, opera\u00e7\u00f5es e especialistas em dom\u00ednio da ind\u00fastria.","title":"Introdu\u00e7\u00e3o"},{"location":"machine-learning/ml-proposed-process/#processo-de-ml","text":"O processo de desenvolvimento de ML proposto consiste em: Compreens\u00e3o dos dados e do problema Avalia\u00e7\u00e3o de IA respons\u00e1vel Estudo de viabilidade Experimenta\u00e7\u00e3o com modelo de linha de base Avalia\u00e7\u00e3o e experimenta\u00e7\u00e3o do modelo Operacionaliza\u00e7\u00e3o do modelo * Testes de unidade e integra\u00e7\u00e3o * Implanta\u00e7\u00e3o * Monitoramento e Observabilidade","title":"Processo de ML"},{"location":"machine-learning/ml-proposed-process/#controle-de-versao","text":"Durante todas as etapas do processo, sugere-se que os artefatos sejam controlados por vers\u00e3o. Tipicamente, o processo \u00e9 iterativo e artefatos versionados podem ajudar na rastreabilidade e revis\u00e3o. Veja mais aqui .","title":"Controle de vers\u00e3o"},{"location":"machine-learning/ml-proposed-process/#compreensao-do-problema","text":"Defina o problema de neg\u00f3cios para o projeto de ML: Concordar com os crit\u00e9rios de sucesso com o cliente. Identificar fontes de dados potenciais e determinar a disponibilidade dessas fontes. Definir m\u00e9tricas de avalia\u00e7\u00e3o de desempenho nos dados de refer\u00eancia. Realize uma avalia\u00e7\u00e3o de IA respons\u00e1vel para garantir o desenvolvimento e implanta\u00e7\u00e3o da solu\u00e7\u00e3o de ML de maneira respons\u00e1vel. Realize um estudo de viabilidade para avaliar se o problema de neg\u00f3cios \u00e9 vi\u00e1vel de ser resolvido de forma satisfat\u00f3ria usando ML com os dados dispon\u00edveis. O objetivo do estudo de viabilidade \u00e9 mitigar o potencial superinvestimento, garantindo evid\u00eancias suficientes de que o ML \u00e9 poss\u00edvel e seria a melhor solu\u00e7\u00e3o. O estudo tamb\u00e9m fornece indica\u00e7\u00f5es iniciais de como a solu\u00e7\u00e3o de ML deve ser. Isso garante solu\u00e7\u00f5es de qualidade com base em considera\u00e7\u00e3o e evid\u00eancia rigorosas. Consulte estudo de viabilidade . A an\u00e1lise explorat\u00f3ria de dados \u00e9 realizada e discutida com a equipe. Sa\u00edda t\u00edpica : C\u00f3digo-fonte da explora\u00e7\u00e3o de dados (notebooks Jupyter/scripts) e slides/documenta\u00e7\u00e3o C\u00f3digo inicial do modelo de ML (notebook Jupyter ou scripts) Arquitetura inicial da solu\u00e7\u00e3o com requisitos iniciais de engenharia de dados Dicion\u00e1rio de dados (se ainda n\u00e3o estiver dispon\u00edvel) Lista de suposi\u00e7\u00f5es","title":"Compreens\u00e3o do problema"},{"location":"machine-learning/ml-proposed-process/#experimentacao-com-modelo-de-linha-de-base","text":"Prepara\u00e7\u00e3o de dados: cria\u00e7\u00e3o de conectores de fonte de dados, determina\u00e7\u00e3o de servi\u00e7os de armazenamento a serem usados e versionamento potencial de conjuntos de dados brutos. Engenharia de recursos: cria\u00e7\u00e3o de novos recursos a partir de dados brutos para aumentar o poder preditivo do algoritmo de aprendizado. Os recursos devem capturar informa\u00e7\u00f5es adicionais que n\u00e3o s\u00e3o aparentes no conjunto de recursos original. Divis\u00e3o de dados em conjuntos de treinamento, valida\u00e7\u00e3o e teste: cria\u00e7\u00e3o de conjuntos de dados de treinamento, valida\u00e7\u00e3o e teste com dados de refer\u00eancia para desenvolver modelos de ML. Isso envolveria a jun\u00e7\u00e3o ou fus\u00e3o de v\u00e1rios conjuntos de dados de engenharia de recursos. O conjunto de treinamento \u00e9 usado para treinar o modelo para encontrar os padr\u00f5es entre seus recursos e r\u00f3tulos (dados de refer\u00eancia). O conjunto de valida\u00e7\u00e3o \u00e9 usado para avaliar a arquitetura do modelo, e os dados de teste s\u00e3o usados para confirmar a qualidade das previs\u00f5es do modelo. C\u00f3digo inicial para acessar fontes de dados, transformar dados brutos em recursos e treinar modelos, bem como c\u00f3digo de pontua\u00e7\u00e3o de modelo. Durante esta fase, o c\u00f3digo de experimenta\u00e7\u00e3o (notebooks Jupyter ou scripts) e o c\u00f3digo de utilidade correspondente devem ser controlados por vers\u00e3o usando ferramentas como o ADO (Azure DevOps). Sa\u00edda t\u00edpica : Notebooks Jupyter ou scripts em Python ou R, resultados iniciais do modelo de linha de base. Para obter mais informa\u00e7\u00f5es sobre experimenta\u00e7\u00e3o, consulte a se\u00e7\u00e3o de experimenta\u00e7\u00e3o .","title":"Experimenta\u00e7\u00e3o com Modelo de Linha de Base"},{"location":"machine-learning/ml-proposed-process/#avaliacao-do-modelo","text":"Compare a efic\u00e1cia de diferentes algoritmos no problema dado. Sa\u00edda t\u00edpica : O fluxo de avalia\u00e7\u00e3o est\u00e1 totalmente configurado . Experimentos reproduz\u00edveis para as diferentes abordagens testadas.","title":"Avalia\u00e7\u00e3o do Modelo"},{"location":"machine-learning/ml-proposed-process/#operacionalizacao-do-modelo","text":"Transformar o c\u00f3digo \"experimental\" para que possa ser implantado. Isso inclui pr\u00e9-processamento de dados, c\u00f3digo de featuriza\u00e7\u00e3o, c\u00f3digo de treinamento de modelo (se necess\u00e1rio treinar usando CI/CD) e c\u00f3digo de infer\u00eancia de modelo. Sa\u00edda t\u00edpica : C\u00f3digo de produ\u00e7\u00e3o (preferencialmente na forma de um pacote) para: Pr\u00e9-processamento / p\u00f3s-processamento de dados Servir um modelo Treinar um modelo Scripts de CI/CD. Etapas de reprodutibilidade para o modelo em produ\u00e7\u00e3o. Veja mais aqui .","title":"Operacionaliza\u00e7\u00e3o do Modelo"},{"location":"machine-learning/ml-proposed-process/#testes-de-unidade-e-integracao","text":"Garantir que o c\u00f3digo de produ\u00e7\u00e3o se comporte da maneira que esperamos e que seus resultados correspondam aos que vimos durante as fases de Avalia\u00e7\u00e3o e Experimenta\u00e7\u00e3o do Modelo. Consulte o teste de ML para obter mais detalhes. Sa\u00edda t\u00edpica : Conjunto de testes com testes de unidade e testes de ponta a ponta criados e conclu\u00eddos com sucesso.","title":"Testes de Unidade e Integra\u00e7\u00e3o"},{"location":"machine-learning/ml-proposed-process/#implantacao","text":"Considera\u00e7\u00f5es de IA respons\u00e1vel , como an\u00e1lise de vi\u00e9s e equidade. Al\u00e9m disso, a explicabilidade/interpretabilidade do modelo tamb\u00e9m deve ser considerada. \u00c9 recomend\u00e1vel que um ser humano participe do processo de verifica\u00e7\u00e3o do modelo e aprove a implanta\u00e7\u00e3o para produ\u00e7\u00e3o. Colocar o modelo em produ\u00e7\u00e3o, onde ele pode come\u00e7ar a adicionar valor servindo previs\u00f5es. Artefatos t\u00edpicos s\u00e3o APIs para acessar o modelo e integrar o modelo \u00e0 arquitetura da solu\u00e7\u00e3o. Al\u00e9m disso, determinados cen\u00e1rios podem exigir o treinamento peri\u00f3dico do modelo em produ\u00e7\u00e3o. Etapas de reprodutibilidade do modelo em produ\u00e7\u00e3o est\u00e3o dispon\u00edveis. Sa\u00edda t\u00edpica : Lista de verifica\u00e7\u00e3o de prepara\u00e7\u00e3o do modelo model readiness checklist est\u00e1 conclu\u00edda.","title":"Implanta\u00e7\u00e3o"},{"location":"machine-learning/ml-proposed-process/#monitoramento-e-observabilidade","text":"Esta \u00e9 a fase final, onde garantimos que nosso modelo esteja fazendo o que esperamos na produ\u00e7\u00e3o. Saiba mais sobre a observabilidade de ML . Saiba mais sobre as ofertas de ML da Azure em torno do monitoramento de modelos de ML em produ\u00e7\u00e3o aqui . \u00c9 recomend\u00e1vel considerar a incorpora\u00e7\u00e3o do processo de monitoramento de deriva de dados na solu\u00e7\u00e3o de produ\u00e7\u00e3o. Isso ajudar\u00e1 a detectar poss\u00edveis mudan\u00e7as nos novos conjuntos de dados apresentados para infer\u00eancia que podem impactar significativamente o desempenho do modelo. Para obter mais informa\u00e7\u00f5es sobre como detectar a deriva de dados com o Azure ML, consulte o artigo da Microsoft sobre como monitorar conjuntos de dados . Sa\u00edda t\u00edpica : Scripts e ferramentas de registro e monitoramento configurados, permiss\u00f5es para que os usu\u00e1rios acessem ferramentas de monitoramento.","title":"Monitoramento e Observabilidade"},{"location":"machine-learning/ml-testing/","text":"Testando C\u00f3digo de Data Science e MLOps O objetivo deste documento \u00e9 fornecer exemplos de testes para as opera\u00e7\u00f5es mais comuns em projetos de MLOps/Data Science. Testar o c\u00f3digo usado em projetos de MLOps ou ci\u00eancia de dados segue os mesmos princ\u00edpios de qualquer outro projeto de software. Alguns cen\u00e1rios podem parecer diferentes ou mais dif\u00edceis de testar. A melhor maneira de abordar isso \u00e9 sempre ter uma sess\u00e3o de design de testes, onde o foco est\u00e1 nas entradas/sa\u00eddas, exce\u00e7\u00f5es e na verifica\u00e7\u00e3o do comportamento das transforma\u00e7\u00f5es de dados. Projetar os testes primeiro facilita o teste, pois for\u00e7a um estilo mais modular, onde cada fun\u00e7\u00e3o tem um prop\u00f3sito, e a extra\u00e7\u00e3o de funcionalidades comuns para fun\u00e7\u00f5es e m\u00f3dulos. A seguir, est\u00e3o algumas opera\u00e7\u00f5es comuns em projetos de MLOps ou Data Science, juntamente com sugest\u00f5es sobre como test\u00e1-las. Salvando e carregando dados Transforma\u00e7\u00e3o de dados Carregamento ou previs\u00e3o de modelo Valida\u00e7\u00e3o de dados Teste de modelo Salvando e carregando dados Ler e escrever em arquivos CSV, ler imagens ou carregar arquivos de \u00e1udio s\u00e3o cen\u00e1rios comuns encontrados em projetos de MLOps. Exemplo: Verificar se uma fun\u00e7\u00e3o de carregamento chama read_csv se o arquivo existir utils.py def load_data ( filename : str ) -> pd . DataFrame : if os . path . isfile ( filename ): df = pd . read_csv ( filename , index_col = 'ID' ) return df return None N\u00e3o h\u00e1 necessidade de testar a fun\u00e7\u00e3o read_csv ou as fun\u00e7\u00f5es isfile , podemos deixar os testes para os desenvolvedores do pandas e os . A \u00fanica coisa que precisamos testar aqui \u00e9 a l\u00f3gica nesta fun\u00e7\u00e3o, ou seja, que load_data carrega o arquivo se o arquivo existir com a coluna de \u00edndice correta e n\u00e3o carrega o arquivo se ele n\u00e3o existir, e que ela retorna os resultados esperados. Uma maneira de fazer isso seria fornecer um arquivo de amostra, chamar a fun\u00e7\u00e3o e verificar se a sa\u00edda \u00e9 None ou um DataFrame . Isso requer que arquivos separados estejam presentes ou ausentes para que os testes sejam executados. Isso pode fazer com que o mesmo teste seja executado em uma m\u00e1quina e depois falhe em um servidor de compila\u00e7\u00e3o, o que n\u00e3o \u00e9 um comportamento desejado. Uma maneira muito melhor \u00e9 mockear as chamadas para isfile e read_csv . Em vez de chamar a fun\u00e7\u00e3o real, retornaremos um valor de retorno predefinido ou chamaremos um stub que n\u00e3o tenha efeitos colaterais. Dessa forma, nenhum arquivo \u00e9 necess\u00e1rio no reposit\u00f3rio para executar o teste, e o teste sempre funcionar\u00e1 da mesma maneira, independente da m\u00e1quina em que for executado. Observa\u00e7\u00e3o: Abaixo, estamos fazendo mocks das fun\u00e7\u00f5es espec\u00edficas do os e do pd referenciadas no arquivo utils . As outras fun\u00e7\u00f5es s\u00e3o deixadas inalteradas e funcionar\u00e3o normalmente. test_utils.py import utils from unittest.mock import patch @patch ( 'utils.os.path.isfile' ) @patch ( 'utils.pd.read_csv' ) def test_load_data_chama_read_csv_se_existir ( mock_isfile , mock_read_csv ): # organizar # sempre retorne True para isfile utils . os . path . isfile . return_value = True filename = 'arquivo.csv' # agir _ = utils . load_data ( filename ) # afirmar # verifique se read_csv \u00e9 chamado com os par\u00e2metros corretos utils . pd . read_csv . assert_called_once_with ( filename , index_col = 'ID' ) Da mesma forma, podemos verificar se a fun\u00e7\u00e3o \u00e9 chamada 0 ou v\u00e1rias vezes. No exemplo abaixo, verificamos que ela n\u00e3o \u00e9 chamada se o arquivo n\u00e3o existe: @patch ( 'utils.os.path.isfile' ) @patch ( 'utils.pd.read_csv' ) def test_load_data_nao_chama_read_csv_se_nao_existir ( mock_isfile , mock_read_csv ): # organizar # o arquivo n\u00e3o existe utils . os . path . isfile . return_value = False filename = 'arquivo.csv' # agir _ = utils . load_data ( filename ) # afirmar # verifique se read_csv n\u00e3o \u00e9 chamado assert utils . pd . read_csv . call_count == 0 Exemplo: Usando os mesmos dados de amostra para v\u00e1rios testes Se mais de um teste utilizar os mesmos dados de amostra, fixtures s\u00e3o uma boa maneira de reutilizar esses dados de amostra. Os dados de amostra podem ser o conte\u00fado de um arquivo JSON, um CSV, um DataFrame ou at\u00e9 mesmo uma imagem. Observa\u00e7\u00e3o: Os dados de amostra ainda s\u00e3o codificados, se poss\u00edvel, e n\u00e3o precisam ser grandes. Adicione apenas a quantidade necess\u00e1ria de dados de amostra para que os testes sejam leg\u00edveis. Use o fixture para retornar os dados de amostra e adicione isso como um par\u00e2metro nos testes em que deseja usar os dados de amostra. import pytest @pytest . fixture def house_features_json (): return { 'area' : 25 , 'price' : 2500 , 'rooms' : np . nan } def test_clean_features_cleans_nan_values ( house_features_json ): cleaned_features = clean_features ( house_features_json ) assert cleaned_features [ 'rooms' ] == 0 def test_extract_features_extracts_price_per_area ( house_features_json ): extracted_features = extract_features ( house_features_json ) assert extracted_features [ 'price_per_area' ] == 100 Neste exemplo, o fixture house_features_json fornece os dados de amostra em formato JSON que s\u00e3o usados em dois testes diferentes. Isso ajuda a reutilizar os dados de amostra de maneira eficaz. Transformando dados Para limpar e transformar dados, teste entradas e sa\u00eddas fixas, mas tente limitar cada teste a uma verifica\u00e7\u00e3o. Por exemplo, crie um teste para verificar o formato de sa\u00edda dos dados. def test_resize_image_gera_o_tamanho_correto (): # Organizar imagem_original = np . ones (( 10 , 5 , 2 , 3 )) # Agir imagem_redimensionada = utils . redimensionar_imagem ( imagem_original , 100 , 100 ) # Afirmar assert imagem_redimensionada . shape [: 2 ] == ( 100 , 100 ) e um para verificar se qualquer preenchimento \u00e9 feito adequadamente def test_resize_image_preenche_corretamente (): # Organizar imagem_original = np . ones (( 10 , 5 , 2 , 3 )) # Agir imagem_redimensionada = utils . redimensionar_imagem ( imagem_original , 100 , 100 ) # Afirmar assert imagem_redimensionada [ 0 ][ 0 ][ 0 ][ 0 ] == 0 assert imagem_redimensionada [ 0 ][ 0 ][ 2 ][ 0 ] == 1 Para testar diferentes entradas e sa\u00eddas esperadas automaticamente, use a parametriza\u00e7\u00e3o. @pytest . mark . parametrize ( 'altura_orig, largura_orig, altura_esperada, largura_esperada' , [ # menor do que o alvo ( 10 , 10 , 20 , 20 ), # maior do que o alvo ( 20 , 20 , 10 , 10 ), # mais largo do que o alvo ( 10 , 20 , 10 , 10 ) ]) def test_resize_image_gera_o_tamanho_correto ( altura_orig , largura_orig , altura_esperada , largura_esperada ): # Organizar imagem_original = np . ones (( altura_orig , largura_orig , 2 , 3 )) # Agir imagem_redimensionada = utils . redimensionar_imagem ( imagem_original , altura_esperada , largura_esperada ) # Afirmar assert imagem_redimensionada . shape [: 2 ] == ( altura_esperada , largura_esperada ) Carregar o Modelo ou Prever Ao realizar testes de unidade , devemos simular o carregamento do modelo e as previs\u00f5es do modelo da mesma forma que simular o acesso a arquivos. Pode haver casos em que voc\u00ea deseja carregar seu modelo para realizar testes preliminares ou testes de integra\u00e7\u00e3o. Como esses testes geralmente demoram um pouco mais para serem executados, \u00e9 importante separ\u00e1-los dos testes de unidade, para que os desenvolvedores da equipe ainda possam executar os testes de unidade como parte do desenvolvimento orientado por testes. Uma maneira de fazer isso \u00e9 usando marcas (marks). @pytest . mark . longrunning def test_integracao_entre_dois_sistemas (): # isso pode demorar um pouco Execute todos os testes que n\u00e3o est\u00e3o marcados como longrunning pytest -v -m \"not longrunning\" Testes B\u00e1sicos de Unidade para Modelos de Aprendizado de M\u00e1quina Os testes de unidade de ML n\u00e3o t\u00eam a inten\u00e7\u00e3o de verificar a precis\u00e3o ou o desempenho de um modelo. Os testes de unidade para um modelo de ML destinam-se a verificar a qualidade do c\u00f3digo, por exemplo: O modelo aceita as entradas corretas e produz as sa\u00eddas com a forma correta? Os pesos do modelo s\u00e3o atualizados ao executar o fit ? Para fazer isso, os testes de modelos de ML n\u00e3o seguem estritamente as melhores pr\u00e1ticas dos testes de unidade padr\u00e3o - nem todas as chamadas externas s\u00e3o simuladas. Esses testes est\u00e3o muito mais pr\u00f3ximos de um teste de integra\u00e7\u00e3o estreito . No entanto, os benef\u00edcios de ter testes simples para o modelo de ML ajudam a evitar que um modelo mal configurado passe horas em treinamento, enquanto ainda produz resultados ruins. Exemplos de como implementar esses testes (para modelos de Aprendizado Profundo) incluem: Construir um modelo e comparar a forma das camadas de entrada com a de uma fonte de dados de exemplo. Em seguida, compare a forma da camada de sa\u00edda com a sa\u00edda esperada. Inicialize o modelo e registre os pesos de cada camada. Em seguida, execute uma \u00fanica \u00e9poca de treinamento em um conjunto de dados fict\u00edcio e compare os pesos do \"modelo treinado\" - verifique apenas se os valores mudaram. Treine o modelo em um conjunto de dados fict\u00edcio por uma \u00fanica \u00e9poca e, em seguida, valide com dados fict\u00edcios - valide apenas se a previs\u00e3o est\u00e1 formatada corretamente, este modelo n\u00e3o ser\u00e1 preciso. Valida\u00e7\u00e3o de Dados Uma parte importante dos testes de unidade \u00e9 incluir casos de teste para valida\u00e7\u00e3o de dados. Por exemplo, nenhum dado fornecido, imagens que n\u00e3o est\u00e3o no formato esperado, dados contendo valores nulos ou valores discrepantes para garantir que o pipeline de processamento de dados seja robusto. Teste de Modelo Al\u00e9m de testar o c\u00f3digo de unidade, tamb\u00e9m podemos testar, depurar e validar nossos modelos de diferentes maneiras durante o processo de treinamento. Algumas op\u00e7\u00f5es a serem consideradas nesta fase: Testes adversariais e de limite para aumentar a robustez Verificar a precis\u00e3o das classes sub-representadas.","title":"Testando C\u00f3digo de Data Science e MLOps"},{"location":"machine-learning/ml-testing/#testando-codigo-de-data-science-e-mlops","text":"O objetivo deste documento \u00e9 fornecer exemplos de testes para as opera\u00e7\u00f5es mais comuns em projetos de MLOps/Data Science. Testar o c\u00f3digo usado em projetos de MLOps ou ci\u00eancia de dados segue os mesmos princ\u00edpios de qualquer outro projeto de software. Alguns cen\u00e1rios podem parecer diferentes ou mais dif\u00edceis de testar. A melhor maneira de abordar isso \u00e9 sempre ter uma sess\u00e3o de design de testes, onde o foco est\u00e1 nas entradas/sa\u00eddas, exce\u00e7\u00f5es e na verifica\u00e7\u00e3o do comportamento das transforma\u00e7\u00f5es de dados. Projetar os testes primeiro facilita o teste, pois for\u00e7a um estilo mais modular, onde cada fun\u00e7\u00e3o tem um prop\u00f3sito, e a extra\u00e7\u00e3o de funcionalidades comuns para fun\u00e7\u00f5es e m\u00f3dulos. A seguir, est\u00e3o algumas opera\u00e7\u00f5es comuns em projetos de MLOps ou Data Science, juntamente com sugest\u00f5es sobre como test\u00e1-las. Salvando e carregando dados Transforma\u00e7\u00e3o de dados Carregamento ou previs\u00e3o de modelo Valida\u00e7\u00e3o de dados Teste de modelo","title":"Testando C\u00f3digo de Data Science e MLOps"},{"location":"machine-learning/ml-testing/#salvando-e-carregando-dados","text":"Ler e escrever em arquivos CSV, ler imagens ou carregar arquivos de \u00e1udio s\u00e3o cen\u00e1rios comuns encontrados em projetos de MLOps.","title":"Salvando e carregando dados"},{"location":"machine-learning/ml-testing/#exemplo-verificar-se-uma-funcao-de-carregamento-chama-read_csv-se-o-arquivo-existir","text":"utils.py def load_data ( filename : str ) -> pd . DataFrame : if os . path . isfile ( filename ): df = pd . read_csv ( filename , index_col = 'ID' ) return df return None N\u00e3o h\u00e1 necessidade de testar a fun\u00e7\u00e3o read_csv ou as fun\u00e7\u00f5es isfile , podemos deixar os testes para os desenvolvedores do pandas e os . A \u00fanica coisa que precisamos testar aqui \u00e9 a l\u00f3gica nesta fun\u00e7\u00e3o, ou seja, que load_data carrega o arquivo se o arquivo existir com a coluna de \u00edndice correta e n\u00e3o carrega o arquivo se ele n\u00e3o existir, e que ela retorna os resultados esperados. Uma maneira de fazer isso seria fornecer um arquivo de amostra, chamar a fun\u00e7\u00e3o e verificar se a sa\u00edda \u00e9 None ou um DataFrame . Isso requer que arquivos separados estejam presentes ou ausentes para que os testes sejam executados. Isso pode fazer com que o mesmo teste seja executado em uma m\u00e1quina e depois falhe em um servidor de compila\u00e7\u00e3o, o que n\u00e3o \u00e9 um comportamento desejado. Uma maneira muito melhor \u00e9 mockear as chamadas para isfile e read_csv . Em vez de chamar a fun\u00e7\u00e3o real, retornaremos um valor de retorno predefinido ou chamaremos um stub que n\u00e3o tenha efeitos colaterais. Dessa forma, nenhum arquivo \u00e9 necess\u00e1rio no reposit\u00f3rio para executar o teste, e o teste sempre funcionar\u00e1 da mesma maneira, independente da m\u00e1quina em que for executado. Observa\u00e7\u00e3o: Abaixo, estamos fazendo mocks das fun\u00e7\u00f5es espec\u00edficas do os e do pd referenciadas no arquivo utils . As outras fun\u00e7\u00f5es s\u00e3o deixadas inalteradas e funcionar\u00e3o normalmente. test_utils.py import utils from unittest.mock import patch @patch ( 'utils.os.path.isfile' ) @patch ( 'utils.pd.read_csv' ) def test_load_data_chama_read_csv_se_existir ( mock_isfile , mock_read_csv ): # organizar # sempre retorne True para isfile utils . os . path . isfile . return_value = True filename = 'arquivo.csv' # agir _ = utils . load_data ( filename ) # afirmar # verifique se read_csv \u00e9 chamado com os par\u00e2metros corretos utils . pd . read_csv . assert_called_once_with ( filename , index_col = 'ID' ) Da mesma forma, podemos verificar se a fun\u00e7\u00e3o \u00e9 chamada 0 ou v\u00e1rias vezes. No exemplo abaixo, verificamos que ela n\u00e3o \u00e9 chamada se o arquivo n\u00e3o existe: @patch ( 'utils.os.path.isfile' ) @patch ( 'utils.pd.read_csv' ) def test_load_data_nao_chama_read_csv_se_nao_existir ( mock_isfile , mock_read_csv ): # organizar # o arquivo n\u00e3o existe utils . os . path . isfile . return_value = False filename = 'arquivo.csv' # agir _ = utils . load_data ( filename ) # afirmar # verifique se read_csv n\u00e3o \u00e9 chamado assert utils . pd . read_csv . call_count == 0","title":"Exemplo: Verificar se uma fun\u00e7\u00e3o de carregamento chama read_csv se o arquivo existir"},{"location":"machine-learning/ml-testing/#exemplo-usando-os-mesmos-dados-de-amostra-para-varios-testes","text":"Se mais de um teste utilizar os mesmos dados de amostra, fixtures s\u00e3o uma boa maneira de reutilizar esses dados de amostra. Os dados de amostra podem ser o conte\u00fado de um arquivo JSON, um CSV, um DataFrame ou at\u00e9 mesmo uma imagem. Observa\u00e7\u00e3o: Os dados de amostra ainda s\u00e3o codificados, se poss\u00edvel, e n\u00e3o precisam ser grandes. Adicione apenas a quantidade necess\u00e1ria de dados de amostra para que os testes sejam leg\u00edveis. Use o fixture para retornar os dados de amostra e adicione isso como um par\u00e2metro nos testes em que deseja usar os dados de amostra. import pytest @pytest . fixture def house_features_json (): return { 'area' : 25 , 'price' : 2500 , 'rooms' : np . nan } def test_clean_features_cleans_nan_values ( house_features_json ): cleaned_features = clean_features ( house_features_json ) assert cleaned_features [ 'rooms' ] == 0 def test_extract_features_extracts_price_per_area ( house_features_json ): extracted_features = extract_features ( house_features_json ) assert extracted_features [ 'price_per_area' ] == 100 Neste exemplo, o fixture house_features_json fornece os dados de amostra em formato JSON que s\u00e3o usados em dois testes diferentes. Isso ajuda a reutilizar os dados de amostra de maneira eficaz.","title":"Exemplo: Usando os mesmos dados de amostra para v\u00e1rios testes"},{"location":"machine-learning/ml-testing/#transformando-dados","text":"Para limpar e transformar dados, teste entradas e sa\u00eddas fixas, mas tente limitar cada teste a uma verifica\u00e7\u00e3o. Por exemplo, crie um teste para verificar o formato de sa\u00edda dos dados. def test_resize_image_gera_o_tamanho_correto (): # Organizar imagem_original = np . ones (( 10 , 5 , 2 , 3 )) # Agir imagem_redimensionada = utils . redimensionar_imagem ( imagem_original , 100 , 100 ) # Afirmar assert imagem_redimensionada . shape [: 2 ] == ( 100 , 100 ) e um para verificar se qualquer preenchimento \u00e9 feito adequadamente def test_resize_image_preenche_corretamente (): # Organizar imagem_original = np . ones (( 10 , 5 , 2 , 3 )) # Agir imagem_redimensionada = utils . redimensionar_imagem ( imagem_original , 100 , 100 ) # Afirmar assert imagem_redimensionada [ 0 ][ 0 ][ 0 ][ 0 ] == 0 assert imagem_redimensionada [ 0 ][ 0 ][ 2 ][ 0 ] == 1 Para testar diferentes entradas e sa\u00eddas esperadas automaticamente, use a parametriza\u00e7\u00e3o. @pytest . mark . parametrize ( 'altura_orig, largura_orig, altura_esperada, largura_esperada' , [ # menor do que o alvo ( 10 , 10 , 20 , 20 ), # maior do que o alvo ( 20 , 20 , 10 , 10 ), # mais largo do que o alvo ( 10 , 20 , 10 , 10 ) ]) def test_resize_image_gera_o_tamanho_correto ( altura_orig , largura_orig , altura_esperada , largura_esperada ): # Organizar imagem_original = np . ones (( altura_orig , largura_orig , 2 , 3 )) # Agir imagem_redimensionada = utils . redimensionar_imagem ( imagem_original , altura_esperada , largura_esperada ) # Afirmar assert imagem_redimensionada . shape [: 2 ] == ( altura_esperada , largura_esperada )","title":"Transformando dados"},{"location":"machine-learning/ml-testing/#carregar-o-modelo-ou-prever","text":"Ao realizar testes de unidade , devemos simular o carregamento do modelo e as previs\u00f5es do modelo da mesma forma que simular o acesso a arquivos. Pode haver casos em que voc\u00ea deseja carregar seu modelo para realizar testes preliminares ou testes de integra\u00e7\u00e3o. Como esses testes geralmente demoram um pouco mais para serem executados, \u00e9 importante separ\u00e1-los dos testes de unidade, para que os desenvolvedores da equipe ainda possam executar os testes de unidade como parte do desenvolvimento orientado por testes. Uma maneira de fazer isso \u00e9 usando marcas (marks). @pytest . mark . longrunning def test_integracao_entre_dois_sistemas (): # isso pode demorar um pouco Execute todos os testes que n\u00e3o est\u00e3o marcados como longrunning pytest -v -m \"not longrunning\"","title":"Carregar o Modelo ou Prever"},{"location":"machine-learning/ml-testing/#testes-basicos-de-unidade-para-modelos-de-aprendizado-de-maquina","text":"Os testes de unidade de ML n\u00e3o t\u00eam a inten\u00e7\u00e3o de verificar a precis\u00e3o ou o desempenho de um modelo. Os testes de unidade para um modelo de ML destinam-se a verificar a qualidade do c\u00f3digo, por exemplo: O modelo aceita as entradas corretas e produz as sa\u00eddas com a forma correta? Os pesos do modelo s\u00e3o atualizados ao executar o fit ? Para fazer isso, os testes de modelos de ML n\u00e3o seguem estritamente as melhores pr\u00e1ticas dos testes de unidade padr\u00e3o - nem todas as chamadas externas s\u00e3o simuladas. Esses testes est\u00e3o muito mais pr\u00f3ximos de um teste de integra\u00e7\u00e3o estreito . No entanto, os benef\u00edcios de ter testes simples para o modelo de ML ajudam a evitar que um modelo mal configurado passe horas em treinamento, enquanto ainda produz resultados ruins. Exemplos de como implementar esses testes (para modelos de Aprendizado Profundo) incluem: Construir um modelo e comparar a forma das camadas de entrada com a de uma fonte de dados de exemplo. Em seguida, compare a forma da camada de sa\u00edda com a sa\u00edda esperada. Inicialize o modelo e registre os pesos de cada camada. Em seguida, execute uma \u00fanica \u00e9poca de treinamento em um conjunto de dados fict\u00edcio e compare os pesos do \"modelo treinado\" - verifique apenas se os valores mudaram. Treine o modelo em um conjunto de dados fict\u00edcio por uma \u00fanica \u00e9poca e, em seguida, valide com dados fict\u00edcios - valide apenas se a previs\u00e3o est\u00e1 formatada corretamente, este modelo n\u00e3o ser\u00e1 preciso.","title":"Testes B\u00e1sicos de Unidade para Modelos de Aprendizado de M\u00e1quina"},{"location":"machine-learning/ml-testing/#validacao-de-dados","text":"Uma parte importante dos testes de unidade \u00e9 incluir casos de teste para valida\u00e7\u00e3o de dados. Por exemplo, nenhum dado fornecido, imagens que n\u00e3o est\u00e3o no formato esperado, dados contendo valores nulos ou valores discrepantes para garantir que o pipeline de processamento de dados seja robusto.","title":"Valida\u00e7\u00e3o de Dados"},{"location":"machine-learning/ml-testing/#teste-de-modelo","text":"Al\u00e9m de testar o c\u00f3digo de unidade, tamb\u00e9m podemos testar, depurar e validar nossos modelos de diferentes maneiras durante o processo de treinamento. Algumas op\u00e7\u00f5es a serem consideradas nesta fase: Testes adversariais e de limite para aumentar a robustez Verificar a precis\u00e3o das classes sub-representadas.","title":"Teste de Modelo"},{"location":"machine-learning/ml-tpm-guidance/","text":"Considera\u00e7\u00f5es sobre TPM para projetos de Aprendizado de M\u00e1quina Neste documento, exploramos algumas das considera\u00e7\u00f5es de Gerenciamento de Programas para projetos de Aprendizado de M\u00e1quina (ML) e sugerimos recomenda\u00e7\u00f5es para Gerentes de Programas T\u00e9cnicos (TPM) trabalharem de forma eficaz com equipes de engenharia de Dados e Aprendizado de M\u00e1quina Aplicado. Determinar a necessidade de Aprendizado de M\u00e1quina no projeto Em projetos de Intelig\u00eancia Artificial (IA), o componente de ML geralmente faz parte de um problema de neg\u00f3cios geral e N\u00c3O \u00e9 o problema em si. Determine primeiro o problema de neg\u00f3cios geral e, em seguida, avalie se o ML pode ajudar a abordar uma parte do espa\u00e7o do problema. Algumas considera\u00e7\u00f5es para identificar o ajuste certo para o projeto: Envolva especialistas em experi\u00eancia humana e utilize t\u00e9cnicas como Design Thinking e Formula\u00e7\u00e3o de Problemas para compreender as necessidades do cliente e o comportamento humano primeiro. Identifique as partes interessadas corretas tanto da lideran\u00e7a de neg\u00f3cios quanto da lideran\u00e7a t\u00e9cnica e convide-os para essas oficinas. O resultado deve ser cen\u00e1rios de usu\u00e1rios finais e personas para determinar as necessidades reais dos usu\u00e1rios. Concentre-se nos princ\u00edpios de Design de Sistema para identificar os componentes arquiteturais, entidades, interfaces e restri\u00e7\u00f5es. Fa\u00e7a as perguntas certas desde cedo e explore alternativas de design com a equipe de engenharia. Pense cuidadosamente sobre os custos do ML e se estamos resolvendo um problema repetitivo em escala. Muitas vezes, os problemas dos clientes podem ser resolvidos com an\u00e1lise de dados, pain\u00e9is de controle ou algoritmos baseados em regras como a primeira fase do projeto. Definir expectativas para alta ambiguidade nos componentes de ML Projetos de ML podem ser afligidos por um fen\u00f4meno que podemos chamar de \" Morte pelo Desconhecido \". Ao contr\u00e1rio de projetos de engenharia de software, projetos focados em ML podem resultar em sucesso r\u00e1pido no in\u00edcio (ou seja, diminui\u00e7\u00e3o repentina na taxa de erro), mas isso pode se estabilizar eventualmente. Algumas coisas a considerar: Defina expectativas claras : Identifique as m\u00e9tricas de desempenho e discuta uma taxa de previs\u00e3o \"suficientemente boa\" que trar\u00e1 valor ao neg\u00f3cio. Uma taxa de \"suficientemente boa\" de 80% pode economizar custos de neg\u00f3cios e aumentar a produtividade, mas se passar de 80% para 95% exigir custos e esfor\u00e7os inimagin\u00e1veis. Vale a pena? Pode ser um roadmap progressivo? Crie uma equipe menor e realize uma an\u00e1lise de viabilidade por meio de t\u00e9cnicas como EDA (An\u00e1lise Explorat\u00f3ria de Dados). Um estudo de viabilidade \u00e9 muito mais barato para avaliar a qualidade dos dados, as restri\u00e7\u00f5es do cliente e a viabilidade do modelo. Isso permite que um TPM compreenda melhor os casos de uso do cliente e o ambiente atual e pode atuar como um mecanismo de falha r\u00e1pida. Observe que a viabilidade deve ser mais curta (em semanas) sen\u00e3o perder\u00e1 o objetivo de economizar custos. Como em qualquer projeto, haver\u00e1 novas necessidades (fontes de dados adicionais, restri\u00e7\u00f5es t\u00e9cnicas, contrata\u00e7\u00e3o de rotuladores de dados, tempo dos usu\u00e1rios de neg\u00f3cios etc.). Incorpore t\u00e9cnicas \u00c1geis para falhar rapidamente e minimizar custos e surpresas no cronograma. Pe\u00e7o desculpas por n\u00e3o ter respeitado os marcadores Markdown em minha resposta anterior. Vou corrigir isso e fornecer a tradu\u00e7\u00e3o novamente com a formata\u00e7\u00e3o correta: Notebooks != Produ\u00e7\u00e3o de ML Notebooks s\u00e3o uma \u00f3tima maneira de iniciar os esfor\u00e7os de An\u00e1lise de Dados e Aprendizado de M\u00e1quina Aplicado, no entanto, para lan\u00e7amentos em produ\u00e7\u00e3o, devem ser consideradas restri\u00e7\u00f5es adicionais: Compreenda o fluxo de gerenciamento de dados de ponta a ponta , como os dados ser\u00e3o disponibilizados (fluxos de ingest\u00e3o), qual \u00e9 a frequ\u00eancia, armazenamento e reten\u00e7\u00e3o de dados. Planeje hist\u00f3rias de usu\u00e1rio e spikes de design em torno desses fluxos para garantir o desenvolvimento de um pipeline de ML robusto. A equipe de engenharia deve seguir o mesmo rigor na constru\u00e7\u00e3o de projetos de ML como em qualquer projeto de engenharia de software. N\u00f3s, da ISE (Ind\u00fastria Solutions Engineering), desenvolvemos um bom conjunto de recursos a partir de nossas experi\u00eancias em nosso ISE Engineering Playbook . Pense em como o modelo ser\u00e1 implantado, por exemplo, existem restri\u00e7\u00f5es t\u00e9cnicas devido a um dispositivo de borda, ou restri\u00e7\u00f5es de rede que impedir\u00e3o a atualiza\u00e7\u00e3o do modelo. Compreender o ambiente \u00e9 fundamental, consulte a Lista de Verifica\u00e7\u00e3o de Produ\u00e7\u00e3o de Modelos como refer\u00eancia para determinar escolhas de implanta\u00e7\u00e3o do modelo. Projetos focados em ML n\u00e3o s\u00e3o uma solu\u00e7\u00e3o de \"um tiro\" - eles precisam ser nutridos, evolu\u00eddos e aprimorados ao longo do tempo. Planeje um ciclo de melhoria cont\u00ednua, as fases iniciais podem ser viabilidade e valida\u00e7\u00e3o do modelo para obter a taxa de previs\u00e3o \"suficientemente boa\", as fases posteriores podem ser escalonamento e melhoria dos modelos por meio de loops de feedback e conjuntos de dados atualizados. Dados Ruins na Entrada -> Modelo Ruim na Sa\u00edda A qualidade dos dados \u00e9 um fator importante que afeta o desempenho do modelo e a implementa\u00e7\u00e3o de produ\u00e7\u00e3o, considere o seguinte: Realize uma oficina de explora\u00e7\u00e3o de dados e elabore um relat\u00f3rio sobre a qualidade dos dados que inclua valores ausentes, duplicatas, dados n\u00e3o rotulados, dados expirados ou n\u00e3o v\u00e1lidos, dados incompletos (por exemplo, ter apenas representa\u00e7\u00e3o masculina em um conjunto de dados de pessoas). Identifique a confiabilidade da fonte de dados para garantir que os dados provenham de uma fonte de produ\u00e7\u00e3o. (por exemplo, as imagens s\u00e3o de uma c\u00e2mera de produ\u00e7\u00e3o ou industrial ou foram tiradas de um iPhone/Android.) Identifique as restri\u00e7\u00f5es de aquisi\u00e7\u00e3o de dados : Determine como os dados est\u00e3o sendo obtidos e as restri\u00e7\u00f5es relacionadas a isso. Alguns exemplos podem incluir restri\u00e7\u00f5es legais, contratuais, de privacidade, regulamentares e \u00e9ticas. Essas restri\u00e7\u00f5es podem atrasar significativamente a implementa\u00e7\u00e3o de produ\u00e7\u00e3o se n\u00e3o forem capturadas nas fases iniciais do projeto. Determine os volumes de dados : Identifique se temos dados suficientes para amostrar o caso de uso de neg\u00f3cios necess\u00e1rio e como os dados ser\u00e3o aprimorados ao longo do tempo. A regra geral aqui \u00e9 que os dados devem ser suficientes para generaliza\u00e7\u00e3o para evitar o overfitting. Planeje para Fun\u00e7\u00f5es \u00danicas em Projetos de IA Um projeto de ML tem v\u00e1rias etapas, e cada etapa pode exigir fun\u00e7\u00f5es adicionais. Por exemplo, Pesquisa de Design e Designers para Experi\u00eancia Humana, Engenheiro de Dados para Coleta de Dados, Engenharia de Recursos, um Rotulador de Dados para rotular dados estruturados, engenheiros para MLOps e implanta\u00e7\u00e3o de modelo, e a lista pode continuar. Como TPM, leve em considera\u00e7\u00e3o ter esses recursos dispon\u00edveis no momento certo para evitar quaisquer riscos de cronograma. Engenharia de Recursos e Ajuste de Hiperpar\u00e2metros A Engenharia de Recursos permite a transforma\u00e7\u00e3o de dados para que eles se tornem utiliz\u00e1veis por um algoritmo. Criar os recursos certos \u00e9 uma arte e pode exigir experimenta\u00e7\u00e3o, bem como experi\u00eancia no dom\u00ednio. Aloque tempo para que especialistas no dom\u00ednio auxiliem na melhoria e identifica\u00e7\u00e3o dos melhores recursos. Por exemplo, para um mecanismo de processamento de linguagem natural para extra\u00e7\u00e3o de texto de documentos financeiros, podemos envolver pesquisadores financeiros e realizar um exerc\u00edcio de avalia\u00e7\u00e3o de relev\u00e2ncia e fornecer um ciclo de feedback para avaliar o desempenho do modelo. Considera\u00e7\u00f5es de IA Respons\u00e1vel O vi\u00e9s no aprendizado de m\u00e1quina pode ser o principal problema para um modelo n\u00e3o atingir suas necessidades pretendidas. Planeje incorporar princ\u00edpios de IA Respons\u00e1vel desde o primeiro dia para garantir a equidade, seguran\u00e7a, privacidade e transpar\u00eancia dos modelos. Por exemplo, para um algoritmo de reconhecimento de pessoas, se a fonte de dados estiver fornecendo apenas um tipo espec\u00edfico de pele, os cen\u00e1rios de produ\u00e7\u00e3o podem n\u00e3o fornecer bons resultados. Fundamentos de Gerenciamento de Projetos Essenciais para o papel de um TPM est\u00e3o os fundamentos que incluem trazer clareza para a equipe, pensamento de design, direcionar a equipe para as decis\u00f5es t\u00e9cnicas corretas, gerenciar riscos, gerenciar partes interessadas, gerenciamento de backlog e gerenciamento de projetos. Esses s\u00e3o os superpoderes de um TPM . Um TPM pode complementar a equipe de aprendizado de m\u00e1quina garantindo que o problema e as necessidades do cliente sejam compreendidos, que um design de sistema hol\u00edstico seja avaliado, que as expectativas das partes interessadas sejam gerenciadas e que os objetivos do cliente sejam alcan\u00e7ados. Aqui est\u00e3o algumas refer\u00eancias que podem ajudar: O \"T\" em um TPM O framework \"TPM Don't M*ck up\" A mente de um TPM Jornada de Aprendizado de M\u00e1quina para um TPM","title":"Considera\u00e7\u00f5es sobre TPM para projetos de Aprendizado de M\u00e1quina"},{"location":"machine-learning/ml-tpm-guidance/#consideracoes-sobre-tpm-para-projetos-de-aprendizado-de-maquina","text":"Neste documento, exploramos algumas das considera\u00e7\u00f5es de Gerenciamento de Programas para projetos de Aprendizado de M\u00e1quina (ML) e sugerimos recomenda\u00e7\u00f5es para Gerentes de Programas T\u00e9cnicos (TPM) trabalharem de forma eficaz com equipes de engenharia de Dados e Aprendizado de M\u00e1quina Aplicado.","title":"Considera\u00e7\u00f5es sobre TPM para projetos de Aprendizado de M\u00e1quina"},{"location":"machine-learning/ml-tpm-guidance/#determinar-a-necessidade-de-aprendizado-de-maquina-no-projeto","text":"Em projetos de Intelig\u00eancia Artificial (IA), o componente de ML geralmente faz parte de um problema de neg\u00f3cios geral e N\u00c3O \u00e9 o problema em si. Determine primeiro o problema de neg\u00f3cios geral e, em seguida, avalie se o ML pode ajudar a abordar uma parte do espa\u00e7o do problema. Algumas considera\u00e7\u00f5es para identificar o ajuste certo para o projeto: Envolva especialistas em experi\u00eancia humana e utilize t\u00e9cnicas como Design Thinking e Formula\u00e7\u00e3o de Problemas para compreender as necessidades do cliente e o comportamento humano primeiro. Identifique as partes interessadas corretas tanto da lideran\u00e7a de neg\u00f3cios quanto da lideran\u00e7a t\u00e9cnica e convide-os para essas oficinas. O resultado deve ser cen\u00e1rios de usu\u00e1rios finais e personas para determinar as necessidades reais dos usu\u00e1rios. Concentre-se nos princ\u00edpios de Design de Sistema para identificar os componentes arquiteturais, entidades, interfaces e restri\u00e7\u00f5es. Fa\u00e7a as perguntas certas desde cedo e explore alternativas de design com a equipe de engenharia. Pense cuidadosamente sobre os custos do ML e se estamos resolvendo um problema repetitivo em escala. Muitas vezes, os problemas dos clientes podem ser resolvidos com an\u00e1lise de dados, pain\u00e9is de controle ou algoritmos baseados em regras como a primeira fase do projeto.","title":"Determinar a necessidade de Aprendizado de M\u00e1quina no projeto"},{"location":"machine-learning/ml-tpm-guidance/#definir-expectativas-para-alta-ambiguidade-nos-componentes-de-ml","text":"Projetos de ML podem ser afligidos por um fen\u00f4meno que podemos chamar de \" Morte pelo Desconhecido \". Ao contr\u00e1rio de projetos de engenharia de software, projetos focados em ML podem resultar em sucesso r\u00e1pido no in\u00edcio (ou seja, diminui\u00e7\u00e3o repentina na taxa de erro), mas isso pode se estabilizar eventualmente. Algumas coisas a considerar: Defina expectativas claras : Identifique as m\u00e9tricas de desempenho e discuta uma taxa de previs\u00e3o \"suficientemente boa\" que trar\u00e1 valor ao neg\u00f3cio. Uma taxa de \"suficientemente boa\" de 80% pode economizar custos de neg\u00f3cios e aumentar a produtividade, mas se passar de 80% para 95% exigir custos e esfor\u00e7os inimagin\u00e1veis. Vale a pena? Pode ser um roadmap progressivo? Crie uma equipe menor e realize uma an\u00e1lise de viabilidade por meio de t\u00e9cnicas como EDA (An\u00e1lise Explorat\u00f3ria de Dados). Um estudo de viabilidade \u00e9 muito mais barato para avaliar a qualidade dos dados, as restri\u00e7\u00f5es do cliente e a viabilidade do modelo. Isso permite que um TPM compreenda melhor os casos de uso do cliente e o ambiente atual e pode atuar como um mecanismo de falha r\u00e1pida. Observe que a viabilidade deve ser mais curta (em semanas) sen\u00e3o perder\u00e1 o objetivo de economizar custos. Como em qualquer projeto, haver\u00e1 novas necessidades (fontes de dados adicionais, restri\u00e7\u00f5es t\u00e9cnicas, contrata\u00e7\u00e3o de rotuladores de dados, tempo dos usu\u00e1rios de neg\u00f3cios etc.). Incorpore t\u00e9cnicas \u00c1geis para falhar rapidamente e minimizar custos e surpresas no cronograma. Pe\u00e7o desculpas por n\u00e3o ter respeitado os marcadores Markdown em minha resposta anterior. Vou corrigir isso e fornecer a tradu\u00e7\u00e3o novamente com a formata\u00e7\u00e3o correta:","title":"Definir expectativas para alta ambiguidade nos componentes de ML"},{"location":"machine-learning/ml-tpm-guidance/#notebooks-producao-de-ml","text":"Notebooks s\u00e3o uma \u00f3tima maneira de iniciar os esfor\u00e7os de An\u00e1lise de Dados e Aprendizado de M\u00e1quina Aplicado, no entanto, para lan\u00e7amentos em produ\u00e7\u00e3o, devem ser consideradas restri\u00e7\u00f5es adicionais: Compreenda o fluxo de gerenciamento de dados de ponta a ponta , como os dados ser\u00e3o disponibilizados (fluxos de ingest\u00e3o), qual \u00e9 a frequ\u00eancia, armazenamento e reten\u00e7\u00e3o de dados. Planeje hist\u00f3rias de usu\u00e1rio e spikes de design em torno desses fluxos para garantir o desenvolvimento de um pipeline de ML robusto. A equipe de engenharia deve seguir o mesmo rigor na constru\u00e7\u00e3o de projetos de ML como em qualquer projeto de engenharia de software. N\u00f3s, da ISE (Ind\u00fastria Solutions Engineering), desenvolvemos um bom conjunto de recursos a partir de nossas experi\u00eancias em nosso ISE Engineering Playbook . Pense em como o modelo ser\u00e1 implantado, por exemplo, existem restri\u00e7\u00f5es t\u00e9cnicas devido a um dispositivo de borda, ou restri\u00e7\u00f5es de rede que impedir\u00e3o a atualiza\u00e7\u00e3o do modelo. Compreender o ambiente \u00e9 fundamental, consulte a Lista de Verifica\u00e7\u00e3o de Produ\u00e7\u00e3o de Modelos como refer\u00eancia para determinar escolhas de implanta\u00e7\u00e3o do modelo. Projetos focados em ML n\u00e3o s\u00e3o uma solu\u00e7\u00e3o de \"um tiro\" - eles precisam ser nutridos, evolu\u00eddos e aprimorados ao longo do tempo. Planeje um ciclo de melhoria cont\u00ednua, as fases iniciais podem ser viabilidade e valida\u00e7\u00e3o do modelo para obter a taxa de previs\u00e3o \"suficientemente boa\", as fases posteriores podem ser escalonamento e melhoria dos modelos por meio de loops de feedback e conjuntos de dados atualizados.","title":"Notebooks != Produ\u00e7\u00e3o de ML"},{"location":"machine-learning/ml-tpm-guidance/#dados-ruins-na-entrada-modelo-ruim-na-saida","text":"A qualidade dos dados \u00e9 um fator importante que afeta o desempenho do modelo e a implementa\u00e7\u00e3o de produ\u00e7\u00e3o, considere o seguinte: Realize uma oficina de explora\u00e7\u00e3o de dados e elabore um relat\u00f3rio sobre a qualidade dos dados que inclua valores ausentes, duplicatas, dados n\u00e3o rotulados, dados expirados ou n\u00e3o v\u00e1lidos, dados incompletos (por exemplo, ter apenas representa\u00e7\u00e3o masculina em um conjunto de dados de pessoas). Identifique a confiabilidade da fonte de dados para garantir que os dados provenham de uma fonte de produ\u00e7\u00e3o. (por exemplo, as imagens s\u00e3o de uma c\u00e2mera de produ\u00e7\u00e3o ou industrial ou foram tiradas de um iPhone/Android.) Identifique as restri\u00e7\u00f5es de aquisi\u00e7\u00e3o de dados : Determine como os dados est\u00e3o sendo obtidos e as restri\u00e7\u00f5es relacionadas a isso. Alguns exemplos podem incluir restri\u00e7\u00f5es legais, contratuais, de privacidade, regulamentares e \u00e9ticas. Essas restri\u00e7\u00f5es podem atrasar significativamente a implementa\u00e7\u00e3o de produ\u00e7\u00e3o se n\u00e3o forem capturadas nas fases iniciais do projeto. Determine os volumes de dados : Identifique se temos dados suficientes para amostrar o caso de uso de neg\u00f3cios necess\u00e1rio e como os dados ser\u00e3o aprimorados ao longo do tempo. A regra geral aqui \u00e9 que os dados devem ser suficientes para generaliza\u00e7\u00e3o para evitar o overfitting.","title":"Dados Ruins na Entrada -&gt; Modelo Ruim na Sa\u00edda"},{"location":"machine-learning/ml-tpm-guidance/#planeje-para-funcoes-unicas-em-projetos-de-ia","text":"Um projeto de ML tem v\u00e1rias etapas, e cada etapa pode exigir fun\u00e7\u00f5es adicionais. Por exemplo, Pesquisa de Design e Designers para Experi\u00eancia Humana, Engenheiro de Dados para Coleta de Dados, Engenharia de Recursos, um Rotulador de Dados para rotular dados estruturados, engenheiros para MLOps e implanta\u00e7\u00e3o de modelo, e a lista pode continuar. Como TPM, leve em considera\u00e7\u00e3o ter esses recursos dispon\u00edveis no momento certo para evitar quaisquer riscos de cronograma.","title":"Planeje para Fun\u00e7\u00f5es \u00danicas em Projetos de IA"},{"location":"machine-learning/ml-tpm-guidance/#engenharia-de-recursos-e-ajuste-de-hiperparametros","text":"A Engenharia de Recursos permite a transforma\u00e7\u00e3o de dados para que eles se tornem utiliz\u00e1veis por um algoritmo. Criar os recursos certos \u00e9 uma arte e pode exigir experimenta\u00e7\u00e3o, bem como experi\u00eancia no dom\u00ednio. Aloque tempo para que especialistas no dom\u00ednio auxiliem na melhoria e identifica\u00e7\u00e3o dos melhores recursos. Por exemplo, para um mecanismo de processamento de linguagem natural para extra\u00e7\u00e3o de texto de documentos financeiros, podemos envolver pesquisadores financeiros e realizar um exerc\u00edcio de avalia\u00e7\u00e3o de relev\u00e2ncia e fornecer um ciclo de feedback para avaliar o desempenho do modelo.","title":"Engenharia de Recursos e Ajuste de Hiperpar\u00e2metros"},{"location":"machine-learning/ml-tpm-guidance/#consideracoes-de-ia-responsavel","text":"O vi\u00e9s no aprendizado de m\u00e1quina pode ser o principal problema para um modelo n\u00e3o atingir suas necessidades pretendidas. Planeje incorporar princ\u00edpios de IA Respons\u00e1vel desde o primeiro dia para garantir a equidade, seguran\u00e7a, privacidade e transpar\u00eancia dos modelos. Por exemplo, para um algoritmo de reconhecimento de pessoas, se a fonte de dados estiver fornecendo apenas um tipo espec\u00edfico de pele, os cen\u00e1rios de produ\u00e7\u00e3o podem n\u00e3o fornecer bons resultados.","title":"Considera\u00e7\u00f5es de IA Respons\u00e1vel"},{"location":"machine-learning/ml-tpm-guidance/#fundamentos-de-gerenciamento-de-projetos","text":"Essenciais para o papel de um TPM est\u00e3o os fundamentos que incluem trazer clareza para a equipe, pensamento de design, direcionar a equipe para as decis\u00f5es t\u00e9cnicas corretas, gerenciar riscos, gerenciar partes interessadas, gerenciamento de backlog e gerenciamento de projetos. Esses s\u00e3o os superpoderes de um TPM . Um TPM pode complementar a equipe de aprendizado de m\u00e1quina garantindo que o problema e as necessidades do cliente sejam compreendidos, que um design de sistema hol\u00edstico seja avaliado, que as expectativas das partes interessadas sejam gerenciadas e que os objetivos do cliente sejam alcan\u00e7ados. Aqui est\u00e3o algumas refer\u00eancias que podem ajudar: O \"T\" em um TPM O framework \"TPM Don't M*ck up\" A mente de um TPM Jornada de Aprendizado de M\u00e1quina para um TPM","title":"Fundamentos de Gerenciamento de Projetos"},{"location":"machine-learning/responsible-ai/","text":"IA Respons\u00e1vel na ISE Princ\u00edpios de IA Respons\u00e1vel da Microsoft Todo projeto de ML na ISE passa por uma avalia\u00e7\u00e3o de IA Respons\u00e1vel (RAI) para garantir que ele cumpra os 6 princ\u00edpios de IA Respons\u00e1vel da Microsoft : Equidade Confiabilidade e Seguran\u00e7a Privacidade e Seguran\u00e7a Inclus\u00e3o Transpar\u00eancia Responsabilidade Todo projeto passa pelo processo de RAI, seja para construir um novo modelo de ML do zero ou colocar um modelo existente em produ\u00e7\u00e3o. Processo de IA Respons\u00e1vel da ISE O processo come\u00e7a assim que iniciamos um projeto prospectivo. Come\u00e7amos preenchendo um documento de revis\u00e3o de IA Respons\u00e1vel e uma avalia\u00e7\u00e3o de impacto, que oferece uma maneira estruturada de explorar t\u00f3picos como: O problema pode ser resolvido com uma solu\u00e7\u00e3o n\u00e3o t\u00e9cnica (por exemplo, social)? O problema pode ser resolvido sem IA? Tecnologia mais simples seria suficiente? A equipe ter\u00e1 acesso a especialistas no dom\u00ednio (por exemplo, m\u00e9dicos, refugiados) na \u00e1rea onde a IA \u00e9 aplic\u00e1vel? Quem s\u00e3o as partes interessadas neste projeto? Quem \u00e9 impactado pela IA? Existem grupos vulner\u00e1veis afetados? Quais s\u00e3o os poss\u00edveis benef\u00edcios e danos para cada parte interessada? Como a tecnologia pode ser mal utilizada e o que pode dar errado? A equipe analisou adequadamente os dados de entrada para garantir que os dados de treinamento sejam adequados para aprendizado de m\u00e1quina? Os dados de treinamento representam com precis\u00e3o os dados que ser\u00e3o usados como entrada na produ\u00e7\u00e3o? Existe uma boa representa\u00e7\u00e3o de todos os usu\u00e1rios? Existe um mecanismo de fallback (um humano na sequ\u00eancia ou uma maneira de reverter decis\u00f5es com base no modelo)? Os dados usados pelo modelo para treinamento ou pontua\u00e7\u00e3o cont\u00eam informa\u00e7\u00f5es pessoais identific\u00e1veis (PII)? Quais medidas foram tomadas para remover dados sens\u00edveis? O modelo impacta decis\u00f5es consequentes, como impedir que as pessoas obtenham empregos, empr\u00e9stimos, assist\u00eancia m\u00e9dica etc., ou nos casos em que isso pode ocorrer, considera\u00e7\u00f5es \u00e9ticas apropriadas foram discutidas? Medidas de re-treinamento foram consideradas? Como podemos abordar quaisquer preocupa\u00e7\u00f5es que surjam e como podemos mitigar riscos? Neste ponto, pesquisamos ferramentas e recursos dispon\u00edveis , como InterpretML ou Fairlearn , que podemos usar no projeto. Podemos alterar o escopo do projeto ou redefinir a defini\u00e7\u00e3o do problema de ML se necess\u00e1rio. Os documentos de revis\u00e3o de IA Respons\u00e1vel permanecem documentos vivos que revisamos e atualizamos durante o desenvolvimento do projeto, por meio do estudo de viabilidade , \u00e0 medida que o modelo \u00e9 desenvolvido e preparado para a produ\u00e7\u00e3o, e \u00e0 medida que novas informa\u00e7\u00f5es surgem. Os documentos podem ser usados e expandidos assim que o modelo \u00e9 implantado e monitorado em produ\u00e7\u00e3o.","title":"IA Respons\u00e1vel na ISE"},{"location":"machine-learning/responsible-ai/#ia-responsavel-na-ise","text":"","title":"IA Respons\u00e1vel na ISE"},{"location":"machine-learning/responsible-ai/#principios-de-ia-responsavel-da-microsoft","text":"Todo projeto de ML na ISE passa por uma avalia\u00e7\u00e3o de IA Respons\u00e1vel (RAI) para garantir que ele cumpra os 6 princ\u00edpios de IA Respons\u00e1vel da Microsoft : Equidade Confiabilidade e Seguran\u00e7a Privacidade e Seguran\u00e7a Inclus\u00e3o Transpar\u00eancia Responsabilidade Todo projeto passa pelo processo de RAI, seja para construir um novo modelo de ML do zero ou colocar um modelo existente em produ\u00e7\u00e3o.","title":"Princ\u00edpios de IA Respons\u00e1vel da Microsoft"},{"location":"machine-learning/responsible-ai/#processo-de-ia-responsavel-da-ise","text":"O processo come\u00e7a assim que iniciamos um projeto prospectivo. Come\u00e7amos preenchendo um documento de revis\u00e3o de IA Respons\u00e1vel e uma avalia\u00e7\u00e3o de impacto, que oferece uma maneira estruturada de explorar t\u00f3picos como: O problema pode ser resolvido com uma solu\u00e7\u00e3o n\u00e3o t\u00e9cnica (por exemplo, social)? O problema pode ser resolvido sem IA? Tecnologia mais simples seria suficiente? A equipe ter\u00e1 acesso a especialistas no dom\u00ednio (por exemplo, m\u00e9dicos, refugiados) na \u00e1rea onde a IA \u00e9 aplic\u00e1vel? Quem s\u00e3o as partes interessadas neste projeto? Quem \u00e9 impactado pela IA? Existem grupos vulner\u00e1veis afetados? Quais s\u00e3o os poss\u00edveis benef\u00edcios e danos para cada parte interessada? Como a tecnologia pode ser mal utilizada e o que pode dar errado? A equipe analisou adequadamente os dados de entrada para garantir que os dados de treinamento sejam adequados para aprendizado de m\u00e1quina? Os dados de treinamento representam com precis\u00e3o os dados que ser\u00e3o usados como entrada na produ\u00e7\u00e3o? Existe uma boa representa\u00e7\u00e3o de todos os usu\u00e1rios? Existe um mecanismo de fallback (um humano na sequ\u00eancia ou uma maneira de reverter decis\u00f5es com base no modelo)? Os dados usados pelo modelo para treinamento ou pontua\u00e7\u00e3o cont\u00eam informa\u00e7\u00f5es pessoais identific\u00e1veis (PII)? Quais medidas foram tomadas para remover dados sens\u00edveis? O modelo impacta decis\u00f5es consequentes, como impedir que as pessoas obtenham empregos, empr\u00e9stimos, assist\u00eancia m\u00e9dica etc., ou nos casos em que isso pode ocorrer, considera\u00e7\u00f5es \u00e9ticas apropriadas foram discutidas? Medidas de re-treinamento foram consideradas? Como podemos abordar quaisquer preocupa\u00e7\u00f5es que surjam e como podemos mitigar riscos? Neste ponto, pesquisamos ferramentas e recursos dispon\u00edveis , como InterpretML ou Fairlearn , que podemos usar no projeto. Podemos alterar o escopo do projeto ou redefinir a defini\u00e7\u00e3o do problema de ML se necess\u00e1rio. Os documentos de revis\u00e3o de IA Respons\u00e1vel permanecem documentos vivos que revisamos e atualizamos durante o desenvolvimento do projeto, por meio do estudo de viabilidade , \u00e0 medida que o modelo \u00e9 desenvolvido e preparado para a produ\u00e7\u00e3o, e \u00e0 medida que novas informa\u00e7\u00f5es surgem. Os documentos podem ser usados e expandidos assim que o modelo \u00e9 implantado e monitorado em produ\u00e7\u00e3o.","title":"Processo de IA Respons\u00e1vel da ISE"},{"location":"observability/","text":"Observabilidade Construir sistemas observ\u00e1veis permite que as equipes de desenvolvimento na ISE me\u00e7am o qu\u00e3o bem a aplica\u00e7\u00e3o est\u00e1 se comportando. A observabilidade atende aos seguintes objetivos: Fornecer uma vis\u00e3o hol\u00edstica da sa\u00fade da aplica\u00e7\u00e3o . Ajudar a medir o desempenho do neg\u00f3cio para o cliente. Medir o desempenho operacional do sistema. Identificar e diagnosticar falhas para solucionar o problema rapidamente. Pilares da Observabilidade Registros (Logs) M\u00e9tricas Rastreamento (Tracing) Registros vs. M\u00e9tricas vs. Rastreamento Insights Pain\u00e9is e Relat\u00f3rios (Dashboards and Reporting) Ferramentas, Padr\u00f5es e Pr\u00e1ticas Recomendadas Ferramentas e Padr\u00f5es Observabilidade como C\u00f3digo (Observability As Code) Pr\u00e1ticas Recomendadas (Recommended Practices) Ferramentas de Diagn\u00f3stico (Diagnostics tools) OpenTelemetry Facetas da Observabilidade Observabilidade para Microservices (Observability for Microservices) Observabilidade em Aprendizado de M\u00e1quina (Observability in Machine Learning) Observabilidade em Pipelines de CI/CD (Observability of CI/CD Pipelines) Observabilidade no Azure Databricks (Observability in Azure Databricks) Receitas (Recipes) Links \u00dateis Orienta\u00e7\u00e3o para Requisitos N\u00e3o Funcionais","title":"Observabilidade"},{"location":"observability/#observabilidade","text":"Construir sistemas observ\u00e1veis permite que as equipes de desenvolvimento na ISE me\u00e7am o qu\u00e3o bem a aplica\u00e7\u00e3o est\u00e1 se comportando. A observabilidade atende aos seguintes objetivos: Fornecer uma vis\u00e3o hol\u00edstica da sa\u00fade da aplica\u00e7\u00e3o . Ajudar a medir o desempenho do neg\u00f3cio para o cliente. Medir o desempenho operacional do sistema. Identificar e diagnosticar falhas para solucionar o problema rapidamente.","title":"Observabilidade"},{"location":"observability/#pilares-da-observabilidade","text":"Registros (Logs) M\u00e9tricas Rastreamento (Tracing) Registros vs. M\u00e9tricas vs. Rastreamento","title":"Pilares da Observabilidade"},{"location":"observability/#insights","text":"Pain\u00e9is e Relat\u00f3rios (Dashboards and Reporting)","title":"Insights"},{"location":"observability/#ferramentas-padroes-e-praticas-recomendadas","text":"Ferramentas e Padr\u00f5es Observabilidade como C\u00f3digo (Observability As Code) Pr\u00e1ticas Recomendadas (Recommended Practices) Ferramentas de Diagn\u00f3stico (Diagnostics tools) OpenTelemetry","title":"Ferramentas, Padr\u00f5es e Pr\u00e1ticas Recomendadas"},{"location":"observability/#facetas-da-observabilidade","text":"Observabilidade para Microservices (Observability for Microservices) Observabilidade em Aprendizado de M\u00e1quina (Observability in Machine Learning) Observabilidade em Pipelines de CI/CD (Observability of CI/CD Pipelines) Observabilidade no Azure Databricks (Observability in Azure Databricks) Receitas (Recipes)","title":"Facetas da Observabilidade"},{"location":"observability/#links-uteis","text":"Orienta\u00e7\u00e3o para Requisitos N\u00e3o Funcionais","title":"Links \u00dateis"},{"location":"observability/alerting/","text":"Orienta\u00e7\u00f5es para Alertas Um dos objetivos de construir sistemas altamente observ\u00e1veis \u00e9 fornecer uma vis\u00e3o valiosa do comportamento da aplica\u00e7\u00e3o. Sistemas observ\u00e1veis permitem a identifica\u00e7\u00e3o e a apresenta\u00e7\u00e3o de problemas por meio de alertas antes que os usu\u00e1rios finais sejam afetados. Melhores Pr\u00e1ticas A primeira coisa a fazer antes de criar alertas \u00e9 implementar a observabilidade. Sem sistemas de monitoramento em vigor, torna-se praticamente imposs\u00edvel saber quais atividades precisam ser monitoradas e quando alertar as equipes. Identifique qual deve ser a qualidade m\u00ednima de servi\u00e7o da aplica\u00e7\u00e3o. N\u00e3o se trata do que voc\u00ea pretende oferecer, mas do que \u00e9 aceit\u00e1vel para o cliente. Esses Objetivos de N\u00edvel de Servi\u00e7o (SLOs) s\u00e3o uma m\u00e9trica para medir o desempenho da aplica\u00e7\u00e3o. Os SLOs s\u00e3o definidos em rela\u00e7\u00e3o aos usu\u00e1rios finais. Os alertas devem monitorar o impacto vis\u00edvel no usu\u00e1rio. Por exemplo, alertas sobre taxa de solicita\u00e7\u00f5es, lat\u00eancia e erros. Use ferramentas automatizadas e script\u00e1veis para imitar caminhos de c\u00f3digo importantes de ponta a ponta relacionados \u00e0s atividades na aplica\u00e7\u00e3o. Crie pol\u00edticas de alerta para eventos que afetam os usu\u00e1rios ou mudan\u00e7as na taxa de m\u00e9tricas. A fadiga de alerta \u00e9 real. \u00c9 recomend\u00e1vel que os engenheiros prestem aten\u00e7\u00e3o ao sistema de monitoramento para que alertas e limiares precisos possam ser definidos. Estabele\u00e7a um canal prim\u00e1rio para alertas que precisam de aten\u00e7\u00e3o imediata e identifique a equipe/pessoa certa com base na natureza do incidente. Nem todos os alertas precisam ser enviados para o canal principal de plant\u00e3o. Estabele\u00e7a um canal secund\u00e1rio para itens que precisam ser investigados, mas ainda n\u00e3o afetam os usu\u00e1rios. Por exemplo, armazenamento que est\u00e1 se aproximando do limite de capacidade. Esses itens ser\u00e3o o que os servi\u00e7os de engenharia monitorar\u00e3o regularmente para verificar a sa\u00fade do sistema. Certifique-se de configurar alertas adequados para falhas em servi\u00e7os dependentes, como o cache Redis, o Service Bus, etc. Por exemplo, se o cache Redis estiver lan\u00e7ando 10 exce\u00e7\u00f5es nos \u00faltimos 60 segundos, \u00e9 recomend\u00e1vel criar alertas apropriados para que essas falhas sejam identificadas e medidas sejam tomadas. \u00c9 importante aprender com cada incidente e melhorar continuamente o processo. Ap\u00f3s cada incidente ter sido triado, realize uma p\u00f3s-an\u00e1lise do cen\u00e1rio . Cen\u00e1rios e situa\u00e7\u00f5es que n\u00e3o foram considerados inicialmente ocorrer\u00e3o, e o fluxo de p\u00f3s-an\u00e1lise \u00e9 uma \u00f3tima maneira de destac\u00e1-los para melhorar o monitoramento/alerta do sistema. Configurar um alerta para detectar aquele cen\u00e1rio de incidente \u00e9 uma boa ideia para ver se o evento ocorre novamente.","title":"Orienta\u00e7\u00f5es para Alertas"},{"location":"observability/alerting/#orientacoes-para-alertas","text":"Um dos objetivos de construir sistemas altamente observ\u00e1veis \u00e9 fornecer uma vis\u00e3o valiosa do comportamento da aplica\u00e7\u00e3o. Sistemas observ\u00e1veis permitem a identifica\u00e7\u00e3o e a apresenta\u00e7\u00e3o de problemas por meio de alertas antes que os usu\u00e1rios finais sejam afetados.","title":"Orienta\u00e7\u00f5es para Alertas"},{"location":"observability/alerting/#melhores-praticas","text":"A primeira coisa a fazer antes de criar alertas \u00e9 implementar a observabilidade. Sem sistemas de monitoramento em vigor, torna-se praticamente imposs\u00edvel saber quais atividades precisam ser monitoradas e quando alertar as equipes. Identifique qual deve ser a qualidade m\u00ednima de servi\u00e7o da aplica\u00e7\u00e3o. N\u00e3o se trata do que voc\u00ea pretende oferecer, mas do que \u00e9 aceit\u00e1vel para o cliente. Esses Objetivos de N\u00edvel de Servi\u00e7o (SLOs) s\u00e3o uma m\u00e9trica para medir o desempenho da aplica\u00e7\u00e3o. Os SLOs s\u00e3o definidos em rela\u00e7\u00e3o aos usu\u00e1rios finais. Os alertas devem monitorar o impacto vis\u00edvel no usu\u00e1rio. Por exemplo, alertas sobre taxa de solicita\u00e7\u00f5es, lat\u00eancia e erros. Use ferramentas automatizadas e script\u00e1veis para imitar caminhos de c\u00f3digo importantes de ponta a ponta relacionados \u00e0s atividades na aplica\u00e7\u00e3o. Crie pol\u00edticas de alerta para eventos que afetam os usu\u00e1rios ou mudan\u00e7as na taxa de m\u00e9tricas. A fadiga de alerta \u00e9 real. \u00c9 recomend\u00e1vel que os engenheiros prestem aten\u00e7\u00e3o ao sistema de monitoramento para que alertas e limiares precisos possam ser definidos. Estabele\u00e7a um canal prim\u00e1rio para alertas que precisam de aten\u00e7\u00e3o imediata e identifique a equipe/pessoa certa com base na natureza do incidente. Nem todos os alertas precisam ser enviados para o canal principal de plant\u00e3o. Estabele\u00e7a um canal secund\u00e1rio para itens que precisam ser investigados, mas ainda n\u00e3o afetam os usu\u00e1rios. Por exemplo, armazenamento que est\u00e1 se aproximando do limite de capacidade. Esses itens ser\u00e3o o que os servi\u00e7os de engenharia monitorar\u00e3o regularmente para verificar a sa\u00fade do sistema. Certifique-se de configurar alertas adequados para falhas em servi\u00e7os dependentes, como o cache Redis, o Service Bus, etc. Por exemplo, se o cache Redis estiver lan\u00e7ando 10 exce\u00e7\u00f5es nos \u00faltimos 60 segundos, \u00e9 recomend\u00e1vel criar alertas apropriados para que essas falhas sejam identificadas e medidas sejam tomadas. \u00c9 importante aprender com cada incidente e melhorar continuamente o processo. Ap\u00f3s cada incidente ter sido triado, realize uma p\u00f3s-an\u00e1lise do cen\u00e1rio . Cen\u00e1rios e situa\u00e7\u00f5es que n\u00e3o foram considerados inicialmente ocorrer\u00e3o, e o fluxo de p\u00f3s-an\u00e1lise \u00e9 uma \u00f3tima maneira de destac\u00e1-los para melhorar o monitoramento/alerta do sistema. Configurar um alerta para detectar aquele cen\u00e1rio de incidente \u00e9 uma boa ideia para ver se o evento ocorre novamente.","title":"Melhores Pr\u00e1ticas"},{"location":"observability/best-practices/","text":"Pr\u00e1ticas Recomendadas ID de Correla\u00e7\u00e3o : Inclua um identificador \u00fanico no in\u00edcio da intera\u00e7\u00e3o para vincular dados agregados de v\u00e1rios componentes do sistema e fornecer uma vis\u00e3o hol\u00edstica. Leia mais orienta\u00e7\u00f5es sobre o uso do ID de correla\u00e7\u00e3o . Certifique-se de que a sa\u00fade dos servi\u00e7os seja monitorada e forne\u00e7a insights sobre o desempenho e o comportamento do sistema. Certifique-se de que os servi\u00e7os dependentes sejam monitorados adequadamente. Erros e exce\u00e7\u00f5es em servi\u00e7os dependentes, como o cache Redis, o Service bus, etc., devem ser registrados e alertados. Al\u00e9m disso, m\u00e9tricas relacionadas aos servi\u00e7os dependentes devem ser capturadas e registradas. Al\u00e9m disso, falhas nos servi\u00e7os dependentes devem ser propagadas por cada n\u00edvel da pilha por meio da verifica\u00e7\u00e3o de integridade. Falhas, crashes e falhas s\u00e3o registrados como eventos discretos. Isso ajuda os engenheiros a identificar \u00e1reas problem\u00e1ticas durante as falhas. Certifique-se de que a configura\u00e7\u00e3o de registro (por exemplo, definir o registro como \"verbose\") possa ser controlada sem altera\u00e7\u00f5es de c\u00f3digo. Garanta que m\u00e9tricas relacionadas \u00e0 lat\u00eancia e dura\u00e7\u00e3o sejam coletadas e possam ser agregadas. Comece pequeno e adicione m\u00e9tricas onde houver impacto no cliente. Evitar a fadiga de m\u00e9tricas \u00e9 fundamental para coletar dados acion\u00e1veis. \u00c9 importante que todos os dados coletados contenham contexto relevante e rico. Informa\u00e7\u00f5es Pessoalmente Identific\u00e1veis ou qualquer outra informa\u00e7\u00e3o sens\u00edvel do cliente nunca devem ser registradas. Deve-se prestar aten\u00e7\u00e3o especial a regulamenta\u00e7\u00f5es locais de privacidade de dados e os dados coletados devem estar em conformidade com essas regulamenta\u00e7\u00f5es (por exemplo, GDPR). Verifica\u00e7\u00e3o de Sa\u00fade : Verifica\u00e7\u00f5es de sa\u00fade apropriadas devem ser adicionadas para determinar se o servi\u00e7o est\u00e1 saud\u00e1vel e pronto para atender ao tr\u00e1fego. Em uma plataforma Kubernetes, diferentes tipos de sondagens, como Liveness, Readiness, Startup, etc., podem ser usados para determinar a sa\u00fade e prontid\u00e3o do servi\u00e7o implantado. Leia mais aqui para entender o que observar ao projetar e construir um sistema observ\u00e1vel.","title":"Pr\u00e1ticas Recomendadas"},{"location":"observability/best-practices/#praticas-recomendadas","text":"ID de Correla\u00e7\u00e3o : Inclua um identificador \u00fanico no in\u00edcio da intera\u00e7\u00e3o para vincular dados agregados de v\u00e1rios componentes do sistema e fornecer uma vis\u00e3o hol\u00edstica. Leia mais orienta\u00e7\u00f5es sobre o uso do ID de correla\u00e7\u00e3o . Certifique-se de que a sa\u00fade dos servi\u00e7os seja monitorada e forne\u00e7a insights sobre o desempenho e o comportamento do sistema. Certifique-se de que os servi\u00e7os dependentes sejam monitorados adequadamente. Erros e exce\u00e7\u00f5es em servi\u00e7os dependentes, como o cache Redis, o Service bus, etc., devem ser registrados e alertados. Al\u00e9m disso, m\u00e9tricas relacionadas aos servi\u00e7os dependentes devem ser capturadas e registradas. Al\u00e9m disso, falhas nos servi\u00e7os dependentes devem ser propagadas por cada n\u00edvel da pilha por meio da verifica\u00e7\u00e3o de integridade. Falhas, crashes e falhas s\u00e3o registrados como eventos discretos. Isso ajuda os engenheiros a identificar \u00e1reas problem\u00e1ticas durante as falhas. Certifique-se de que a configura\u00e7\u00e3o de registro (por exemplo, definir o registro como \"verbose\") possa ser controlada sem altera\u00e7\u00f5es de c\u00f3digo. Garanta que m\u00e9tricas relacionadas \u00e0 lat\u00eancia e dura\u00e7\u00e3o sejam coletadas e possam ser agregadas. Comece pequeno e adicione m\u00e9tricas onde houver impacto no cliente. Evitar a fadiga de m\u00e9tricas \u00e9 fundamental para coletar dados acion\u00e1veis. \u00c9 importante que todos os dados coletados contenham contexto relevante e rico. Informa\u00e7\u00f5es Pessoalmente Identific\u00e1veis ou qualquer outra informa\u00e7\u00e3o sens\u00edvel do cliente nunca devem ser registradas. Deve-se prestar aten\u00e7\u00e3o especial a regulamenta\u00e7\u00f5es locais de privacidade de dados e os dados coletados devem estar em conformidade com essas regulamenta\u00e7\u00f5es (por exemplo, GDPR). Verifica\u00e7\u00e3o de Sa\u00fade : Verifica\u00e7\u00f5es de sa\u00fade apropriadas devem ser adicionadas para determinar se o servi\u00e7o est\u00e1 saud\u00e1vel e pronto para atender ao tr\u00e1fego. Em uma plataforma Kubernetes, diferentes tipos de sondagens, como Liveness, Readiness, Startup, etc., podem ser usados para determinar a sa\u00fade e prontid\u00e3o do servi\u00e7o implantado. Leia mais aqui para entender o que observar ao projetar e construir um sistema observ\u00e1vel.","title":"Pr\u00e1ticas Recomendadas"},{"location":"observability/correlation-id/","text":"IDs de Correla\u00e7\u00e3o A Necessidade Em uma arquitetura de sistema distribu\u00eddo (arquitetura de microsservi\u00e7os), \u00e9 altamente dif\u00edcil entender o fluxo de uma \u00fanica transa\u00e7\u00e3o de cliente de ponta a ponta por meio dos v\u00e1rios componentes. Aqui est\u00e3o alguns dos desafios gerais: Torna-se desafiador entender o comportamento de ponta a ponta de uma solicita\u00e7\u00e3o de cliente que entra na aplica\u00e7\u00e3o. Agrega\u00e7\u00e3o: Consolidar registros de v\u00e1rios componentes e dar sentido a esses registros \u00e9 dif\u00edcil, sen\u00e3o imposs\u00edvel. Depend\u00eancias c\u00edclicas em servi\u00e7os, sequ\u00eancia de eventos e solicita\u00e7\u00f5es ass\u00edncronas n\u00e3o s\u00e3o facilmente decifradas. Ao solucionar uma solicita\u00e7\u00e3o, o contexto de diagn\u00f3stico dos registros \u00e9 muito importante para chegar \u00e0 raiz do problema. Solu\u00e7\u00e3o Um ID de Correla\u00e7\u00e3o \u00e9 um identificador \u00fanico que \u00e9 adicionado \u00e0 primeira intera\u00e7\u00e3o (solicita\u00e7\u00e3o de entrada) para identificar o contexto e \u00e9 passado para todos os componentes envolvidos no fluxo de transa\u00e7\u00e3o. O ID de Correla\u00e7\u00e3o se torna a cola que une a transa\u00e7\u00e3o e ajuda a criar uma imagem geral dos eventos. Nota: Antes de implementar seu pr\u00f3prio ID de Correla\u00e7\u00e3o, verifique se sua ferramenta de telemetria de escolha fornece um ID de Correla\u00e7\u00e3o gerado automaticamente e se ele atende aos prop\u00f3sitos de sua aplica\u00e7\u00e3o. Por exemplo, o Application Insights oferece a coleta autom\u00e1tica de depend\u00eancias para alguns frameworks de aplica\u00e7\u00e3o. Pr\u00e1ticas Recomendadas Atribua a cada solicita\u00e7\u00e3o externa um ID de Correla\u00e7\u00e3o que vincule a mensagem a uma transa\u00e7\u00e3o. O ID de Correla\u00e7\u00e3o para uma transa\u00e7\u00e3o deve ser atribu\u00eddo o mais cedo poss\u00edvel. Propague o ID de Correla\u00e7\u00e3o para todos os componentes/servi\u00e7os downstream. Todos os componentes/servi\u00e7os da transa\u00e7\u00e3o devem usar esse ID de Correla\u00e7\u00e3o em seus registros. Para uma solicita\u00e7\u00e3o HTTP, o ID de Correla\u00e7\u00e3o \u00e9 geralmente passado no cabe\u00e7alho. Adicione-o a uma resposta de sa\u00edda, sempre que poss\u00edvel. Com base no caso de uso, pode haver IDs de correla\u00e7\u00e3o adicionais que podem ser necess\u00e1rios. Por exemplo, pode ser necess\u00e1rio rastrear registros com base tanto no ID da Sess\u00e3o quanto no ID do Usu\u00e1rio. Ao adicionar v\u00e1rios IDs de correla\u00e7\u00e3o, lembre-se de propag\u00e1-los pelos componentes. Considere o uso do OpenTelemetry , pois ele implementa a propaga\u00e7\u00e3o de contexto de c\u00f3digo aberto multiplataforma para transa\u00e7\u00f5es distribu\u00eddas de ponta a ponta em componentes heterog\u00eaneos pronto para uso. Ele cuida automaticamente da cria\u00e7\u00e3o e gerenciamento do \"ID de Correla\u00e7\u00e3o\", chamado de TraceId. Casos de Uso Correla\u00e7\u00e3o de Logs A correla\u00e7\u00e3o de logs \u00e9 a capacidade de rastrear eventos discrepantes em diferentes partes da aplica\u00e7\u00e3o. Ter um ID de Correla\u00e7\u00e3o fornece mais contexto, facilitando a cria\u00e7\u00e3o de regras para relat\u00f3rios e an\u00e1lises. Sistemas secund\u00e1rios de relat\u00f3rios/observadores Usar o ID de Correla\u00e7\u00e3o ajuda os sistemas secund\u00e1rios a correlacionar dados sem contexto de aplica\u00e7\u00e3o. Alguns exemplos incluem a gera\u00e7\u00e3o de m\u00e9tricas com base em dados de rastreamento, a integra\u00e7\u00e3o de diagn\u00f3sticos em tempo de execu\u00e7\u00e3o/sistema etc. Por exemplo, alimentar dados do AppInsights e correlacion\u00e1-los com problemas de infraestrutura. Solu\u00e7\u00e3o de Problemas de Erros Para solucionar erros, o ID de Correla\u00e7\u00e3o \u00e9 um \u00f3timo ponto de partida para rastrear o fluxo de trabalho de uma transa\u00e7\u00e3o.","title":"IDs de Correla\u00e7\u00e3o"},{"location":"observability/correlation-id/#ids-de-correlacao","text":"","title":"IDs de Correla\u00e7\u00e3o"},{"location":"observability/correlation-id/#a-necessidade","text":"Em uma arquitetura de sistema distribu\u00eddo (arquitetura de microsservi\u00e7os), \u00e9 altamente dif\u00edcil entender o fluxo de uma \u00fanica transa\u00e7\u00e3o de cliente de ponta a ponta por meio dos v\u00e1rios componentes. Aqui est\u00e3o alguns dos desafios gerais: Torna-se desafiador entender o comportamento de ponta a ponta de uma solicita\u00e7\u00e3o de cliente que entra na aplica\u00e7\u00e3o. Agrega\u00e7\u00e3o: Consolidar registros de v\u00e1rios componentes e dar sentido a esses registros \u00e9 dif\u00edcil, sen\u00e3o imposs\u00edvel. Depend\u00eancias c\u00edclicas em servi\u00e7os, sequ\u00eancia de eventos e solicita\u00e7\u00f5es ass\u00edncronas n\u00e3o s\u00e3o facilmente decifradas. Ao solucionar uma solicita\u00e7\u00e3o, o contexto de diagn\u00f3stico dos registros \u00e9 muito importante para chegar \u00e0 raiz do problema.","title":"A Necessidade"},{"location":"observability/correlation-id/#solucao","text":"Um ID de Correla\u00e7\u00e3o \u00e9 um identificador \u00fanico que \u00e9 adicionado \u00e0 primeira intera\u00e7\u00e3o (solicita\u00e7\u00e3o de entrada) para identificar o contexto e \u00e9 passado para todos os componentes envolvidos no fluxo de transa\u00e7\u00e3o. O ID de Correla\u00e7\u00e3o se torna a cola que une a transa\u00e7\u00e3o e ajuda a criar uma imagem geral dos eventos. Nota: Antes de implementar seu pr\u00f3prio ID de Correla\u00e7\u00e3o, verifique se sua ferramenta de telemetria de escolha fornece um ID de Correla\u00e7\u00e3o gerado automaticamente e se ele atende aos prop\u00f3sitos de sua aplica\u00e7\u00e3o. Por exemplo, o Application Insights oferece a coleta autom\u00e1tica de depend\u00eancias para alguns frameworks de aplica\u00e7\u00e3o.","title":"Solu\u00e7\u00e3o"},{"location":"observability/correlation-id/#praticas-recomendadas","text":"Atribua a cada solicita\u00e7\u00e3o externa um ID de Correla\u00e7\u00e3o que vincule a mensagem a uma transa\u00e7\u00e3o. O ID de Correla\u00e7\u00e3o para uma transa\u00e7\u00e3o deve ser atribu\u00eddo o mais cedo poss\u00edvel. Propague o ID de Correla\u00e7\u00e3o para todos os componentes/servi\u00e7os downstream. Todos os componentes/servi\u00e7os da transa\u00e7\u00e3o devem usar esse ID de Correla\u00e7\u00e3o em seus registros. Para uma solicita\u00e7\u00e3o HTTP, o ID de Correla\u00e7\u00e3o \u00e9 geralmente passado no cabe\u00e7alho. Adicione-o a uma resposta de sa\u00edda, sempre que poss\u00edvel. Com base no caso de uso, pode haver IDs de correla\u00e7\u00e3o adicionais que podem ser necess\u00e1rios. Por exemplo, pode ser necess\u00e1rio rastrear registros com base tanto no ID da Sess\u00e3o quanto no ID do Usu\u00e1rio. Ao adicionar v\u00e1rios IDs de correla\u00e7\u00e3o, lembre-se de propag\u00e1-los pelos componentes. Considere o uso do OpenTelemetry , pois ele implementa a propaga\u00e7\u00e3o de contexto de c\u00f3digo aberto multiplataforma para transa\u00e7\u00f5es distribu\u00eddas de ponta a ponta em componentes heterog\u00eaneos pronto para uso. Ele cuida automaticamente da cria\u00e7\u00e3o e gerenciamento do \"ID de Correla\u00e7\u00e3o\", chamado de TraceId.","title":"Pr\u00e1ticas Recomendadas"},{"location":"observability/correlation-id/#casos-de-uso","text":"","title":"Casos de Uso"},{"location":"observability/correlation-id/#correlacao-de-logs","text":"A correla\u00e7\u00e3o de logs \u00e9 a capacidade de rastrear eventos discrepantes em diferentes partes da aplica\u00e7\u00e3o. Ter um ID de Correla\u00e7\u00e3o fornece mais contexto, facilitando a cria\u00e7\u00e3o de regras para relat\u00f3rios e an\u00e1lises.","title":"Correla\u00e7\u00e3o de Logs"},{"location":"observability/correlation-id/#sistemas-secundarios-de-relatoriosobservadores","text":"Usar o ID de Correla\u00e7\u00e3o ajuda os sistemas secund\u00e1rios a correlacionar dados sem contexto de aplica\u00e7\u00e3o. Alguns exemplos incluem a gera\u00e7\u00e3o de m\u00e9tricas com base em dados de rastreamento, a integra\u00e7\u00e3o de diagn\u00f3sticos em tempo de execu\u00e7\u00e3o/sistema etc. Por exemplo, alimentar dados do AppInsights e correlacion\u00e1-los com problemas de infraestrutura.","title":"Sistemas secund\u00e1rios de relat\u00f3rios/observadores"},{"location":"observability/correlation-id/#solucao-de-problemas-de-erros","text":"Para solucionar erros, o ID de Correla\u00e7\u00e3o \u00e9 um \u00f3timo ponto de partida para rastrear o fluxo de trabalho de uma transa\u00e7\u00e3o.","title":"Solu\u00e7\u00e3o de Problemas de Erros"},{"location":"observability/diagnostic-tools/","text":"Ferramentas de Diagn\u00f3stico Al\u00e9m de Logging , Tracing e Metrics , existem ferramentas adicionais para ajudar a diagnosticar problemas quando as aplica\u00e7\u00f5es n\u00e3o se comportam conforme o esperado. Em alguns cen\u00e1rios, analisar o consumo de mem\u00f3ria e aprofundar o motivo pelo qual um processo espec\u00edfico leva mais tempo do que o esperado pode exigir medidas adicionais. Nestes casos, as ferramentas de diagn\u00f3stico espec\u00edficas da plataforma ou da linguagem de programa\u00e7\u00e3o entram em jogo e s\u00e3o \u00fateis para depurar um vazamento de mem\u00f3ria, perfilar o uso da CPU ou a causa de atrasos em multithreading. Profilers e Analisadores de Mem\u00f3ria Existem dois tipos de ferramentas de diagn\u00f3stico que voc\u00ea pode querer usar: profilers e analisadores de mem\u00f3ria. Profiling O profiling \u00e9 uma t\u00e9cnica em que voc\u00ea tira pequenos instant\u00e2neos de todas as threads em uma aplica\u00e7\u00e3o em execu\u00e7\u00e3o para ver o stack trace de cada thread por uma dura\u00e7\u00e3o especificada. Essa ferramenta pode ajud\u00e1-lo a identificar onde voc\u00ea est\u00e1 gastando tempo de CPU durante a execu\u00e7\u00e3o de sua aplica\u00e7\u00e3o. Existem duas t\u00e9cnicas principais para isso: Amostragem de CPU e Instrumenta\u00e7\u00e3o. A Amostragem de CPU \u00e9 um m\u00e9todo n\u00e3o invasivo que tira instant\u00e2neos de todas as pilhas em intervalos definidos. \u00c9 a t\u00e9cnica mais comum para profiling e n\u00e3o requer nenhuma modifica\u00e7\u00e3o em seu c\u00f3digo. A Instrumenta\u00e7\u00e3o \u00e9 a outra t\u00e9cnica em que voc\u00ea insere um pequeno trecho de c\u00f3digo no in\u00edcio e no final de cada fun\u00e7\u00e3o que vai sinalizar de volta para o profiler sobre o tempo gasto na fun\u00e7\u00e3o, o nome da fun\u00e7\u00e3o, par\u00e2metros e outros. Dessa forma, voc\u00ea modifica o c\u00f3digo de sua aplica\u00e7\u00e3o em execu\u00e7\u00e3o. Existem dois efeitos disso: seu c\u00f3digo pode rodar um pouco mais lentamente, mas, por outro lado, voc\u00ea tem uma vis\u00e3o mais precisa de cada fun\u00e7\u00e3o e classe que foi executada at\u00e9 agora em sua aplica\u00e7\u00e3o. Quando usar Amostragem vs Instrumenta\u00e7\u00e3o? Nem todas as linguagens de programa\u00e7\u00e3o suportam instrumenta\u00e7\u00e3o. A instrumenta\u00e7\u00e3o \u00e9 principalmente suportada para linguagens compiladas como .NET e Java, e algumas linguagens interpretadas em tempo de execu\u00e7\u00e3o como Python e JavaScript. Lembre-se de que habilitar a instrumenta\u00e7\u00e3o pode exigir a modifica\u00e7\u00e3o de sua pipeline de compila\u00e7\u00e3o, ou seja, adicionando par\u00e2metros especiais \u00e0 linha de comando. Normalmente, voc\u00ea deve come\u00e7ar com a amostragem porque ela n\u00e3o requer a modifica\u00e7\u00e3o de seus bin\u00e1rios, n\u00e3o afeta o desempenho do processo e pode ser mais r\u00e1pida para come\u00e7ar. Depois de obter seus dados de profiling, existem v\u00e1rias maneiras de visualizar essas informa\u00e7\u00f5es, dependendo do formato em que voc\u00ea as salvou. Como exemplo para .NET (dotnet-trace), existem tr\u00eas formatos dispon\u00edveis para salvar essas traces: Chromium, NetTrace e SpeedScope. Selecione o formato de sa\u00edda dependendo da ferramenta que voc\u00ea vai usar. SpeedScope \u00e9 uma aplica\u00e7\u00e3o web online que voc\u00ea pode usar para visualizar e analisar traces, e voc\u00ea s\u00f3 precisa de um navegador moderno. Tenha cuidado com ferramentas online, pois dumps/traces podem conter informa\u00e7\u00f5es confidenciais que voc\u00ea n\u00e3o deseja compartilhar fora de sua organiza\u00e7\u00e3o. Analisadores de Mem\u00f3ria Analisadores de mem\u00f3ria e memory dumps s\u00e3o outro conjunto de ferramentas de diagn\u00f3stico que voc\u00ea pode usar para identificar problemas em seu processo. Normalmente, esses tipos de ferramentas tiram uma \"foto\" da mem\u00f3ria inteira que o processo est\u00e1 usando em um determinado momento e a salvam em um arquivo que pode ser analisado. Ao usar essas ferramentas, voc\u00ea deseja estressar seu processo o m\u00e1ximo poss\u00edvel para amplificar qualquer defici\u00eancia que voc\u00ea possa ter em termos de gerenciamento de mem\u00f3ria. O memory dump deve ser feito quando o processo estiver nesse estado estressado. Em alguns cen\u00e1rios, recomendamos tirar mais de um memory dump durante a reprodu\u00e7\u00e3o de um problema. Por exemplo, se voc\u00ea suspeitar de um vazamento de mem\u00f3ria e estiver executando um teste por 30 minutos, \u00e9 \u00fatil tirar pelo menos 3 dumps em intervalos diferentes (ou seja, 10, 20 e 30 minutos) para compar\u00e1-los entre si. Existem v\u00e1rias maneiras de fazer um memory dump, dependendo do sistema operacional que voc\u00ea est\u00e1 usando. Al\u00e9m disso, cada sistema operacional possui seu pr\u00f3prio debugger que \u00e9 capaz de carregar esse memory dump e explorar o estado do processo no momento em que o memory dump foi feito. Os debuggers mais comuns s\u00e3o: Windows - WinDbg e WinDgbNext (inclu\u00eddo no Windows SDK), Visual Studio tamb\u00e9m pode carregar um memory dump para um processo .NET Framework e .NET Core. Linux - GDB \u00e9 o GNU Debugger Mac OS - LLDB Debugger Existem v\u00e1rias ferramentas de diagn\u00f3stico espec\u00edficas da plataforma do desenvolvedor que podem ser usadas: [Ferramentas de diagn\u00f3stico do .NET Core](https://learn.microsoft.com/en-us/dotnet/core/diagnostics/#net-core-diagnostic -global-tools), Reposit\u00f3rio no GitHub - Ferramentas de diagn\u00f3stico Java - espec\u00edficas da vers\u00e3o - Depura\u00e7\u00e3o e perfil Python - espec\u00edficas da vers\u00e3o - Grupo de Trabalho de Diagn\u00f3stico Node.js Ambiente para Profiling Para criar um perfil de aplica\u00e7\u00e3o o mais pr\u00f3ximo poss\u00edvel da produ\u00e7\u00e3o, \u00e9 necess\u00e1rio considerar o ambiente em que a aplica\u00e7\u00e3o est\u00e1 planejada para rodar na produ\u00e7\u00e3o e pode ser necess\u00e1rio tirar uma \"foto\" do estado da aplica\u00e7\u00e3o sob carga . Diagn\u00f3stico em Cont\u00eaineres Para aplica\u00e7\u00f5es monol\u00edticas, as ferramentas de diagn\u00f3stico podem ser instaladas e executadas na VM que as hospeda. A maioria das aplica\u00e7\u00f5es escal\u00e1veis \u00e9 desenvolvida como microsservi\u00e7os e possui intera\u00e7\u00f5es complexas que requerem a instala\u00e7\u00e3o das ferramentas nos cont\u00eaineres que executam o processo ou a alavancagem de um cont\u00eainer auxiliar (veja o padr\u00e3o sidecar ). Algumas plataformas exp\u00f5em endpoints para interagir com a aplica\u00e7\u00e3o e retornar um dump. Links \u00fateis: Diagn\u00f3stico .NET Core em cont\u00eaineres Ferramenta experimental dotnet-monitor , O que h\u00e1 de novo , Reposit\u00f3rio no GitHub Pontos de extremidade Spring Boot actuator","title":"Ferramentas de Diagn\u00f3stico"},{"location":"observability/diagnostic-tools/#ferramentas-de-diagnostico","text":"Al\u00e9m de Logging , Tracing e Metrics , existem ferramentas adicionais para ajudar a diagnosticar problemas quando as aplica\u00e7\u00f5es n\u00e3o se comportam conforme o esperado. Em alguns cen\u00e1rios, analisar o consumo de mem\u00f3ria e aprofundar o motivo pelo qual um processo espec\u00edfico leva mais tempo do que o esperado pode exigir medidas adicionais. Nestes casos, as ferramentas de diagn\u00f3stico espec\u00edficas da plataforma ou da linguagem de programa\u00e7\u00e3o entram em jogo e s\u00e3o \u00fateis para depurar um vazamento de mem\u00f3ria, perfilar o uso da CPU ou a causa de atrasos em multithreading.","title":"Ferramentas de Diagn\u00f3stico"},{"location":"observability/diagnostic-tools/#profilers-e-analisadores-de-memoria","text":"Existem dois tipos de ferramentas de diagn\u00f3stico que voc\u00ea pode querer usar: profilers e analisadores de mem\u00f3ria.","title":"Profilers e Analisadores de Mem\u00f3ria"},{"location":"observability/diagnostic-tools/#profiling","text":"O profiling \u00e9 uma t\u00e9cnica em que voc\u00ea tira pequenos instant\u00e2neos de todas as threads em uma aplica\u00e7\u00e3o em execu\u00e7\u00e3o para ver o stack trace de cada thread por uma dura\u00e7\u00e3o especificada. Essa ferramenta pode ajud\u00e1-lo a identificar onde voc\u00ea est\u00e1 gastando tempo de CPU durante a execu\u00e7\u00e3o de sua aplica\u00e7\u00e3o. Existem duas t\u00e9cnicas principais para isso: Amostragem de CPU e Instrumenta\u00e7\u00e3o. A Amostragem de CPU \u00e9 um m\u00e9todo n\u00e3o invasivo que tira instant\u00e2neos de todas as pilhas em intervalos definidos. \u00c9 a t\u00e9cnica mais comum para profiling e n\u00e3o requer nenhuma modifica\u00e7\u00e3o em seu c\u00f3digo. A Instrumenta\u00e7\u00e3o \u00e9 a outra t\u00e9cnica em que voc\u00ea insere um pequeno trecho de c\u00f3digo no in\u00edcio e no final de cada fun\u00e7\u00e3o que vai sinalizar de volta para o profiler sobre o tempo gasto na fun\u00e7\u00e3o, o nome da fun\u00e7\u00e3o, par\u00e2metros e outros. Dessa forma, voc\u00ea modifica o c\u00f3digo de sua aplica\u00e7\u00e3o em execu\u00e7\u00e3o. Existem dois efeitos disso: seu c\u00f3digo pode rodar um pouco mais lentamente, mas, por outro lado, voc\u00ea tem uma vis\u00e3o mais precisa de cada fun\u00e7\u00e3o e classe que foi executada at\u00e9 agora em sua aplica\u00e7\u00e3o.","title":"Profiling"},{"location":"observability/diagnostic-tools/#quando-usar-amostragem-vs-instrumentacao","text":"Nem todas as linguagens de programa\u00e7\u00e3o suportam instrumenta\u00e7\u00e3o. A instrumenta\u00e7\u00e3o \u00e9 principalmente suportada para linguagens compiladas como .NET e Java, e algumas linguagens interpretadas em tempo de execu\u00e7\u00e3o como Python e JavaScript. Lembre-se de que habilitar a instrumenta\u00e7\u00e3o pode exigir a modifica\u00e7\u00e3o de sua pipeline de compila\u00e7\u00e3o, ou seja, adicionando par\u00e2metros especiais \u00e0 linha de comando. Normalmente, voc\u00ea deve come\u00e7ar com a amostragem porque ela n\u00e3o requer a modifica\u00e7\u00e3o de seus bin\u00e1rios, n\u00e3o afeta o desempenho do processo e pode ser mais r\u00e1pida para come\u00e7ar. Depois de obter seus dados de profiling, existem v\u00e1rias maneiras de visualizar essas informa\u00e7\u00f5es, dependendo do formato em que voc\u00ea as salvou. Como exemplo para .NET (dotnet-trace), existem tr\u00eas formatos dispon\u00edveis para salvar essas traces: Chromium, NetTrace e SpeedScope. Selecione o formato de sa\u00edda dependendo da ferramenta que voc\u00ea vai usar. SpeedScope \u00e9 uma aplica\u00e7\u00e3o web online que voc\u00ea pode usar para visualizar e analisar traces, e voc\u00ea s\u00f3 precisa de um navegador moderno. Tenha cuidado com ferramentas online, pois dumps/traces podem conter informa\u00e7\u00f5es confidenciais que voc\u00ea n\u00e3o deseja compartilhar fora de sua organiza\u00e7\u00e3o.","title":"Quando usar Amostragem vs Instrumenta\u00e7\u00e3o?"},{"location":"observability/diagnostic-tools/#analisadores-de-memoria","text":"Analisadores de mem\u00f3ria e memory dumps s\u00e3o outro conjunto de ferramentas de diagn\u00f3stico que voc\u00ea pode usar para identificar problemas em seu processo. Normalmente, esses tipos de ferramentas tiram uma \"foto\" da mem\u00f3ria inteira que o processo est\u00e1 usando em um determinado momento e a salvam em um arquivo que pode ser analisado. Ao usar essas ferramentas, voc\u00ea deseja estressar seu processo o m\u00e1ximo poss\u00edvel para amplificar qualquer defici\u00eancia que voc\u00ea possa ter em termos de gerenciamento de mem\u00f3ria. O memory dump deve ser feito quando o processo estiver nesse estado estressado. Em alguns cen\u00e1rios, recomendamos tirar mais de um memory dump durante a reprodu\u00e7\u00e3o de um problema. Por exemplo, se voc\u00ea suspeitar de um vazamento de mem\u00f3ria e estiver executando um teste por 30 minutos, \u00e9 \u00fatil tirar pelo menos 3 dumps em intervalos diferentes (ou seja, 10, 20 e 30 minutos) para compar\u00e1-los entre si. Existem v\u00e1rias maneiras de fazer um memory dump, dependendo do sistema operacional que voc\u00ea est\u00e1 usando. Al\u00e9m disso, cada sistema operacional possui seu pr\u00f3prio debugger que \u00e9 capaz de carregar esse memory dump e explorar o estado do processo no momento em que o memory dump foi feito. Os debuggers mais comuns s\u00e3o: Windows - WinDbg e WinDgbNext (inclu\u00eddo no Windows SDK), Visual Studio tamb\u00e9m pode carregar um memory dump para um processo .NET Framework e .NET Core. Linux - GDB \u00e9 o GNU Debugger Mac OS - LLDB Debugger Existem v\u00e1rias ferramentas de diagn\u00f3stico espec\u00edficas da plataforma do desenvolvedor que podem ser usadas: [Ferramentas de diagn\u00f3stico do .NET Core](https://learn.microsoft.com/en-us/dotnet/core/diagnostics/#net-core-diagnostic -global-tools), Reposit\u00f3rio no GitHub - Ferramentas de diagn\u00f3stico Java - espec\u00edficas da vers\u00e3o - Depura\u00e7\u00e3o e perfil Python - espec\u00edficas da vers\u00e3o - Grupo de Trabalho de Diagn\u00f3stico Node.js","title":"Analisadores de Mem\u00f3ria"},{"location":"observability/diagnostic-tools/#ambiente-para-profiling","text":"Para criar um perfil de aplica\u00e7\u00e3o o mais pr\u00f3ximo poss\u00edvel da produ\u00e7\u00e3o, \u00e9 necess\u00e1rio considerar o ambiente em que a aplica\u00e7\u00e3o est\u00e1 planejada para rodar na produ\u00e7\u00e3o e pode ser necess\u00e1rio tirar uma \"foto\" do estado da aplica\u00e7\u00e3o sob carga .","title":"Ambiente para Profiling"},{"location":"observability/diagnostic-tools/#diagnostico-em-conteineres","text":"Para aplica\u00e7\u00f5es monol\u00edticas, as ferramentas de diagn\u00f3stico podem ser instaladas e executadas na VM que as hospeda. A maioria das aplica\u00e7\u00f5es escal\u00e1veis \u00e9 desenvolvida como microsservi\u00e7os e possui intera\u00e7\u00f5es complexas que requerem a instala\u00e7\u00e3o das ferramentas nos cont\u00eaineres que executam o processo ou a alavancagem de um cont\u00eainer auxiliar (veja o padr\u00e3o sidecar ). Algumas plataformas exp\u00f5em endpoints para interagir com a aplica\u00e7\u00e3o e retornar um dump. Links \u00fateis: Diagn\u00f3stico .NET Core em cont\u00eaineres Ferramenta experimental dotnet-monitor , O que h\u00e1 de novo , Reposit\u00f3rio no GitHub Pontos de extremidade Spring Boot actuator","title":"Diagn\u00f3stico em Cont\u00eaineres"},{"location":"observability/log-vs-metric-vs-trace/","text":"Logs vs. Metrics vs. Traces Vis\u00e3o Geral M\u00e9tricas O objetivo das m\u00e9tricas \u00e9 informar observadores sobre a sa\u00fade e as opera\u00e7\u00f5es de um componente ou sistema. Uma m\u00e9trica representa uma medida pontual em um determinado momento de uma fonte espec\u00edfica e, em termos de dados, tende a ser muito pequena. O tamanho compacto permite a coleta eficiente, mesmo em sistemas grandes em escala. As m\u00e9tricas tamb\u00e9m se prestam muito bem \u00e0 pr\u00e9-agrega\u00e7\u00e3o dentro do componente antes da coleta, reduzindo o custo computacional para o processamento e armazenamento de um grande n\u00famero de s\u00e9ries temporais de m\u00e9tricas em um sistema central. Devido \u00e0 efici\u00eancia no processamento e armazenamento de m\u00e9tricas, elas s\u00e3o uma excelente fonte de dados de sa\u00fade para todos os componentes no sistema e s\u00e3o muito adequadas para uso em alertas automatizados. Registros (Logs) Os dados de registro informam os observadores sobre os eventos discretos que ocorreram dentro de um componente ou conjunto de componentes. Quase todos os componentes de software registram informa\u00e7\u00f5es sobre suas atividades ao longo do tempo. Esses dados ricos costumam ser muito maiores do que os dados m\u00e9tricos e podem causar problemas de processamento, especialmente se os componentes estiverem registrando informa\u00e7\u00f5es em excesso. Portanto, o uso de dados de registro para entender a sa\u00fade de um sistema extenso tende a ser evitado e depende das m\u00e9tricas para esses dados. Uma vez que a telemetria de m\u00e9tricas destaca poss\u00edveis fontes de problemas, os dados de registro filtrados para essas fontes podem ser usados para entender o que ocorreu. Rastreamentos (Traces) Onde o registro fornece uma vis\u00e3o geral de um registro discreto acionado por eventos, o rastreamento abrange uma vis\u00e3o muito mais ampla e cont\u00ednua de uma aplica\u00e7\u00e3o. O objetivo do rastreamento \u00e9 seguir o fluxo de um programa e a progress\u00e3o dos dados. Em muitas inst\u00e2ncias, o rastreamento representa a jornada de um \u00fanico usu\u00e1rio por todo o conjunto de aplicativos. Seu objetivo n\u00e3o \u00e9 reativo, mas sim focado na otimiza\u00e7\u00e3o. Ao rastrear um conjunto, os desenvolvedores podem identificar gargalos e focar na melhoria do desempenho. Um rastreamento distribu\u00eddo \u00e9 definido como uma cole\u00e7\u00e3o de spans (trechos). Um span \u00e9 a menor unidade em um rastreamento e representa uma parte do fluxo de trabalho em um cen\u00e1rio distribu\u00eddo. Pode ser uma solicita\u00e7\u00e3o HTTP, uma chamada a um banco de dados ou a execu\u00e7\u00e3o de uma mensagem de uma fila. Quando ocorre um problema, o rastreamento permite ver como voc\u00ea chegou l\u00e1: Qual fun\u00e7\u00e3o. A dura\u00e7\u00e3o da fun\u00e7\u00e3o. Par\u00e2metros passados. At\u00e9 que ponto o usu\u00e1rio pode entrar na fun\u00e7\u00e3o. Orienta\u00e7\u00f5es de Uso Quando usar dados m\u00e9tricos ou de registro para rastrear uma telemetria espec\u00edfica pode ser resumido nos seguintes pontos: Use m\u00e9tricas para rastrear a ocorr\u00eancia de um evento, contagem de itens, o tempo necess\u00e1rio para realizar uma a\u00e7\u00e3o ou para relatar o valor atual de um recurso (CPU, mem\u00f3ria, etc.). Use registros para rastrear informa\u00e7\u00f5es detalhadas sobre um evento tamb\u00e9m monitorado por uma m\u00e9trica, especialmente erros, avisos ou outras situa\u00e7\u00f5es excepcionais. Um rastreamento fornece visibilidade sobre como uma solicita\u00e7\u00e3o \u00e9 processada por v\u00e1rios servi\u00e7os em um ambiente de microsservi\u00e7os. Cada rastreamento precisa ter um identificador \u00fanico associado a ele.","title":"Logs vs. Metrics vs. Traces"},{"location":"observability/log-vs-metric-vs-trace/#logs-vs-metrics-vs-traces","text":"","title":"Logs vs. Metrics vs. Traces"},{"location":"observability/log-vs-metric-vs-trace/#visao-geral","text":"","title":"Vis\u00e3o Geral"},{"location":"observability/log-vs-metric-vs-trace/#metricas","text":"O objetivo das m\u00e9tricas \u00e9 informar observadores sobre a sa\u00fade e as opera\u00e7\u00f5es de um componente ou sistema. Uma m\u00e9trica representa uma medida pontual em um determinado momento de uma fonte espec\u00edfica e, em termos de dados, tende a ser muito pequena. O tamanho compacto permite a coleta eficiente, mesmo em sistemas grandes em escala. As m\u00e9tricas tamb\u00e9m se prestam muito bem \u00e0 pr\u00e9-agrega\u00e7\u00e3o dentro do componente antes da coleta, reduzindo o custo computacional para o processamento e armazenamento de um grande n\u00famero de s\u00e9ries temporais de m\u00e9tricas em um sistema central. Devido \u00e0 efici\u00eancia no processamento e armazenamento de m\u00e9tricas, elas s\u00e3o uma excelente fonte de dados de sa\u00fade para todos os componentes no sistema e s\u00e3o muito adequadas para uso em alertas automatizados.","title":"M\u00e9tricas"},{"location":"observability/log-vs-metric-vs-trace/#registros-logs","text":"Os dados de registro informam os observadores sobre os eventos discretos que ocorreram dentro de um componente ou conjunto de componentes. Quase todos os componentes de software registram informa\u00e7\u00f5es sobre suas atividades ao longo do tempo. Esses dados ricos costumam ser muito maiores do que os dados m\u00e9tricos e podem causar problemas de processamento, especialmente se os componentes estiverem registrando informa\u00e7\u00f5es em excesso. Portanto, o uso de dados de registro para entender a sa\u00fade de um sistema extenso tende a ser evitado e depende das m\u00e9tricas para esses dados. Uma vez que a telemetria de m\u00e9tricas destaca poss\u00edveis fontes de problemas, os dados de registro filtrados para essas fontes podem ser usados para entender o que ocorreu.","title":"Registros (Logs)"},{"location":"observability/log-vs-metric-vs-trace/#rastreamentos-traces","text":"Onde o registro fornece uma vis\u00e3o geral de um registro discreto acionado por eventos, o rastreamento abrange uma vis\u00e3o muito mais ampla e cont\u00ednua de uma aplica\u00e7\u00e3o. O objetivo do rastreamento \u00e9 seguir o fluxo de um programa e a progress\u00e3o dos dados. Em muitas inst\u00e2ncias, o rastreamento representa a jornada de um \u00fanico usu\u00e1rio por todo o conjunto de aplicativos. Seu objetivo n\u00e3o \u00e9 reativo, mas sim focado na otimiza\u00e7\u00e3o. Ao rastrear um conjunto, os desenvolvedores podem identificar gargalos e focar na melhoria do desempenho. Um rastreamento distribu\u00eddo \u00e9 definido como uma cole\u00e7\u00e3o de spans (trechos). Um span \u00e9 a menor unidade em um rastreamento e representa uma parte do fluxo de trabalho em um cen\u00e1rio distribu\u00eddo. Pode ser uma solicita\u00e7\u00e3o HTTP, uma chamada a um banco de dados ou a execu\u00e7\u00e3o de uma mensagem de uma fila. Quando ocorre um problema, o rastreamento permite ver como voc\u00ea chegou l\u00e1: Qual fun\u00e7\u00e3o. A dura\u00e7\u00e3o da fun\u00e7\u00e3o. Par\u00e2metros passados. At\u00e9 que ponto o usu\u00e1rio pode entrar na fun\u00e7\u00e3o.","title":"Rastreamentos (Traces)"},{"location":"observability/log-vs-metric-vs-trace/#orientacoes-de-uso","text":"Quando usar dados m\u00e9tricos ou de registro para rastrear uma telemetria espec\u00edfica pode ser resumido nos seguintes pontos: Use m\u00e9tricas para rastrear a ocorr\u00eancia de um evento, contagem de itens, o tempo necess\u00e1rio para realizar uma a\u00e7\u00e3o ou para relatar o valor atual de um recurso (CPU, mem\u00f3ria, etc.). Use registros para rastrear informa\u00e7\u00f5es detalhadas sobre um evento tamb\u00e9m monitorado por uma m\u00e9trica, especialmente erros, avisos ou outras situa\u00e7\u00f5es excepcionais. Um rastreamento fornece visibilidade sobre como uma solicita\u00e7\u00e3o \u00e9 processada por v\u00e1rios servi\u00e7os em um ambiente de microsservi\u00e7os. Cada rastreamento precisa ter um identificador \u00fanico associado a ele.","title":"Orienta\u00e7\u00f5es de Uso"},{"location":"observability/logs-privacy/","text":"Orienta\u00e7\u00f5es para Privacidade Vis\u00e3o Geral Para garantir a privacidade dos usu\u00e1rios do seu sistema, bem como cumprir v\u00e1rias regulamenta\u00e7\u00f5es como o GDPR, alguns tipos de dados n\u00e3o devem existir em registros (logs). Isso inclui informa\u00e7\u00f5es sens\u00edveis dos clientes, Informa\u00e7\u00f5es de Identifica\u00e7\u00e3o Pessoal (IIP), e qualquer outro dado que n\u00e3o tenha sido legalmente autorizado. Pr\u00e1ticas Recomendadas Separe os componentes e minimize as partes do sistema que registram dados sens\u00edveis. Evite colocar dados sens\u00edveis em URLs, uma vez que os URLs de solicita\u00e7\u00e3o geralmente s\u00e3o registrados por proxies e servidores da web. Evite usar dados de IIP para depura\u00e7\u00e3o do sistema o m\u00e1ximo poss\u00edvel. Por exemplo, use IDs em vez de nomes de usu\u00e1rio. Use Registros Estruturados e inclua uma lista de nega\u00e7\u00e3o (deny-list) para propriedades sens\u00edveis. Fa\u00e7a um esfor\u00e7o extra para identificar declara\u00e7\u00f5es de registro com dados sens\u00edveis durante a revis\u00e3o de c\u00f3digo, pois \u00e9 comum os revisores pularem a leitura de declara\u00e7\u00f5es de registro. Isso pode ser adicionado como uma caixa de sele\u00e7\u00e3o adicional se voc\u00ea estiver usando Modelos de Solicita\u00e7\u00e3o de Pull (Pull Request Templates). Inclua mecanismos para detectar dados sens\u00edveis em registros, em seus pipelines organizacionais para QA ou Testes Automatizados. Ferramentas e M\u00e9todos de Implementa\u00e7\u00e3o Use essas ferramentas e m\u00e9todos para desidentifica\u00e7\u00e3o de dados sens\u00edveis em registros. Application Insights O Application Insights oferece intercepta\u00e7\u00e3o de telemetria em alguns dos SDKs, que pode ser feita implementando a interface ITelemetryProcessor . O ITelemetryProcessor processa as informa\u00e7\u00f5es de telemetria antes de serem enviadas para o Application Insights e pode ser \u00fatil em muitas situa\u00e7\u00f5es, como filtragem e modifica\u00e7\u00f5es. Abaixo est\u00e1 um exemplo de intercepta\u00e7\u00e3o de telemetria do tipo 'trace': using Microsoft.ApplicationInsights.DataContracts ; namespace Exemplo { using Microsoft.ApplicationInsights.Channel ; using Microsoft.ApplicationInsights.Extensibility ; internal class RedactTelemetryInitializer : ITelemetryInitializer { public void Initialize ( ITelemetry telemetry ) { var requestTelemetry = telemetry as TraceTelemetry ; if ( requestTelemetry == null ) return ; # redija os e - mails do par\u00e2metro de mensagem requestTelemetry . Message = Regex . Replace ( requestTelemetry . Message , @\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\" , \"[e-mail removido]\" ); } } } Elastic Stack O Elastic Stack (anteriormente conhecido como \"ELK stack\") permite a intercepta\u00e7\u00e3o de registros por meio dos plugins de filtro do Logstash. O uso de alguns dos plugins existentes, como 'mutate', 'alter' e 'prune', pode ser suficiente para a maioria dos casos de desidentifica\u00e7\u00e3o e oculta\u00e7\u00e3o de IIPs. Para casos de uso mais robustos e personalizados, pode-se usar um plugin 'ruby', executando c\u00f3digo Ruby arbitr\u00e1rio. Os plugins de filtro tamb\u00e9m est\u00e3o dispon\u00edveis em algumas alternativas ao Logstash, como Fluentd e Fluent Bit . Presidio Presidio oferece API de prote\u00e7\u00e3o e anonimiza\u00e7\u00e3o de dados. Ele fornece m\u00f3dulos de identifica\u00e7\u00e3o e anonimiza\u00e7\u00e3o r\u00e1pidos para entidades privadas em texto. O Presidio permite o uso de reconhecedores de IIPs predefinidos ou personalizados, aproveitando o Reconhecimento de Entidades Nomeadas, express\u00f5es regulares, l\u00f3gica baseada em regras e soma de verifica\u00e7\u00e3o com contexto relevante em v\u00e1rios idiomas. Ele pode ser usado junto com os m\u00e9todos de intercepta\u00e7\u00e3o de logs mencionados acima para ajudar a garantir que os dados sens\u00edveis sejam gerenciados e governados adequadamente. O Presidio \u00e9 contido para uma API HTTP REST e tamb\u00e9m pode ser instalado como um pacote Python, para ser chamado a partir de c\u00f3digo Python. Em vez de lidar com a anonimiza\u00e7\u00e3o no c\u00f3digo da aplica\u00e7\u00e3o, ambas as APIs podem ser usadas por meio de chamadas externas. O Elastic Stack, por exemplo, pode lidar com a oculta\u00e7\u00e3o de IIPs usando o filtro 'ruby' para chamar o Presidio na API HTTP REST ou chamando um script Python que consome o Presidio como um pacote: logstash.conf input { ... } filter { ruby { code => 'require \"open3\" message = event.get(\"message\") # Chama um script Python que aciona o analisador e anonimizador do Presidio e imprime o resultado. cmd = \"python /caminho/para/o/script/de/anonimiza\u00e7\u00e3o/do/presidio.py \\\" #{ message } \\\" \" # Obt\u00e9m a sa\u00edda padr\u00e3o do script. stdin, stdout, stderr = Open3.popen3(cmd) # Substitui a mensagem pelo texto anonimizado. event.set(\"message\", stdout.read) filter_matched(event)' } } output { ... }","title":"Orienta\u00e7\u00f5es para Privacidade"},{"location":"observability/logs-privacy/#orientacoes-para-privacidade","text":"","title":"Orienta\u00e7\u00f5es para Privacidade"},{"location":"observability/logs-privacy/#visao-geral","text":"Para garantir a privacidade dos usu\u00e1rios do seu sistema, bem como cumprir v\u00e1rias regulamenta\u00e7\u00f5es como o GDPR, alguns tipos de dados n\u00e3o devem existir em registros (logs). Isso inclui informa\u00e7\u00f5es sens\u00edveis dos clientes, Informa\u00e7\u00f5es de Identifica\u00e7\u00e3o Pessoal (IIP), e qualquer outro dado que n\u00e3o tenha sido legalmente autorizado.","title":"Vis\u00e3o Geral"},{"location":"observability/logs-privacy/#praticas-recomendadas","text":"Separe os componentes e minimize as partes do sistema que registram dados sens\u00edveis. Evite colocar dados sens\u00edveis em URLs, uma vez que os URLs de solicita\u00e7\u00e3o geralmente s\u00e3o registrados por proxies e servidores da web. Evite usar dados de IIP para depura\u00e7\u00e3o do sistema o m\u00e1ximo poss\u00edvel. Por exemplo, use IDs em vez de nomes de usu\u00e1rio. Use Registros Estruturados e inclua uma lista de nega\u00e7\u00e3o (deny-list) para propriedades sens\u00edveis. Fa\u00e7a um esfor\u00e7o extra para identificar declara\u00e7\u00f5es de registro com dados sens\u00edveis durante a revis\u00e3o de c\u00f3digo, pois \u00e9 comum os revisores pularem a leitura de declara\u00e7\u00f5es de registro. Isso pode ser adicionado como uma caixa de sele\u00e7\u00e3o adicional se voc\u00ea estiver usando Modelos de Solicita\u00e7\u00e3o de Pull (Pull Request Templates). Inclua mecanismos para detectar dados sens\u00edveis em registros, em seus pipelines organizacionais para QA ou Testes Automatizados.","title":"Pr\u00e1ticas Recomendadas"},{"location":"observability/logs-privacy/#ferramentas-e-metodos-de-implementacao","text":"Use essas ferramentas e m\u00e9todos para desidentifica\u00e7\u00e3o de dados sens\u00edveis em registros.","title":"Ferramentas e M\u00e9todos de Implementa\u00e7\u00e3o"},{"location":"observability/logs-privacy/#application-insights","text":"O Application Insights oferece intercepta\u00e7\u00e3o de telemetria em alguns dos SDKs, que pode ser feita implementando a interface ITelemetryProcessor . O ITelemetryProcessor processa as informa\u00e7\u00f5es de telemetria antes de serem enviadas para o Application Insights e pode ser \u00fatil em muitas situa\u00e7\u00f5es, como filtragem e modifica\u00e7\u00f5es. Abaixo est\u00e1 um exemplo de intercepta\u00e7\u00e3o de telemetria do tipo 'trace': using Microsoft.ApplicationInsights.DataContracts ; namespace Exemplo { using Microsoft.ApplicationInsights.Channel ; using Microsoft.ApplicationInsights.Extensibility ; internal class RedactTelemetryInitializer : ITelemetryInitializer { public void Initialize ( ITelemetry telemetry ) { var requestTelemetry = telemetry as TraceTelemetry ; if ( requestTelemetry == null ) return ; # redija os e - mails do par\u00e2metro de mensagem requestTelemetry . Message = Regex . Replace ( requestTelemetry . Message , @\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\" , \"[e-mail removido]\" ); } } }","title":"Application Insights"},{"location":"observability/logs-privacy/#elastic-stack","text":"O Elastic Stack (anteriormente conhecido como \"ELK stack\") permite a intercepta\u00e7\u00e3o de registros por meio dos plugins de filtro do Logstash. O uso de alguns dos plugins existentes, como 'mutate', 'alter' e 'prune', pode ser suficiente para a maioria dos casos de desidentifica\u00e7\u00e3o e oculta\u00e7\u00e3o de IIPs. Para casos de uso mais robustos e personalizados, pode-se usar um plugin 'ruby', executando c\u00f3digo Ruby arbitr\u00e1rio. Os plugins de filtro tamb\u00e9m est\u00e3o dispon\u00edveis em algumas alternativas ao Logstash, como Fluentd e Fluent Bit .","title":"Elastic Stack"},{"location":"observability/logs-privacy/#presidio","text":"Presidio oferece API de prote\u00e7\u00e3o e anonimiza\u00e7\u00e3o de dados. Ele fornece m\u00f3dulos de identifica\u00e7\u00e3o e anonimiza\u00e7\u00e3o r\u00e1pidos para entidades privadas em texto. O Presidio permite o uso de reconhecedores de IIPs predefinidos ou personalizados, aproveitando o Reconhecimento de Entidades Nomeadas, express\u00f5es regulares, l\u00f3gica baseada em regras e soma de verifica\u00e7\u00e3o com contexto relevante em v\u00e1rios idiomas. Ele pode ser usado junto com os m\u00e9todos de intercepta\u00e7\u00e3o de logs mencionados acima para ajudar a garantir que os dados sens\u00edveis sejam gerenciados e governados adequadamente. O Presidio \u00e9 contido para uma API HTTP REST e tamb\u00e9m pode ser instalado como um pacote Python, para ser chamado a partir de c\u00f3digo Python. Em vez de lidar com a anonimiza\u00e7\u00e3o no c\u00f3digo da aplica\u00e7\u00e3o, ambas as APIs podem ser usadas por meio de chamadas externas. O Elastic Stack, por exemplo, pode lidar com a oculta\u00e7\u00e3o de IIPs usando o filtro 'ruby' para chamar o Presidio na API HTTP REST ou chamando um script Python que consome o Presidio como um pacote: logstash.conf input { ... } filter { ruby { code => 'require \"open3\" message = event.get(\"message\") # Chama um script Python que aciona o analisador e anonimizador do Presidio e imprime o resultado. cmd = \"python /caminho/para/o/script/de/anonimiza\u00e7\u00e3o/do/presidio.py \\\" #{ message } \\\" \" # Obt\u00e9m a sa\u00edda padr\u00e3o do script. stdin, stdout, stderr = Open3.popen3(cmd) # Substitui a mensagem pelo texto anonimizado. event.set(\"message\", stdout.read) filter_matched(event)' } } output { ... }","title":"Presidio"},{"location":"observability/microservices/","text":"Observabilidade em Microservices Microservices \u00e9 uma arquitetura de software muito popular, onde a aplica\u00e7\u00e3o \u00e9 organizada como uma cole\u00e7\u00e3o de servi\u00e7os fracamente acoplados. Alguns desses servi\u00e7os podem ser escritos em diferentes linguagens por equipes diferentes. Motiva\u00e7\u00f5es Precisamos considerar casos especiais ao criar uma arquitetura de microservices do ponto de vista da observabilidade. Queremos capturar as intera\u00e7\u00f5es ao fazer solicita\u00e7\u00f5es entre esses microservices e correlacion\u00e1-las. Imagine que temos um microservice que acessa um banco de dados para recuperar alguns dados como parte de uma solicita\u00e7\u00e3o. Este microservice ser\u00e1 chamado por outra pessoa como parte de uma solicita\u00e7\u00e3o HTTP de entrada ou de um processo interno em execu\u00e7\u00e3o. O que acontece se ocorrer um problema durante a recupera\u00e7\u00e3o dos dados (ou a atualiza\u00e7\u00e3o dos dados)? Como podemos associar, ou correlacionar, que essa chamada espec\u00edfica falhou no microservice de destino? Este \u00e9 um problema comum. Ao chamar outros microservices, dependendo da pilha de tecnologia que usamos, podemos inadvertidamente ocultar erros e exce\u00e7\u00f5es que podem ocorrer do outro lado. Se estivermos usando uma interface REST simples, o outro microservice pode retornar um c\u00f3digo de status HTTP 500 e n\u00e3o temos ideia do que aconteceu dentro desse microservice. Mais importante, n\u00e3o temos nenhuma maneira de associar nosso Correlation Id ao que acontece dentro desse microservice. Portanto, \u00e9 t\u00e3o importante ter um plano em vigor para poder estender seus esfor\u00e7os de rastreamento e monitoramento, especialmente ao usar uma arquitetura de microservices. Como estender suas informa\u00e7\u00f5es de rastreamento entre microservices O cons\u00f3rcio W3C est\u00e1 trabalhando em uma defini\u00e7\u00e3o de Trace Context que pode ser aplicada ao usar o HTTP como protocolo em uma arquitetura de microservices. Mas vamos explicar como podemos implementar essa funcionalidade em nosso software. A ideia principal por tr\u00e1s disso \u00e9 propagar as informa\u00e7\u00f5es de correla\u00e7\u00e3o entre solicita\u00e7\u00f5es HTTP para que outros peda\u00e7os de software possam ler essas informa\u00e7\u00f5es e correlacionar corretamente a telemetria entre os microservices. A maneira de propagar essas informa\u00e7\u00f5es \u00e9 usar cabe\u00e7alhos HTTP para o Correlation Id, Correlation Id pai, etc. Quando voc\u00ea est\u00e1 no escopo de uma solicita\u00e7\u00e3o HTTP, seu sistema de rastreamento j\u00e1 deve ter criado quatro propriedades que voc\u00ea pode usar para enviar entre seus microservices. RequestId:0HLQV2BC3VP2T:00000001, SpanId:da13aa3c6fd9c146, TraceId:f11a03e3f078414fa7c0a0ce568c8b5c, ParentId:5076c17d0a604244 Este \u00e9 um exemplo das quatro propriedades que voc\u00ea pode encontrar, que identificam a solicita\u00e7\u00e3o atual. RequestId \u00e9 o ID \u00fanico que representa a solicita\u00e7\u00e3o HTTP atual. SpanId \u00e9 o span automaticamente gerado por padr\u00e3o. Voc\u00ea pode ter mais de um Span que abrange funcionalidades diferentes dentro do seu software. TraceId representa o ID para o registro de log atual. ParentId \u00e9 o ID do span pai, que em alguns casos pode ser o mesmo ou algo diferente. Exemplo Agora vamos explorar um exemplo com 3 microservices que se chamam em sequ\u00eancia. Esta imagem \u00e9 um resumo do que \u00e9 necess\u00e1rio em cada microservice para propagar o trace-id de A para C. O chamador raiz \u00e9 A e \u00e9 por isso que n\u00e3o possui um parent-id, apenas possui um novo trace-id. Em seguida, A chama B usando HTTP. Para propagar as informa\u00e7\u00f5es de correla\u00e7\u00e3o como parte da solicita\u00e7\u00e3o, estamos usando dois novos cabe\u00e7alhos com base na especifica\u00e7\u00e3o de Correla\u00e7\u00e3o da W3C, trace-id e parent-id. Neste exemplo, porque A \u00e9 o chamador raiz, A s\u00f3 envia seu pr\u00f3prio trace-id para o microservice B. Quando o microservice B recebe a solicita\u00e7\u00e3o HTTP de entrada, ele verifica o conte\u00fado desses dois cabe\u00e7alhos. Ele l\u00ea o conte\u00fado do cabe\u00e7alho trace-id e define seu pr\u00f3prio parent-id para esse trace-id (conforme mostrado no ret\u00e2ngulo verde dentro de B). Al\u00e9m disso, ele cria um novo trace-id para sinalizar que \u00e9 um novo escopo para a telemetria. Durante a execu\u00e7\u00e3o do microservice B, ele tamb\u00e9m chama o microservice C e repete o padr\u00e3o. Como parte da solicita\u00e7\u00e3o, ele inclui os dois cabe\u00e7alhos e propaga o trace-id e o parent-id tamb\u00e9m. Finalmente, o microservice C l\u00ea o valor do trace-id de entrada e define como seu pr\u00f3prio parent-id, mas tamb\u00e9m cria um novo trace-id que usar\u00e1 para enviar telemetria sobre suas pr\u00f3prias opera\u00e7\u00f5es. Resumo V\u00e1rios produtos de tecnologia de monitoramento de aplicativos (APM) j\u00e1 suportam a maior parte dessa Propaga\u00e7\u00e3o de Correla\u00e7\u00e3o. O mais popular \u00e9 o OpenZipkin/B3-Propagation . A W3C j\u00e1 prop\u00f4s uma recomenda\u00e7\u00e3o para o W3C Trace Context , onde voc\u00ea pode ver quais SDKs e estruturas j\u00e1 suportam essa funcionalidade. \u00c9 importante implementar corretamente a propaga\u00e7\u00e3o, especialmente quando diferentes equipes usam pilhas de tecnologia diferentes no mesmo projeto. Considere o uso do OpenTelemetry , pois ele implementa a propaga\u00e7\u00e3o de contexto de c\u00f3digo aberto entre plataformas para transa\u00e7\u00f5es distribu\u00eddas de ponta a ponta em componentes heterog\u00eaneos \"out of the box\". Ele cuida automaticamente da cria\u00e7\u00e3o e gerenciamento do objeto Trace Context entre uma pilha completa de microservices implementados em diferentes tecnologias.","title":"Observabilidade em Microservices"},{"location":"observability/microservices/#observabilidade-em-microservices","text":"Microservices \u00e9 uma arquitetura de software muito popular, onde a aplica\u00e7\u00e3o \u00e9 organizada como uma cole\u00e7\u00e3o de servi\u00e7os fracamente acoplados. Alguns desses servi\u00e7os podem ser escritos em diferentes linguagens por equipes diferentes.","title":"Observabilidade em Microservices"},{"location":"observability/microservices/#motivacoes","text":"Precisamos considerar casos especiais ao criar uma arquitetura de microservices do ponto de vista da observabilidade. Queremos capturar as intera\u00e7\u00f5es ao fazer solicita\u00e7\u00f5es entre esses microservices e correlacion\u00e1-las. Imagine que temos um microservice que acessa um banco de dados para recuperar alguns dados como parte de uma solicita\u00e7\u00e3o. Este microservice ser\u00e1 chamado por outra pessoa como parte de uma solicita\u00e7\u00e3o HTTP de entrada ou de um processo interno em execu\u00e7\u00e3o. O que acontece se ocorrer um problema durante a recupera\u00e7\u00e3o dos dados (ou a atualiza\u00e7\u00e3o dos dados)? Como podemos associar, ou correlacionar, que essa chamada espec\u00edfica falhou no microservice de destino? Este \u00e9 um problema comum. Ao chamar outros microservices, dependendo da pilha de tecnologia que usamos, podemos inadvertidamente ocultar erros e exce\u00e7\u00f5es que podem ocorrer do outro lado. Se estivermos usando uma interface REST simples, o outro microservice pode retornar um c\u00f3digo de status HTTP 500 e n\u00e3o temos ideia do que aconteceu dentro desse microservice. Mais importante, n\u00e3o temos nenhuma maneira de associar nosso Correlation Id ao que acontece dentro desse microservice. Portanto, \u00e9 t\u00e3o importante ter um plano em vigor para poder estender seus esfor\u00e7os de rastreamento e monitoramento, especialmente ao usar uma arquitetura de microservices.","title":"Motiva\u00e7\u00f5es"},{"location":"observability/microservices/#como-estender-suas-informacoes-de-rastreamento-entre-microservices","text":"O cons\u00f3rcio W3C est\u00e1 trabalhando em uma defini\u00e7\u00e3o de Trace Context que pode ser aplicada ao usar o HTTP como protocolo em uma arquitetura de microservices. Mas vamos explicar como podemos implementar essa funcionalidade em nosso software. A ideia principal por tr\u00e1s disso \u00e9 propagar as informa\u00e7\u00f5es de correla\u00e7\u00e3o entre solicita\u00e7\u00f5es HTTP para que outros peda\u00e7os de software possam ler essas informa\u00e7\u00f5es e correlacionar corretamente a telemetria entre os microservices. A maneira de propagar essas informa\u00e7\u00f5es \u00e9 usar cabe\u00e7alhos HTTP para o Correlation Id, Correlation Id pai, etc. Quando voc\u00ea est\u00e1 no escopo de uma solicita\u00e7\u00e3o HTTP, seu sistema de rastreamento j\u00e1 deve ter criado quatro propriedades que voc\u00ea pode usar para enviar entre seus microservices. RequestId:0HLQV2BC3VP2T:00000001, SpanId:da13aa3c6fd9c146, TraceId:f11a03e3f078414fa7c0a0ce568c8b5c, ParentId:5076c17d0a604244 Este \u00e9 um exemplo das quatro propriedades que voc\u00ea pode encontrar, que identificam a solicita\u00e7\u00e3o atual. RequestId \u00e9 o ID \u00fanico que representa a solicita\u00e7\u00e3o HTTP atual. SpanId \u00e9 o span automaticamente gerado por padr\u00e3o. Voc\u00ea pode ter mais de um Span que abrange funcionalidades diferentes dentro do seu software. TraceId representa o ID para o registro de log atual. ParentId \u00e9 o ID do span pai, que em alguns casos pode ser o mesmo ou algo diferente.","title":"Como estender suas informa\u00e7\u00f5es de rastreamento entre microservices"},{"location":"observability/microservices/#exemplo","text":"Agora vamos explorar um exemplo com 3 microservices que se chamam em sequ\u00eancia. Esta imagem \u00e9 um resumo do que \u00e9 necess\u00e1rio em cada microservice para propagar o trace-id de A para C. O chamador raiz \u00e9 A e \u00e9 por isso que n\u00e3o possui um parent-id, apenas possui um novo trace-id. Em seguida, A chama B usando HTTP. Para propagar as informa\u00e7\u00f5es de correla\u00e7\u00e3o como parte da solicita\u00e7\u00e3o, estamos usando dois novos cabe\u00e7alhos com base na especifica\u00e7\u00e3o de Correla\u00e7\u00e3o da W3C, trace-id e parent-id. Neste exemplo, porque A \u00e9 o chamador raiz, A s\u00f3 envia seu pr\u00f3prio trace-id para o microservice B. Quando o microservice B recebe a solicita\u00e7\u00e3o HTTP de entrada, ele verifica o conte\u00fado desses dois cabe\u00e7alhos. Ele l\u00ea o conte\u00fado do cabe\u00e7alho trace-id e define seu pr\u00f3prio parent-id para esse trace-id (conforme mostrado no ret\u00e2ngulo verde dentro de B). Al\u00e9m disso, ele cria um novo trace-id para sinalizar que \u00e9 um novo escopo para a telemetria. Durante a execu\u00e7\u00e3o do microservice B, ele tamb\u00e9m chama o microservice C e repete o padr\u00e3o. Como parte da solicita\u00e7\u00e3o, ele inclui os dois cabe\u00e7alhos e propaga o trace-id e o parent-id tamb\u00e9m. Finalmente, o microservice C l\u00ea o valor do trace-id de entrada e define como seu pr\u00f3prio parent-id, mas tamb\u00e9m cria um novo trace-id que usar\u00e1 para enviar telemetria sobre suas pr\u00f3prias opera\u00e7\u00f5es.","title":"Exemplo"},{"location":"observability/microservices/#resumo","text":"V\u00e1rios produtos de tecnologia de monitoramento de aplicativos (APM) j\u00e1 suportam a maior parte dessa Propaga\u00e7\u00e3o de Correla\u00e7\u00e3o. O mais popular \u00e9 o OpenZipkin/B3-Propagation . A W3C j\u00e1 prop\u00f4s uma recomenda\u00e7\u00e3o para o W3C Trace Context , onde voc\u00ea pode ver quais SDKs e estruturas j\u00e1 suportam essa funcionalidade. \u00c9 importante implementar corretamente a propaga\u00e7\u00e3o, especialmente quando diferentes equipes usam pilhas de tecnologia diferentes no mesmo projeto. Considere o uso do OpenTelemetry , pois ele implementa a propaga\u00e7\u00e3o de contexto de c\u00f3digo aberto entre plataformas para transa\u00e7\u00f5es distribu\u00eddas de ponta a ponta em componentes heterog\u00eaneos \"out of the box\". Ele cuida automaticamente da cria\u00e7\u00e3o e gerenciamento do objeto Trace Context entre uma pilha completa de microservices implementados em diferentes tecnologias.","title":"Resumo"},{"location":"observability/ml-observability/","text":"Observabilidade em Machine Learning O processo de desenvolvimento de sistemas de software com componentes de aprendizado de m\u00e1quina \u00e9 mais complexo do que o software tradicional. Precisamos monitorar mudan\u00e7as e varia\u00e7\u00f5es em tr\u00eas dimens\u00f5es: o c\u00f3digo, o modelo e os dados. Podemos distinguir duas etapas na vida de tal sistema: experimenta\u00e7\u00e3o e produ\u00e7\u00e3o, que requerem abordagens diferentes para observabilidade, como discutido abaixo: Experimenta\u00e7\u00e3o e ajuste do modelo A experimenta\u00e7\u00e3o \u00e9 um processo de encontrar um modelo de aprendizado de m\u00e1quina adequado e seus par\u00e2metros por meio do treinamento e avalia\u00e7\u00e3o desses modelos com um ou mais conjuntos de dados. Ao desenvolver e ajustar modelos de aprendizado de m\u00e1quina, os cientistas de dados est\u00e3o interessados em observar e comparar m\u00e9tricas de desempenho selecionadas para v\u00e1rios par\u00e2metros do modelo. Eles tamb\u00e9m precisam de uma maneira confi\u00e1vel de reproduzir um processo de treinamento, de modo que um determinado conjunto de dados e par\u00e2metros produza os mesmos modelos. Existem muitas solu\u00e7\u00f5es dispon\u00edveis para avalia\u00e7\u00e3o de m\u00e9tricas de modelo, tanto de c\u00f3digo aberto (como o MLFlow) quanto propriet\u00e1rias (como o Azure Machine Learning Service), e algumas servem para diferentes prop\u00f3sitos. Para capturar m\u00e9tricas de modelo, existem, entre outras, as seguintes op\u00e7\u00f5es dispon\u00edveis: Azure Machine Learning Service SDK O Azure Machine Learning Service fornece um SDK para Python, R e C# para capturar suas m\u00e9tricas de avalia\u00e7\u00e3o em um Experimento do Azure Machine Learning service (AML). Os experimentos s\u00e3o visualizados no painel do AML. A reprodutibilidade \u00e9 alcan\u00e7ada armazenando o c\u00f3digo ou instant\u00e2neo do notebook juntamente com a m\u00e9trica visualizada. Voc\u00ea pode criar Conjuntos de Dados versionados dentro do servi\u00e7o Azure Machine Learning. MLFlow (para Databricks) O MLFlow \u00e9 uma estrutura de c\u00f3digo aberto e pode ser hospedado no Azure Databricks como seu servidor de rastreamento remoto (atualmente \u00e9 a \u00fanica solu\u00e7\u00e3o que oferece integra\u00e7\u00e3o de primeira parte com o Databricks). Voc\u00ea pode usar o componente de rastreamento do SDK do MLFlow para capturar suas m\u00e9tricas de avalia\u00e7\u00e3o ou qualquer par\u00e2metro que desejar e acompanh\u00e1-lo no quadro de experimenta\u00e7\u00e3o no Azure Databricks. O c\u00f3digo-fonte e a vers\u00e3o do conjunto de dados tamb\u00e9m s\u00e3o salvos com o instant\u00e2neo do log para fornecer a reprodutibilidade. TensorBoard O TensorBoard \u00e9 uma ferramenta popular entre os cientistas de dados para visualizar m\u00e9tricas espec\u00edficas de execu\u00e7\u00f5es de Aprendizado Profundo, especialmente de execu\u00e7\u00f5es TensorFlow. O TensorBoard n\u00e3o \u00e9 uma ferramenta de MLOps como o AML/MLFlow e, portanto, n\u00e3o oferece capacidades extensas de registro. Ele \u00e9 projetado para ser transit\u00f3rio; portanto, pode ser usado como complemento a uma ferramenta de MLOps de ponta a ponta como o AML, mas n\u00e3o como uma ferramenta de MLOps completa. Application Insights O Application Insights pode ser usado como um sink alternativo para capturar m\u00e9tricas de modelo e, portanto, pode oferecer op\u00e7\u00f5es mais extensas, pois as m\u00e9tricas podem ser transferidas para, por exemplo, um painel do PowerBI. Tamb\u00e9m permite a consulta de logs. No entanto, essa solu\u00e7\u00e3o significa que um aplicativo personalizado precisa ser desenvolvido para enviar logs para o AppInsights (usando, por exemplo, o OpenCensus Python SDK), o que implicaria esfor\u00e7o extra na cria\u00e7\u00e3o/manuten\u00e7\u00e3o de c\u00f3digo personalizado. Uma compara\u00e7\u00e3o detalhada das quatro ferramentas pode ser encontrada da seguinte forma: Azure ML MLFlow TensorBoard Application Insights Suporte a m\u00e9tricas Valores, imagens, matrizes, logs Valores, imagens, matrizes e gr\u00e1ficos como arquivos M\u00e9tricas relevantes para a pesquisa em DL Valores, imagens, matrizes, logs Personaliz\u00e1vel B\u00e1sico B\u00e1sico Muito b\u00e1sico Alto M\u00e9tricas acess\u00edveis Portal AML, SDK AML Interface do MLFlow, API de servi\u00e7o de rastreamento Interface do Tensorboard, objeto de hist\u00f3rico Application Insights | Logs acess\u00edveis | Logs cont\u00ednuos gravados em arquivos .txt no armazenamento de blob, acess\u00edveis via blob ou portal AML. N\u00e3o \u00e9 poss\u00edvel consultar | Logs cont\u00ednuos n\u00e3o s\u00e3o armazenados | Logs cont\u00ednuos n\u00e3o s\u00e3o armazenados | Application Insights no portal Azure. Consult\u00e1vel com KQL | Facilidade de uso e configura\u00e7\u00e3o | Muito direto, apenas um portal | Mais partes m\u00f3veis devido ao servidor de rastreamento remoto | Um pouco de sobrecarga de processo. Tamb\u00e9m depende do framework de ML | Mais partes m\u00f3veis, j\u00e1 que um aplicativo personalizado precisa ser mantido | Compartilhamento | Entre pessoas com acesso ao espa\u00e7o de trabalho AML | Entre pessoas com acesso ao servidor de rastreamento remoto | Entre pessoas com acesso ao mesmo diret\u00f3rio | Entre pessoas com acesso ao AppInsights Modelo em produ\u00e7\u00e3o O modelo treinado pode ser implantado em produ\u00e7\u00e3o como um cont\u00eainer. O Azure Machine Learning service fornece um SDK para implantar modelos como Inst\u00e2ncia de Cont\u00eainer do Azure e publica um ponto de extremidade REST. Voc\u00ea pode monitor\u00e1-lo usando m\u00e9todos de observa\u00e7\u00e3o de microsservi\u00e7os (para mais detalhes, consulte a se\u00e7\u00e3o Receitas ). O MLFlow \u00e9 uma maneira alternativa de implantar modelos de aprendizado de m\u00e1quina como um servi\u00e7o. Treinamento e Retreinamento Para re-treinar automaticamente o modelo, voc\u00ea pode usar Pipelines do AML ou Azure Databricks. Ao re-treinar com Pipelines do AML, voc\u00ea pode monitorar informa\u00e7\u00f5es de cada execu\u00e7\u00e3o, incluindo a sa\u00edda, logs e v\u00e1rias m\u00e9tricas no painel de experimentos do Azure, ou extrair manualmente usando o SDK do AML. Desempenho do modelo ao longo do tempo: desvio de dados Retreinamos modelos de aprendizado de m\u00e1quina para melhorar seu desempenho e torn\u00e1-los mais alinhados com os dados que mudam com o tempo. No entanto, em alguns casos, o desempenho do modelo pode degradar. Isso pode acontecer caso os dados mudem drasticamente e n\u00e3o apresentem mais os padr\u00f5es que observamos durante o desenvolvimento do modelo. Esse efeito \u00e9 chamado de desvio de dados. O Azure Machine Learning Service possui uma funcionalidade de visualiza\u00e7\u00e3o e relat\u00f3rio de desvio de dados em vers\u00e3o de pr\u00e9via. Este artigo descreve isso em detalhes. Versionamento de dados \u00c9 uma pr\u00e1tica recomendada adicionar uma vers\u00e3o a todos os conjuntos de dados. Voc\u00ea pode criar um Conjunto de Dados do Azure ML versionado para esse fim ou version\u00e1-lo manualmente se estiver usando outros sistemas.","title":"Observabilidade em Machine Learning"},{"location":"observability/ml-observability/#observabilidade-em-machine-learning","text":"O processo de desenvolvimento de sistemas de software com componentes de aprendizado de m\u00e1quina \u00e9 mais complexo do que o software tradicional. Precisamos monitorar mudan\u00e7as e varia\u00e7\u00f5es em tr\u00eas dimens\u00f5es: o c\u00f3digo, o modelo e os dados. Podemos distinguir duas etapas na vida de tal sistema: experimenta\u00e7\u00e3o e produ\u00e7\u00e3o, que requerem abordagens diferentes para observabilidade, como discutido abaixo:","title":"Observabilidade em Machine Learning"},{"location":"observability/ml-observability/#experimentacao-e-ajuste-do-modelo","text":"A experimenta\u00e7\u00e3o \u00e9 um processo de encontrar um modelo de aprendizado de m\u00e1quina adequado e seus par\u00e2metros por meio do treinamento e avalia\u00e7\u00e3o desses modelos com um ou mais conjuntos de dados. Ao desenvolver e ajustar modelos de aprendizado de m\u00e1quina, os cientistas de dados est\u00e3o interessados em observar e comparar m\u00e9tricas de desempenho selecionadas para v\u00e1rios par\u00e2metros do modelo. Eles tamb\u00e9m precisam de uma maneira confi\u00e1vel de reproduzir um processo de treinamento, de modo que um determinado conjunto de dados e par\u00e2metros produza os mesmos modelos. Existem muitas solu\u00e7\u00f5es dispon\u00edveis para avalia\u00e7\u00e3o de m\u00e9tricas de modelo, tanto de c\u00f3digo aberto (como o MLFlow) quanto propriet\u00e1rias (como o Azure Machine Learning Service), e algumas servem para diferentes prop\u00f3sitos. Para capturar m\u00e9tricas de modelo, existem, entre outras, as seguintes op\u00e7\u00f5es dispon\u00edveis: Azure Machine Learning Service SDK O Azure Machine Learning Service fornece um SDK para Python, R e C# para capturar suas m\u00e9tricas de avalia\u00e7\u00e3o em um Experimento do Azure Machine Learning service (AML). Os experimentos s\u00e3o visualizados no painel do AML. A reprodutibilidade \u00e9 alcan\u00e7ada armazenando o c\u00f3digo ou instant\u00e2neo do notebook juntamente com a m\u00e9trica visualizada. Voc\u00ea pode criar Conjuntos de Dados versionados dentro do servi\u00e7o Azure Machine Learning. MLFlow (para Databricks) O MLFlow \u00e9 uma estrutura de c\u00f3digo aberto e pode ser hospedado no Azure Databricks como seu servidor de rastreamento remoto (atualmente \u00e9 a \u00fanica solu\u00e7\u00e3o que oferece integra\u00e7\u00e3o de primeira parte com o Databricks). Voc\u00ea pode usar o componente de rastreamento do SDK do MLFlow para capturar suas m\u00e9tricas de avalia\u00e7\u00e3o ou qualquer par\u00e2metro que desejar e acompanh\u00e1-lo no quadro de experimenta\u00e7\u00e3o no Azure Databricks. O c\u00f3digo-fonte e a vers\u00e3o do conjunto de dados tamb\u00e9m s\u00e3o salvos com o instant\u00e2neo do log para fornecer a reprodutibilidade. TensorBoard O TensorBoard \u00e9 uma ferramenta popular entre os cientistas de dados para visualizar m\u00e9tricas espec\u00edficas de execu\u00e7\u00f5es de Aprendizado Profundo, especialmente de execu\u00e7\u00f5es TensorFlow. O TensorBoard n\u00e3o \u00e9 uma ferramenta de MLOps como o AML/MLFlow e, portanto, n\u00e3o oferece capacidades extensas de registro. Ele \u00e9 projetado para ser transit\u00f3rio; portanto, pode ser usado como complemento a uma ferramenta de MLOps de ponta a ponta como o AML, mas n\u00e3o como uma ferramenta de MLOps completa. Application Insights O Application Insights pode ser usado como um sink alternativo para capturar m\u00e9tricas de modelo e, portanto, pode oferecer op\u00e7\u00f5es mais extensas, pois as m\u00e9tricas podem ser transferidas para, por exemplo, um painel do PowerBI. Tamb\u00e9m permite a consulta de logs. No entanto, essa solu\u00e7\u00e3o significa que um aplicativo personalizado precisa ser desenvolvido para enviar logs para o AppInsights (usando, por exemplo, o OpenCensus Python SDK), o que implicaria esfor\u00e7o extra na cria\u00e7\u00e3o/manuten\u00e7\u00e3o de c\u00f3digo personalizado. Uma compara\u00e7\u00e3o detalhada das quatro ferramentas pode ser encontrada da seguinte forma: Azure ML MLFlow TensorBoard Application Insights Suporte a m\u00e9tricas Valores, imagens, matrizes, logs Valores, imagens, matrizes e gr\u00e1ficos como arquivos M\u00e9tricas relevantes para a pesquisa em DL Valores, imagens, matrizes, logs Personaliz\u00e1vel B\u00e1sico B\u00e1sico Muito b\u00e1sico Alto M\u00e9tricas acess\u00edveis Portal AML, SDK AML Interface do MLFlow, API de servi\u00e7o de rastreamento Interface do Tensorboard, objeto de hist\u00f3rico Application Insights | Logs acess\u00edveis | Logs cont\u00ednuos gravados em arquivos .txt no armazenamento de blob, acess\u00edveis via blob ou portal AML. N\u00e3o \u00e9 poss\u00edvel consultar | Logs cont\u00ednuos n\u00e3o s\u00e3o armazenados | Logs cont\u00ednuos n\u00e3o s\u00e3o armazenados | Application Insights no portal Azure. Consult\u00e1vel com KQL | Facilidade de uso e configura\u00e7\u00e3o | Muito direto, apenas um portal | Mais partes m\u00f3veis devido ao servidor de rastreamento remoto | Um pouco de sobrecarga de processo. Tamb\u00e9m depende do framework de ML | Mais partes m\u00f3veis, j\u00e1 que um aplicativo personalizado precisa ser mantido | Compartilhamento | Entre pessoas com acesso ao espa\u00e7o de trabalho AML | Entre pessoas com acesso ao servidor de rastreamento remoto | Entre pessoas com acesso ao mesmo diret\u00f3rio | Entre pessoas com acesso ao AppInsights","title":"Experimenta\u00e7\u00e3o e ajuste do modelo"},{"location":"observability/ml-observability/#modelo-em-producao","text":"O modelo treinado pode ser implantado em produ\u00e7\u00e3o como um cont\u00eainer. O Azure Machine Learning service fornece um SDK para implantar modelos como Inst\u00e2ncia de Cont\u00eainer do Azure e publica um ponto de extremidade REST. Voc\u00ea pode monitor\u00e1-lo usando m\u00e9todos de observa\u00e7\u00e3o de microsservi\u00e7os (para mais detalhes, consulte a se\u00e7\u00e3o Receitas ). O MLFlow \u00e9 uma maneira alternativa de implantar modelos de aprendizado de m\u00e1quina como um servi\u00e7o.","title":"Modelo em produ\u00e7\u00e3o"},{"location":"observability/ml-observability/#treinamento-e-retreinamento","text":"Para re-treinar automaticamente o modelo, voc\u00ea pode usar Pipelines do AML ou Azure Databricks. Ao re-treinar com Pipelines do AML, voc\u00ea pode monitorar informa\u00e7\u00f5es de cada execu\u00e7\u00e3o, incluindo a sa\u00edda, logs e v\u00e1rias m\u00e9tricas no painel de experimentos do Azure, ou extrair manualmente usando o SDK do AML.","title":"Treinamento e Retreinamento"},{"location":"observability/ml-observability/#desempenho-do-modelo-ao-longo-do-tempo-desvio-de-dados","text":"Retreinamos modelos de aprendizado de m\u00e1quina para melhorar seu desempenho e torn\u00e1-los mais alinhados com os dados que mudam com o tempo. No entanto, em alguns casos, o desempenho do modelo pode degradar. Isso pode acontecer caso os dados mudem drasticamente e n\u00e3o apresentem mais os padr\u00f5es que observamos durante o desenvolvimento do modelo. Esse efeito \u00e9 chamado de desvio de dados. O Azure Machine Learning Service possui uma funcionalidade de visualiza\u00e7\u00e3o e relat\u00f3rio de desvio de dados em vers\u00e3o de pr\u00e9via. Este artigo descreve isso em detalhes.","title":"Desempenho do modelo ao longo do tempo: desvio de dados"},{"location":"observability/ml-observability/#versionamento-de-dados","text":"\u00c9 uma pr\u00e1tica recomendada adicionar uma vers\u00e3o a todos os conjuntos de dados. Voc\u00ea pode criar um Conjunto de Dados do Azure ML versionado para esse fim ou version\u00e1-lo manualmente se estiver usando outros sistemas.","title":"Versionamento de dados"},{"location":"observability/observability-as-code/","text":"Observability as Code As much as possible, configuration and management of observability assets such as cloud resource provisioning, monitoring alerts and dashboards must be managed as code. Observability as Code is achieved using any one of Terraform / Ansible / ARM Templates Examples of Observability as Code Dashboards as Code - Monitoring Dashboards can be created as JSON or XML templates. This template is source control maintained and any changes to the dashboards can be reviewed. Automation can be built for enabling the dashboard. More about how to do this in Azure . Grafana dashboard can also be configured as code which eventually can be source-controlled to be used in automation and pipelines. Alerts as Code - Alerts can be created within Azure by using Terraform or ARM templates. Such alerts can be source-controlled and be deployed as part of pipelines (Azure DevOps pipelines, Jenkins, GitHub Actions etc.). Few references of how to do this are: Terraform Monitor Metric Alert . Alerts can also be created based on log analytics query and can be defined as code using Terraform Monitor Scheduled Query Rules Alert . Automating Log Analytics Queries - There are several use cases where automation of log analytics queries may be needed. Example, Automatic Report Generation, Running custom queries programmatically for analysis, debugging etc. For these use cases to work, log queries should be source-controlled and automation can be built using log analytics REST or azure cli . Why It makes configuration repeatable and automatable. It also avoids manual configuration of monitoring alerts and dashboards from scratch across environments. Configured dashboards help troubleshoot errors during integration and deployment (CI/CD) We can audit changes and roll them back if there are any issues. Identify actionable insights from the generated metrics data across all environments, not just production. Configuration and management of observability assets like alert threshold, duration, configuration values using IAC help us in avoiding configuration mistakes, errors or overlooks during deployment. When practicing observability as code, the changes can be reviewed by the team similar to other code contributions.","title":"Observability as Code"},{"location":"observability/observability-as-code/#observability-as-code","text":"As much as possible, configuration and management of observability assets such as cloud resource provisioning, monitoring alerts and dashboards must be managed as code. Observability as Code is achieved using any one of Terraform / Ansible / ARM Templates","title":"Observability as Code"},{"location":"observability/observability-as-code/#examples-of-observability-as-code","text":"Dashboards as Code - Monitoring Dashboards can be created as JSON or XML templates. This template is source control maintained and any changes to the dashboards can be reviewed. Automation can be built for enabling the dashboard. More about how to do this in Azure . Grafana dashboard can also be configured as code which eventually can be source-controlled to be used in automation and pipelines. Alerts as Code - Alerts can be created within Azure by using Terraform or ARM templates. Such alerts can be source-controlled and be deployed as part of pipelines (Azure DevOps pipelines, Jenkins, GitHub Actions etc.). Few references of how to do this are: Terraform Monitor Metric Alert . Alerts can also be created based on log analytics query and can be defined as code using Terraform Monitor Scheduled Query Rules Alert . Automating Log Analytics Queries - There are several use cases where automation of log analytics queries may be needed. Example, Automatic Report Generation, Running custom queries programmatically for analysis, debugging etc. For these use cases to work, log queries should be source-controlled and automation can be built using log analytics REST or azure cli .","title":"Examples of Observability as Code"},{"location":"observability/observability-as-code/#why","text":"It makes configuration repeatable and automatable. It also avoids manual configuration of monitoring alerts and dashboards from scratch across environments. Configured dashboards help troubleshoot errors during integration and deployment (CI/CD) We can audit changes and roll them back if there are any issues. Identify actionable insights from the generated metrics data across all environments, not just production. Configuration and management of observability assets like alert threshold, duration, configuration values using IAC help us in avoiding configuration mistakes, errors or overlooks during deployment. When practicing observability as code, the changes can be reviewed by the team similar to other code contributions.","title":"Why"},{"location":"observability/observability-databricks/","text":"Observability for Azure Databricks Overview Azure Databricks is an Apache Spark\u2013based analytics service that makes it easy to rapidly develop and deploy big data analytics. Monitoring and troubleshooting performance issues is critical when operating production Azure Databricks workloads. It is important to log adequate information from Azure Databricks so that it is helpful to monitor and troubleshoot performance issues. Spark is designed to run on a cluster - a cluster is a set of Virtual Machines (VMs). Spark can horizontally scale with bigger workloads needed more VMs. Azure Databricks can scale in and out as needed. Approaches to Observability Azure Diagnostic Logs Azure Diagnostic Logging is provided out-of-the-box by Azure Databricks, providing visibility into actions performed against DBFS, Clusters, Accounts, Jobs, Notebooks, SSH, Workspace, Secrets, SQL Permissions, and Instance Pools. These logs are enabled using Azure Portal or CLI and can be configured to be delivered to one of these Azure resources. Log Analytics Workspace Blob Storage Event Hub Cluster Event Logs Cluster Event logs provide a quick overview into important Cluster lifecycle events. The log are structured - Timestamp, Event Type and Details. Unfortunately, there is no native way to export logs to Log Analytics. Logs will have to be delivered to Log Analytics either using REST API or polled in the dbfs using Azure Functions. VM Performance Metrics (OMS) Log Analytics Agent provides insights into the performance counters from the Cluster VMs and helps to understand the Cluster Utilization patters. Leveraging Linux OMX Agent to onboard VMs into Log Analytics, helps provide insights into the VM metrics, performance, inventory and syslog metrics. It is important to note that Linux OMS Agent is not specific to Azure Databricks. Application Logging Of all the logs collected, this is perhaps the most important one. Spark Monitoring library collects metrics about the driver, executors, JVM, HDFS, cache shuffling, DAGs, and much more. This library provides helpful insights to fine-tune Spark jobs. It allows monitoring and tracing each layer within Spark workloads, including performance and resource usage on the host and JVM, as well as Spark metrics and application-level logging. The library also includes ready-made Grafana dashboards that is a great starting point for building Azure Databricks dashboard. Logs via REST API Azure Databricks also provides REST API support. If there's any specific log data that is required, this data can be collected using the REST API calls. NSG Flow Logs Network security group (NSG) flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through an NSG. Flow data is sent to Azure Storage accounts from where you can access it as well as export it to any visualization tool, SIEM, or IDS of your choice. This log information is not specific to NSG Flow logs. This data can be used to identify unknown or undesired traffic and monitor traffic levels and/or bandwidth consumption. This is possible only with VNET-injected workspaces. Platform Logs Platform logs can be used to review provisioning/de-provisioning operations. This can be used to review activity in Databricks managed resource group. It helps discover operations performed at subscription level (like provisioning of VM, Disk etc.) These logs can be enabled via Azure Monitor > Activity Logs and shipped to Log Analytics. Ganglia metrics Ganglia metrics is a Cluster Utilization UI and is available on the Azure Databricks. It is great for viewing live metrics of interactive clusters. Ganglia metrics is available by default and takes snapshot of usage every 15 minutes. Historical metrics are stored as .png files, making it impossible to analyze data.","title":"Observability for Azure Databricks"},{"location":"observability/observability-databricks/#observability-for-azure-databricks","text":"","title":"Observability for Azure Databricks"},{"location":"observability/observability-databricks/#overview","text":"Azure Databricks is an Apache Spark\u2013based analytics service that makes it easy to rapidly develop and deploy big data analytics. Monitoring and troubleshooting performance issues is critical when operating production Azure Databricks workloads. It is important to log adequate information from Azure Databricks so that it is helpful to monitor and troubleshoot performance issues. Spark is designed to run on a cluster - a cluster is a set of Virtual Machines (VMs). Spark can horizontally scale with bigger workloads needed more VMs. Azure Databricks can scale in and out as needed.","title":"Overview"},{"location":"observability/observability-databricks/#approaches-to-observability","text":"","title":"Approaches to Observability"},{"location":"observability/observability-databricks/#azure-diagnostic-logs","text":"Azure Diagnostic Logging is provided out-of-the-box by Azure Databricks, providing visibility into actions performed against DBFS, Clusters, Accounts, Jobs, Notebooks, SSH, Workspace, Secrets, SQL Permissions, and Instance Pools. These logs are enabled using Azure Portal or CLI and can be configured to be delivered to one of these Azure resources. Log Analytics Workspace Blob Storage Event Hub","title":"Azure Diagnostic Logs"},{"location":"observability/observability-databricks/#cluster-event-logs","text":"Cluster Event logs provide a quick overview into important Cluster lifecycle events. The log are structured - Timestamp, Event Type and Details. Unfortunately, there is no native way to export logs to Log Analytics. Logs will have to be delivered to Log Analytics either using REST API or polled in the dbfs using Azure Functions.","title":"Cluster Event Logs"},{"location":"observability/observability-databricks/#vm-performance-metrics-oms","text":"Log Analytics Agent provides insights into the performance counters from the Cluster VMs and helps to understand the Cluster Utilization patters. Leveraging Linux OMX Agent to onboard VMs into Log Analytics, helps provide insights into the VM metrics, performance, inventory and syslog metrics. It is important to note that Linux OMS Agent is not specific to Azure Databricks.","title":"VM Performance Metrics (OMS)"},{"location":"observability/observability-databricks/#application-logging","text":"Of all the logs collected, this is perhaps the most important one. Spark Monitoring library collects metrics about the driver, executors, JVM, HDFS, cache shuffling, DAGs, and much more. This library provides helpful insights to fine-tune Spark jobs. It allows monitoring and tracing each layer within Spark workloads, including performance and resource usage on the host and JVM, as well as Spark metrics and application-level logging. The library also includes ready-made Grafana dashboards that is a great starting point for building Azure Databricks dashboard.","title":"Application Logging"},{"location":"observability/observability-databricks/#logs-via-rest-api","text":"Azure Databricks also provides REST API support. If there's any specific log data that is required, this data can be collected using the REST API calls.","title":"Logs via REST API"},{"location":"observability/observability-databricks/#nsg-flow-logs","text":"Network security group (NSG) flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through an NSG. Flow data is sent to Azure Storage accounts from where you can access it as well as export it to any visualization tool, SIEM, or IDS of your choice. This log information is not specific to NSG Flow logs. This data can be used to identify unknown or undesired traffic and monitor traffic levels and/or bandwidth consumption. This is possible only with VNET-injected workspaces.","title":"NSG Flow Logs"},{"location":"observability/observability-databricks/#platform-logs","text":"Platform logs can be used to review provisioning/de-provisioning operations. This can be used to review activity in Databricks managed resource group. It helps discover operations performed at subscription level (like provisioning of VM, Disk etc.) These logs can be enabled via Azure Monitor > Activity Logs and shipped to Log Analytics.","title":"Platform Logs"},{"location":"observability/observability-databricks/#ganglia-metrics","text":"Ganglia metrics is a Cluster Utilization UI and is available on the Azure Databricks. It is great for viewing live metrics of interactive clusters. Ganglia metrics is available by default and takes snapshot of usage every 15 minutes. Historical metrics are stored as .png files, making it impossible to analyze data.","title":"Ganglia metrics"},{"location":"observability/observability-pipelines/","text":"Observability of CI/CD Pipelines With increasing complexity to delivery pipelines, it is very important to consider Observability in the context of build and release of applications. Benefits Having proper instrumentation during build time helps gain insights into the various stages of the build and release process. Helps developers understand where the pipeline performance bottlenecks are, based on the data collected. This helps in having data-driven conversations around identifying latency between jobs, performance issues, artifact upload/download times providing valuable insights into agents availability and capacity. Helps to identify trends in failures, thus allowing developers to quickly do root cause analysis. Helps to provide an organization-wide view of pipeline health to easily identify trends. Points to Consider It is important to identify the Key Performance Indicators (KPIs) for evaluating a successful CI/CD pipeline. Where needed, additional tracing can be added to better record KPI metrics. For example, adding pipeline build tags to identify a 'Release Candidate' vs. 'Non-Release Candidate' helps in evaluating the end-to-end release process timeline. Depending on the tooling used (Azure DevOps, Jenkins etc.,), basic reporting on the pipelines is available out-of-the-box. It is important to evaluate these reports against the KPIs to understand if a custom reporting solution for their pipelines is needed. If required, custom dashboards can be built using third-party tools like Grafana or Power BI Dashboards.","title":"Observability of CI/CD Pipelines"},{"location":"observability/observability-pipelines/#observability-of-cicd-pipelines","text":"With increasing complexity to delivery pipelines, it is very important to consider Observability in the context of build and release of applications.","title":"Observability of CI/CD Pipelines"},{"location":"observability/observability-pipelines/#benefits","text":"Having proper instrumentation during build time helps gain insights into the various stages of the build and release process. Helps developers understand where the pipeline performance bottlenecks are, based on the data collected. This helps in having data-driven conversations around identifying latency between jobs, performance issues, artifact upload/download times providing valuable insights into agents availability and capacity. Helps to identify trends in failures, thus allowing developers to quickly do root cause analysis. Helps to provide an organization-wide view of pipeline health to easily identify trends.","title":"Benefits"},{"location":"observability/observability-pipelines/#points-to-consider","text":"It is important to identify the Key Performance Indicators (KPIs) for evaluating a successful CI/CD pipeline. Where needed, additional tracing can be added to better record KPI metrics. For example, adding pipeline build tags to identify a 'Release Candidate' vs. 'Non-Release Candidate' helps in evaluating the end-to-end release process timeline. Depending on the tooling used (Azure DevOps, Jenkins etc.,), basic reporting on the pipelines is available out-of-the-box. It is important to evaluate these reports against the KPIs to understand if a custom reporting solution for their pipelines is needed. If required, custom dashboards can be built using third-party tools like Grafana or Power BI Dashboards.","title":"Points to Consider"},{"location":"observability/pitfalls/","text":"Things to Watch for when Building Observable Systems Observability as an afterthought One of the design goals when building a system should be to enable monitoring of the system. This helps planning and thinking application availability, logging and metrics at the time of design and development. Observability also acts as a great debugging tool providing developers a bird's eye view of the system. By leaving instrumentation and logging of metrics towards the end, the development teams lose valuable insights during development. Metric Fatigue It is recommended to collect and measure what you need and not what you can . Don't attempt to monitor everything. If the data is not actionable, it is useless and becomes noise. On the contrary, it is sometimes very difficult to forecast every possible scenario that could go wrong. There must be a balance between collecting what is needed vs. logging every single activity in the system. A general rule of thumb is to follow these principles rules that catch incidents must be simple, relevant and reliable any data that is collected but not aggregated or alerted on must be reviewed if it is still required. Context All data logged must contain rich context, which is useful for getting an overall view of the system and easy to trace back errors/failures during troubleshooting. While logging data, care must also be taken to avoid data silos. Personally Identifiable Information As a general rule, do not log any customer sensitive and Personal Identifiable Information (PII). Ensure any pertinent privacy regulations are followed regarding PII (Ex: GDPR etc.) Read more here on how to keep sensitive data out of logs.","title":"Things to Watch for when Building Observable Systems"},{"location":"observability/pitfalls/#things-to-watch-for-when-building-observable-systems","text":"","title":"Things to Watch for when Building Observable Systems"},{"location":"observability/pitfalls/#observability-as-an-afterthought","text":"One of the design goals when building a system should be to enable monitoring of the system. This helps planning and thinking application availability, logging and metrics at the time of design and development. Observability also acts as a great debugging tool providing developers a bird's eye view of the system. By leaving instrumentation and logging of metrics towards the end, the development teams lose valuable insights during development.","title":"Observability as an afterthought"},{"location":"observability/pitfalls/#metric-fatigue","text":"It is recommended to collect and measure what you need and not what you can . Don't attempt to monitor everything. If the data is not actionable, it is useless and becomes noise. On the contrary, it is sometimes very difficult to forecast every possible scenario that could go wrong. There must be a balance between collecting what is needed vs. logging every single activity in the system. A general rule of thumb is to follow these principles rules that catch incidents must be simple, relevant and reliable any data that is collected but not aggregated or alerted on must be reviewed if it is still required.","title":"Metric Fatigue"},{"location":"observability/pitfalls/#context","text":"All data logged must contain rich context, which is useful for getting an overall view of the system and easy to trace back errors/failures during troubleshooting. While logging data, care must also be taken to avoid data silos.","title":"Context"},{"location":"observability/pitfalls/#personally-identifiable-information","text":"As a general rule, do not log any customer sensitive and Personal Identifiable Information (PII). Ensure any pertinent privacy regulations are followed regarding PII (Ex: GDPR etc.) Read more here on how to keep sensitive data out of logs.","title":"Personally Identifiable Information"},{"location":"observability/profiling/","text":"Profiling Overview Profiling is a form of runtime analysis that measures various components of the runtime such as, memory allocation, garbage collection, threads and locks, call stacks, or frequency and duration of specific functions. It can be used to see which functions are the most costly in your binary, allowing you to focus your effort on removing the largest inefficiencies as quickly as possible. It can help you find deadlocks, memory leaks, or inefficient memory allocation, and help inform decisions around resource allocation (ie: CPU or RAM). How to Profile your Applications Profiling is somewhat language dependent, so start off by searching for \"profile $language\" (some common tools are listed below). Additionally, Linux Perf is a good fallback, since a lot of languages have bindings in C/C++. Profiling does incur some cost, as it requires inspecting the call stack, and sometimes pausing the application all together (ie: to trigger a full GC in Java). It is recommended to continuously profile your services, say for 10s every 10 minutes. Consider the cost when deciding on tuning these parameters. Different tools visualize profiles differently. Common CPU profiles might use a directed graph or a flame graph. Unfortunately, each profiler tool typically uses its own format for storing profiles, and comes with its own visualization. Specific tools (Java, Go, Python, Ruby, eBPF) Pyroscope continuous profiling out of the box. (Java and Go) Flame - profiling containers in Kubernetes (Java, Python, Go) Datadog Continuous profiler (Go) profefe , which builds pprof to provide continuous profiling (Java) Eclipse Memory Analyzer","title":"Profiling"},{"location":"observability/profiling/#profiling","text":"","title":"Profiling"},{"location":"observability/profiling/#overview","text":"Profiling is a form of runtime analysis that measures various components of the runtime such as, memory allocation, garbage collection, threads and locks, call stacks, or frequency and duration of specific functions. It can be used to see which functions are the most costly in your binary, allowing you to focus your effort on removing the largest inefficiencies as quickly as possible. It can help you find deadlocks, memory leaks, or inefficient memory allocation, and help inform decisions around resource allocation (ie: CPU or RAM).","title":"Overview"},{"location":"observability/profiling/#how-to-profile-your-applications","text":"Profiling is somewhat language dependent, so start off by searching for \"profile $language\" (some common tools are listed below). Additionally, Linux Perf is a good fallback, since a lot of languages have bindings in C/C++. Profiling does incur some cost, as it requires inspecting the call stack, and sometimes pausing the application all together (ie: to trigger a full GC in Java). It is recommended to continuously profile your services, say for 10s every 10 minutes. Consider the cost when deciding on tuning these parameters. Different tools visualize profiles differently. Common CPU profiles might use a directed graph or a flame graph. Unfortunately, each profiler tool typically uses its own format for storing profiles, and comes with its own visualization.","title":"How to Profile your Applications"},{"location":"observability/profiling/#specific-tools","text":"(Java, Go, Python, Ruby, eBPF) Pyroscope continuous profiling out of the box. (Java and Go) Flame - profiling containers in Kubernetes (Java, Python, Go) Datadog Continuous profiler (Go) profefe , which builds pprof to provide continuous profiling (Java) Eclipse Memory Analyzer","title":"Specific tools"},{"location":"observability/recipes-observability/","text":"Recipes Application Insights/ASP.NET GitHub Repo , Article . Application Insights/ASP.NET Core with distributed Trace Context propagation to Kafka GitHub Repo . Example: OpenTelemetry over a message oriented architecture in Java with Jaeger, Prometheus and Azure Monitor GitHub Repo Example: Setup Azure Monitor dashboards and alerts with Terraform GitHub Repo On-premises Application Insights On-premise Application Insights is a service that is compatible with Azure App Insights, but stores the data in an in-house database like PostgreSQL or object storage like Azurite . On-premises Application Insights is useful as a drop-in replacement for Azure Application Insights in scenarios where a solution must be cloud deployable but must also support on-premises disconnected deployment scenarios. On-premises Application Insights is also useful for testing telemetry integration. Issues related to telemetry can be hard to catch since often these integrations are excluded from unit-test or integration test flows due to it being non-trivial to use a live Azure Application Insights resource for testing, e.g. managing the lifetime of the resource, having to ignore old telemetry for assertions, if a new resource is used it can take a while for the telemetry to show up, etc. The On-premise Application Insights service can be used to make it easier to integrate with an Azure Application Insights compatible API endpoint during local development or continuous integration without having to spin up a resource in Azure. Additionally, the service simplifies integration testing of asynchronous workflows such as web workers since integration tests can now be written to assert against telemetry logged to the service, e.g. assert that no exceptions were logged, assert that some number of events of a specific type were logged within a certain time-frame, etc. Azure DevOps Pipelines Reporting with Power BI The Azure DevOps Pipelines Report contains a Power BI template for monitoring project, pipeline, and pipeline run data from an Azure DevOps (AzDO) organization. This dashboard recipe provides observability for AzDO pipelines by displaying various metrics (i.e. average runtime, run outcome statistics, etc.) in a table. Additionally, the second page of the template visualizes pipeline success and failure trends using Power BI charts. Documentation and setup information can be found in the project README. Python Logger class for Application Insights using OpenCensus This repository contains \"AppLogger\" class which is a python logger class for Application Insights using Opencensus. It also contains sample code that shows the usage of \"AppLogger\". GitHub Repo Java OpenTelemetry Examples This GitHub Repo contains a set of fully-functional, working examples of using the OpenTelemetry Java APIs and SDK.","title":"Recipes"},{"location":"observability/recipes-observability/#recipes","text":"","title":"Recipes"},{"location":"observability/recipes-observability/#application-insightsaspnet","text":"GitHub Repo , Article .","title":"Application Insights/ASP.NET"},{"location":"observability/recipes-observability/#application-insightsaspnet-core-with-distributed-trace-context-propagation-to-kafka","text":"GitHub Repo .","title":"Application Insights/ASP.NET Core with distributed Trace Context propagation to Kafka"},{"location":"observability/recipes-observability/#example-opentelemetry-over-a-message-oriented-architecture-in-java-with-jaeger-prometheus-and-azure-monitor","text":"GitHub Repo","title":"Example: OpenTelemetry over a message oriented architecture in Java with Jaeger, Prometheus and Azure Monitor"},{"location":"observability/recipes-observability/#example-setup-azure-monitor-dashboards-and-alerts-with-terraform","text":"GitHub Repo","title":"Example: Setup Azure Monitor dashboards and alerts with Terraform"},{"location":"observability/recipes-observability/#on-premises-application-insights","text":"On-premise Application Insights is a service that is compatible with Azure App Insights, but stores the data in an in-house database like PostgreSQL or object storage like Azurite . On-premises Application Insights is useful as a drop-in replacement for Azure Application Insights in scenarios where a solution must be cloud deployable but must also support on-premises disconnected deployment scenarios. On-premises Application Insights is also useful for testing telemetry integration. Issues related to telemetry can be hard to catch since often these integrations are excluded from unit-test or integration test flows due to it being non-trivial to use a live Azure Application Insights resource for testing, e.g. managing the lifetime of the resource, having to ignore old telemetry for assertions, if a new resource is used it can take a while for the telemetry to show up, etc. The On-premise Application Insights service can be used to make it easier to integrate with an Azure Application Insights compatible API endpoint during local development or continuous integration without having to spin up a resource in Azure. Additionally, the service simplifies integration testing of asynchronous workflows such as web workers since integration tests can now be written to assert against telemetry logged to the service, e.g. assert that no exceptions were logged, assert that some number of events of a specific type were logged within a certain time-frame, etc.","title":"On-premises Application Insights"},{"location":"observability/recipes-observability/#azure-devops-pipelines-reporting-with-power-bi","text":"The Azure DevOps Pipelines Report contains a Power BI template for monitoring project, pipeline, and pipeline run data from an Azure DevOps (AzDO) organization. This dashboard recipe provides observability for AzDO pipelines by displaying various metrics (i.e. average runtime, run outcome statistics, etc.) in a table. Additionally, the second page of the template visualizes pipeline success and failure trends using Power BI charts. Documentation and setup information can be found in the project README.","title":"Azure DevOps Pipelines Reporting with Power BI"},{"location":"observability/recipes-observability/#python-logger-class-for-application-insights-using-opencensus","text":"This repository contains \"AppLogger\" class which is a python logger class for Application Insights using Opencensus. It also contains sample code that shows the usage of \"AppLogger\". GitHub Repo","title":"Python Logger class for Application Insights using OpenCensus"},{"location":"observability/recipes-observability/#java-opentelemetry-examples","text":"This GitHub Repo contains a set of fully-functional, working examples of using the OpenTelemetry Java APIs and SDK.","title":"Java OpenTelemetry Examples"},{"location":"observability/pillars/dashboard/","text":"Dashboard Overview Dashboard is a form of data visualization that provides \"at a glance\" view of Key Performance Indicators(KPIs) of observable system. Dashboard connects multiple data sources allowing creation of visual representation of data insights which otherwise are difficult to understand. Dashboard can be used to: show trends identify patterns(user, usage, search etc) measure efficiency easily identify data outliers and correlations view health state or performance of the system give an outlook of the KPI that is important to a business/process Best Practices Common questions to ask yourself when building dashboard would be: Where did my user spend most of their time at? What is my user searching? How do I better help my team with alerts and troubleshooting? Is my system healthy for the past one day/week/month/quarter? Here are principles to consider when building dashboards: Separate a dashboard in multiple sections for simplicity. Adding page jump or anchor(#section) is also a plus if applicable. Add multiple and simple charts. Build simple chart, have more of them rather than a complicated all in one chart. Identify goals or KPI measurement. Identifying goals or KPI helps in defining what needs to be achieved. Here are some examples - server downtime, mean time to address error, service level agreement. Ask questions that can help reach the defined goal or KPI. This may sound counter-intuitive, the more questions asked while constructing dashboard the better the outcome will be. Questions like location, internet service provider, time of day the users make requests to server would be a good start. Validate the questions. This is often done with stakeholders, sponsors, leads or project managers. Observe the dashboard that is built. Is the data reflecting what the stakeholders set out to answer? Always remember this process takes time. Building dashboard is easy, building an observable dashboard to show pattern is hard. Recommended Tools Azure Monitor Workbooks - Supporting markdown, Azure Workbooks is tightly integrated with Azure services making this highly customizable without extra tool. Create dashboard using log query - Dashboard can be created using log query on Log Analytics data. Building dashboards using Application Insights - Dashboards can be created using Application Insights as well. Power Bi - Power Bi is one of the easier tools to create dashboards from data sources and reports. Grafana - Getting started with Grafana. Grafana is a popular open source tool for dashboarding and visualization. Azure Monitor as Grafana data source - This provides a step by step integration of Azure Monitor to Grafana. Brief comparison of various tools Dashboard Samples and Recipes Azure Workbooks Performance analysis - A measurement on how the system performs. Workbook template available in gallery. Failure analysis - A report about system failure with details. Workbook template available in gallery. Application Performance Index( Apdex ) - This is a way to measure user satisfaction. It classifies performance into three zones based on a baseline performance threshold T. The template for Appdex is available in Azure Workbooks gallery as well. Application Insights User retention analysis User navigation patterns analysis User session analysis For other tools, these can be used as a reference to recreate if a template is not readily available. Grafana with Azure Monitor as Data Source Azure Kubernetes Service - Cluster & Namespace Metrics - Container Insights metrics for Kubernetes clusters. Cluster utilization, namespace utilization, Node cpu & memory, Node disk usage & disk io, node network & kubelet docker operation metrics Azure Kubernetes Service - Container Level & Pod Metrics - This contains Container level and Pod Metrics like CPU and Memory which are missing in the above dashboard. Summary In order to build an observable dashboard, the goal is to make use of collected metrics, logs, traces to give an insight on how the system performs, user behaves and identify patterns. There are a lot of tools and templates out there. Whichever the choice is, a good dashboard is always a dashboard that can help you answer questions about the system and user, keep track of the KPI and goal while also allowing informed business decisions to be made.","title":"Dashboard"},{"location":"observability/pillars/dashboard/#dashboard","text":"","title":"Dashboard"},{"location":"observability/pillars/dashboard/#overview","text":"Dashboard is a form of data visualization that provides \"at a glance\" view of Key Performance Indicators(KPIs) of observable system. Dashboard connects multiple data sources allowing creation of visual representation of data insights which otherwise are difficult to understand. Dashboard can be used to: show trends identify patterns(user, usage, search etc) measure efficiency easily identify data outliers and correlations view health state or performance of the system give an outlook of the KPI that is important to a business/process","title":"Overview"},{"location":"observability/pillars/dashboard/#best-practices","text":"Common questions to ask yourself when building dashboard would be: Where did my user spend most of their time at? What is my user searching? How do I better help my team with alerts and troubleshooting? Is my system healthy for the past one day/week/month/quarter? Here are principles to consider when building dashboards: Separate a dashboard in multiple sections for simplicity. Adding page jump or anchor(#section) is also a plus if applicable. Add multiple and simple charts. Build simple chart, have more of them rather than a complicated all in one chart. Identify goals or KPI measurement. Identifying goals or KPI helps in defining what needs to be achieved. Here are some examples - server downtime, mean time to address error, service level agreement. Ask questions that can help reach the defined goal or KPI. This may sound counter-intuitive, the more questions asked while constructing dashboard the better the outcome will be. Questions like location, internet service provider, time of day the users make requests to server would be a good start. Validate the questions. This is often done with stakeholders, sponsors, leads or project managers. Observe the dashboard that is built. Is the data reflecting what the stakeholders set out to answer? Always remember this process takes time. Building dashboard is easy, building an observable dashboard to show pattern is hard.","title":"Best Practices"},{"location":"observability/pillars/dashboard/#recommended-tools","text":"Azure Monitor Workbooks - Supporting markdown, Azure Workbooks is tightly integrated with Azure services making this highly customizable without extra tool. Create dashboard using log query - Dashboard can be created using log query on Log Analytics data. Building dashboards using Application Insights - Dashboards can be created using Application Insights as well. Power Bi - Power Bi is one of the easier tools to create dashboards from data sources and reports. Grafana - Getting started with Grafana. Grafana is a popular open source tool for dashboarding and visualization. Azure Monitor as Grafana data source - This provides a step by step integration of Azure Monitor to Grafana. Brief comparison of various tools","title":"Recommended Tools"},{"location":"observability/pillars/dashboard/#dashboard-samples-and-recipes","text":"","title":"Dashboard Samples and Recipes"},{"location":"observability/pillars/dashboard/#azure-workbooks","text":"Performance analysis - A measurement on how the system performs. Workbook template available in gallery. Failure analysis - A report about system failure with details. Workbook template available in gallery. Application Performance Index( Apdex ) - This is a way to measure user satisfaction. It classifies performance into three zones based on a baseline performance threshold T. The template for Appdex is available in Azure Workbooks gallery as well.","title":"Azure Workbooks"},{"location":"observability/pillars/dashboard/#application-insights","text":"User retention analysis User navigation patterns analysis User session analysis For other tools, these can be used as a reference to recreate if a template is not readily available.","title":"Application Insights"},{"location":"observability/pillars/dashboard/#grafana-with-azure-monitor-as-data-source","text":"Azure Kubernetes Service - Cluster & Namespace Metrics - Container Insights metrics for Kubernetes clusters. Cluster utilization, namespace utilization, Node cpu & memory, Node disk usage & disk io, node network & kubelet docker operation metrics Azure Kubernetes Service - Container Level & Pod Metrics - This contains Container level and Pod Metrics like CPU and Memory which are missing in the above dashboard.","title":"Grafana with Azure Monitor as Data Source"},{"location":"observability/pillars/dashboard/#summary","text":"In order to build an observable dashboard, the goal is to make use of collected metrics, logs, traces to give an insight on how the system performs, user behaves and identify patterns. There are a lot of tools and templates out there. Whichever the choice is, a good dashboard is always a dashboard that can help you answer questions about the system and user, keep track of the KPI and goal while also allowing informed business decisions to be made.","title":"Summary"},{"location":"observability/pillars/logging/","text":"Logging Overview Logs are discrete events with the goal of helping engineers identify problem area(s) during failures. Collection Methods When it comes to log collection methods, two of the standard techniques are a direct-write, or an agent-based approach. Directly written log events are handled in-process of the particular component, usually utilizing a provided library. Azure Monitor has direct send capabilities, but it's not recommended for serious/production use. This approach has some advantages: There is no external process to configure or monitor No log file management (rolling, expiring) to prevent out of disk space issues. The potential trade-offs of this approach: Potentially higher memory usage if the particular library is using a memory backed buffer. In the event of an extended service outage, log data may get dropped or truncated due to buffer constraints. Multiple component process logging will manage & emit logs individually, which can be more complex to manage for the outbound load. Agent-based log collection relies on an external process running on the host machine, with the particular component emitting log data stdout or file. Writing log data to stdout is the preferred practice when running applications within a container environment like Kubernetes. The container runtime redirects the output to files, which can then be processed by an agent. Azure Monitor , Grafana Loki Elastic's Logstash and Fluent Bit are examples of log shipping agents. There are several advantages when using an agent to collect & ship log files: Centralized configuration. Collecting multiple sources of data with a single process. Local pre-processing & filtering of log data before sending it to a central service. Utilizing disk space as a data buffer during a service disruption. This approach isn't without trade-offs: Required exclusive CPU & memory resources for the processing of log data. Persistent disk space for buffering. Best Practices Pay attention to logging levels. Logging too much will increase costs and decrease application throughput. Ensure logging configuration can be modified without code changes. Ideally, make it changeable without application restarts. If available, take advantage of logging levels per category allowing granular logging configuration. Check for log levels before logging, thus avoiding allocations and string manipulation costs. Ensure service versions are included in logs to be able to identify problematic releases. Log a raised exception only once. In your handlers, only catch expected exceptions that you can handle gracefully (even with a specific return code). If you want to log and rethrow, leave it to the top level exception handler. Do the minimal amount of cleanup work needed then throw to maintain the original stack trace. Don\u2019t log a warning or stack trace for expected exceptions (eg: properly expected 404, 403 HTTP statuses). Fine tune logging levels in production (>= warning for instance). During a new release the verbosity can be increased to facilitate bug identification. If using sampling, implement this at the service level rather than defining it in the logging system. This way we have control over what gets logged. An additional benefit is reduced number of roundtrips. Only include failures from health checks and non-business driven requests. Ensure a downstream system malfunction won't cause repetitive logs being stored. Don't reinvent the wheel, use existing tools to collect and analyze the data. Ensure personal identifiable information policies and restrictions are followed. Ensure errors and exceptions in dependent services are captured and logged. For example, if an application uses Redis cache, Service Bus or any other service, any errors/exceptions raised while accessing these services should be captured and logged. If there's sufficient log data, is there a need for instrumenting metrics? Logs vs Metrics vs Traces covers some high level guidance on when to utilize metric data and when to use log data. Both have a valuable part to play in creating observable systems. Having problems identifying what to log? At application startup : Unrecoverable errors from startup. Warnings if application still runnable, but not as expected (i.e. not providing blob connection string, thus resorting to local files. Another example is if there's a need to fail back to a secondary service or a known good state, because it didn\u2019t get an answer from a primary dependency.) Information about the service\u2019s state at startup (build #, configs loaded, etc.) Per incoming request : Basic information for each incoming request: the url (scrubbed of any personally identifying data, a.k.a. PII), any user/tenant/request dimensions, response code returned, request-to-response latency, payload size, record counts, etc. (whatever you need to learn something from the aggregate data) Warning for any unexpected exceptions, caught only at the top controller/interceptor and logged with or alongside the request info, with stack trace. Return a 500. This code doesn\u2019t know what happened. Per outgoing request : Basic information for each outgoing request: the url (scrubbed of any personally identifying data, a.k.a. PII), any user/tenant/request dimensions, response code returned, request-to-response latency, payload sizes, record counts returned, etc. Report perceived availability and latency of dependencies and including slicing/clustering data that could help with later analysis. Recommended Tools Azure Monitor - Umbrella of services including system metrics, log analytics and more. Grafana Loki - An open source log aggregation platform, built on the learnings from the Prometheus Community for highly efficient collection & storage of log data at scale. The Elastic Stack - An open source log analytics tech stack utilizing Logstash, Beats, Elastic search and Kibana. Grafana - Open source dashboard & visualization tool. Supports Log, Metrics and Distributed tracing data sources.","title":"Logging"},{"location":"observability/pillars/logging/#logging","text":"","title":"Logging"},{"location":"observability/pillars/logging/#overview","text":"Logs are discrete events with the goal of helping engineers identify problem area(s) during failures.","title":"Overview"},{"location":"observability/pillars/logging/#collection-methods","text":"When it comes to log collection methods, two of the standard techniques are a direct-write, or an agent-based approach. Directly written log events are handled in-process of the particular component, usually utilizing a provided library. Azure Monitor has direct send capabilities, but it's not recommended for serious/production use. This approach has some advantages: There is no external process to configure or monitor No log file management (rolling, expiring) to prevent out of disk space issues. The potential trade-offs of this approach: Potentially higher memory usage if the particular library is using a memory backed buffer. In the event of an extended service outage, log data may get dropped or truncated due to buffer constraints. Multiple component process logging will manage & emit logs individually, which can be more complex to manage for the outbound load. Agent-based log collection relies on an external process running on the host machine, with the particular component emitting log data stdout or file. Writing log data to stdout is the preferred practice when running applications within a container environment like Kubernetes. The container runtime redirects the output to files, which can then be processed by an agent. Azure Monitor , Grafana Loki Elastic's Logstash and Fluent Bit are examples of log shipping agents. There are several advantages when using an agent to collect & ship log files: Centralized configuration. Collecting multiple sources of data with a single process. Local pre-processing & filtering of log data before sending it to a central service. Utilizing disk space as a data buffer during a service disruption. This approach isn't without trade-offs: Required exclusive CPU & memory resources for the processing of log data. Persistent disk space for buffering.","title":"Collection Methods"},{"location":"observability/pillars/logging/#best-practices","text":"Pay attention to logging levels. Logging too much will increase costs and decrease application throughput. Ensure logging configuration can be modified without code changes. Ideally, make it changeable without application restarts. If available, take advantage of logging levels per category allowing granular logging configuration. Check for log levels before logging, thus avoiding allocations and string manipulation costs. Ensure service versions are included in logs to be able to identify problematic releases. Log a raised exception only once. In your handlers, only catch expected exceptions that you can handle gracefully (even with a specific return code). If you want to log and rethrow, leave it to the top level exception handler. Do the minimal amount of cleanup work needed then throw to maintain the original stack trace. Don\u2019t log a warning or stack trace for expected exceptions (eg: properly expected 404, 403 HTTP statuses). Fine tune logging levels in production (>= warning for instance). During a new release the verbosity can be increased to facilitate bug identification. If using sampling, implement this at the service level rather than defining it in the logging system. This way we have control over what gets logged. An additional benefit is reduced number of roundtrips. Only include failures from health checks and non-business driven requests. Ensure a downstream system malfunction won't cause repetitive logs being stored. Don't reinvent the wheel, use existing tools to collect and analyze the data. Ensure personal identifiable information policies and restrictions are followed. Ensure errors and exceptions in dependent services are captured and logged. For example, if an application uses Redis cache, Service Bus or any other service, any errors/exceptions raised while accessing these services should be captured and logged.","title":"Best Practices"},{"location":"observability/pillars/logging/#if-theres-sufficient-log-data-is-there-a-need-for-instrumenting-metrics","text":"Logs vs Metrics vs Traces covers some high level guidance on when to utilize metric data and when to use log data. Both have a valuable part to play in creating observable systems.","title":"If there's sufficient log data, is there a need for instrumenting metrics?"},{"location":"observability/pillars/logging/#having-problems-identifying-what-to-log","text":"At application startup : Unrecoverable errors from startup. Warnings if application still runnable, but not as expected (i.e. not providing blob connection string, thus resorting to local files. Another example is if there's a need to fail back to a secondary service or a known good state, because it didn\u2019t get an answer from a primary dependency.) Information about the service\u2019s state at startup (build #, configs loaded, etc.) Per incoming request : Basic information for each incoming request: the url (scrubbed of any personally identifying data, a.k.a. PII), any user/tenant/request dimensions, response code returned, request-to-response latency, payload size, record counts, etc. (whatever you need to learn something from the aggregate data) Warning for any unexpected exceptions, caught only at the top controller/interceptor and logged with or alongside the request info, with stack trace. Return a 500. This code doesn\u2019t know what happened. Per outgoing request : Basic information for each outgoing request: the url (scrubbed of any personally identifying data, a.k.a. PII), any user/tenant/request dimensions, response code returned, request-to-response latency, payload sizes, record counts returned, etc. Report perceived availability and latency of dependencies and including slicing/clustering data that could help with later analysis.","title":"Having problems identifying what to log?"},{"location":"observability/pillars/logging/#recommended-tools","text":"Azure Monitor - Umbrella of services including system metrics, log analytics and more. Grafana Loki - An open source log aggregation platform, built on the learnings from the Prometheus Community for highly efficient collection & storage of log data at scale. The Elastic Stack - An open source log analytics tech stack utilizing Logstash, Beats, Elastic search and Kibana. Grafana - Open source dashboard & visualization tool. Supports Log, Metrics and Distributed tracing data sources.","title":"Recommended Tools"},{"location":"observability/pillars/metrics/","text":"Metrics Overview Metrics provide a near real-time stream of data, informing operators and stakeholders about the functions the system is performing as well as its health. Unlike logging and tracing, metric data tends to be more efficient to transmit and store. Collection Methods Metric collection approaches fall into two broad categories: push metrics & pull metrics. Push metrics means that the originating component sends the data to a remote service or agent. Azure Monitor and Etsy's statsd are examples of push metrics. Some strengths with push metrics include: Only require network egress to the remote target. Originating component controls the frequency of measurement. Simplified configuration as the component only needs to know the destination of where to send data. Some trade-offs with this approach: At scale, it is much more difficult to control data transmission rates, which can cause service throttling or dropping of values. Determining if every component, particularly in a dynamic scale environment, is healthy and sending data is difficult. In the case of pull metrics, each originating component publishes an endpoint for the metric agent to connect to and gather measurements. Prometheus and its ecosystem of tools are an example of pull style metrics. Benefits experienced using a pull metrics setup may involve: Singular configuration for determining what is measured and the frequency of measurement for the local environment. Every measurement target has a meta metric related to if the collection is successful or not, which can be used as a general health check. Support for routing, filtering and processing of metrics before sending them onto a globally central metrics store. Items of concern to some may include: Configuring & managing data sources can lead to a complex configuration. Prometheus has tooling to auto-discover and configure data sources in some environments, such as Kubernetes, but there are always exceptions to this, which lead to configuration complexity. Network configuration may add further complexity if firewalls and other ACLs need to be managed to allow connectivity. Best Practices When should I use metrics instead of logs? Logs vs Metrics vs Traces covers some high level guidance on when to utilize metric data and when to use log data. Both have a valuable part to play in creating observable systems. What should be tracked? System critical measurements that relate to the application/machine health, which are usually excellent alert candidates. Work with your engineering and devops peers to identify the metrics, but they may include: CPU and memory utilization. Request rate. Queue length. Unexpected exception count. Dependent service metrics like response time for Redis cache, Sql server or Service bus. Important business-related measurements, which drive reporting to stakeholders. Consult with the various stakeholders of the component, but some examples may include: Jobs performed. User Session length. Games played. Site visits. Dimension Labels Modern metric systems today usually define a single time series metric as the combination of the name of the metric and its dictionary of dimension labels. Labels are an excellent way to distinguish one instance of a metric, from another while still allowing for aggregation and other operations to be performed on the set for analysis. Some common labels used in metrics may include: Container Name Host name Code Version Kubernetes cluster name Azure Region Note : Since dimension labels are used for aggregations and grouping operations, do not use unique strings or those with high cardinality as the value of a label. The value of the label is significantly diminished for reporting and in many cases has a negative performance hit on the metric system used to track it. Recommended Tools Azure Monitor - Umbrella of services including system metrics, log analytics and more. Prometheus - A real-time monitoring & alerting application. It's exposition format for exposing time-series is the basis for OpenMetrics's standard format. Thanos - Open source, highly available Prometheus setup with long term storage capabilities. Cortex - Horizontally scalable, highly available, multi-tenant, long term Prometheus. Grafana - Open source dashboard & visualization tool. Supports Log, Metrics and Distributed tracing data sources.","title":"Metrics"},{"location":"observability/pillars/metrics/#metrics","text":"","title":"Metrics"},{"location":"observability/pillars/metrics/#overview","text":"Metrics provide a near real-time stream of data, informing operators and stakeholders about the functions the system is performing as well as its health. Unlike logging and tracing, metric data tends to be more efficient to transmit and store.","title":"Overview"},{"location":"observability/pillars/metrics/#collection-methods","text":"Metric collection approaches fall into two broad categories: push metrics & pull metrics. Push metrics means that the originating component sends the data to a remote service or agent. Azure Monitor and Etsy's statsd are examples of push metrics. Some strengths with push metrics include: Only require network egress to the remote target. Originating component controls the frequency of measurement. Simplified configuration as the component only needs to know the destination of where to send data. Some trade-offs with this approach: At scale, it is much more difficult to control data transmission rates, which can cause service throttling or dropping of values. Determining if every component, particularly in a dynamic scale environment, is healthy and sending data is difficult. In the case of pull metrics, each originating component publishes an endpoint for the metric agent to connect to and gather measurements. Prometheus and its ecosystem of tools are an example of pull style metrics. Benefits experienced using a pull metrics setup may involve: Singular configuration for determining what is measured and the frequency of measurement for the local environment. Every measurement target has a meta metric related to if the collection is successful or not, which can be used as a general health check. Support for routing, filtering and processing of metrics before sending them onto a globally central metrics store. Items of concern to some may include: Configuring & managing data sources can lead to a complex configuration. Prometheus has tooling to auto-discover and configure data sources in some environments, such as Kubernetes, but there are always exceptions to this, which lead to configuration complexity. Network configuration may add further complexity if firewalls and other ACLs need to be managed to allow connectivity.","title":"Collection Methods"},{"location":"observability/pillars/metrics/#best-practices","text":"","title":"Best Practices"},{"location":"observability/pillars/metrics/#when-should-i-use-metrics-instead-of-logs","text":"Logs vs Metrics vs Traces covers some high level guidance on when to utilize metric data and when to use log data. Both have a valuable part to play in creating observable systems.","title":"When should I use metrics instead of logs?"},{"location":"observability/pillars/metrics/#what-should-be-tracked","text":"System critical measurements that relate to the application/machine health, which are usually excellent alert candidates. Work with your engineering and devops peers to identify the metrics, but they may include: CPU and memory utilization. Request rate. Queue length. Unexpected exception count. Dependent service metrics like response time for Redis cache, Sql server or Service bus. Important business-related measurements, which drive reporting to stakeholders. Consult with the various stakeholders of the component, but some examples may include: Jobs performed. User Session length. Games played. Site visits.","title":"What should be tracked?"},{"location":"observability/pillars/metrics/#dimension-labels","text":"Modern metric systems today usually define a single time series metric as the combination of the name of the metric and its dictionary of dimension labels. Labels are an excellent way to distinguish one instance of a metric, from another while still allowing for aggregation and other operations to be performed on the set for analysis. Some common labels used in metrics may include: Container Name Host name Code Version Kubernetes cluster name Azure Region Note : Since dimension labels are used for aggregations and grouping operations, do not use unique strings or those with high cardinality as the value of a label. The value of the label is significantly diminished for reporting and in many cases has a negative performance hit on the metric system used to track it.","title":"Dimension Labels"},{"location":"observability/pillars/metrics/#recommended-tools","text":"Azure Monitor - Umbrella of services including system metrics, log analytics and more. Prometheus - A real-time monitoring & alerting application. It's exposition format for exposing time-series is the basis for OpenMetrics's standard format. Thanos - Open source, highly available Prometheus setup with long term storage capabilities. Cortex - Horizontally scalable, highly available, multi-tenant, long term Prometheus. Grafana - Open source dashboard & visualization tool. Supports Log, Metrics and Distributed tracing data sources.","title":"Recommended Tools"},{"location":"observability/pillars/tracing/","text":"Tracing Overview Produces the information required to observe series of correlated operations in a distributed system. Once collected they show the path, measurements and faults in an end-to-end transaction. Best Practices Ensure that at least key business transactions are traced. Include in each trace necessary information to identify software releases (i.e. service name, version). This is important to correlate deployments and system degradation. Ensure dependencies are included in trace (databases, I/O). If costs are a concern use sampling, avoiding throwing away errors, unexpected behavior and critical information. Don't reinvent the wheel, use existing tools to collect and analyze the data. Ensure personal identifiable information policies and restrictions are followed. Recommended Tools Azure Monitor - Umbrella of services including system metrics, log analytics and more. Jaeger Tracing - Open source, end-to-end distributed tracing. Grafana - Open source dashboard & visualization tool. Supports Log, Metrics and Distributed tracing data sources. Consider using OpenTelemetry as it implements open-source cross-platform context propagation for end-to-end distributed transactions over heterogeneous components out-of-the-box. It takes care of automatically creating and managing the Trace Context object among a full stack of microservices implemented across different technical stacks.","title":"Tracing"},{"location":"observability/pillars/tracing/#tracing","text":"","title":"Tracing"},{"location":"observability/pillars/tracing/#overview","text":"Produces the information required to observe series of correlated operations in a distributed system. Once collected they show the path, measurements and faults in an end-to-end transaction.","title":"Overview"},{"location":"observability/pillars/tracing/#best-practices","text":"Ensure that at least key business transactions are traced. Include in each trace necessary information to identify software releases (i.e. service name, version). This is important to correlate deployments and system degradation. Ensure dependencies are included in trace (databases, I/O). If costs are a concern use sampling, avoiding throwing away errors, unexpected behavior and critical information. Don't reinvent the wheel, use existing tools to collect and analyze the data. Ensure personal identifiable information policies and restrictions are followed.","title":"Best Practices"},{"location":"observability/pillars/tracing/#recommended-tools","text":"Azure Monitor - Umbrella of services including system metrics, log analytics and more. Jaeger Tracing - Open source, end-to-end distributed tracing. Grafana - Open source dashboard & visualization tool. Supports Log, Metrics and Distributed tracing data sources. Consider using OpenTelemetry as it implements open-source cross-platform context propagation for end-to-end distributed transactions over heterogeneous components out-of-the-box. It takes care of automatically creating and managing the Trace Context object among a full stack of microservices implemented across different technical stacks.","title":"Recommended Tools"},{"location":"observability/tools/","text":"Tools and Patterns There are a number of modern tools to make systems observable. While identifying and/or creating tools that work for your system, here are a few things to consider to help guide the choices. Must be simple to integrate and easy to use. It must be possible to aggregate and visualize data. Tools must provide real-time data. Must be able to guide users to the problem area with suitable, adequate end-to-end context. Choices Loki OpenTelemetry Kubernetes Dashboards Prometheus Service Mesh Leveraging a Service Mesh that follows the Sidecar Pattern quickly sets up a go-to set of metrics, and traces (although traces need to be propagated from incoming requests to outgoing requests manually). A sidecar works by intercepting all incoming and outgoing traffic to your image. It then adds trace headers to each request and emits a standard set of logs and metrics. These metrics are extremely powerful for observability, allowing every service, whether client-side or server-side, to leverage a unified set of metrics, including: Latency Bytes Request Rate Error Rate In a microservice architecture, pinpointing the root cause of a spike in 500's can be non-trivial, but with the added observability from a sidecar you can quickly determine which service in your service mesh resulted in the spike in errors. Service Mesh's have a large surface area for configuration, and can seem like a daunting undertaking to deploy. However, most services (including Linkerd) offer a sane set of defaults, and can be deployed via the happy path to quickly land these observability wins.","title":"Tools and Patterns"},{"location":"observability/tools/#tools-and-patterns","text":"There are a number of modern tools to make systems observable. While identifying and/or creating tools that work for your system, here are a few things to consider to help guide the choices. Must be simple to integrate and easy to use. It must be possible to aggregate and visualize data. Tools must provide real-time data. Must be able to guide users to the problem area with suitable, adequate end-to-end context.","title":"Tools and Patterns"},{"location":"observability/tools/#choices","text":"Loki OpenTelemetry Kubernetes Dashboards Prometheus","title":"Choices"},{"location":"observability/tools/#service-mesh","text":"Leveraging a Service Mesh that follows the Sidecar Pattern quickly sets up a go-to set of metrics, and traces (although traces need to be propagated from incoming requests to outgoing requests manually). A sidecar works by intercepting all incoming and outgoing traffic to your image. It then adds trace headers to each request and emits a standard set of logs and metrics. These metrics are extremely powerful for observability, allowing every service, whether client-side or server-side, to leverage a unified set of metrics, including: Latency Bytes Request Rate Error Rate In a microservice architecture, pinpointing the root cause of a spike in 500's can be non-trivial, but with the added observability from a sidecar you can quickly determine which service in your service mesh resulted in the spike in errors. Service Mesh's have a large surface area for configuration, and can seem like a daunting undertaking to deploy. However, most services (including Linkerd) offer a sane set of defaults, and can be deployed via the happy path to quickly land these observability wins.","title":"Service Mesh"},{"location":"observability/tools/KubernetesDashboards/","text":"Kubernetes UI Dashboards This document covers the options and benefits of various Kubernetes UI Dashboards which are useful tools for monitoring and debugging your application on Kubernetes Clusters. It allows the management of applications running in the cluster, debug them and manage the cluster all through these dashboards. Overview and Background There are times when not all solutions can be run locally. This limitation could be due to a cloud service which does not offer a robust or efficient way to locally debug the environment. In these cases, it is necessary to use other tools which provide the capabilities to monitor your application with Kubernetes. Advantages and Use Cases Allows the ability to view, manage and monitor the operational aspects of the Kubernetes Cluster. Benefits of using a UI dashboard includes the following: see an overview of the cluster deploy applications onto the cluster troubleshoot applications running on the cluster view, create, modify, and delete Kubernetes resources view basic resource metrics including resource usage for Kubernetes objects view and access logs live view of the pods state (e.g. started, terminating, etc) Different dashboards may provide different functionalities, and the use case to choose a particular dashboard will depend on the requirements. For example, many dashboards provide a way to only monitor your applications on Kubernetes but do not provide a way to manage them. Open Source Dashboards There are currently several UI dashboards available to monitor your applications or manage them with Kubernetes. For example: Octant Prometheus and Grafana Kube Prometheus Stack Chart : provides an easy way to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator. K8Dash kube-ops-view : a tool to visualize node occupancy & utilization Lens : Client side desktop tool Thanos and Cortex : Multi-cluster implementations References Alternatives to Kubernetes Dashboard Prometheus and Grafana with Kubernetes","title":"Kubernetes UI Dashboards"},{"location":"observability/tools/KubernetesDashboards/#kubernetes-ui-dashboards","text":"This document covers the options and benefits of various Kubernetes UI Dashboards which are useful tools for monitoring and debugging your application on Kubernetes Clusters. It allows the management of applications running in the cluster, debug them and manage the cluster all through these dashboards.","title":"Kubernetes UI Dashboards"},{"location":"observability/tools/KubernetesDashboards/#overview-and-background","text":"There are times when not all solutions can be run locally. This limitation could be due to a cloud service which does not offer a robust or efficient way to locally debug the environment. In these cases, it is necessary to use other tools which provide the capabilities to monitor your application with Kubernetes.","title":"Overview and Background"},{"location":"observability/tools/KubernetesDashboards/#advantages-and-use-cases","text":"Allows the ability to view, manage and monitor the operational aspects of the Kubernetes Cluster. Benefits of using a UI dashboard includes the following: see an overview of the cluster deploy applications onto the cluster troubleshoot applications running on the cluster view, create, modify, and delete Kubernetes resources view basic resource metrics including resource usage for Kubernetes objects view and access logs live view of the pods state (e.g. started, terminating, etc) Different dashboards may provide different functionalities, and the use case to choose a particular dashboard will depend on the requirements. For example, many dashboards provide a way to only monitor your applications on Kubernetes but do not provide a way to manage them.","title":"Advantages and Use Cases"},{"location":"observability/tools/KubernetesDashboards/#open-source-dashboards","text":"There are currently several UI dashboards available to monitor your applications or manage them with Kubernetes. For example: Octant Prometheus and Grafana Kube Prometheus Stack Chart : provides an easy way to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator. K8Dash kube-ops-view : a tool to visualize node occupancy & utilization Lens : Client side desktop tool Thanos and Cortex : Multi-cluster implementations","title":"Open Source Dashboards"},{"location":"observability/tools/KubernetesDashboards/#references","text":"Alternatives to Kubernetes Dashboard Prometheus and Grafana with Kubernetes","title":"References"},{"location":"observability/tools/OpenTelemetry/","text":"Open Telemetry Building observable systems enable one to measure how well or bad the application is behaving and WHY it is behaving either way. Adopting open-source standards related to implementing telemetry and tracing features built on top of the OpenTelemetry framework helps decouple vendor-specific implementations while maintaining an extensible, standard, and portable open-source solution. OpenTelemetry is an open-source observability standard that defines how to generate, collect and describe telemetry in distributed systems. OpenTelemetry also provides a single-point distribution of a set of APIs, SDKs, and instrumentation libraries that implements the open-source standard, which can collect, process, and orchestrate telemetry data (signals) like traces, metrics, and logs. It supports multiple popular languages (Java, .NET, Python, JavaScript, Golang, Erlang, etc.). Open telemetry follows a vendor-agnostic and standards-based approach for collecting and managing telemetry data. An important point to note is that OpenTelemetry does not have its own backend; all telemetry collected by OpenTelemetry Collector must be sent to a backend like Prometheus, Jaeger, Zipkin, Azure Monitor, etc. Open telemetry is also the 2nd most active CNCF project only after Kubernetes. The main two Problems OpenTelemetry solves are: First, vendor neutrality for tracing, monitoring, and logging APIs and second, out-of-the-box cross-platform context propagation implementation for end-to-end distributed tracing over heterogeneous components. Open Telemetry Core Concepts Open Telemetry Implementation Patterns A detailed explanation of OpenTelemetry concepts is out of the scope of this repo. There is plenty of available information about how the SDK and the automatic instrumentation are configured and how the Exporters, Tracers, Context, and Span's hierarchy work. See the Reference section for valuable OpenTelemetry resources. However, understanding the core implementation patterns will help you know what approach better fits the scenario you are trying to solve. These are three main patterns as follows: Automatic telemetry: Support for automatic instrumentation is available for some languages. OpenTelemetry automatic instrumentation (100% codeless) is typically done through library hooks or monkey-patching library code. Automatic instrumentation will intercept all interactions and dependencies and automatically send the telemetry to the configured exporters. More information about this concept can be found in the OpenTelemetry instrumentation doc . Manual tracing: This must be done by coding using the OpenTelemetry SDK, managing the tracer objects to obtain Spans, and forming instrumented OpenTelemetry Scopes to identify the code segments to be manually traced. Also, by using the @WithSpan annotations (method decorations in C# and Java ) to mark whole methods that will be automatically traced. Hybrid approach: Most Production-ready scenarios will require a mix of both techniques, using the automatic instrumentation to collect automatic telemetry and the OpenTelemetry SDK to identify code segments that are important to instrument manually. When considering production-ready scenarios, the hybrid approach is the way to go as it allows for a throughout cover over the whole solution. It provides automatic context propagation and events correlation out of the box. Collector The collector is a separate process that is designed to be a \u2018sink\u2019 for telemetry data emitted by many processes, which can then export that data to backend systems. The collector has two different deployment strategies \u2013 either running as an agent alongside a service or as a gateway which is a remote application. In general, using both is recommended: the agent would be deployed with your service and run as a separate process or in a sidecar; meanwhile, the collector would be deployed separately, as its own application running in a container or virtual machine. Each agent would forward telemetry data to the collector, which could then export it to a variety of backend systems such as Lightstep, Jaeger, or Prometheus. The agent can be also replaced with the automatic instrumentation if supported. The automatic instrumentation provides the collector capabilities of retrieving, processing and exporting the telemetry. Regardless of how you choose to instrument or deploy OpenTelemetry, exporters provide powerful options for reporting telemetry data. You can directly export from your service, you can proxy through the collector, or you can aggregate into standalone collectors \u2013 or even a mix of these. Instrumentation Libraries A library that enables observability for another library is called an instrumentation library. OpenTelemetry libraries are language specific, currently there is good support for Java, Python, Javascript, dotnet and golang. Support for automatic instrumentation is available for some libraries which make using OpenTelemetry easy and trivial. In case automatic instrumentation is not available, manual instrumentation can be configured by using the OpenTelemetry SDK. Integration of OpenTelemetry OpenTelemetry can be used to collect, process and export data into multiple backends, some popular integrations supported with OpenTelemetry are: Zipkin Prometheus Jaeger New Relic Azure Monitor AWS X-Ray Datadog Kafka Lightstep Splunk GCP Monitor Why use OpenTelemetry The main reason to use OpenTelemetry is that it offers an open-source standard for implementing distributed telemetry (context propagation) over heterogeneous systems. There is no need to reinvent the wheel to implement end-to-end business flow transactions monitoring when using OpenTelemetry. It enables tracing, metrics, and logging telemetry through a set of single-distribution multi-language libraries and tools that allow for a plug-and-play telemetry architecture that includes the concept of agents and collectors. Moreover, avoiding any proprietary lock down and achieving vendor-agnostic neutrality for tracing, monitoring, and logging APIs AND backends allow maximum portability and extensibility patterns. Another good reason to use OpenTelemetry would be whether the stack uses OpenCensus or OpenTracing. As OpenCensus and OpenTracing have carved the way for OpenTelemetry, it makes sense to introduce OpenTelemetry where OpenCensus or OpenTracing is used as it still has backward compatibility. Apart from adding custom attributes, sampling, collecting data for metrics and traces, OpenTelemetry is governed by specifications and backed up by big players in the Observability landscape like Microsoft, Splunk, AppDynamics, etc. OpenTelemetry will likely become a de-facto open-source standard for enabling metrics and tracing when all features become GA. Current Status of OpenTelemetry Project OpenTelemetry is a project which emerged from merging of OpenCensus and OpenTracing in 2019. Although OpenCensus and OpenTracing are frozen and no new features are being developed for them, OpenTelemetry has backward compatibility with OpenCensus and OpenTracing. Some features of OpenTelemetry are still in beta, feature support for different languages is being tracked here: Feature Status of OpenTelemetry . Status of OpenTelemetry project can be tracked here . From the website: Our goal is to provide a generally available, production quality release for the tracing data source across most OpenTelemetry components in the first half of 2021. Several components have already reached this milestone! We expect metrics to reach the same status in the second half of 2021 and are targeting logs in 2022. What to watch out for As OpenTelemetry is a very recent project (first GA version of some features released in 2020), many features are still in beta hence due diligence needs to be done before using such features in production. Also, OpenTelemetry supports many popular languages but features in all languages are not at par. Some languages offer more features as compared to other languages. It also needs to be called out as some features are not in GA, there may be some incompatibility issues with the tooling. That being said, OpenTelemetry is one of the most active projects of CNCF , so it is expected that many more features would reach GA soon. January 2022 UPDATE Apart from the logging specification and implementation that are still marked as draft or beta, all other specifications and implementations regarding tracing and metrics are marked as stable or feature-freeze. Many libraries are still on active development whatsoever, so thorough analysis has to be made depending on the language on a feature basis. Integration Options with Azure Monitor Using the Azure Monitor OpenTelemetry Exporter Library This scenario uses the OpenTelemetry SDK as the core instrumentation library. Basically this means you will instrument your application using the OpenTelemetry libraries, but you will additionally use the Azure Monitor OpenTelemetry Exporter and then added it as an additional exporter with the OpenTelemetry SDK. In this way, the OpenTelemetry traces your application creates will be pushed to your Azure Monitor Instance. Using the Application Insights Agent Jar file - Java only Java OpenTelemetry instrumentation provides another way to integrate with Azure Monitor, by using Applications Insights Java Agent jar . When configuring this option, the Applications Insights Agent file is added when executing the application. The applicationinsights.json configuration file must be also be added as part of the applications artifacts. Pay close attention to the preview section, where the \"openTelemetryApiSupport\": true, property is set to true, enabling the agent to intercept OpenTelemetry telemetry created in the application code pushing it to Azure Monitor. OpenTelemetry Java Agent instrumentation supports many libraries and frameworks and application servers . Application Insights Java Agent enhances this list. Therefore, the main difference between running the OpenTelemetry Java Agent vs. the Application Insights Java Agent is demonstrated in the amount of traces getting logged in Azure Monitor. When running with Application Insights Java agent there's more telemetry getting pushed to Azure Monitor. On the other hand, when running the solution using the Application Insights agent mode, it is essential to highlight that nothing gets logged on Jaeger (or any other OpenTelemetry exporter). All traces will be pushed exclusively to Azure Monitor. However, both manual instrumentation done via the OpenTelemetry SDK and all automatic traces, dependencies, performance counters, and metrics being instrumented by the Application Insights agent are sent to Azure Monitor. Although there is a rich amount of additional data automatically instrumented by the Application Insights agent, it can be deduced that it is not necessarily OpenTelemetry compliant. Only the traces logged by the manual instrumentation using the OpenTelemetry SDK are. OpenTelemetry vs Application Insights agents compared Highlight OpenTelemetry Agent App Insights Agent Automatic Telemetry Y Y Manual OpenTelemetry Y Y Plug and Play Exports Y N Multiple Exports Y N Full Open Telemetry layout (decoupling agents, collectors and exporters) Y N Enriched out of the box telemetry N Y Unified telemetry backend N Y Summary As you may have guessed, there is no \"one size fits all\" approach when implementing OpenTelemetry with Azure Monitor as a backend. At the time of this writing, if you want to have the flexibility of having different OpenTelemetry backends, you should definitively go with the OpenTelemetry Agent, even though you'd sacrifice all automating tracing flowing to Azure Monitor. On the other hand, if you want to get the best of Azure Monitor and still want to instrument your code with the OpenTelemetry SDK, you should use the Application Insights Agent and manually instrument your code with the OpenTelemetry SDK to get the best of both worlds. Either way, instrumenting your code with OpenTelemetry seems the right approach as the ecosystem will only get bigger, better, and more robust. Advanced topics Use the Azure OpenTelemetry Tracing plugin library for Java to enable distributed tracing across Azure components through OpenTelemetry. Manual trace context propagation The trace context is stored in Thread-local storage. When the application flow involves multiple threads (eg. multithreaded work-queue, asynchronous processing) then the traces won't get combined into one end-to-end trace chain with automatic context propagation . To achieve that you need to manually propagate the trace context ( example in Java ) by storing the trace headers along with the work-queue item. Telemetry testing Mission critical telemetry data should be covered by testing. You can cover telemetry by tests by mocking the telemetry collector web server. In automated testing environment the telemetry instrumentation can be configured to use OTLP exporter and point the OTLP exporter endpoint to the collector web server. Using mocking servers libraries (eg. MockServer or WireMock) can help verify the telemetry data pushed to the collector. References OpenTelemetry Official Site Getting Started with dotnet and OpenTelemetry Using OpenTelemetry Collector OpenTelemetry Java SDK Manual Instrumentation OpenTelemetry Instrumentation Agent for Java Application Insights Java Agent Azure Monitor OpenTelemetry Exporter client library for Java Azure OpenTelemetry Tracing plugin library for Java Application Insights Agent's OpenTelemetry configuration","title":"Open Telemetry"},{"location":"observability/tools/OpenTelemetry/#open-telemetry","text":"Building observable systems enable one to measure how well or bad the application is behaving and WHY it is behaving either way. Adopting open-source standards related to implementing telemetry and tracing features built on top of the OpenTelemetry framework helps decouple vendor-specific implementations while maintaining an extensible, standard, and portable open-source solution. OpenTelemetry is an open-source observability standard that defines how to generate, collect and describe telemetry in distributed systems. OpenTelemetry also provides a single-point distribution of a set of APIs, SDKs, and instrumentation libraries that implements the open-source standard, which can collect, process, and orchestrate telemetry data (signals) like traces, metrics, and logs. It supports multiple popular languages (Java, .NET, Python, JavaScript, Golang, Erlang, etc.). Open telemetry follows a vendor-agnostic and standards-based approach for collecting and managing telemetry data. An important point to note is that OpenTelemetry does not have its own backend; all telemetry collected by OpenTelemetry Collector must be sent to a backend like Prometheus, Jaeger, Zipkin, Azure Monitor, etc. Open telemetry is also the 2nd most active CNCF project only after Kubernetes. The main two Problems OpenTelemetry solves are: First, vendor neutrality for tracing, monitoring, and logging APIs and second, out-of-the-box cross-platform context propagation implementation for end-to-end distributed tracing over heterogeneous components.","title":"Open Telemetry"},{"location":"observability/tools/OpenTelemetry/#open-telemetry-core-concepts","text":"","title":"Open Telemetry Core Concepts"},{"location":"observability/tools/OpenTelemetry/#open-telemetry-implementation-patterns","text":"A detailed explanation of OpenTelemetry concepts is out of the scope of this repo. There is plenty of available information about how the SDK and the automatic instrumentation are configured and how the Exporters, Tracers, Context, and Span's hierarchy work. See the Reference section for valuable OpenTelemetry resources. However, understanding the core implementation patterns will help you know what approach better fits the scenario you are trying to solve. These are three main patterns as follows: Automatic telemetry: Support for automatic instrumentation is available for some languages. OpenTelemetry automatic instrumentation (100% codeless) is typically done through library hooks or monkey-patching library code. Automatic instrumentation will intercept all interactions and dependencies and automatically send the telemetry to the configured exporters. More information about this concept can be found in the OpenTelemetry instrumentation doc . Manual tracing: This must be done by coding using the OpenTelemetry SDK, managing the tracer objects to obtain Spans, and forming instrumented OpenTelemetry Scopes to identify the code segments to be manually traced. Also, by using the @WithSpan annotations (method decorations in C# and Java ) to mark whole methods that will be automatically traced. Hybrid approach: Most Production-ready scenarios will require a mix of both techniques, using the automatic instrumentation to collect automatic telemetry and the OpenTelemetry SDK to identify code segments that are important to instrument manually. When considering production-ready scenarios, the hybrid approach is the way to go as it allows for a throughout cover over the whole solution. It provides automatic context propagation and events correlation out of the box.","title":"Open Telemetry Implementation Patterns"},{"location":"observability/tools/OpenTelemetry/#collector","text":"The collector is a separate process that is designed to be a \u2018sink\u2019 for telemetry data emitted by many processes, which can then export that data to backend systems. The collector has two different deployment strategies \u2013 either running as an agent alongside a service or as a gateway which is a remote application. In general, using both is recommended: the agent would be deployed with your service and run as a separate process or in a sidecar; meanwhile, the collector would be deployed separately, as its own application running in a container or virtual machine. Each agent would forward telemetry data to the collector, which could then export it to a variety of backend systems such as Lightstep, Jaeger, or Prometheus. The agent can be also replaced with the automatic instrumentation if supported. The automatic instrumentation provides the collector capabilities of retrieving, processing and exporting the telemetry. Regardless of how you choose to instrument or deploy OpenTelemetry, exporters provide powerful options for reporting telemetry data. You can directly export from your service, you can proxy through the collector, or you can aggregate into standalone collectors \u2013 or even a mix of these.","title":"Collector"},{"location":"observability/tools/OpenTelemetry/#instrumentation-libraries","text":"A library that enables observability for another library is called an instrumentation library. OpenTelemetry libraries are language specific, currently there is good support for Java, Python, Javascript, dotnet and golang. Support for automatic instrumentation is available for some libraries which make using OpenTelemetry easy and trivial. In case automatic instrumentation is not available, manual instrumentation can be configured by using the OpenTelemetry SDK.","title":"Instrumentation Libraries"},{"location":"observability/tools/OpenTelemetry/#integration-of-opentelemetry","text":"OpenTelemetry can be used to collect, process and export data into multiple backends, some popular integrations supported with OpenTelemetry are: Zipkin Prometheus Jaeger New Relic Azure Monitor AWS X-Ray Datadog Kafka Lightstep Splunk GCP Monitor","title":"Integration of OpenTelemetry"},{"location":"observability/tools/OpenTelemetry/#why-use-opentelemetry","text":"The main reason to use OpenTelemetry is that it offers an open-source standard for implementing distributed telemetry (context propagation) over heterogeneous systems. There is no need to reinvent the wheel to implement end-to-end business flow transactions monitoring when using OpenTelemetry. It enables tracing, metrics, and logging telemetry through a set of single-distribution multi-language libraries and tools that allow for a plug-and-play telemetry architecture that includes the concept of agents and collectors. Moreover, avoiding any proprietary lock down and achieving vendor-agnostic neutrality for tracing, monitoring, and logging APIs AND backends allow maximum portability and extensibility patterns. Another good reason to use OpenTelemetry would be whether the stack uses OpenCensus or OpenTracing. As OpenCensus and OpenTracing have carved the way for OpenTelemetry, it makes sense to introduce OpenTelemetry where OpenCensus or OpenTracing is used as it still has backward compatibility. Apart from adding custom attributes, sampling, collecting data for metrics and traces, OpenTelemetry is governed by specifications and backed up by big players in the Observability landscape like Microsoft, Splunk, AppDynamics, etc. OpenTelemetry will likely become a de-facto open-source standard for enabling metrics and tracing when all features become GA.","title":"Why use OpenTelemetry"},{"location":"observability/tools/OpenTelemetry/#current-status-of-opentelemetry-project","text":"OpenTelemetry is a project which emerged from merging of OpenCensus and OpenTracing in 2019. Although OpenCensus and OpenTracing are frozen and no new features are being developed for them, OpenTelemetry has backward compatibility with OpenCensus and OpenTracing. Some features of OpenTelemetry are still in beta, feature support for different languages is being tracked here: Feature Status of OpenTelemetry . Status of OpenTelemetry project can be tracked here . From the website: Our goal is to provide a generally available, production quality release for the tracing data source across most OpenTelemetry components in the first half of 2021. Several components have already reached this milestone! We expect metrics to reach the same status in the second half of 2021 and are targeting logs in 2022.","title":"Current Status of OpenTelemetry Project"},{"location":"observability/tools/OpenTelemetry/#what-to-watch-out-for","text":"As OpenTelemetry is a very recent project (first GA version of some features released in 2020), many features are still in beta hence due diligence needs to be done before using such features in production. Also, OpenTelemetry supports many popular languages but features in all languages are not at par. Some languages offer more features as compared to other languages. It also needs to be called out as some features are not in GA, there may be some incompatibility issues with the tooling. That being said, OpenTelemetry is one of the most active projects of CNCF , so it is expected that many more features would reach GA soon.","title":"What to watch out for"},{"location":"observability/tools/OpenTelemetry/#january-2022-update","text":"Apart from the logging specification and implementation that are still marked as draft or beta, all other specifications and implementations regarding tracing and metrics are marked as stable or feature-freeze. Many libraries are still on active development whatsoever, so thorough analysis has to be made depending on the language on a feature basis.","title":"January 2022 UPDATE"},{"location":"observability/tools/OpenTelemetry/#integration-options-with-azure-monitor","text":"","title":"Integration Options with Azure Monitor"},{"location":"observability/tools/OpenTelemetry/#using-the-azure-monitor-opentelemetry-exporter-library","text":"This scenario uses the OpenTelemetry SDK as the core instrumentation library. Basically this means you will instrument your application using the OpenTelemetry libraries, but you will additionally use the Azure Monitor OpenTelemetry Exporter and then added it as an additional exporter with the OpenTelemetry SDK. In this way, the OpenTelemetry traces your application creates will be pushed to your Azure Monitor Instance.","title":"Using the Azure Monitor OpenTelemetry Exporter Library"},{"location":"observability/tools/OpenTelemetry/#using-the-application-insights-agent-jar-file-java-only","text":"Java OpenTelemetry instrumentation provides another way to integrate with Azure Monitor, by using Applications Insights Java Agent jar . When configuring this option, the Applications Insights Agent file is added when executing the application. The applicationinsights.json configuration file must be also be added as part of the applications artifacts. Pay close attention to the preview section, where the \"openTelemetryApiSupport\": true, property is set to true, enabling the agent to intercept OpenTelemetry telemetry created in the application code pushing it to Azure Monitor. OpenTelemetry Java Agent instrumentation supports many libraries and frameworks and application servers . Application Insights Java Agent enhances this list. Therefore, the main difference between running the OpenTelemetry Java Agent vs. the Application Insights Java Agent is demonstrated in the amount of traces getting logged in Azure Monitor. When running with Application Insights Java agent there's more telemetry getting pushed to Azure Monitor. On the other hand, when running the solution using the Application Insights agent mode, it is essential to highlight that nothing gets logged on Jaeger (or any other OpenTelemetry exporter). All traces will be pushed exclusively to Azure Monitor. However, both manual instrumentation done via the OpenTelemetry SDK and all automatic traces, dependencies, performance counters, and metrics being instrumented by the Application Insights agent are sent to Azure Monitor. Although there is a rich amount of additional data automatically instrumented by the Application Insights agent, it can be deduced that it is not necessarily OpenTelemetry compliant. Only the traces logged by the manual instrumentation using the OpenTelemetry SDK are.","title":"Using the Application Insights Agent Jar file - Java only"},{"location":"observability/tools/OpenTelemetry/#opentelemetry-vs-application-insights-agents-compared","text":"Highlight OpenTelemetry Agent App Insights Agent Automatic Telemetry Y Y Manual OpenTelemetry Y Y Plug and Play Exports Y N Multiple Exports Y N Full Open Telemetry layout (decoupling agents, collectors and exporters) Y N Enriched out of the box telemetry N Y Unified telemetry backend N Y","title":"OpenTelemetry vs Application Insights agents compared"},{"location":"observability/tools/OpenTelemetry/#summary","text":"As you may have guessed, there is no \"one size fits all\" approach when implementing OpenTelemetry with Azure Monitor as a backend. At the time of this writing, if you want to have the flexibility of having different OpenTelemetry backends, you should definitively go with the OpenTelemetry Agent, even though you'd sacrifice all automating tracing flowing to Azure Monitor. On the other hand, if you want to get the best of Azure Monitor and still want to instrument your code with the OpenTelemetry SDK, you should use the Application Insights Agent and manually instrument your code with the OpenTelemetry SDK to get the best of both worlds. Either way, instrumenting your code with OpenTelemetry seems the right approach as the ecosystem will only get bigger, better, and more robust.","title":"Summary"},{"location":"observability/tools/OpenTelemetry/#advanced-topics","text":"Use the Azure OpenTelemetry Tracing plugin library for Java to enable distributed tracing across Azure components through OpenTelemetry.","title":"Advanced topics"},{"location":"observability/tools/OpenTelemetry/#manual-trace-context-propagation","text":"The trace context is stored in Thread-local storage. When the application flow involves multiple threads (eg. multithreaded work-queue, asynchronous processing) then the traces won't get combined into one end-to-end trace chain with automatic context propagation . To achieve that you need to manually propagate the trace context ( example in Java ) by storing the trace headers along with the work-queue item.","title":"Manual trace context propagation"},{"location":"observability/tools/OpenTelemetry/#telemetry-testing","text":"Mission critical telemetry data should be covered by testing. You can cover telemetry by tests by mocking the telemetry collector web server. In automated testing environment the telemetry instrumentation can be configured to use OTLP exporter and point the OTLP exporter endpoint to the collector web server. Using mocking servers libraries (eg. MockServer or WireMock) can help verify the telemetry data pushed to the collector.","title":"Telemetry testing"},{"location":"observability/tools/OpenTelemetry/#references","text":"OpenTelemetry Official Site Getting Started with dotnet and OpenTelemetry Using OpenTelemetry Collector OpenTelemetry Java SDK Manual Instrumentation OpenTelemetry Instrumentation Agent for Java Application Insights Java Agent Azure Monitor OpenTelemetry Exporter client library for Java Azure OpenTelemetry Tracing plugin library for Java Application Insights Agent's OpenTelemetry configuration","title":"References"},{"location":"observability/tools/Prometheus/","text":"Prometheus Overview Originally built at SoundCloud, Prometheus is an open-source monitoring and alerting toolkit based on time series metrics data. It has become a de facto standard metrics solution in the Cloud Native world and widely used with Kubernetes. The core of Prometheus is a server that scrapes and stores metrics. There are other numerous optional features and components like an Alert-manager and client libraries for programming languages to extend the functionalities of Prometheus beyond the basics. The client libraries offer four metric types : Counter , Gauge , Histogram , and Summary . Why Prometheus? Prometheus is a time series database and allow for events or measurements to be tracked, monitored, and aggregated over time. Prometheus is a pull-based tool. One of the biggest advantages of Prometheus over other monitoring tools is that Prometheus actively scrapes targets in order to retrieve metrics from them. Prometheus also supports the push model for pushing metrics. Prometheus allows for control over how to scrape, and how often to scrape them. Through the Prometheus server, there can be multiple scrape configurations, allowing for multiple rates for different targets. Similar to Grafana , visualization for the time series can be directly done through the Prometheus Web UI. The Web UI provides the ability to easily filter and have an overview of what is taking place with your different targets. Prometheus provides a powerful functional query language called PromQL (Prometheus Query Language) that lets the user aggregate time series data in real time. Integration with Other Tools The Prometheus client libraries allow you to add instrumentation to your code and expose internal metrics via an HTTP endpoint. The official Prometheus client libraries currently are Go , Java or Scala , Python and Ruby . Unofficial third-party libraries include: .NET/C# , Node.js , and C++ . Prometheus' metrics format is supported by a wide array of tools and services including: Azure Monitor Stackdriver Datadog CloudWatch New Relic Flagger Grafana GitLab etc... There are numerous exporters which are used in exporting existing metrics from third-party databases, hardware, CI/CD tools, messaging systems, APIs and other monitoring systems. In addition to client libraries and exporters, there is a significant number of integration points for service discovery, remote storage, alerts and management. References Prometheus Docs Prometheus Best Practices Grafana with Prometheus","title":"Prometheus"},{"location":"observability/tools/Prometheus/#prometheus","text":"","title":"Prometheus"},{"location":"observability/tools/Prometheus/#overview","text":"Originally built at SoundCloud, Prometheus is an open-source monitoring and alerting toolkit based on time series metrics data. It has become a de facto standard metrics solution in the Cloud Native world and widely used with Kubernetes. The core of Prometheus is a server that scrapes and stores metrics. There are other numerous optional features and components like an Alert-manager and client libraries for programming languages to extend the functionalities of Prometheus beyond the basics. The client libraries offer four metric types : Counter , Gauge , Histogram , and Summary .","title":"Overview"},{"location":"observability/tools/Prometheus/#why-prometheus","text":"Prometheus is a time series database and allow for events or measurements to be tracked, monitored, and aggregated over time. Prometheus is a pull-based tool. One of the biggest advantages of Prometheus over other monitoring tools is that Prometheus actively scrapes targets in order to retrieve metrics from them. Prometheus also supports the push model for pushing metrics. Prometheus allows for control over how to scrape, and how often to scrape them. Through the Prometheus server, there can be multiple scrape configurations, allowing for multiple rates for different targets. Similar to Grafana , visualization for the time series can be directly done through the Prometheus Web UI. The Web UI provides the ability to easily filter and have an overview of what is taking place with your different targets. Prometheus provides a powerful functional query language called PromQL (Prometheus Query Language) that lets the user aggregate time series data in real time.","title":"Why Prometheus?"},{"location":"observability/tools/Prometheus/#integration-with-other-tools","text":"The Prometheus client libraries allow you to add instrumentation to your code and expose internal metrics via an HTTP endpoint. The official Prometheus client libraries currently are Go , Java or Scala , Python and Ruby . Unofficial third-party libraries include: .NET/C# , Node.js , and C++ . Prometheus' metrics format is supported by a wide array of tools and services including: Azure Monitor Stackdriver Datadog CloudWatch New Relic Flagger Grafana GitLab etc... There are numerous exporters which are used in exporting existing metrics from third-party databases, hardware, CI/CD tools, messaging systems, APIs and other monitoring systems. In addition to client libraries and exporters, there is a significant number of integration points for service discovery, remote storage, alerts and management.","title":"Integration with Other Tools"},{"location":"observability/tools/Prometheus/#references","text":"Prometheus Docs Prometheus Best Practices Grafana with Prometheus","title":"References"},{"location":"observability/tools/loki/","text":"Loki Loki is a horizontally-scalable, highly-available, multi-tenant log aggregation system, created by Grafana Labs inspired by the learnings from Prometheus. Loki is commonly referred as 'Prometheus, but for logs', which makes total sense. Both tools follow the same architecture, which is an agent collecting metrics in each of the components of the software system, a server which stores the logs and also the Grafana dashboard, which access the loki server to build its visualizations and queries. That being said, Loki has three main components: Promtail It is the agent portion of Loki. It can be used to grab logs from several places, like var/log/ for example. The configuration of the Promtail is a yaml file called config-promtail.yml . In this file, its described all the paths and log sources that will be aggregated on Loki Server. Loki Server Loki Server is responsible for receiving and storing all the logs received from all the different systems. The Loki Server is also responsible for the queries done on Grafana, for example. Grafana Dashboards Grafana Dashboards are responsible for creating the visualizations and performing queries. After all, it will be a web page that people with the right access can log into to see, query and create alerts for the aggregated logs. Why use Loki The main reason to use Loki instead of other log aggregation tools, is that Loki optimizes the necessary storage. It does that by following the same pattern as prometheus, which index the labels and make chunks of the log itself, using less space than just storing the raw logs. References Loki Official Site Inserting logs into Loki Adding Loki Source to Grafana Loki Best Practices","title":"Loki"},{"location":"observability/tools/loki/#loki","text":"Loki is a horizontally-scalable, highly-available, multi-tenant log aggregation system, created by Grafana Labs inspired by the learnings from Prometheus. Loki is commonly referred as 'Prometheus, but for logs', which makes total sense. Both tools follow the same architecture, which is an agent collecting metrics in each of the components of the software system, a server which stores the logs and also the Grafana dashboard, which access the loki server to build its visualizations and queries. That being said, Loki has three main components:","title":"Loki"},{"location":"observability/tools/loki/#promtail","text":"It is the agent portion of Loki. It can be used to grab logs from several places, like var/log/ for example. The configuration of the Promtail is a yaml file called config-promtail.yml . In this file, its described all the paths and log sources that will be aggregated on Loki Server.","title":"Promtail"},{"location":"observability/tools/loki/#loki-server","text":"Loki Server is responsible for receiving and storing all the logs received from all the different systems. The Loki Server is also responsible for the queries done on Grafana, for example.","title":"Loki Server"},{"location":"observability/tools/loki/#grafana-dashboards","text":"Grafana Dashboards are responsible for creating the visualizations and performing queries. After all, it will be a web page that people with the right access can log into to see, query and create alerts for the aggregated logs.","title":"Grafana Dashboards"},{"location":"observability/tools/loki/#why-use-loki","text":"The main reason to use Loki instead of other log aggregation tools, is that Loki optimizes the necessary storage. It does that by following the same pattern as prometheus, which index the labels and make chunks of the log itself, using less space than just storing the raw logs.","title":"Why use Loki"},{"location":"observability/tools/loki/#references","text":"Loki Official Site Inserting logs into Loki Adding Loki Source to Grafana Loki Best Practices","title":"References"},{"location":"privacy/","text":"Fundamentos de Privacidade Esta parte do manual de engenharia se concentra nas diretrizes e princ\u00edpios de design de privacidade. O manuseio e prote\u00e7\u00e3o de dados privados requerem tanto o design adequado de software, sistemas e bancos de dados, quanto a implementa\u00e7\u00e3o de processos e procedimentos organizacionais. Em geral, os desenvolvedores que trabalham em projetos da ISE devem aderir \u00e0s pr\u00e1ticas recomendadas padr\u00e3o da Microsoft e regulamenta\u00e7\u00f5es sobre Privacidade e Manuseio de Dados. O manual atualmente cont\u00e9m duas partes principais: Privacidade e Dados : Melhores pr\u00e1ticas para o manuseio adequado de dados sens\u00edveis e privados. Frameworks de Privacidade : Uma lista de frameworks que podem ser aplicados em cen\u00e1rios de dados privados.","title":"Fundamentos de Privacidade"},{"location":"privacy/#fundamentos-de-privacidade","text":"Esta parte do manual de engenharia se concentra nas diretrizes e princ\u00edpios de design de privacidade. O manuseio e prote\u00e7\u00e3o de dados privados requerem tanto o design adequado de software, sistemas e bancos de dados, quanto a implementa\u00e7\u00e3o de processos e procedimentos organizacionais. Em geral, os desenvolvedores que trabalham em projetos da ISE devem aderir \u00e0s pr\u00e1ticas recomendadas padr\u00e3o da Microsoft e regulamenta\u00e7\u00f5es sobre Privacidade e Manuseio de Dados. O manual atualmente cont\u00e9m duas partes principais: Privacidade e Dados : Melhores pr\u00e1ticas para o manuseio adequado de dados sens\u00edveis e privados. Frameworks de Privacidade : Uma lista de frameworks que podem ser aplicados em cen\u00e1rios de dados privados.","title":"Fundamentos de Privacidade"},{"location":"privacy/data-handling/","text":"Privacidade e Dados Objetivo O objetivo desta se\u00e7\u00e3o \u00e9 descrever brevemente as melhores pr\u00e1ticas nos fundamentos de privacidade para projetos de dados ou partes de um projeto que possam conter dados. O que n\u00e3o \u00e9 : Este documento n\u00e3o \u00e9 uma lista de verifica\u00e7\u00e3o para como os clientes ou leitores devem lidar com dados em seu ambiente e n\u00e3o substitui as pol\u00edticas da Microsoft ou dos clientes para o tratamento de dados, prote\u00e7\u00e3o de dados e seguran\u00e7a da informa\u00e7\u00e3o. Introdu\u00e7\u00e3o A Microsoft baseia-se na confian\u00e7a. Nossos clientes confiam na ISE para aderir aos mais altos padr\u00f5es ao lidar com seus dados. Proteger os dados de nossos clientes \u00e9 uma responsabilidade conjunta entre a Microsoft e os clientes; ambos t\u00eam a responsabilidade de ajudar os projetos a seguir as diretrizes descritas nesta p\u00e1gina. Os desenvolvedores que trabalham em projetos da ISE devem implementar as melhores pr\u00e1ticas e orienta\u00e7\u00f5es sobre o manuseio de dados ao longo das fases do projeto. Esta p\u00e1gina n\u00e3o tem a inten\u00e7\u00e3o de sugerir como os clientes devem lidar com dados em seu ambiente. Ela n\u00e3o substitui : Pol\u00edtica de Seguran\u00e7a da Informa\u00e7\u00e3o da Microsoft Adendo de Prote\u00e7\u00e3o de Dados Limitados Adendo de Prote\u00e7\u00e3o de Dados de Servi\u00e7os Profissionais Os 5 W's do tratamento de dados Ao trabalhar em um projeto, \u00e9 importante abordar os seguintes 5 W : Quem - tem acesso aos dados e com quem compartilharemos os dados e/ou modelos desenvolvidos com esses dados? O que - dados s\u00e3o compartilhados conosco e com quais expectativas e entendimento. Os clientes precisam ser expl\u00edcitos sobre como os dados que compartilham se aplicam ao esfor\u00e7o geral. O entendimento n\u00e3o deve ser vago, e n\u00e3o devemos ter acesso a um amplo conjunto de dados se isso n\u00e3o for necess\u00e1rio. Onde - os dados ser\u00e3o armazenados e sob que jurisdi\u00e7\u00e3o legal esses dados estar\u00e3o sujeitos. Isso \u00e9 especialmente importante em pa\u00edses como a Alemanha, onde diferentes leis de privacidade se aplicam, mas tamb\u00e9m \u00e9 importante quando se trata de responder a intima\u00e7\u00f5es legais para os dados. Quando - o acesso aos dados ser\u00e1 fornecido e por quanto tempo? \u00c9 importante n\u00e3o deixar o acesso aos dados indefinidamente ap\u00f3s o t\u00e9rmino do projeto e definir antecipadamente as pol\u00edticas de reten\u00e7\u00e3o de dados. Por que - voc\u00ea deu acesso aos dados? Isso \u00e9 particularmente importante para esclarecer o prop\u00f3sito e quaisquer restri\u00e7\u00f5es de uso al\u00e9m do prop\u00f3sito pretendido. Por favor, use as diretrizes acima para garantir que os dados sejam usados apenas para os fins pretendidos e, assim, conquistar a confian\u00e7a. \u00c9 importante estar ciente das melhores pr\u00e1ticas de tratamento de dados e garantir a clareza necess\u00e1ria para aderir aos 5 W's acima. Tratamento de dados em engajamentos da ISE Os dados nunca devem sair dos ambientes controlados pelo cliente, e contratados ou outros membros no engajamento nunca devem ter acesso a conjuntos completos de dados do cliente, mas devem usar conjuntos de dados limitados do cliente usando as abordagens priorizadas a seguir: Contratados ou parceiros de engajamento n\u00e3o trabalham diretamente com dados de produ\u00e7\u00e3o, os dados ser\u00e3o copiados antes do processamento de acordo com as diretrizes abaixo. Sempre aplique os princ\u00edpios de minimiza\u00e7\u00e3o de dados para minimizar o alcance de erros, trabalhe apenas com o conjunto de dados m\u00ednimo necess\u00e1rio para alcan\u00e7ar os objetivos. Gere dados sint\u00e9ticos para dar suporte ao trabalho do engajamento. Se dados sint\u00e9ticos n\u00e3o forem poss\u00edveis para alcan\u00e7ar os objetivos do projeto, solicite dados anonimizados nos quais a probabilidade de identificar indiv\u00edduos \u00fanicos seja m\u00ednima. Selecione um conjunto de dados limitado e adequado, mais uma vez, siga os Princ\u00edpios de Minimiza\u00e7\u00e3o de Dados e tente trabalhar com o menor n\u00famero poss\u00edvel de linhas para alcan\u00e7ar os objetivos. Antes de come\u00e7ar a trabalhar com dados, certifique-se de que os patches do sistema operacional estejam atualizados e as permiss\u00f5es estejam corretamente definidas sem acesso aberto \u00e0 internet. Os desenvolvedores que trabalham em projetos da ISE trabalhar\u00e3o com nossos clientes para definir os dados necess\u00e1rios para cada engajamento. Se houver necessidade de acessar dados de produ\u00e7\u00e3o, a ISE precisa revisar a necessidade com seu l\u00edder e trabalhar com o cliente para colocar auditorias em vigor para verificar quais dados foram acessados. Os dados de produ\u00e7\u00e3o s\u00f3 devem ser compartilhados com membros aprovados da equipe de engajamento e n\u00e3o devem ser processados/transmitidos fora do ambiente controlado pelo cliente. Os clientes devem fornecer \u00e0 ISE uma c\u00f3pia dos dados solicitados em um local gerenciado pelo cliente. O cliente deve considerar ativar qualquer capacidade de registro para que possam identificar claramente quem tem acesso e o que \u00e9 feito com esse acesso. A ISE deve notificar o cliente quando terminar com os dados e sugerir que o cliente destrua as c\u00f3pias dos dados se n\u00e3o forem mais necess\u00e1rias. Nossos princ\u00edpios orientadores ao lidar com dados em um engajamento Nunca acesse diretamente dados de produ\u00e7\u00e3o. Declare explicitamente o prop\u00f3sito pretendido dos dados que podem ser usados no engajamento. Compartilhe apenas c\u00f3pias dos dados de produ\u00e7\u00e3o com os membros aprovados da equipe de engajamento. Toda a equipe deve trabalhar em conjunto para garantir que n\u00e3o haja c\u00f3pias inativas de dados. Quando os dados n\u00e3o forem mais necess\u00e1rios, a equipe deve trabalhar prontamente para limpar as c\u00f3pias de dados do engajamento. N\u00e3o envie c\u00f3pias dos dados de produ\u00e7\u00e3o fora do ambiente controlado pelo cliente. Use apenas o subconjunto m\u00ednimo de dados necess\u00e1rio para o prop\u00f3sito do engajamento. Perguntas a considerar ao trabalhar com dados Que dados precisamos? Qual \u00e9 a base legal para o processamento desses dados? Se somos o processador com base na obriga\u00e7\u00e3o contratual, qual \u00e9 nossa responsabilidade listada no contrato? O contrato precisa ser alterado? Como podemos conter a prolifera\u00e7\u00e3o de dados? Quais controles de seguran\u00e7a est\u00e3o em vigor para proteger esses dados? Qual \u00e9 o protocolo de viola\u00e7\u00e3o de dados? Como esses dados beneficiam o titular dos dados? Qual \u00e9 a vida \u00fatil desses dados? Precisamos manter esses dados vinculados a um titular de dados? Podemos transformar esses dados em dados N\u00e3o em Posi\u00e7\u00e3o de Identificar (NPI) para uso posterior? Como o sistema est\u00e1 arquitetado para que os direitos do titular dos dados possam ser cumpridos? (por exemplo, manualmente, automaticamente) Se dados pessoais estiverem envolvidos, envolveu as equipes de privacidade e jur\u00eddica para este projeto? Resumo \u00c9 importante apenas trazer dados que s\u00e3o necess\u00e1rios para o problema em quest\u00e3o, quando isso \u00e9 colocado em pr\u00e1tica, descobrimos que s\u00f3 mantemos dados adequados, relevantes e limitados ao que \u00e9 necess\u00e1rio em rela\u00e7\u00e3o aos fins para os quais s\u00e3o processados. Isso \u00e9 particularmente importante para dados pessoais. Uma vez que voc\u00ea tenha dados pessoais, muitas regras e regulamentos se aplicam, alguns exemplos desses podem ser HIPAA, GDPR, CCPA. O cliente deve estar ciente e destacar quais regulamentos se aplicam aos seus dados. Al\u00e9m disso, os sete princ\u00edpios do design de privacidade devem ser revisados e considerados ao lidar com qualquer tipo de dado sens\u00edvel. Recursos Centro de Confian\u00e7a da Microsoft Ferramentas para IA respons\u00e1vel - Prote\u00e7\u00e3o Recursos de Prote\u00e7\u00e3o de Dados FAQ e White Papers Ofertas de Conformidade da Microsoft Listas de Verifica\u00e7\u00e3o de Prontid\u00e3o para Responsabilidade Privacidade por Design: Os 7 Princ\u00edpios Fundamentais","title":"Privacidade e Dados"},{"location":"privacy/data-handling/#privacidade-e-dados","text":"","title":"Privacidade e Dados"},{"location":"privacy/data-handling/#objetivo","text":"O objetivo desta se\u00e7\u00e3o \u00e9 descrever brevemente as melhores pr\u00e1ticas nos fundamentos de privacidade para projetos de dados ou partes de um projeto que possam conter dados. O que n\u00e3o \u00e9 : Este documento n\u00e3o \u00e9 uma lista de verifica\u00e7\u00e3o para como os clientes ou leitores devem lidar com dados em seu ambiente e n\u00e3o substitui as pol\u00edticas da Microsoft ou dos clientes para o tratamento de dados, prote\u00e7\u00e3o de dados e seguran\u00e7a da informa\u00e7\u00e3o.","title":"Objetivo"},{"location":"privacy/data-handling/#introducao","text":"A Microsoft baseia-se na confian\u00e7a. Nossos clientes confiam na ISE para aderir aos mais altos padr\u00f5es ao lidar com seus dados. Proteger os dados de nossos clientes \u00e9 uma responsabilidade conjunta entre a Microsoft e os clientes; ambos t\u00eam a responsabilidade de ajudar os projetos a seguir as diretrizes descritas nesta p\u00e1gina. Os desenvolvedores que trabalham em projetos da ISE devem implementar as melhores pr\u00e1ticas e orienta\u00e7\u00f5es sobre o manuseio de dados ao longo das fases do projeto. Esta p\u00e1gina n\u00e3o tem a inten\u00e7\u00e3o de sugerir como os clientes devem lidar com dados em seu ambiente. Ela n\u00e3o substitui : Pol\u00edtica de Seguran\u00e7a da Informa\u00e7\u00e3o da Microsoft Adendo de Prote\u00e7\u00e3o de Dados Limitados Adendo de Prote\u00e7\u00e3o de Dados de Servi\u00e7os Profissionais","title":"Introdu\u00e7\u00e3o"},{"location":"privacy/data-handling/#os-5-ws-do-tratamento-de-dados","text":"Ao trabalhar em um projeto, \u00e9 importante abordar os seguintes 5 W : Quem - tem acesso aos dados e com quem compartilharemos os dados e/ou modelos desenvolvidos com esses dados? O que - dados s\u00e3o compartilhados conosco e com quais expectativas e entendimento. Os clientes precisam ser expl\u00edcitos sobre como os dados que compartilham se aplicam ao esfor\u00e7o geral. O entendimento n\u00e3o deve ser vago, e n\u00e3o devemos ter acesso a um amplo conjunto de dados se isso n\u00e3o for necess\u00e1rio. Onde - os dados ser\u00e3o armazenados e sob que jurisdi\u00e7\u00e3o legal esses dados estar\u00e3o sujeitos. Isso \u00e9 especialmente importante em pa\u00edses como a Alemanha, onde diferentes leis de privacidade se aplicam, mas tamb\u00e9m \u00e9 importante quando se trata de responder a intima\u00e7\u00f5es legais para os dados. Quando - o acesso aos dados ser\u00e1 fornecido e por quanto tempo? \u00c9 importante n\u00e3o deixar o acesso aos dados indefinidamente ap\u00f3s o t\u00e9rmino do projeto e definir antecipadamente as pol\u00edticas de reten\u00e7\u00e3o de dados. Por que - voc\u00ea deu acesso aos dados? Isso \u00e9 particularmente importante para esclarecer o prop\u00f3sito e quaisquer restri\u00e7\u00f5es de uso al\u00e9m do prop\u00f3sito pretendido. Por favor, use as diretrizes acima para garantir que os dados sejam usados apenas para os fins pretendidos e, assim, conquistar a confian\u00e7a. \u00c9 importante estar ciente das melhores pr\u00e1ticas de tratamento de dados e garantir a clareza necess\u00e1ria para aderir aos 5 W's acima.","title":"Os 5 W's do tratamento de dados"},{"location":"privacy/data-handling/#tratamento-de-dados-em-engajamentos-da-ise","text":"Os dados nunca devem sair dos ambientes controlados pelo cliente, e contratados ou outros membros no engajamento nunca devem ter acesso a conjuntos completos de dados do cliente, mas devem usar conjuntos de dados limitados do cliente usando as abordagens priorizadas a seguir: Contratados ou parceiros de engajamento n\u00e3o trabalham diretamente com dados de produ\u00e7\u00e3o, os dados ser\u00e3o copiados antes do processamento de acordo com as diretrizes abaixo. Sempre aplique os princ\u00edpios de minimiza\u00e7\u00e3o de dados para minimizar o alcance de erros, trabalhe apenas com o conjunto de dados m\u00ednimo necess\u00e1rio para alcan\u00e7ar os objetivos. Gere dados sint\u00e9ticos para dar suporte ao trabalho do engajamento. Se dados sint\u00e9ticos n\u00e3o forem poss\u00edveis para alcan\u00e7ar os objetivos do projeto, solicite dados anonimizados nos quais a probabilidade de identificar indiv\u00edduos \u00fanicos seja m\u00ednima. Selecione um conjunto de dados limitado e adequado, mais uma vez, siga os Princ\u00edpios de Minimiza\u00e7\u00e3o de Dados e tente trabalhar com o menor n\u00famero poss\u00edvel de linhas para alcan\u00e7ar os objetivos. Antes de come\u00e7ar a trabalhar com dados, certifique-se de que os patches do sistema operacional estejam atualizados e as permiss\u00f5es estejam corretamente definidas sem acesso aberto \u00e0 internet. Os desenvolvedores que trabalham em projetos da ISE trabalhar\u00e3o com nossos clientes para definir os dados necess\u00e1rios para cada engajamento. Se houver necessidade de acessar dados de produ\u00e7\u00e3o, a ISE precisa revisar a necessidade com seu l\u00edder e trabalhar com o cliente para colocar auditorias em vigor para verificar quais dados foram acessados. Os dados de produ\u00e7\u00e3o s\u00f3 devem ser compartilhados com membros aprovados da equipe de engajamento e n\u00e3o devem ser processados/transmitidos fora do ambiente controlado pelo cliente. Os clientes devem fornecer \u00e0 ISE uma c\u00f3pia dos dados solicitados em um local gerenciado pelo cliente. O cliente deve considerar ativar qualquer capacidade de registro para que possam identificar claramente quem tem acesso e o que \u00e9 feito com esse acesso. A ISE deve notificar o cliente quando terminar com os dados e sugerir que o cliente destrua as c\u00f3pias dos dados se n\u00e3o forem mais necess\u00e1rias.","title":"Tratamento de dados em engajamentos da ISE"},{"location":"privacy/data-handling/#nossos-principios-orientadores-ao-lidar-com-dados-em-um-engajamento","text":"Nunca acesse diretamente dados de produ\u00e7\u00e3o. Declare explicitamente o prop\u00f3sito pretendido dos dados que podem ser usados no engajamento. Compartilhe apenas c\u00f3pias dos dados de produ\u00e7\u00e3o com os membros aprovados da equipe de engajamento. Toda a equipe deve trabalhar em conjunto para garantir que n\u00e3o haja c\u00f3pias inativas de dados. Quando os dados n\u00e3o forem mais necess\u00e1rios, a equipe deve trabalhar prontamente para limpar as c\u00f3pias de dados do engajamento. N\u00e3o envie c\u00f3pias dos dados de produ\u00e7\u00e3o fora do ambiente controlado pelo cliente. Use apenas o subconjunto m\u00ednimo de dados necess\u00e1rio para o prop\u00f3sito do engajamento.","title":"Nossos princ\u00edpios orientadores ao lidar com dados em um engajamento"},{"location":"privacy/data-handling/#perguntas-a-considerar-ao-trabalhar-com-dados","text":"Que dados precisamos? Qual \u00e9 a base legal para o processamento desses dados? Se somos o processador com base na obriga\u00e7\u00e3o contratual, qual \u00e9 nossa responsabilidade listada no contrato? O contrato precisa ser alterado? Como podemos conter a prolifera\u00e7\u00e3o de dados? Quais controles de seguran\u00e7a est\u00e3o em vigor para proteger esses dados? Qual \u00e9 o protocolo de viola\u00e7\u00e3o de dados? Como esses dados beneficiam o titular dos dados? Qual \u00e9 a vida \u00fatil desses dados? Precisamos manter esses dados vinculados a um titular de dados? Podemos transformar esses dados em dados N\u00e3o em Posi\u00e7\u00e3o de Identificar (NPI) para uso posterior? Como o sistema est\u00e1 arquitetado para que os direitos do titular dos dados possam ser cumpridos? (por exemplo, manualmente, automaticamente) Se dados pessoais estiverem envolvidos, envolveu as equipes de privacidade e jur\u00eddica para este projeto?","title":"Perguntas a considerar ao trabalhar com dados"},{"location":"privacy/data-handling/#resumo","text":"\u00c9 importante apenas trazer dados que s\u00e3o necess\u00e1rios para o problema em quest\u00e3o, quando isso \u00e9 colocado em pr\u00e1tica, descobrimos que s\u00f3 mantemos dados adequados, relevantes e limitados ao que \u00e9 necess\u00e1rio em rela\u00e7\u00e3o aos fins para os quais s\u00e3o processados. Isso \u00e9 particularmente importante para dados pessoais. Uma vez que voc\u00ea tenha dados pessoais, muitas regras e regulamentos se aplicam, alguns exemplos desses podem ser HIPAA, GDPR, CCPA. O cliente deve estar ciente e destacar quais regulamentos se aplicam aos seus dados. Al\u00e9m disso, os sete princ\u00edpios do design de privacidade devem ser revisados e considerados ao lidar com qualquer tipo de dado sens\u00edvel.","title":"Resumo"},{"location":"privacy/data-handling/#recursos","text":"Centro de Confian\u00e7a da Microsoft Ferramentas para IA respons\u00e1vel - Prote\u00e7\u00e3o Recursos de Prote\u00e7\u00e3o de Dados FAQ e White Papers Ofertas de Conformidade da Microsoft Listas de Verifica\u00e7\u00e3o de Prontid\u00e3o para Responsabilidade Privacidade por Design: Os 7 Princ\u00edpios Fundamentais","title":"Recursos"},{"location":"privacy/privacy-frameworks/","text":"Quadro de Refer\u00eancia para Privacidade Nesta se\u00e7\u00e3o, discutirei ferramentas e estruturas relacionadas \u00e0 privacidade que podem ser aproveitadas quando a an\u00e1lise de dados ou o desenvolvimento de modelos precisa ser realizado em dados privados. \u00c9 importante ressaltar que o uso dessas estruturas ainda requer a ader\u00eancia \u00e0s regulamenta\u00e7\u00f5es de privacidade e a aplica\u00e7\u00e3o de medidas adicionais de seguran\u00e7a. Cen\u00e1rios T\u00edpicos para Utiliza\u00e7\u00e3o de um Quadro de Privacidade Compartilhar dados ou resultados enquanto preserva a privacidade dos indiv\u00edduos. Realizar an\u00e1lises ou modelagem estat\u00edstica em dados privados. Desenvolver modelos de ML que preservem a privacidade e pipelines de dados. Quadros de Privacidade Proteger dados privados envolve todo o ciclo de vida dos dados, desde a aquisi\u00e7\u00e3o at\u00e9 o armazenamento, processamento, an\u00e1lise, modelagem e uso em relat\u00f3rios ou modelos de machine learning. Deve-se aplicar salvaguardas e restri\u00e7\u00f5es adequadas em cada uma dessas fases. Nesta se\u00e7\u00e3o, fornecerei uma lista n\u00e3o exaustiva de quadros de privacidade que podem ser aproveitados para proteger e preservar a privacidade. Concentramos-nos em quatro casos principais no ciclo de vida dos dados: Obten\u00e7\u00e3o de dados n\u00e3o sens\u00edveis . Estabelecimento de ambientes de pesquisa e modelagem confi\u00e1veis . Cria\u00e7\u00e3o de pipelines de dados e ML preservadores de privacidade . Preven\u00e7\u00e3o de perda de dados . Obten\u00e7\u00e3o de dados n\u00e3o sens\u00edveis Em muitos cen\u00e1rios, analistas, pesquisadores e cientistas de dados precisam de acesso a uma vers\u00e3o n\u00e3o sens\u00edvel ou amostra dos dados privados. Nesta se\u00e7\u00e3o, discutirei duas abordagens para obter dados n\u00e3o sens\u00edveis. Observa\u00e7\u00e3o: Essas duas abordagens n\u00e3o garantem que o resultado n\u00e3o incluir\u00e1 dados privados, e medidas adicionais devem ser aplicadas. Desidentifica\u00e7\u00e3o de dados A desidentifica\u00e7\u00e3o \u00e9 o processo de aplicar um conjunto de transforma\u00e7\u00f5es a um conjunto de dados para reduzir o risco de divulga\u00e7\u00e3o n\u00e3o intencional de dados pessoais. Isso envolve a remo\u00e7\u00e3o ou substitui\u00e7\u00e3o de identificadores diretos (como nome ou n\u00famero de seguran\u00e7a social) ou quasi-identificadores, que podem ser usados para reidentifica\u00e7\u00e3o com informa\u00e7\u00f5es externas adicionais. A desidentifica\u00e7\u00e3o pode ser aplicada a diferentes tipos de dados, como dados estruturados, imagens e texto. No entanto, a desidentifica\u00e7\u00e3o de dados n\u00e3o estruturados geralmente envolve abordagens estat\u00edsticas que podem resultar na remo\u00e7\u00e3o ou substitui\u00e7\u00e3o n\u00e3o detectada de informa\u00e7\u00f5es pessoais identific\u00e1veis (PII) ou informa\u00e7\u00f5es n\u00e3o privadas. Aqui, vou destacar v\u00e1rias solu\u00e7\u00f5es de desidentifica\u00e7\u00e3o dispon\u00edveis como open source: Presidio : O Presidio ajuda a garantir que dados sens\u00edveis sejam gerenciados e governados adequadamente. Ele fornece m\u00f3dulos de identifica\u00e7\u00e3o e anonimiza\u00e7\u00e3o r\u00e1pidos para entidades privadas em texto, como n\u00fameros de cart\u00e3o de cr\u00e9dito, nomes, locais, n\u00fameros de previd\u00eancia social, carteiras de bitcoin, n\u00fameros de telefone dos EUA, dados financeiros e muito mais em texto e imagens n\u00e3o estruturados. \u00c9 \u00fatil quando alta personaliza\u00e7\u00e3o \u00e9 necess\u00e1ria, por exemplo, para detectar entidades de PII personalizadas ou idiomas espec\u00edficos. FHIR Tools for Anonymization : Este projeto de c\u00f3digo aberto ajuda a anonimizar dados de sa\u00fade FHIR (Recursos de Interoperabilidade R\u00e1pida em Sa\u00fade) no local ou na nuvem, para uso secund\u00e1rio, como pesquisa e sa\u00fade p\u00fablica. Trabalha com o formato FHIR (Stu3 e R4) e permite diferentes estrat\u00e9gias de anonimiza\u00e7\u00e3o (deslocamento de datas, cripto-hash, criptografia, substitui\u00e7\u00e3o, perturba\u00e7\u00e3o, generaliza\u00e7\u00e3o). ARX : O ARX permite a anonimiza\u00e7\u00e3o usando modelos estat\u00edsticos, como k-anonimato, \u2113-diversidade, t-closeness e \u03b4-presence. \u00c9 \u00fatil para validar a anonimiza\u00e7\u00e3o de dados agregados. k-Anonymity : Este reposit\u00f3rio do GitHub cont\u00e9m exemplos de como produzir conjuntos de dados k-an\u00f4nimos. O k-anonimato protege a privacidade das pessoas agrupando seus atributos em grupos de pelo menos k pessoas. Gera\u00e7\u00e3o de dados sint\u00e9ticos Um conjunto de dados sint\u00e9ticos \u00e9 um reposit\u00f3rio de dados gerados a partir de dados reais e possui as mesmas propriedades estat\u00edsticas dos dados reais. O grau de semelhan\u00e7a entre um conjunto de dados sint\u00e9ticos e os dados reais \u00e9 uma medida de utilidade. Os conjuntos de dados sint\u00e9ticos podem ser ben\u00e9ficos em aplica\u00e7\u00f5es sens\u00edveis, como classifica\u00e7\u00f5es m\u00e9dicas ou modelagem financeira, onde obter um conjunto de dados rotulados de alta qualidade \u00e9 muitas vezes proibitivo. Ao determinar o melhor m\u00e9todo para criar dados sint\u00e9ticos, \u00e9 essencial primeiro considerar que tipo de dados sint\u00e9ticos voc\u00ea deseja ter. Existem duas categorias amplas de escolha, cada uma com benef\u00edcios e desvantagens diferentes: Totalmente sint\u00e9tico: Esses dados n\u00e3o cont\u00eam nenhum dado original, o que significa que a reidentifica\u00e7\u00e3o de qualquer unidade individual \u00e9 quase imposs\u00edvel, e todas as vari\u00e1veis ainda est\u00e3o totalmente dispon\u00edveis. Parcialmente sint\u00e9tico: Apenas dados sens\u00edveis s\u00e3o substitu\u00eddos por dados sint\u00e9ticos, o que requer uma forte depend\u00eancia do modelo de imputa\u00e7\u00e3o. Isso leva a uma depend\u00eancia diminu\u00edda do modelo, mas significa que alguma divulga\u00e7\u00e3o \u00e9 poss\u00edvel devido aos valores reais dentro do conjunto de dados. Aqui est\u00e3o algumas solu\u00e7\u00f5es para gera\u00e7\u00e3o de dados sint\u00e9ticos: Synthea : O Synthea foi desenvolvido com base em numerosas fontes de dados coletadas na Internet, incluindo demografia do US Census Bureau, taxas de preval\u00eancia e incid\u00eancia dos Centros de Controle e Preven\u00e7\u00e3o de Doen\u00e7as e relat\u00f3rios dos Institutos Nacionais de Sa\u00fade. Os modelos de doen\u00e7as e tratamentos incluem anota\u00e7\u00f5es e cita\u00e7\u00f5es para todos os dados, estat\u00edsticas e tratamentos. Esses modelos de doen\u00e7as e tratamentos interagem adequadamente com o registro de sa\u00fade. Gerador de conjunto de dados PII : Um gerador de dados sint\u00e9ticos desenvolvido com base no Fake Name Generator. Ele pode criar uma lista de amostras de entrada que cont\u00eam entidades de PII falsas no lugar de espa\u00e7os reservados. CheckList : O CheckList fornece um quadro para t\u00e9cnicas de perturba\u00e7\u00e3o para avaliar sistematicamente as capacidades comportamentais espec\u00edficas de modelos de processamento de linguagem natural (NLP). Mimesis : O Mimesis \u00e9 um gerador de dados falsos de alto desempenho para Python, que fornece dados para diversas finalidades em diferentes idiomas. Faker : O Faker \u00e9 um pacote Python que gera dados falsos para voc\u00ea. Pode ser usado para preencher bancos de dados, criar documentos XML com boa apar\u00eancia, preencher seu sistema de persist\u00eancia para testes de estresse ou anonimizar dados retirados de um servi\u00e7o de produ\u00e7\u00e3o. Plaitpy : O Plaitpy foi projetado para modelar facilmente dados falsos que t\u00eam uma forma interessante. Muitos geradores de dados falsos modelam seus dados como uma cole\u00e7\u00e3o de vari\u00e1veis IID; com o Plaitpy, voc\u00ea pode unir essas vari\u00e1veis em um modelo mais coerente. Ambientes de Pesquisa e Modelagem Confi\u00e1veis Ambientes de Pesquisa Confi\u00e1veis Ambientes de Pesquisa Confi\u00e1veis (TREs) permitem que as organiza\u00e7\u00f5es criem espa\u00e7os de trabalho seguros para analistas, cientistas de dados e pesquisadores que precisam de acesso a dados sens\u00edveis. TREs imp\u00f5em um limite seguro em torno de espa\u00e7os de trabalho distintos para permitir controles de governan\u00e7a de informa\u00e7\u00f5es. Cada espa\u00e7o de trabalho \u00e9 acess\u00edvel por um conjunto de usu\u00e1rios autorizados, previne a exfiltra\u00e7\u00e3o de dados sens\u00edveis e tem acesso a um ou mais conjuntos de dados fornecidos pela plataforma de dados. Aqui est\u00e3o algumas alternativas para Ambientes de Pesquisa Confi\u00e1veis: Azure Trusted Research Environment : Um ambiente TRE de c\u00f3digo aberto para o Azure. Aridhia DRE : Um ambiente de pesquisa confi\u00e1vel. Aprendizado de M\u00e1quina \"Sem Olhos\" Em certas situa\u00e7\u00f5es, os cientistas de dados podem precisar treinar modelos com dados que n\u00e3o t\u00eam permiss\u00e3o para visualizar. Nesses casos, \u00e9 recomend\u00e1vel uma abordagem \"sem olhos\". Uma abordagem \"sem olhos\" oferece a um cientista de dados um ambiente no qual os scripts podem ser executados nos dados, mas o acesso direto \u00e0s amostras n\u00e3o \u00e9 permitido. Durante o processamento dentro do ambiente \"sem olhos\", apenas determinadas sa\u00eddas (por exemplo, logs) podem ser extra\u00eddas de volta para o usu\u00e1rio. Isso permite que um usu\u00e1rio envie um script que treina um modelo e inspecione o desempenho do modelo, mas n\u00e3o veja em quais amostras o modelo previu uma sa\u00edda incorreta. Al\u00e9m do ambiente \"sem olhos\", essa abordagem geralmente envolve o fornecimento de acesso a um conjunto de dados \"com olhos\", que \u00e9 um conjunto de dados representativo e limpo para fins de design do modelo. O conjunto de dados \"com olhos\" geralmente \u00e9 um subconjunto desidentificado do conjunto de dados privados ou um conjunto de dados sint\u00e9ticos gerado com base nas caracter\u00edsticas do conjunto de dados privados. Plataformas de Compartilhamento de Dados Privados V\u00e1rias ferramentas e sistemas permitem que diferentes partes compartilhem dados com terceiros, protegendo entidades privadas e processem dados de forma segura, reduzindo a probabilidade de exfiltra\u00e7\u00e3o de dados. Essas ferramentas incluem sistemas de Computa\u00e7\u00e3o Segura entre V\u00e1rias Partes (SMPC), sistemas de Criptografia Homom\u00f3rfica, Computa\u00e7\u00e3o Confidencial, estruturas de an\u00e1lise de dados privados, como PySift , entre outras. Pipelines de Dados e ML Preservadores de Privacidade Mesmo quando nossos dados est\u00e3o seguros, entidades privadas podem ainda ser extra\u00eddas quando os dados s\u00e3o consumidos. Pipelines de dados e modelos de ML preservadores de privacidade focam em minimizar o risco de exfiltra\u00e7\u00e3o de dados privados durante a consulta de dados ou previs\u00f5es de modelos. Privacidade Diferencial A privacidade diferencial (DP) \u00e9 um sistema que permite extrair insights significativos de conjuntos de dados sobre subgrupos de pessoas, ao mesmo tempo em que oferece garantias s\u00f3lidas de prote\u00e7\u00e3o \u00e0 privacidade de qualquer indiv\u00edduo. Isso \u00e9 tipicamente alcan\u00e7ado adicionando um pequeno ru\u00eddo estat\u00edstico \u00e0s informa\u00e7\u00f5es de cada indiv\u00edduo, introduzindo incerteza nos dados. No entanto, as informa\u00e7\u00f5es obtidas ainda representam com precis\u00e3o o que pretendemos aprender sobre a popula\u00e7\u00e3o como um todo. Essa abordagem \u00e9 conhecida por ser robusta a ataques de reidentifica\u00e7\u00e3o e reconstru\u00e7\u00e3o de dados por advers\u00e1rios que possuem informa\u00e7\u00f5es auxiliares. Ferramentas que implementam DP incluem SmartNoise e Tensorflow Privacy , entre outras. Criptografia Homom\u00f3rfica A criptografia homom\u00f3rfica (HE) \u00e9 uma forma de criptografia que permite realizar c\u00e1lculos em dados criptografados sem descriptograf\u00e1-los primeiro. O resultado da computa\u00e7\u00e3o F est\u00e1 em uma forma criptografada, que, ao ser descriptografada, nos d\u00e1 o mesmo resultado se a computa\u00e7\u00e3o F fosse feita nos dados brutos n\u00e3o criptografados. Frameworks de criptografia homom\u00f3rfica incluem o Microsoft SEAL , [Palis ade](https://palisade-crypto.org/), PySift e outros. Aprendizado Federado O aprendizado federado \u00e9 uma t\u00e9cnica de aprendizado de m\u00e1quina que permite o treinamento de modelos de ML de forma descentralizada, sem a necessidade de compartilhar os dados reais. Em vez de enviar dados para o mecanismo de processamento do modelo, a abordagem \u00e9 distribuir o modelo para os diferentes propriet\u00e1rios de dados e realizar o treinamento de forma distribu\u00edda. Frameworks de aprendizado federado incluem TensorFlow Federated Learning , FATE e IBM Federated Learning , entre outros. Preven\u00e7\u00e3o de Perda de Dados As organiza\u00e7\u00f5es t\u00eam informa\u00e7\u00f5es sens\u00edveis sob seu controle, como dados financeiros, dados propriet\u00e1rios, n\u00fameros de cart\u00f5es de cr\u00e9dito, registros de sa\u00fade ou n\u00fameros de previd\u00eancia social. Para ajudar a proteger esses dados sens\u00edveis e reduzir os riscos, \u00e9 necess\u00e1rio impedir que os usu\u00e1rios compartilhem inadequadamente esses dados com pessoas que n\u00e3o devem t\u00ea-los. Essa pr\u00e1tica \u00e9 chamada de preven\u00e7\u00e3o de perda de dados (DLP) . Abaixo, focamos em dois aspectos da DLP: classifica\u00e7\u00e3o de dados sens\u00edveis e gerenciamento de acesso. Classifica\u00e7\u00e3o de Dados Sens\u00edveis A classifica\u00e7\u00e3o de dados sens\u00edveis \u00e9 um aspecto importante da DLP, pois permite que as organiza\u00e7\u00f5es rastreiem, monitorem, protejam e identifiquem dados sens\u00edveis e privados. Al\u00e9m disso, diferentes n\u00edveis de sensibilidade podem ser aplicados a diferentes itens de dados, facilitando a governan\u00e7a e a cataloga\u00e7\u00e3o adequadas. Normalmente, existem quatro n\u00edveis de classifica\u00e7\u00e3o de dados: P\u00fablico Interno Confidencial Restrito / Altamente confidencial Ferramentas para classifica\u00e7\u00e3o de dados no Azure incluem o Microsoft Information Protection (MIP), Azure Purview , Data Discovery & Classification for Azure SQL Database, Azure SQL Managed Instance e Azure Synapse e Data Discovery & Classification for SQL Server , entre outros. Frequentemente, ferramentas usadas para desidentifica\u00e7\u00e3o tamb\u00e9m podem servir como classificadores de dados sens\u00edveis. Consulte ferramentas de desidentifica\u00e7\u00e3o de dados para tais ferramentas. Recursos adicionais: Diretrizes de exemplo para classifica\u00e7\u00e3o de dados Saiba sobre os n\u00edveis de sensibilidade Gerenciamento de Acesso O controle de acesso \u00e9 um componente importante da privacidade desde o in\u00edcio e faz parte da prote\u00e7\u00e3o geral do ciclo de vida dos dados. Um controle de acesso bem-sucedido restringir\u00e1 o acesso apenas a indiv\u00edduos autorizados que devem ter acesso aos dados. Uma vez que os dados est\u00e3o seguros em um ambiente, \u00e9 importante revisar quem deve acessar esses dados e para que finalidade. O controle de acesso pode ser auditado com uma estrat\u00e9gia de registro abrangente, que pode incluir a integra\u00e7\u00e3o de registros de atividades que podem fornecer insights sobre opera\u00e7\u00f5es realizadas em recursos em uma assinatura. OWASP Access Control Cheat Sheet","title":"Quadro de Refer\u00eancia para Privacidade"},{"location":"privacy/privacy-frameworks/#quadro-de-referencia-para-privacidade","text":"Nesta se\u00e7\u00e3o, discutirei ferramentas e estruturas relacionadas \u00e0 privacidade que podem ser aproveitadas quando a an\u00e1lise de dados ou o desenvolvimento de modelos precisa ser realizado em dados privados. \u00c9 importante ressaltar que o uso dessas estruturas ainda requer a ader\u00eancia \u00e0s regulamenta\u00e7\u00f5es de privacidade e a aplica\u00e7\u00e3o de medidas adicionais de seguran\u00e7a.","title":"Quadro de Refer\u00eancia para Privacidade"},{"location":"privacy/privacy-frameworks/#cenarios-tipicos-para-utilizacao-de-um-quadro-de-privacidade","text":"Compartilhar dados ou resultados enquanto preserva a privacidade dos indiv\u00edduos. Realizar an\u00e1lises ou modelagem estat\u00edstica em dados privados. Desenvolver modelos de ML que preservem a privacidade e pipelines de dados.","title":"Cen\u00e1rios T\u00edpicos para Utiliza\u00e7\u00e3o de um Quadro de Privacidade"},{"location":"privacy/privacy-frameworks/#quadros-de-privacidade","text":"Proteger dados privados envolve todo o ciclo de vida dos dados, desde a aquisi\u00e7\u00e3o at\u00e9 o armazenamento, processamento, an\u00e1lise, modelagem e uso em relat\u00f3rios ou modelos de machine learning. Deve-se aplicar salvaguardas e restri\u00e7\u00f5es adequadas em cada uma dessas fases. Nesta se\u00e7\u00e3o, fornecerei uma lista n\u00e3o exaustiva de quadros de privacidade que podem ser aproveitados para proteger e preservar a privacidade. Concentramos-nos em quatro casos principais no ciclo de vida dos dados: Obten\u00e7\u00e3o de dados n\u00e3o sens\u00edveis . Estabelecimento de ambientes de pesquisa e modelagem confi\u00e1veis . Cria\u00e7\u00e3o de pipelines de dados e ML preservadores de privacidade . Preven\u00e7\u00e3o de perda de dados .","title":"Quadros de Privacidade"},{"location":"privacy/privacy-frameworks/#obtencao-de-dados-nao-sensiveis","text":"Em muitos cen\u00e1rios, analistas, pesquisadores e cientistas de dados precisam de acesso a uma vers\u00e3o n\u00e3o sens\u00edvel ou amostra dos dados privados. Nesta se\u00e7\u00e3o, discutirei duas abordagens para obter dados n\u00e3o sens\u00edveis. Observa\u00e7\u00e3o: Essas duas abordagens n\u00e3o garantem que o resultado n\u00e3o incluir\u00e1 dados privados, e medidas adicionais devem ser aplicadas.","title":"Obten\u00e7\u00e3o de dados n\u00e3o sens\u00edveis"},{"location":"privacy/privacy-frameworks/#desidentificacao-de-dados","text":"A desidentifica\u00e7\u00e3o \u00e9 o processo de aplicar um conjunto de transforma\u00e7\u00f5es a um conjunto de dados para reduzir o risco de divulga\u00e7\u00e3o n\u00e3o intencional de dados pessoais. Isso envolve a remo\u00e7\u00e3o ou substitui\u00e7\u00e3o de identificadores diretos (como nome ou n\u00famero de seguran\u00e7a social) ou quasi-identificadores, que podem ser usados para reidentifica\u00e7\u00e3o com informa\u00e7\u00f5es externas adicionais. A desidentifica\u00e7\u00e3o pode ser aplicada a diferentes tipos de dados, como dados estruturados, imagens e texto. No entanto, a desidentifica\u00e7\u00e3o de dados n\u00e3o estruturados geralmente envolve abordagens estat\u00edsticas que podem resultar na remo\u00e7\u00e3o ou substitui\u00e7\u00e3o n\u00e3o detectada de informa\u00e7\u00f5es pessoais identific\u00e1veis (PII) ou informa\u00e7\u00f5es n\u00e3o privadas. Aqui, vou destacar v\u00e1rias solu\u00e7\u00f5es de desidentifica\u00e7\u00e3o dispon\u00edveis como open source: Presidio : O Presidio ajuda a garantir que dados sens\u00edveis sejam gerenciados e governados adequadamente. Ele fornece m\u00f3dulos de identifica\u00e7\u00e3o e anonimiza\u00e7\u00e3o r\u00e1pidos para entidades privadas em texto, como n\u00fameros de cart\u00e3o de cr\u00e9dito, nomes, locais, n\u00fameros de previd\u00eancia social, carteiras de bitcoin, n\u00fameros de telefone dos EUA, dados financeiros e muito mais em texto e imagens n\u00e3o estruturados. \u00c9 \u00fatil quando alta personaliza\u00e7\u00e3o \u00e9 necess\u00e1ria, por exemplo, para detectar entidades de PII personalizadas ou idiomas espec\u00edficos. FHIR Tools for Anonymization : Este projeto de c\u00f3digo aberto ajuda a anonimizar dados de sa\u00fade FHIR (Recursos de Interoperabilidade R\u00e1pida em Sa\u00fade) no local ou na nuvem, para uso secund\u00e1rio, como pesquisa e sa\u00fade p\u00fablica. Trabalha com o formato FHIR (Stu3 e R4) e permite diferentes estrat\u00e9gias de anonimiza\u00e7\u00e3o (deslocamento de datas, cripto-hash, criptografia, substitui\u00e7\u00e3o, perturba\u00e7\u00e3o, generaliza\u00e7\u00e3o). ARX : O ARX permite a anonimiza\u00e7\u00e3o usando modelos estat\u00edsticos, como k-anonimato, \u2113-diversidade, t-closeness e \u03b4-presence. \u00c9 \u00fatil para validar a anonimiza\u00e7\u00e3o de dados agregados. k-Anonymity : Este reposit\u00f3rio do GitHub cont\u00e9m exemplos de como produzir conjuntos de dados k-an\u00f4nimos. O k-anonimato protege a privacidade das pessoas agrupando seus atributos em grupos de pelo menos k pessoas.","title":"Desidentifica\u00e7\u00e3o de dados"},{"location":"privacy/privacy-frameworks/#geracao-de-dados-sinteticos","text":"Um conjunto de dados sint\u00e9ticos \u00e9 um reposit\u00f3rio de dados gerados a partir de dados reais e possui as mesmas propriedades estat\u00edsticas dos dados reais. O grau de semelhan\u00e7a entre um conjunto de dados sint\u00e9ticos e os dados reais \u00e9 uma medida de utilidade. Os conjuntos de dados sint\u00e9ticos podem ser ben\u00e9ficos em aplica\u00e7\u00f5es sens\u00edveis, como classifica\u00e7\u00f5es m\u00e9dicas ou modelagem financeira, onde obter um conjunto de dados rotulados de alta qualidade \u00e9 muitas vezes proibitivo. Ao determinar o melhor m\u00e9todo para criar dados sint\u00e9ticos, \u00e9 essencial primeiro considerar que tipo de dados sint\u00e9ticos voc\u00ea deseja ter. Existem duas categorias amplas de escolha, cada uma com benef\u00edcios e desvantagens diferentes: Totalmente sint\u00e9tico: Esses dados n\u00e3o cont\u00eam nenhum dado original, o que significa que a reidentifica\u00e7\u00e3o de qualquer unidade individual \u00e9 quase imposs\u00edvel, e todas as vari\u00e1veis ainda est\u00e3o totalmente dispon\u00edveis. Parcialmente sint\u00e9tico: Apenas dados sens\u00edveis s\u00e3o substitu\u00eddos por dados sint\u00e9ticos, o que requer uma forte depend\u00eancia do modelo de imputa\u00e7\u00e3o. Isso leva a uma depend\u00eancia diminu\u00edda do modelo, mas significa que alguma divulga\u00e7\u00e3o \u00e9 poss\u00edvel devido aos valores reais dentro do conjunto de dados. Aqui est\u00e3o algumas solu\u00e7\u00f5es para gera\u00e7\u00e3o de dados sint\u00e9ticos: Synthea : O Synthea foi desenvolvido com base em numerosas fontes de dados coletadas na Internet, incluindo demografia do US Census Bureau, taxas de preval\u00eancia e incid\u00eancia dos Centros de Controle e Preven\u00e7\u00e3o de Doen\u00e7as e relat\u00f3rios dos Institutos Nacionais de Sa\u00fade. Os modelos de doen\u00e7as e tratamentos incluem anota\u00e7\u00f5es e cita\u00e7\u00f5es para todos os dados, estat\u00edsticas e tratamentos. Esses modelos de doen\u00e7as e tratamentos interagem adequadamente com o registro de sa\u00fade. Gerador de conjunto de dados PII : Um gerador de dados sint\u00e9ticos desenvolvido com base no Fake Name Generator. Ele pode criar uma lista de amostras de entrada que cont\u00eam entidades de PII falsas no lugar de espa\u00e7os reservados. CheckList : O CheckList fornece um quadro para t\u00e9cnicas de perturba\u00e7\u00e3o para avaliar sistematicamente as capacidades comportamentais espec\u00edficas de modelos de processamento de linguagem natural (NLP). Mimesis : O Mimesis \u00e9 um gerador de dados falsos de alto desempenho para Python, que fornece dados para diversas finalidades em diferentes idiomas. Faker : O Faker \u00e9 um pacote Python que gera dados falsos para voc\u00ea. Pode ser usado para preencher bancos de dados, criar documentos XML com boa apar\u00eancia, preencher seu sistema de persist\u00eancia para testes de estresse ou anonimizar dados retirados de um servi\u00e7o de produ\u00e7\u00e3o. Plaitpy : O Plaitpy foi projetado para modelar facilmente dados falsos que t\u00eam uma forma interessante. Muitos geradores de dados falsos modelam seus dados como uma cole\u00e7\u00e3o de vari\u00e1veis IID; com o Plaitpy, voc\u00ea pode unir essas vari\u00e1veis em um modelo mais coerente.","title":"Gera\u00e7\u00e3o de dados sint\u00e9ticos"},{"location":"privacy/privacy-frameworks/#ambientes-de-pesquisa-e-modelagem-confiaveis","text":"","title":"Ambientes de Pesquisa e Modelagem Confi\u00e1veis"},{"location":"privacy/privacy-frameworks/#ambientes-de-pesquisa-confiaveis","text":"Ambientes de Pesquisa Confi\u00e1veis (TREs) permitem que as organiza\u00e7\u00f5es criem espa\u00e7os de trabalho seguros para analistas, cientistas de dados e pesquisadores que precisam de acesso a dados sens\u00edveis. TREs imp\u00f5em um limite seguro em torno de espa\u00e7os de trabalho distintos para permitir controles de governan\u00e7a de informa\u00e7\u00f5es. Cada espa\u00e7o de trabalho \u00e9 acess\u00edvel por um conjunto de usu\u00e1rios autorizados, previne a exfiltra\u00e7\u00e3o de dados sens\u00edveis e tem acesso a um ou mais conjuntos de dados fornecidos pela plataforma de dados. Aqui est\u00e3o algumas alternativas para Ambientes de Pesquisa Confi\u00e1veis: Azure Trusted Research Environment : Um ambiente TRE de c\u00f3digo aberto para o Azure. Aridhia DRE : Um ambiente de pesquisa confi\u00e1vel.","title":"Ambientes de Pesquisa Confi\u00e1veis"},{"location":"privacy/privacy-frameworks/#aprendizado-de-maquina-sem-olhos","text":"Em certas situa\u00e7\u00f5es, os cientistas de dados podem precisar treinar modelos com dados que n\u00e3o t\u00eam permiss\u00e3o para visualizar. Nesses casos, \u00e9 recomend\u00e1vel uma abordagem \"sem olhos\". Uma abordagem \"sem olhos\" oferece a um cientista de dados um ambiente no qual os scripts podem ser executados nos dados, mas o acesso direto \u00e0s amostras n\u00e3o \u00e9 permitido. Durante o processamento dentro do ambiente \"sem olhos\", apenas determinadas sa\u00eddas (por exemplo, logs) podem ser extra\u00eddas de volta para o usu\u00e1rio. Isso permite que um usu\u00e1rio envie um script que treina um modelo e inspecione o desempenho do modelo, mas n\u00e3o veja em quais amostras o modelo previu uma sa\u00edda incorreta. Al\u00e9m do ambiente \"sem olhos\", essa abordagem geralmente envolve o fornecimento de acesso a um conjunto de dados \"com olhos\", que \u00e9 um conjunto de dados representativo e limpo para fins de design do modelo. O conjunto de dados \"com olhos\" geralmente \u00e9 um subconjunto desidentificado do conjunto de dados privados ou um conjunto de dados sint\u00e9ticos gerado com base nas caracter\u00edsticas do conjunto de dados privados.","title":"Aprendizado de M\u00e1quina \"Sem Olhos\""},{"location":"privacy/privacy-frameworks/#plataformas-de-compartilhamento-de-dados-privados","text":"V\u00e1rias ferramentas e sistemas permitem que diferentes partes compartilhem dados com terceiros, protegendo entidades privadas e processem dados de forma segura, reduzindo a probabilidade de exfiltra\u00e7\u00e3o de dados. Essas ferramentas incluem sistemas de Computa\u00e7\u00e3o Segura entre V\u00e1rias Partes (SMPC), sistemas de Criptografia Homom\u00f3rfica, Computa\u00e7\u00e3o Confidencial, estruturas de an\u00e1lise de dados privados, como PySift , entre outras.","title":"Plataformas de Compartilhamento de Dados Privados"},{"location":"privacy/privacy-frameworks/#pipelines-de-dados-e-ml-preservadores-de-privacidade","text":"Mesmo quando nossos dados est\u00e3o seguros, entidades privadas podem ainda ser extra\u00eddas quando os dados s\u00e3o consumidos. Pipelines de dados e modelos de ML preservadores de privacidade focam em minimizar o risco de exfiltra\u00e7\u00e3o de dados privados durante a consulta de dados ou previs\u00f5es de modelos.","title":"Pipelines de Dados e ML Preservadores de Privacidade"},{"location":"privacy/privacy-frameworks/#privacidade-diferencial","text":"A privacidade diferencial (DP) \u00e9 um sistema que permite extrair insights significativos de conjuntos de dados sobre subgrupos de pessoas, ao mesmo tempo em que oferece garantias s\u00f3lidas de prote\u00e7\u00e3o \u00e0 privacidade de qualquer indiv\u00edduo. Isso \u00e9 tipicamente alcan\u00e7ado adicionando um pequeno ru\u00eddo estat\u00edstico \u00e0s informa\u00e7\u00f5es de cada indiv\u00edduo, introduzindo incerteza nos dados. No entanto, as informa\u00e7\u00f5es obtidas ainda representam com precis\u00e3o o que pretendemos aprender sobre a popula\u00e7\u00e3o como um todo. Essa abordagem \u00e9 conhecida por ser robusta a ataques de reidentifica\u00e7\u00e3o e reconstru\u00e7\u00e3o de dados por advers\u00e1rios que possuem informa\u00e7\u00f5es auxiliares. Ferramentas que implementam DP incluem SmartNoise e Tensorflow Privacy , entre outras.","title":"Privacidade Diferencial"},{"location":"privacy/privacy-frameworks/#criptografia-homomorfica","text":"A criptografia homom\u00f3rfica (HE) \u00e9 uma forma de criptografia que permite realizar c\u00e1lculos em dados criptografados sem descriptograf\u00e1-los primeiro. O resultado da computa\u00e7\u00e3o F est\u00e1 em uma forma criptografada, que, ao ser descriptografada, nos d\u00e1 o mesmo resultado se a computa\u00e7\u00e3o F fosse feita nos dados brutos n\u00e3o criptografados. Frameworks de criptografia homom\u00f3rfica incluem o Microsoft SEAL , [Palis ade](https://palisade-crypto.org/), PySift e outros.","title":"Criptografia Homom\u00f3rfica"},{"location":"privacy/privacy-frameworks/#aprendizado-federado","text":"O aprendizado federado \u00e9 uma t\u00e9cnica de aprendizado de m\u00e1quina que permite o treinamento de modelos de ML de forma descentralizada, sem a necessidade de compartilhar os dados reais. Em vez de enviar dados para o mecanismo de processamento do modelo, a abordagem \u00e9 distribuir o modelo para os diferentes propriet\u00e1rios de dados e realizar o treinamento de forma distribu\u00edda. Frameworks de aprendizado federado incluem TensorFlow Federated Learning , FATE e IBM Federated Learning , entre outros.","title":"Aprendizado Federado"},{"location":"privacy/privacy-frameworks/#prevencao-de-perda-de-dados","text":"As organiza\u00e7\u00f5es t\u00eam informa\u00e7\u00f5es sens\u00edveis sob seu controle, como dados financeiros, dados propriet\u00e1rios, n\u00fameros de cart\u00f5es de cr\u00e9dito, registros de sa\u00fade ou n\u00fameros de previd\u00eancia social. Para ajudar a proteger esses dados sens\u00edveis e reduzir os riscos, \u00e9 necess\u00e1rio impedir que os usu\u00e1rios compartilhem inadequadamente esses dados com pessoas que n\u00e3o devem t\u00ea-los. Essa pr\u00e1tica \u00e9 chamada de preven\u00e7\u00e3o de perda de dados (DLP) . Abaixo, focamos em dois aspectos da DLP: classifica\u00e7\u00e3o de dados sens\u00edveis e gerenciamento de acesso.","title":"Preven\u00e7\u00e3o de Perda de Dados"},{"location":"privacy/privacy-frameworks/#classificacao-de-dados-sensiveis","text":"A classifica\u00e7\u00e3o de dados sens\u00edveis \u00e9 um aspecto importante da DLP, pois permite que as organiza\u00e7\u00f5es rastreiem, monitorem, protejam e identifiquem dados sens\u00edveis e privados. Al\u00e9m disso, diferentes n\u00edveis de sensibilidade podem ser aplicados a diferentes itens de dados, facilitando a governan\u00e7a e a cataloga\u00e7\u00e3o adequadas. Normalmente, existem quatro n\u00edveis de classifica\u00e7\u00e3o de dados: P\u00fablico Interno Confidencial Restrito / Altamente confidencial Ferramentas para classifica\u00e7\u00e3o de dados no Azure incluem o Microsoft Information Protection (MIP), Azure Purview , Data Discovery & Classification for Azure SQL Database, Azure SQL Managed Instance e Azure Synapse e Data Discovery & Classification for SQL Server , entre outros. Frequentemente, ferramentas usadas para desidentifica\u00e7\u00e3o tamb\u00e9m podem servir como classificadores de dados sens\u00edveis. Consulte ferramentas de desidentifica\u00e7\u00e3o de dados para tais ferramentas. Recursos adicionais: Diretrizes de exemplo para classifica\u00e7\u00e3o de dados Saiba sobre os n\u00edveis de sensibilidade","title":"Classifica\u00e7\u00e3o de Dados Sens\u00edveis"},{"location":"privacy/privacy-frameworks/#gerenciamento-de-acesso","text":"O controle de acesso \u00e9 um componente importante da privacidade desde o in\u00edcio e faz parte da prote\u00e7\u00e3o geral do ciclo de vida dos dados. Um controle de acesso bem-sucedido restringir\u00e1 o acesso apenas a indiv\u00edduos autorizados que devem ter acesso aos dados. Uma vez que os dados est\u00e3o seguros em um ambiente, \u00e9 importante revisar quem deve acessar esses dados e para que finalidade. O controle de acesso pode ser auditado com uma estrat\u00e9gia de registro abrangente, que pode incluir a integra\u00e7\u00e3o de registros de atividades que podem fornecer insights sobre opera\u00e7\u00f5es realizadas em recursos em uma assinatura. OWASP Access Control Cheat Sheet","title":"Gerenciamento de Acesso"},{"location":"reliability/","text":"Confiabilidade Todos os outros fundamentos de engenharia da ISE trabalham para uma infraestrutura mais confi\u00e1vel. A integra\u00e7\u00e3o e implanta\u00e7\u00e3o automatizadas garantem que o c\u00f3digo seja adequadamente testado e ajuda a eliminar erros humanos, enquanto as implanta\u00e7\u00f5es lentas constroem confian\u00e7a no c\u00f3digo. A observabilidade ajuda a identificar erros mais rapidamente quando surgem para retornar a um estado est\u00e1vel, e assim por diante. No entanto, existem algumas etapas adicionais que podemos tomar, que n\u00e3o se encaixam perfeitamente nas categorias anteriores, para garantir uma solu\u00e7\u00e3o mais confi\u00e1vel. Vamos explorar essas etapas abaixo. Remova os \"Foot-Guns\" Evite que sua equipe de desenvolvimento se prejudique. As pessoas cometem erros; qualquer erro cometido em produ\u00e7\u00e3o n\u00e3o \u00e9 culpa da pessoa, \u00e9 culpa coletiva do sistema por n\u00e3o prevenir que o erro aconte\u00e7a. Confira a lista abaixo de algumas ferramentas comuns para remover esses \"foot guns\": No Kubernetes, aproveite os Controladores de Admiss\u00e3o para evitar que \"coisas ruins\" aconte\u00e7am. Voc\u00ea pode criar controladores personalizados usando o controlador de admiss\u00e3o Webhook. Gatekeeper \u00e9 um controlador de admiss\u00e3o Webhook pr\u00e9-constru\u00eddo, usando OPA por baixo, com suporte para algumas prote\u00e7\u00f5es prontas para uso . Se um usu\u00e1rio cometer um erro, n\u00e3o pergunte: \"como algu\u00e9m poderia fazer isso?\", pergunte: \"como podemos evitar que isso aconte\u00e7a no futuro?\" Dimensionamento Autom\u00e1tico Sempre que poss\u00edvel, aproveite o dimensionamento autom\u00e1tico para suas implanta\u00e7\u00f5es. O dimensionamento vertical pode dimensionar suas VMs ajustando par\u00e2metros como CPU, disco e RAM, enquanto o dimensionamento horizontal pode ajustar o n\u00famero de imagens em execu\u00e7\u00e3o que sustentam suas implanta\u00e7\u00f5es. O dimensionamento autom\u00e1tico pode ajudar seu sistema a responder ao crescimento n\u00e3o org\u00e2nico no tr\u00e1fego e evitar solicita\u00e7\u00f5es falhadas devido \u00e0 escassez de recursos. Observa\u00e7\u00e3o: Em ambientes como o K8s, tanto o dimensionamento horizontal quanto o vertical s\u00e3o oferecidos como solu\u00e7\u00e3o nativa. No entanto, as VMs que sustentam cada Pod tamb\u00e9m podem precisar de dimensionamento autom\u00e1tico para lidar com um aumento no n\u00famero de Pods. Tamb\u00e9m deve ser observado que os par\u00e2metros que afetam o dimensionamento autom\u00e1tico podem ser dif\u00edceis de ajustar. M\u00e9tricas t\u00edpicas como utiliza\u00e7\u00e3o de CPU ou RAM, ou taxa de solicita\u00e7\u00f5es, podem n\u00e3o ser suficientes. \u00c0s vezes, pode ser necess\u00e1rio considerar m\u00e9tricas personalizadas, como a taxa de evic\u00e7\u00e3o de cache. Descarte de Carga e Prote\u00e7\u00e3o contra Ataques de Nega\u00e7\u00e3o de Servi\u00e7o (DOS) Muitas vezes, pensamos em ataques de Nega\u00e7\u00e3o de Servi\u00e7o [DOS] como um ato de um ator malicioso, ent\u00e3o colocamos algum descarte de carga nos port\u00f5es do nosso sistema e chamamos isso de dia. Na realidade, muitos ataques DOS s\u00e3o acidentais e autoinfligidos. Uma implanta\u00e7\u00e3o ruim que derruba um cache resulta em sobrecarregar servi\u00e7os downstream. A coleta de dados de um sistema distribu\u00eddo se sincroniza e resulta em um problema de manada trovejante . Uma m\u00e1 configura\u00e7\u00e3o resulta em um erro que desencadeia tentativas de recupera\u00e7\u00e3o incontrol\u00e1veis por parte dos clientes. As solicita\u00e7\u00f5es se acumulam em um objeto armazenado at\u00e9 que ele fique t\u00e3o grande que leituras futuras travem o servidor. A lista continua. Siga estas etapas para se proteger: Adicione uma oscila\u00e7\u00e3o (aleat\u00f3ria) a qualquer a\u00e7\u00e3o que ocorra a partir de um fluxo n\u00e3o acionado pelo usu\u00e1rio (ou seja, adicione uma dura\u00e7\u00e3o aleat\u00f3ria ao tempo de espera em um cron ou trabalho que consulta continuamente um servi\u00e7o downstream). Implemente pol\u00edticas de tentativas de recupera\u00e7\u00e3o com backoff exponencial em seu c\u00f3digo do cliente. Adicione descarte de carga aos seus servidores (sim, tamb\u00e9m aos seus microsservi\u00e7os internos). Isso pode ser configurado facilmente ao usar um sidecar como o Envoy. Tenha cuidado ao desserializar solicita\u00e7\u00f5es de usu\u00e1rio e use limites de buffer. Por exemplo, servidores HTTP/gRPC podem definir limites sobre quanto dados ser\u00e3o lidos do soquete. Defina alertas para utiliza\u00e7\u00e3o, reinicializa\u00e7\u00e3o de servidores ou desconex\u00e3o para detectar quando seu sistema pode estar falhando. Esses tipos de erros podem resultar em falhas em cascata, onde uma parte n\u00e3o cr\u00edtica do seu sistema derruba todo o servi\u00e7o. Planeje adequadamente e certifique-se de pensar em como seu sistema pode degradar durante falhas. Backup de Dados Dados s\u00e3o perdidos, corrompidos ou exclu\u00eddos acidentalmente. Isso acontece. Fa\u00e7a backups dos dados para ajudar a colocar seu sistema online o mais r\u00e1pido poss\u00edvel. Isso pode ocorrer na pilha de aplicativos, com c\u00f3digo excluindo ou corrompendo dados, ou na camada de armazenamento, com perda de volumes ou chaves de criptografia. Considere coisas como: Quanto tempo levar\u00e1 para restaurar os dados. Quanta perda de dados voc\u00ea pode tolerar. Quanto tempo levar\u00e1 para perceber que ocorreu perda de dados. Pesquise a diferen\u00e7a entre snapshot e incremental backups. Uma boa pol\u00edtica pode ser fazer backups incrementais em um per\u00edodo de N e backups de snapshot em um per\u00edodo de M (onde N < M). Meta de Tempo de Atividade e Falha Graciosa \u00c9 um fato conhecido que os sistemas n\u00e3o podem ter como meta 100% de tempo de atividade. Existem muitos fatores nos sistemas de software de hoje que impedem isso, muitos deles fora de nosso controle. Mesmo um servi\u00e7o que nunca \u00e9 atualizado e \u00e9 100% livre de bugs falhar\u00e1. Servidores DNS upstream t\u00eam problemas o tempo todo. Hardware quebra. Quedas de energia, geradores de backup falham. O mundo \u00e9 ca\u00f3tico. Bons servi\u00e7os t\u00eam como meta algum n\u00famero de \"9s\" de tempo de atividade. Por exemplo, 99, 99% de tempo de atividade significa que o sistema tem um \"or\u00e7amento\" de 4 minutos e 22 segundos de tempo de atividade a cada m\u00eas. Alguns meses podem atingir 100% de tempo de atividade, o que significa que esse or\u00e7amento \u00e9 rolado para o pr\u00f3ximo m\u00eas. O que o tempo de atividade significa \u00e9 diferente para todos e depende do servi\u00e7o definir. Uma boa pr\u00e1tica \u00e9 usar qualquer tempo de atividade restante no final do per\u00edodo (por exemplo, ano, trimestre) para derrubar intencionalmente esse servi\u00e7o e garantir que o resto de seus sistemas falhe conforme o esperado. Muitas vezes, outros engenheiros e servi\u00e7os come\u00e7am a depender dessa disponibilidade adicional alcan\u00e7ada, e pode ser saud\u00e1vel garantir que os sistemas falhem graciosamente. Podemos incorporar a falha graciosa (ou degrada\u00e7\u00e3o graciosa) em nossa pilha de software antecipando falhas. Algumas t\u00e1ticas incluem: Failover para servi\u00e7os saud\u00e1veis. A Elei\u00e7\u00e3o de L\u00edder pode ser usada para manter servi\u00e7os saud\u00e1veis em espera caso o l\u00edder tenha problemas. A falha do cluster inteiro pode redirecionar o tr\u00e1fego para outra regi\u00e3o ou zona de disponibilidade. Propague as falhas a jusante de servi\u00e7os dependentes pela pilha por meio de verifica\u00e7\u00f5es de integridade, para que seus pontos de entrada possam redirecionar o tr\u00e1fego para servi\u00e7os saud\u00e1veis. Os disjuntores podem interromper precocemente as solicita\u00e7\u00f5es em vez de propagar erros por todo o sistema. Considere usar uma biblioteca bem conhecida e testada, como o Polly (.NET), que permite implementa\u00e7\u00f5es configur\u00e1veis desse e de outros padr\u00f5es comuns de tratamento de falhas de resili\u00eancia e transit\u00f3rias. Pr\u00e1tica Nenhuma das recomenda\u00e7\u00f5es acima funcionar\u00e1 se n\u00e3o forem testadas . Seus backups s\u00e3o in\u00fateis se voc\u00ea n\u00e3o souber como mont\u00e1-los. Suas estrat\u00e9gias de failover e outras mitiga\u00e7\u00f5es regredir\u00e3o com o tempo se n\u00e3o forem testadas. Aqui est\u00e3o algumas dicas para testar o que foi mencionado acima: Mantenha Playbooks Nenhum servi\u00e7o de software est\u00e1 completo sem playbooks para orientar os desenvolvedores por territ\u00f3rio desconhecido. Os playbooks devem ser abrangentes e cobrir todos os cen\u00e1rios de falha conhecidos e suas mitiga\u00e7\u00f5es. Realize exerc\u00edcios de manuten\u00e7\u00e3o Dedique tempo para criar cen\u00e1rios fict\u00edcios e conduza uma campanha no estilo D&D para resolver seus problemas. Isso pode ser t\u00e3o elaborado quanto criar um novo ambiente e injetar erros ou t\u00e3o simples quanto pedir aos \"jogadores\" que acessem um painel e descrevam o que veriam no cen\u00e1rio fict\u00edcio (pequenas doses de imagina\u00e7\u00e3o s\u00e3o necess\u00e1rias). Os playbooks devem guiar facilmente o usu\u00e1rio para a solu\u00e7\u00e3o/mitiga\u00e7\u00e3o correta. Se n\u00e3o o fizerem, atualize seus playbooks. Teste de Caos Aproveite os testes de caos automatizados para ver como as coisas quebram. Voc\u00ea pode ler o artigo deste playbook sobre testes de inje\u00e7\u00e3o de falhas para obter mais informa\u00e7\u00f5es sobre o desenvolvimento de uma su\u00edte de testes de caos orientados por hip\u00f3teses. A seguinte lista de ferramentas de teste de caos, bem como esta se\u00e7\u00e3o no artigo linkado acima , t\u00eam mais detalhes sobre plataformas e ferramentas dispon\u00edveis para esse fim: Azure Chaos Studio - Uma ferramenta em pr\u00e9via para orquestrar experimentos controlados de inje\u00e7\u00e3o de falhas em recursos do Azure. Chaos toolkit - Uma plataforma de caos declarativa e modular com muitas extens\u00f5es, incluindo o kit de a\u00e7\u00f5es e sondas do Azure . Kraken - Uma ferramenta espec\u00edfica para o Openshift, mantida pela Red Hat. Chaos Monkey - A plataforma Netflix que popularizou a engenharia do caos (n\u00e3o oferece suporte ao Azure out-of-the-box). Muitas malhas de servi\u00e7os, como o Linkerd , oferecem ferramentas de inje\u00e7\u00e3o de falhas por meio do uso de seus sidecars. Chaos Mesh Simmy - Uma biblioteca .NET para teste de caos e inje\u00e7\u00e3o de falhas integrada com a biblioteca Polly para engenharia de resili\u00eancia. Este post no blog de desenvolvimento da ISE fornece trechos de c\u00f3digo como exemplo de como usar o Polly e o Simmy para implementar uma abordagem orientada por hip\u00f3teses para testes de resili\u00eancia e caos. Analise Todas as Falhas Escrever um p\u00f3s-mortem \u00e9 uma \u00f3tima maneira de documentar as causas raiz e as a\u00e7\u00f5es necess\u00e1rias para suas falhas. Tamb\u00e9m \u00e9 uma \u00f3tima maneira de rastrear problemas recorrentes e criar um forte argumento para priorizar corre\u00e7\u00f5es. Isso pode at\u00e9 ser vinculado \u00e0s suas retrospectivas regulares do Agile.","title":"Confiabilidade"},{"location":"reliability/#confiabilidade","text":"Todos os outros fundamentos de engenharia da ISE trabalham para uma infraestrutura mais confi\u00e1vel. A integra\u00e7\u00e3o e implanta\u00e7\u00e3o automatizadas garantem que o c\u00f3digo seja adequadamente testado e ajuda a eliminar erros humanos, enquanto as implanta\u00e7\u00f5es lentas constroem confian\u00e7a no c\u00f3digo. A observabilidade ajuda a identificar erros mais rapidamente quando surgem para retornar a um estado est\u00e1vel, e assim por diante. No entanto, existem algumas etapas adicionais que podemos tomar, que n\u00e3o se encaixam perfeitamente nas categorias anteriores, para garantir uma solu\u00e7\u00e3o mais confi\u00e1vel. Vamos explorar essas etapas abaixo.","title":"Confiabilidade"},{"location":"reliability/#remova-os-foot-guns","text":"Evite que sua equipe de desenvolvimento se prejudique. As pessoas cometem erros; qualquer erro cometido em produ\u00e7\u00e3o n\u00e3o \u00e9 culpa da pessoa, \u00e9 culpa coletiva do sistema por n\u00e3o prevenir que o erro aconte\u00e7a. Confira a lista abaixo de algumas ferramentas comuns para remover esses \"foot guns\": No Kubernetes, aproveite os Controladores de Admiss\u00e3o para evitar que \"coisas ruins\" aconte\u00e7am. Voc\u00ea pode criar controladores personalizados usando o controlador de admiss\u00e3o Webhook. Gatekeeper \u00e9 um controlador de admiss\u00e3o Webhook pr\u00e9-constru\u00eddo, usando OPA por baixo, com suporte para algumas prote\u00e7\u00f5es prontas para uso . Se um usu\u00e1rio cometer um erro, n\u00e3o pergunte: \"como algu\u00e9m poderia fazer isso?\", pergunte: \"como podemos evitar que isso aconte\u00e7a no futuro?\"","title":"Remova os \"Foot-Guns\""},{"location":"reliability/#dimensionamento-automatico","text":"Sempre que poss\u00edvel, aproveite o dimensionamento autom\u00e1tico para suas implanta\u00e7\u00f5es. O dimensionamento vertical pode dimensionar suas VMs ajustando par\u00e2metros como CPU, disco e RAM, enquanto o dimensionamento horizontal pode ajustar o n\u00famero de imagens em execu\u00e7\u00e3o que sustentam suas implanta\u00e7\u00f5es. O dimensionamento autom\u00e1tico pode ajudar seu sistema a responder ao crescimento n\u00e3o org\u00e2nico no tr\u00e1fego e evitar solicita\u00e7\u00f5es falhadas devido \u00e0 escassez de recursos. Observa\u00e7\u00e3o: Em ambientes como o K8s, tanto o dimensionamento horizontal quanto o vertical s\u00e3o oferecidos como solu\u00e7\u00e3o nativa. No entanto, as VMs que sustentam cada Pod tamb\u00e9m podem precisar de dimensionamento autom\u00e1tico para lidar com um aumento no n\u00famero de Pods. Tamb\u00e9m deve ser observado que os par\u00e2metros que afetam o dimensionamento autom\u00e1tico podem ser dif\u00edceis de ajustar. M\u00e9tricas t\u00edpicas como utiliza\u00e7\u00e3o de CPU ou RAM, ou taxa de solicita\u00e7\u00f5es, podem n\u00e3o ser suficientes. \u00c0s vezes, pode ser necess\u00e1rio considerar m\u00e9tricas personalizadas, como a taxa de evic\u00e7\u00e3o de cache.","title":"Dimensionamento Autom\u00e1tico"},{"location":"reliability/#descarte-de-carga-e-protecao-contra-ataques-de-negacao-de-servico-dos","text":"Muitas vezes, pensamos em ataques de Nega\u00e7\u00e3o de Servi\u00e7o [DOS] como um ato de um ator malicioso, ent\u00e3o colocamos algum descarte de carga nos port\u00f5es do nosso sistema e chamamos isso de dia. Na realidade, muitos ataques DOS s\u00e3o acidentais e autoinfligidos. Uma implanta\u00e7\u00e3o ruim que derruba um cache resulta em sobrecarregar servi\u00e7os downstream. A coleta de dados de um sistema distribu\u00eddo se sincroniza e resulta em um problema de manada trovejante . Uma m\u00e1 configura\u00e7\u00e3o resulta em um erro que desencadeia tentativas de recupera\u00e7\u00e3o incontrol\u00e1veis por parte dos clientes. As solicita\u00e7\u00f5es se acumulam em um objeto armazenado at\u00e9 que ele fique t\u00e3o grande que leituras futuras travem o servidor. A lista continua. Siga estas etapas para se proteger: Adicione uma oscila\u00e7\u00e3o (aleat\u00f3ria) a qualquer a\u00e7\u00e3o que ocorra a partir de um fluxo n\u00e3o acionado pelo usu\u00e1rio (ou seja, adicione uma dura\u00e7\u00e3o aleat\u00f3ria ao tempo de espera em um cron ou trabalho que consulta continuamente um servi\u00e7o downstream). Implemente pol\u00edticas de tentativas de recupera\u00e7\u00e3o com backoff exponencial em seu c\u00f3digo do cliente. Adicione descarte de carga aos seus servidores (sim, tamb\u00e9m aos seus microsservi\u00e7os internos). Isso pode ser configurado facilmente ao usar um sidecar como o Envoy. Tenha cuidado ao desserializar solicita\u00e7\u00f5es de usu\u00e1rio e use limites de buffer. Por exemplo, servidores HTTP/gRPC podem definir limites sobre quanto dados ser\u00e3o lidos do soquete. Defina alertas para utiliza\u00e7\u00e3o, reinicializa\u00e7\u00e3o de servidores ou desconex\u00e3o para detectar quando seu sistema pode estar falhando. Esses tipos de erros podem resultar em falhas em cascata, onde uma parte n\u00e3o cr\u00edtica do seu sistema derruba todo o servi\u00e7o. Planeje adequadamente e certifique-se de pensar em como seu sistema pode degradar durante falhas.","title":"Descarte de Carga e Prote\u00e7\u00e3o contra Ataques de Nega\u00e7\u00e3o de Servi\u00e7o (DOS)"},{"location":"reliability/#backup-de-dados","text":"Dados s\u00e3o perdidos, corrompidos ou exclu\u00eddos acidentalmente. Isso acontece. Fa\u00e7a backups dos dados para ajudar a colocar seu sistema online o mais r\u00e1pido poss\u00edvel. Isso pode ocorrer na pilha de aplicativos, com c\u00f3digo excluindo ou corrompendo dados, ou na camada de armazenamento, com perda de volumes ou chaves de criptografia. Considere coisas como: Quanto tempo levar\u00e1 para restaurar os dados. Quanta perda de dados voc\u00ea pode tolerar. Quanto tempo levar\u00e1 para perceber que ocorreu perda de dados. Pesquise a diferen\u00e7a entre snapshot e incremental backups. Uma boa pol\u00edtica pode ser fazer backups incrementais em um per\u00edodo de N e backups de snapshot em um per\u00edodo de M (onde N < M).","title":"Backup de Dados"},{"location":"reliability/#meta-de-tempo-de-atividade-e-falha-graciosa","text":"\u00c9 um fato conhecido que os sistemas n\u00e3o podem ter como meta 100% de tempo de atividade. Existem muitos fatores nos sistemas de software de hoje que impedem isso, muitos deles fora de nosso controle. Mesmo um servi\u00e7o que nunca \u00e9 atualizado e \u00e9 100% livre de bugs falhar\u00e1. Servidores DNS upstream t\u00eam problemas o tempo todo. Hardware quebra. Quedas de energia, geradores de backup falham. O mundo \u00e9 ca\u00f3tico. Bons servi\u00e7os t\u00eam como meta algum n\u00famero de \"9s\" de tempo de atividade. Por exemplo, 99, 99% de tempo de atividade significa que o sistema tem um \"or\u00e7amento\" de 4 minutos e 22 segundos de tempo de atividade a cada m\u00eas. Alguns meses podem atingir 100% de tempo de atividade, o que significa que esse or\u00e7amento \u00e9 rolado para o pr\u00f3ximo m\u00eas. O que o tempo de atividade significa \u00e9 diferente para todos e depende do servi\u00e7o definir. Uma boa pr\u00e1tica \u00e9 usar qualquer tempo de atividade restante no final do per\u00edodo (por exemplo, ano, trimestre) para derrubar intencionalmente esse servi\u00e7o e garantir que o resto de seus sistemas falhe conforme o esperado. Muitas vezes, outros engenheiros e servi\u00e7os come\u00e7am a depender dessa disponibilidade adicional alcan\u00e7ada, e pode ser saud\u00e1vel garantir que os sistemas falhem graciosamente. Podemos incorporar a falha graciosa (ou degrada\u00e7\u00e3o graciosa) em nossa pilha de software antecipando falhas. Algumas t\u00e1ticas incluem: Failover para servi\u00e7os saud\u00e1veis. A Elei\u00e7\u00e3o de L\u00edder pode ser usada para manter servi\u00e7os saud\u00e1veis em espera caso o l\u00edder tenha problemas. A falha do cluster inteiro pode redirecionar o tr\u00e1fego para outra regi\u00e3o ou zona de disponibilidade. Propague as falhas a jusante de servi\u00e7os dependentes pela pilha por meio de verifica\u00e7\u00f5es de integridade, para que seus pontos de entrada possam redirecionar o tr\u00e1fego para servi\u00e7os saud\u00e1veis. Os disjuntores podem interromper precocemente as solicita\u00e7\u00f5es em vez de propagar erros por todo o sistema. Considere usar uma biblioteca bem conhecida e testada, como o Polly (.NET), que permite implementa\u00e7\u00f5es configur\u00e1veis desse e de outros padr\u00f5es comuns de tratamento de falhas de resili\u00eancia e transit\u00f3rias.","title":"Meta de Tempo de Atividade e Falha Graciosa"},{"location":"reliability/#pratica","text":"Nenhuma das recomenda\u00e7\u00f5es acima funcionar\u00e1 se n\u00e3o forem testadas . Seus backups s\u00e3o in\u00fateis se voc\u00ea n\u00e3o souber como mont\u00e1-los. Suas estrat\u00e9gias de failover e outras mitiga\u00e7\u00f5es regredir\u00e3o com o tempo se n\u00e3o forem testadas. Aqui est\u00e3o algumas dicas para testar o que foi mencionado acima:","title":"Pr\u00e1tica"},{"location":"reliability/#mantenha-playbooks","text":"Nenhum servi\u00e7o de software est\u00e1 completo sem playbooks para orientar os desenvolvedores por territ\u00f3rio desconhecido. Os playbooks devem ser abrangentes e cobrir todos os cen\u00e1rios de falha conhecidos e suas mitiga\u00e7\u00f5es.","title":"Mantenha Playbooks"},{"location":"reliability/#realize-exercicios-de-manutencao","text":"Dedique tempo para criar cen\u00e1rios fict\u00edcios e conduza uma campanha no estilo D&D para resolver seus problemas. Isso pode ser t\u00e3o elaborado quanto criar um novo ambiente e injetar erros ou t\u00e3o simples quanto pedir aos \"jogadores\" que acessem um painel e descrevam o que veriam no cen\u00e1rio fict\u00edcio (pequenas doses de imagina\u00e7\u00e3o s\u00e3o necess\u00e1rias). Os playbooks devem guiar facilmente o usu\u00e1rio para a solu\u00e7\u00e3o/mitiga\u00e7\u00e3o correta. Se n\u00e3o o fizerem, atualize seus playbooks.","title":"Realize exerc\u00edcios de manuten\u00e7\u00e3o"},{"location":"reliability/#teste-de-caos","text":"Aproveite os testes de caos automatizados para ver como as coisas quebram. Voc\u00ea pode ler o artigo deste playbook sobre testes de inje\u00e7\u00e3o de falhas para obter mais informa\u00e7\u00f5es sobre o desenvolvimento de uma su\u00edte de testes de caos orientados por hip\u00f3teses. A seguinte lista de ferramentas de teste de caos, bem como esta se\u00e7\u00e3o no artigo linkado acima , t\u00eam mais detalhes sobre plataformas e ferramentas dispon\u00edveis para esse fim: Azure Chaos Studio - Uma ferramenta em pr\u00e9via para orquestrar experimentos controlados de inje\u00e7\u00e3o de falhas em recursos do Azure. Chaos toolkit - Uma plataforma de caos declarativa e modular com muitas extens\u00f5es, incluindo o kit de a\u00e7\u00f5es e sondas do Azure . Kraken - Uma ferramenta espec\u00edfica para o Openshift, mantida pela Red Hat. Chaos Monkey - A plataforma Netflix que popularizou a engenharia do caos (n\u00e3o oferece suporte ao Azure out-of-the-box). Muitas malhas de servi\u00e7os, como o Linkerd , oferecem ferramentas de inje\u00e7\u00e3o de falhas por meio do uso de seus sidecars. Chaos Mesh Simmy - Uma biblioteca .NET para teste de caos e inje\u00e7\u00e3o de falhas integrada com a biblioteca Polly para engenharia de resili\u00eancia. Este post no blog de desenvolvimento da ISE fornece trechos de c\u00f3digo como exemplo de como usar o Polly e o Simmy para implementar uma abordagem orientada por hip\u00f3teses para testes de resili\u00eancia e caos.","title":"Teste de Caos"},{"location":"reliability/#analise-todas-as-falhas","text":"Escrever um p\u00f3s-mortem \u00e9 uma \u00f3tima maneira de documentar as causas raiz e as a\u00e7\u00f5es necess\u00e1rias para suas falhas. Tamb\u00e9m \u00e9 uma \u00f3tima maneira de rastrear problemas recorrentes e criar um forte argumento para priorizar corre\u00e7\u00f5es. Isso pode at\u00e9 ser vinculado \u00e0s suas retrospectivas regulares do Agile.","title":"Analise Todas as Falhas"},{"location":"resources/templates/","text":"project-xyz Descri\u00e7\u00e3o do projeto Implanta\u00e7\u00e3o no Azure Primeiros passos Depend\u00eancias Execute localmente C\u00f3digo de conduta Ao participar deste projeto, voc\u00ea concorda em cumprir o C\u00f3digo de Conduta de C\u00f3digo Aberto da Microsoft","title":"project-xyz"},{"location":"resources/templates/#project-xyz","text":"Descri\u00e7\u00e3o do projeto","title":"project-xyz"},{"location":"resources/templates/#implantacao-no-azure","text":"","title":"Implanta\u00e7\u00e3o no Azure"},{"location":"resources/templates/#primeiros-passos","text":"","title":"Primeiros passos"},{"location":"resources/templates/#dependencias","text":"","title":"Depend\u00eancias"},{"location":"resources/templates/#execute-localmente","text":"","title":"Execute localmente"},{"location":"resources/templates/#codigo-de-conduta","text":"Ao participar deste projeto, voc\u00ea concorda em cumprir o C\u00f3digo de Conduta de C\u00f3digo Aberto da Microsoft","title":"C\u00f3digo de conduta"},{"location":"resources/templates/CONTRIBUTING/","text":"Contribuindo Adoramos receber pull requests de todos. Ao participar deste projeto, voc\u00ea concorda em seguir o C\u00f3digo de Conduta de C\u00f3digo Aberto da Microsoft . Aqui est\u00e3o os passos para contribuir: Fa\u00e7a um fork deste reposit\u00f3rio. Clone o reposit\u00f3rio forkado em seu ambiente local. Certifique-se de que os testes estejam passando. Fa\u00e7a suas altera\u00e7\u00f5es. Adicione testes para suas altera\u00e7\u00f5es e verifique se os testes est\u00e3o passando. Fa\u00e7a um push das suas altera\u00e7\u00f5es para o seu fork. [Envie um pull request][pr]. Neste ponto, voc\u00ea estar\u00e1 aguardando nossa revis\u00e3o. Gostamos de pelo menos comentar em pull requests dentro de tr\u00eas dias \u00fateis (e, normalmente, em um dia \u00fatil). Podemos sugerir algumas altera\u00e7\u00f5es, melhorias ou alternativas. Aqui est\u00e3o algumas coisas que aumentar\u00e3o a chance de seu pull request ser aceito: Escreva testes. Siga o nosso manual de engenharia e o guia de estilo para este projeto. Escreva uma mensagem de commit boa . Se tiver alguma d\u00favida ou precisar de orienta\u00e7\u00e3o espec\u00edfica sobre como contribuir para este projeto, sinta-se \u00e0 vontade para perguntar. Estamos aqui para ajudar.","title":"Contribuindo"},{"location":"resources/templates/CONTRIBUTING/#contribuindo","text":"Adoramos receber pull requests de todos. Ao participar deste projeto, voc\u00ea concorda em seguir o C\u00f3digo de Conduta de C\u00f3digo Aberto da Microsoft . Aqui est\u00e3o os passos para contribuir: Fa\u00e7a um fork deste reposit\u00f3rio. Clone o reposit\u00f3rio forkado em seu ambiente local. Certifique-se de que os testes estejam passando. Fa\u00e7a suas altera\u00e7\u00f5es. Adicione testes para suas altera\u00e7\u00f5es e verifique se os testes est\u00e3o passando. Fa\u00e7a um push das suas altera\u00e7\u00f5es para o seu fork. [Envie um pull request][pr]. Neste ponto, voc\u00ea estar\u00e1 aguardando nossa revis\u00e3o. Gostamos de pelo menos comentar em pull requests dentro de tr\u00eas dias \u00fateis (e, normalmente, em um dia \u00fatil). Podemos sugerir algumas altera\u00e7\u00f5es, melhorias ou alternativas. Aqui est\u00e3o algumas coisas que aumentar\u00e3o a chance de seu pull request ser aceito: Escreva testes. Siga o nosso manual de engenharia e o guia de estilo para este projeto. Escreva uma mensagem de commit boa . Se tiver alguma d\u00favida ou precisar de orienta\u00e7\u00e3o espec\u00edfica sobre como contribuir para este projeto, sinta-se \u00e0 vontade para perguntar. Estamos aqui para ajudar.","title":"Contribuindo"},{"location":"security/","text":"Security Developers working on projects should adhere to industry-recommended standard practices for secure design and implementation of code. For the purposes of our customers, this means our engineers should understand the OWASP Top 10 Web Application Security Risks , as well as how to mitigate as many of them as possible, using the resources below. If you are looking for a fast way to get started evaluating your application or design, check out the \"Secure Coding Practices Quick Reference\" document below, which contains an itemized checklist of high-level concepts you can validate are being done properly. This checklist covers many common errors associated with the OWASP Top 10 list linked above, and should be the minimum amount of effort being put into security. Requesting Security Reviews When requesting a security review for your application, please make sure you have familiarized yourself with the Rules of Engagement . This will help you to prepare the application for testing, as well as understand the scope limits of the test. Quick References Secure Coding Practices Quick Reference Web Application Security Quick Reference Security Mindset/Creating a Security Program Quick Start Credential Scanning / Secret Detection Threat Modelling Azure DevOps Security Security Engineering DevSecOps Practices Azure DevOps Data Protection Overview Security and Identity in Azure DevOps Security Code Analysis DevSecOps Introduce security to your project at early stages. The DevSecOps section covers security practices, automation, tools and frameworks as part of the application CI. OWASP Cheat Sheets Note: OWASP is considered to be the gold-standard in computer security information. OWASP maintains an extensive series of cheat sheets which cover all the OWASP Top 10 and more. Below, many of the more relevant cheat sheets have been summarized. To view all the cheat sheets, check out their Cheat Sheet Index . Access Control Basics Attack Surface Analysis Content Security Policy (CSP) Cross-Site Request Forgery (CSRF) Prevention Cross-Site Scripting (XSS) Prevention Cryptographic Storage Deserialization Docker/Kubernetes (k8s) Security Input Validation Key Management OS Command Injection Defense Query Parameterization Examples Server-Side Request Forgery Prevention SQL Injection Prevention Unvalidated Redirects and Forwards Web Service Security XML Security Recommended Tools Check out the list of tools to help enable security in your projects. Note: Although some tools are agnostic, the below list is geared towards Cloud Native security, with a focus on Kubernetes. Vulnerability Scanning SonarCloud Integrates with Azure Devops with the click of a button. Snyk Trivy Cloudsploit Anchore Other tools from OWASP See why you should check for vulnerabilities at all layers of the stack , as well as a couple of other useful tips to reduce surface area for attacks. Runtime Security Falco Tracee Kubelinter May not fully qualify as runtime security, but helps ensure you're enabling best practices. Binary Authorization Binary authorization can happen both at the docker registry layer, and runtime (ie: via a K8s admission controller). The authorization check ensures that the image is signed by a trusted authority. This can occur for both (pre-approved) 3rd party images, and internal images. Taking this a step further the signing should occur only on images where all code has been reviewed and approved. Binary authorization can both reduce the impact of damage from a compromised hosting environment, and the damage from malicious insiders. Harbor Operator available Portieris Notary Note harbor leverages notary internally. TUF Other K8s Security OPA , Gatekeeper , and the Gatekeeper Library cert-manager for easy certificate provisioning and automatic rotation. Quickly enable mTLS between your microservices with Linkerd . Useful links Non-Functional Requirements Guidance","title":"Security"},{"location":"security/#security","text":"Developers working on projects should adhere to industry-recommended standard practices for secure design and implementation of code. For the purposes of our customers, this means our engineers should understand the OWASP Top 10 Web Application Security Risks , as well as how to mitigate as many of them as possible, using the resources below. If you are looking for a fast way to get started evaluating your application or design, check out the \"Secure Coding Practices Quick Reference\" document below, which contains an itemized checklist of high-level concepts you can validate are being done properly. This checklist covers many common errors associated with the OWASP Top 10 list linked above, and should be the minimum amount of effort being put into security.","title":"Security"},{"location":"security/#requesting-security-reviews","text":"When requesting a security review for your application, please make sure you have familiarized yourself with the Rules of Engagement . This will help you to prepare the application for testing, as well as understand the scope limits of the test.","title":"Requesting Security Reviews"},{"location":"security/#quick-references","text":"Secure Coding Practices Quick Reference Web Application Security Quick Reference Security Mindset/Creating a Security Program Quick Start Credential Scanning / Secret Detection Threat Modelling","title":"Quick References"},{"location":"security/#azure-devops-security","text":"Security Engineering DevSecOps Practices Azure DevOps Data Protection Overview Security and Identity in Azure DevOps Security Code Analysis","title":"Azure DevOps Security"},{"location":"security/#devsecops","text":"Introduce security to your project at early stages. The DevSecOps section covers security practices, automation, tools and frameworks as part of the application CI.","title":"DevSecOps"},{"location":"security/#owasp-cheat-sheets","text":"Note: OWASP is considered to be the gold-standard in computer security information. OWASP maintains an extensive series of cheat sheets which cover all the OWASP Top 10 and more. Below, many of the more relevant cheat sheets have been summarized. To view all the cheat sheets, check out their Cheat Sheet Index . Access Control Basics Attack Surface Analysis Content Security Policy (CSP) Cross-Site Request Forgery (CSRF) Prevention Cross-Site Scripting (XSS) Prevention Cryptographic Storage Deserialization Docker/Kubernetes (k8s) Security Input Validation Key Management OS Command Injection Defense Query Parameterization Examples Server-Side Request Forgery Prevention SQL Injection Prevention Unvalidated Redirects and Forwards Web Service Security XML Security","title":"OWASP Cheat Sheets"},{"location":"security/#recommended-tools","text":"Check out the list of tools to help enable security in your projects. Note: Although some tools are agnostic, the below list is geared towards Cloud Native security, with a focus on Kubernetes. Vulnerability Scanning SonarCloud Integrates with Azure Devops with the click of a button. Snyk Trivy Cloudsploit Anchore Other tools from OWASP See why you should check for vulnerabilities at all layers of the stack , as well as a couple of other useful tips to reduce surface area for attacks. Runtime Security Falco Tracee Kubelinter May not fully qualify as runtime security, but helps ensure you're enabling best practices. Binary Authorization Binary authorization can happen both at the docker registry layer, and runtime (ie: via a K8s admission controller). The authorization check ensures that the image is signed by a trusted authority. This can occur for both (pre-approved) 3rd party images, and internal images. Taking this a step further the signing should occur only on images where all code has been reviewed and approved. Binary authorization can both reduce the impact of damage from a compromised hosting environment, and the damage from malicious insiders. Harbor Operator available Portieris Notary Note harbor leverages notary internally. TUF Other K8s Security OPA , Gatekeeper , and the Gatekeeper Library cert-manager for easy certificate provisioning and automatic rotation. Quickly enable mTLS between your microservices with Linkerd .","title":"Recommended Tools"},{"location":"security/#useful-links","text":"Non-Functional Requirements Guidance","title":"Useful links"},{"location":"security/rules-of-engagement/","text":"Rules of Engagement When performing application security analysis, it is expected that the tester follow the Rules of Engagement as laid out below. This is to standardize the scope of application testing and provide a concrete awareness of what is considered \"out of scope\" for security analysis. Rules of Engagement - For those requesting review Web Application Firewalls can be up and configured, but do not enable any automatic blocking. This can greatly slow down the person performing the test. Similarly, if a service is running on a virtual machine, ensure services such as fail2ban are disabled. You cannot make changes to the running application until the test is complete. This is to prevent accidentally breaking an otherwise valid attack in progress. Any review results are not considered as \"final\". A security review should always be performed by a security team orchestrated by the customer prior to moving an application into production. If a customer requires further assistance, they can engage Premier Support. Rules of Engagement - For those performing tests Do not attempt to perform Denial-of-Service attacks or otherwise crash services. Heavy active scanning is tolerated (and is assumed to be somewhat of a load test) but deliberate takedowns are not permitted. Do not interact with human beings. Phishing credentials or other such client-side attacks are off-limits. Detailing XSS and similar attacks is encouraged as a part of the test, but do not leverage these against internal users or customers. Attack from a single point. Especially if the application is currently in the customer's hands, provide the IP address or hostname of the attacking host to avoid setting off alarms.","title":"Rules of Engagement"},{"location":"security/rules-of-engagement/#rules-of-engagement","text":"When performing application security analysis, it is expected that the tester follow the Rules of Engagement as laid out below. This is to standardize the scope of application testing and provide a concrete awareness of what is considered \"out of scope\" for security analysis.","title":"Rules of Engagement"},{"location":"security/rules-of-engagement/#rules-of-engagement-for-those-requesting-review","text":"Web Application Firewalls can be up and configured, but do not enable any automatic blocking. This can greatly slow down the person performing the test. Similarly, if a service is running on a virtual machine, ensure services such as fail2ban are disabled. You cannot make changes to the running application until the test is complete. This is to prevent accidentally breaking an otherwise valid attack in progress. Any review results are not considered as \"final\". A security review should always be performed by a security team orchestrated by the customer prior to moving an application into production. If a customer requires further assistance, they can engage Premier Support.","title":"Rules of Engagement - For those requesting review"},{"location":"security/rules-of-engagement/#rules-of-engagement-for-those-performing-tests","text":"Do not attempt to perform Denial-of-Service attacks or otherwise crash services. Heavy active scanning is tolerated (and is assumed to be somewhat of a load test) but deliberate takedowns are not permitted. Do not interact with human beings. Phishing credentials or other such client-side attacks are off-limits. Detailing XSS and similar attacks is encouraged as a part of the test, but do not leverage these against internal users or customers. Attack from a single point. Especially if the application is currently in the customer's hands, provide the IP address or hostname of the attacking host to avoid setting off alarms.","title":"Rules of Engagement - For those performing tests"},{"location":"security/threat-modelling-example/","text":"Overview This document covers the threat models for a sample project which takes video frames from video camera and process these frames on IoTEdge device and send them to Azure Cognitive Service to get the audio output. These models can be considered as reference template to show how we can construct threat modeling document. Each of the labeled entities in the figures below are accompanied by meta-information which describe the threats, recommended mitigations, and the associated security principle or goal . Architecture Diagram Assets Asset Entry Point Trust Level Azure Blob Storage Http End point Connection String Azure Monitor Http End Point Connection String Azure Cognitive Service Http End Point Connection String IoTEdge Module: M1 Http End Point Public Access (Local Area Network) IoTEdge Module: M2 Http End Point Public Access (Local Area Network) IoTEdge Module: M3 Http End Point Public Access (Local Area Network) IoTEdge Module: IoTEdgeMetricsCollector Http EndPoint Public Access (Local Area Network) Application Insights Http End Point Connection String Data Flow Diagram Client Browser makes requests to the M1 IoTEdge module. Browser and IoTEdge device are on same network, so browser directly hits the webapp URL. M1 IoTEdge module interacts with other two IoTEdge modules to render live stream from video device and display order scanning results via WebSockets. IoTEdge modules interact with Azure Cognitive service to get the translated text via OCR and audio stream via Text to Speech Service. IoTEdge modules send telemetry information to application insights. IoTEdge device is deployed with IoTEdge runtime which interacts with IoTEdge hub for deployments. IoTEdge module also sends some data to Azure storage which is required for debugging purpose. Cognitive service, application insights and Azure Storage are authenticated using connection strings which are stored in GitHub secrets and deployed using CI/CD pipelines. Threat List Assumptions Secrets like ACR credentials are stored in GitHub secrets store which are deployed to IoTEdge Device by CI/CD pipelines. However, CI/CD pipelines are out of scope. Threats Vector Threat Mitigation (1) Sniff Unencrypted data can be intercepted in transit Not Mitigated (2) Access to M1 IoT Edge Module Unauthorized Access to M1 IoT Edge Module Not Mitigated (3) Access to M2 IoT Edge Module Unauthorized Access to M2 IoT Edge Module Not Mitigated (4) Access to M3 IoT Edge Module Unauthorized Access to M3 IoT Edge Module Not Mitigated (5) Steal Storage Credentials Unauthorized Access to M2 IoTEdge Module where database secrets are used Not Mitigated (6) Denial Of Service Dos attack on all IoTEdge Modules since there is no Authentication Not Mitigated (7) Tampering with Log data Application Insights is connected via Connection String which is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker can tamper the log data. Not Mitigated (8) Tampering with video camera device. Video camera path is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker can tamper the video feed or use another video source or fake video stream. Not Mitigated (9) Spoofing Tampering Azure IoT Hub connection string is stored in .env file on IoTEdge Device. Once user gains access to the device, .env file can be read and attacker cause Dos attacks on IoTHub Not Mitigated (10) Denial of Service DDOS attack Azure Cognitive Service connection string is stored in .env file on IoTEdge Device. Once user gains access to the device, .env file can be read and attacker cause DoS attacks on Azure Cognitive Service Not Mitigated (11) Tampering with Storage Storage connection string is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker can tamper data on storage or read from the storage. Not Mitigated (12) Tampering with Storage Cognitive Service connection string is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker use cognitive service API's for his own purpose causing increase cost to use. Not Mitigated Threat Model Threat Properties Notable Threats # Principle Threat Mitigation 1 Authenticity Since channel from browser to IoTEdge Module is not authenticated, anyone can spoof it once gains access to WiFi network. Add authentication in all IoTEdge modules. 2 Confidentiality and Integrity As a result of the vulnerability of not encrypting data, plaintext data could be intercepted during transit via a man-in-the-middle (MitM) attack. Sensitive data could be exposed or tampered with to allow further exploits. All products and services must encrypt data in transit using approved cryptographic protocols and algorithms. Use TLS to encrypt all HTTP-based network traffic. Use other mechanisms, such as IPSec, to encrypt non-HTTP network traffic that contains customer or confidential data. Applies to data flow from browser to IoTEdge modules. 3 Confidentiality Data is a valuable target for most threat actors and attacking the data store directly, as opposed to stealing it during transit, allows data exfiltration at a much larger scale. In our scenario we are storing some data in Azure Blob containers. All customer or confidential data must be encrypted before being written to non-volatile storage media (encrypted at-rest) per the following requirements. Use approved algorithms. This includes AES-256, AES-192, or AES-128. Encryption must be enabled before writing data to storage. Applies to all data stores on the diagram. Azure Storage encrypt data at rest by default (AES-256). 4 Confidentiality Broken or non-existent authentication mechanisms may allow attackers to gain access to confidential information. All services within the Azure Trust Boundary must authenticate all incoming requests, including requests coming from the same network. Proper authorizations should also be applied to prevent unnecessary privileges. Whenever available, use Azure Managed Identities to authenticate services. Service Principals may be used if Managed Identities are not supported. External users or services may use UserName + Passwords, Tokens, Certificates or Connection Strings to authenticate, provided these are stored on Key Vault or any other vaulting solution. For authorization, use Azure RBAC to segregate duties and grant only the least amount of access to perform an action at a particular scope. Applies to Azure services like Azure IoTHub, Azure Cognitive Service, Azure Application Insights are authenticated using connection strings. 5 Confidentiality and Integrity A large attack surface, particularly those that are exposed on the internet, will increase the probability of a compromise Minimize the application attack surface by limiting publicly exposed services. Use strong network controls by using virtual networks, subnets and network security groups to protect against unsolicited traffic. Use Azure Private Endpoint for Azure Storage. Applies to Azure storage. 6 Confidentiality and Integrity Browser and IoTEdge device are connected over in store WIFI network Minimize the attack on WIFI network by using secure algorithm like WPA2. Applies to connection between browser and IoTEdge devices. 7 Integrity Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected. Logging of critical application events must be performed to ensure that, should a security incident occur, incident response and root-cause analysis may be done. Steps must also be taken to ensure that logs are available and cannot be overwritten or destroyed through malicious or accidental occurrences. At a minimum, the following events should be logged. Login/logout events Privilege delegation events Security validation failures (e.g. input validation or authorization check failures) Application errors and system events Application and system start-ups and shut-downs, as well as logging initialization 6 Availability Exploitation of the public endpoint by malicious actors who aim to render the service unavailable to its intended users by interrupting the service normal activity, for instance by flooding the target service with requests until normal traffic is unable to be processed (Denial of Service) Application is accessed via web app deployed as one of the IoTEdge modules on the IoTEdge device. This app can be accessed by anyone in the local area network. Hence DDoS attacks are possible if the attacker gained access to local area network. All services deployed as IoTEdge modules must use authentication. Applies to services deployed on IoTEdge device 7 Integrity Tampering with data Data at rest, in Azure Storage must be encrypted on disk. Data at rest, in Azure can be protected further by Azure Advanced Threat Protection. Data at rest, in Azure Storage and Azure monitor workspace will use Azure RBAC to segregate duties and grant only the least amount of access to perform an action at a particular scope. Data in motion between services can be encrypted in TLS 1.2 Applies to data flow between IoTEdge modules and Azure Services. Security Principles Confidentiality refers to the objective of keeping data private or secret. In practice, it\u2019s about controlling access to data to prevent unauthorized disclosure. Integrity is about ensuring that data has not been tampered with and, therefore, can be trusted. It is correct, authentic, and reliable. Availability means that networks, systems, and applications are up and running. It ensures that authorized users have timely, reliable access to resources when they are needed.","title":"Overview"},{"location":"security/threat-modelling-example/#overview","text":"This document covers the threat models for a sample project which takes video frames from video camera and process these frames on IoTEdge device and send them to Azure Cognitive Service to get the audio output. These models can be considered as reference template to show how we can construct threat modeling document. Each of the labeled entities in the figures below are accompanied by meta-information which describe the threats, recommended mitigations, and the associated security principle or goal .","title":"Overview"},{"location":"security/threat-modelling-example/#architecture-diagram","text":"","title":"Architecture Diagram"},{"location":"security/threat-modelling-example/#assets","text":"Asset Entry Point Trust Level Azure Blob Storage Http End point Connection String Azure Monitor Http End Point Connection String Azure Cognitive Service Http End Point Connection String IoTEdge Module: M1 Http End Point Public Access (Local Area Network) IoTEdge Module: M2 Http End Point Public Access (Local Area Network) IoTEdge Module: M3 Http End Point Public Access (Local Area Network) IoTEdge Module: IoTEdgeMetricsCollector Http EndPoint Public Access (Local Area Network) Application Insights Http End Point Connection String","title":"Assets"},{"location":"security/threat-modelling-example/#data-flow-diagram","text":"Client Browser makes requests to the M1 IoTEdge module. Browser and IoTEdge device are on same network, so browser directly hits the webapp URL. M1 IoTEdge module interacts with other two IoTEdge modules to render live stream from video device and display order scanning results via WebSockets. IoTEdge modules interact with Azure Cognitive service to get the translated text via OCR and audio stream via Text to Speech Service. IoTEdge modules send telemetry information to application insights. IoTEdge device is deployed with IoTEdge runtime which interacts with IoTEdge hub for deployments. IoTEdge module also sends some data to Azure storage which is required for debugging purpose. Cognitive service, application insights and Azure Storage are authenticated using connection strings which are stored in GitHub secrets and deployed using CI/CD pipelines.","title":"Data Flow Diagram"},{"location":"security/threat-modelling-example/#threat-list","text":"","title":"Threat List"},{"location":"security/threat-modelling-example/#assumptions","text":"Secrets like ACR credentials are stored in GitHub secrets store which are deployed to IoTEdge Device by CI/CD pipelines. However, CI/CD pipelines are out of scope.","title":"Assumptions"},{"location":"security/threat-modelling-example/#threats","text":"Vector Threat Mitigation (1) Sniff Unencrypted data can be intercepted in transit Not Mitigated (2) Access to M1 IoT Edge Module Unauthorized Access to M1 IoT Edge Module Not Mitigated (3) Access to M2 IoT Edge Module Unauthorized Access to M2 IoT Edge Module Not Mitigated (4) Access to M3 IoT Edge Module Unauthorized Access to M3 IoT Edge Module Not Mitigated (5) Steal Storage Credentials Unauthorized Access to M2 IoTEdge Module where database secrets are used Not Mitigated (6) Denial Of Service Dos attack on all IoTEdge Modules since there is no Authentication Not Mitigated (7) Tampering with Log data Application Insights is connected via Connection String which is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker can tamper the log data. Not Mitigated (8) Tampering with video camera device. Video camera path is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker can tamper the video feed or use another video source or fake video stream. Not Mitigated (9) Spoofing Tampering Azure IoT Hub connection string is stored in .env file on IoTEdge Device. Once user gains access to the device, .env file can be read and attacker cause Dos attacks on IoTHub Not Mitigated (10) Denial of Service DDOS attack Azure Cognitive Service connection string is stored in .env file on IoTEdge Device. Once user gains access to the device, .env file can be read and attacker cause DoS attacks on Azure Cognitive Service Not Mitigated (11) Tampering with Storage Storage connection string is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker can tamper data on storage or read from the storage. Not Mitigated (12) Tampering with Storage Cognitive Service connection string is stored in .env file on the IoTEdge device. Once user gains access to the device, .env file can be read and attacker use cognitive service API's for his own purpose causing increase cost to use. Not Mitigated","title":"Threats"},{"location":"security/threat-modelling-example/#threat-model","text":"","title":"Threat Model"},{"location":"security/threat-modelling-example/#threat-properties","text":"Notable Threats # Principle Threat Mitigation 1 Authenticity Since channel from browser to IoTEdge Module is not authenticated, anyone can spoof it once gains access to WiFi network. Add authentication in all IoTEdge modules. 2 Confidentiality and Integrity As a result of the vulnerability of not encrypting data, plaintext data could be intercepted during transit via a man-in-the-middle (MitM) attack. Sensitive data could be exposed or tampered with to allow further exploits. All products and services must encrypt data in transit using approved cryptographic protocols and algorithms. Use TLS to encrypt all HTTP-based network traffic. Use other mechanisms, such as IPSec, to encrypt non-HTTP network traffic that contains customer or confidential data. Applies to data flow from browser to IoTEdge modules. 3 Confidentiality Data is a valuable target for most threat actors and attacking the data store directly, as opposed to stealing it during transit, allows data exfiltration at a much larger scale. In our scenario we are storing some data in Azure Blob containers. All customer or confidential data must be encrypted before being written to non-volatile storage media (encrypted at-rest) per the following requirements. Use approved algorithms. This includes AES-256, AES-192, or AES-128. Encryption must be enabled before writing data to storage. Applies to all data stores on the diagram. Azure Storage encrypt data at rest by default (AES-256). 4 Confidentiality Broken or non-existent authentication mechanisms may allow attackers to gain access to confidential information. All services within the Azure Trust Boundary must authenticate all incoming requests, including requests coming from the same network. Proper authorizations should also be applied to prevent unnecessary privileges. Whenever available, use Azure Managed Identities to authenticate services. Service Principals may be used if Managed Identities are not supported. External users or services may use UserName + Passwords, Tokens, Certificates or Connection Strings to authenticate, provided these are stored on Key Vault or any other vaulting solution. For authorization, use Azure RBAC to segregate duties and grant only the least amount of access to perform an action at a particular scope. Applies to Azure services like Azure IoTHub, Azure Cognitive Service, Azure Application Insights are authenticated using connection strings. 5 Confidentiality and Integrity A large attack surface, particularly those that are exposed on the internet, will increase the probability of a compromise Minimize the application attack surface by limiting publicly exposed services. Use strong network controls by using virtual networks, subnets and network security groups to protect against unsolicited traffic. Use Azure Private Endpoint for Azure Storage. Applies to Azure storage. 6 Confidentiality and Integrity Browser and IoTEdge device are connected over in store WIFI network Minimize the attack on WIFI network by using secure algorithm like WPA2. Applies to connection between browser and IoTEdge devices. 7 Integrity Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected. Logging of critical application events must be performed to ensure that, should a security incident occur, incident response and root-cause analysis may be done. Steps must also be taken to ensure that logs are available and cannot be overwritten or destroyed through malicious or accidental occurrences. At a minimum, the following events should be logged. Login/logout events Privilege delegation events Security validation failures (e.g. input validation or authorization check failures) Application errors and system events Application and system start-ups and shut-downs, as well as logging initialization 6 Availability Exploitation of the public endpoint by malicious actors who aim to render the service unavailable to its intended users by interrupting the service normal activity, for instance by flooding the target service with requests until normal traffic is unable to be processed (Denial of Service) Application is accessed via web app deployed as one of the IoTEdge modules on the IoTEdge device. This app can be accessed by anyone in the local area network. Hence DDoS attacks are possible if the attacker gained access to local area network. All services deployed as IoTEdge modules must use authentication. Applies to services deployed on IoTEdge device 7 Integrity Tampering with data Data at rest, in Azure Storage must be encrypted on disk. Data at rest, in Azure can be protected further by Azure Advanced Threat Protection. Data at rest, in Azure Storage and Azure monitor workspace will use Azure RBAC to segregate duties and grant only the least amount of access to perform an action at a particular scope. Data in motion between services can be encrypted in TLS 1.2 Applies to data flow between IoTEdge modules and Azure Services.","title":"Threat Properties"},{"location":"security/threat-modelling-example/#security-principles","text":"Confidentiality refers to the objective of keeping data private or secret. In practice, it\u2019s about controlling access to data to prevent unauthorized disclosure. Integrity is about ensuring that data has not been tampered with and, therefore, can be trusted. It is correct, authentic, and reliable. Availability means that networks, systems, and applications are up and running. It ensures that authorized users have timely, reliable access to resources when they are needed.","title":"Security Principles"},{"location":"security/threat-modelling/","text":"Threat Modeling Threat modeling is an effective way to help secure your systems, applications, networks, and services. It's a systematic approach that identifies potential threats and recommendations to help reduce risk and meet security objectives earlier in the development lifecycle. Threat Modeling Phases Diagram Capture all requirements for your system and create a data-flow diagram Identify Apply a threat-modeling framework to the data-flow diagram and find potential security issues. Here we can use STRIDE framework to identify the threats. Mitigate Decide how to approach each issue with the appropriate combination of security controls. Validate Verify requirements are met, issues are found, and security controls are implemented. Example of these phases is covered in the threat modelling example. More details about these phases can be found at Threat Modeling Security Fundamentals. Threat Modeling Example Here is an example of a threat modeling document which talks about the architecture and different phases involved in the threat modeling. This document can be used as reference template for creating threat modeling documents. References Threat Modeling Microsoft Threat Modeling Tool STRIDE (Threat modeling framework)","title":"Threat Modeling"},{"location":"security/threat-modelling/#threat-modeling","text":"Threat modeling is an effective way to help secure your systems, applications, networks, and services. It's a systematic approach that identifies potential threats and recommendations to help reduce risk and meet security objectives earlier in the development lifecycle.","title":"Threat Modeling"},{"location":"security/threat-modelling/#threat-modeling-phases","text":"Diagram Capture all requirements for your system and create a data-flow diagram Identify Apply a threat-modeling framework to the data-flow diagram and find potential security issues. Here we can use STRIDE framework to identify the threats. Mitigate Decide how to approach each issue with the appropriate combination of security controls. Validate Verify requirements are met, issues are found, and security controls are implemented. Example of these phases is covered in the threat modelling example. More details about these phases can be found at Threat Modeling Security Fundamentals.","title":"Threat Modeling Phases"},{"location":"security/threat-modelling/#threat-modeling-example","text":"Here is an example of a threat modeling document which talks about the architecture and different phases involved in the threat modeling. This document can be used as reference template for creating threat modeling documents.","title":"Threat Modeling Example"},{"location":"security/threat-modelling/#references","text":"Threat Modeling Microsoft Threat Modeling Tool STRIDE (Threat modeling framework)","title":"References"},{"location":"source-control/","text":"Source Control There are many options when working with Source Control. In ISE we use AzureDevOps for private repositories and GitHub for public repositories. Sections within Source Control Merge Strategies Branch Naming Versioning Working with Secrets Git Guidance Goal Following industry best practice to work in geo-distributed teams which encourage contributions from all across ISE as well as the broader OSS community Improve code quality by enforcing reviews before merging into main branches Improve traceability of features and fixes through a clean commit history General Guidance Consistency is important, so agree to the approach as a team before starting to code. Treat this as a design decision, so include a design proposal and review, in the same way as you would document all design decisions (see Working Agreements and Design Reviews ). Creating a new repository When creating a new repository, the team should at least do the following Agree on the branch , release and merge strategy Define the merge strategy ( linear or non-linear ) Lock the default branch and merge using pull requests (PRs) Agree on branch naming (e.g. user/your_alias/feature_name ) Establish branch/PR policies For public repositories the default branch should contain the following files: LICENSE README.md CONTRIBUTING.md Contributing to an existing repository When working on an existing project, git clone the repository and ensure you understand the team's branch, merge and release strategy (e.g. through the projects CONTRIBUTING.md file ). Mixed DevOps Environments For most engagements having a single hosted DevOps environment (i.e. Azure DevOps) is the preferred path but there are times when a mixed DevOps environment (i.e. Azure DevOps for Agile/Work item tracking & GitHub for Source Control) is needed due to customer requirements. When working in a mixed environment: Manually tag PR's in work items Ensure that the scope of work items / tasks align with PR's Resources Git --local-branching-on-the-cheap Azure DevOps ISE Git details details on how to use Git as part of a ISE project. GitHub - Removing sensitive data from a repository How Git Works Pluralsight course Mastering Git Pluralsight course","title":"Source Control"},{"location":"source-control/#source-control","text":"There are many options when working with Source Control. In ISE we use AzureDevOps for private repositories and GitHub for public repositories.","title":"Source Control"},{"location":"source-control/#sections-within-source-control","text":"Merge Strategies Branch Naming Versioning Working with Secrets Git Guidance","title":"Sections within Source Control"},{"location":"source-control/#goal","text":"Following industry best practice to work in geo-distributed teams which encourage contributions from all across ISE as well as the broader OSS community Improve code quality by enforcing reviews before merging into main branches Improve traceability of features and fixes through a clean commit history","title":"Goal"},{"location":"source-control/#general-guidance","text":"Consistency is important, so agree to the approach as a team before starting to code. Treat this as a design decision, so include a design proposal and review, in the same way as you would document all design decisions (see Working Agreements and Design Reviews ).","title":"General Guidance"},{"location":"source-control/#creating-a-new-repository","text":"When creating a new repository, the team should at least do the following Agree on the branch , release and merge strategy Define the merge strategy ( linear or non-linear ) Lock the default branch and merge using pull requests (PRs) Agree on branch naming (e.g. user/your_alias/feature_name ) Establish branch/PR policies For public repositories the default branch should contain the following files: LICENSE README.md CONTRIBUTING.md","title":"Creating a new repository"},{"location":"source-control/#contributing-to-an-existing-repository","text":"When working on an existing project, git clone the repository and ensure you understand the team's branch, merge and release strategy (e.g. through the projects CONTRIBUTING.md file ).","title":"Contributing to an existing repository"},{"location":"source-control/#mixed-devops-environments","text":"For most engagements having a single hosted DevOps environment (i.e. Azure DevOps) is the preferred path but there are times when a mixed DevOps environment (i.e. Azure DevOps for Agile/Work item tracking & GitHub for Source Control) is needed due to customer requirements. When working in a mixed environment: Manually tag PR's in work items Ensure that the scope of work items / tasks align with PR's","title":"Mixed DevOps Environments"},{"location":"source-control/#resources","text":"Git --local-branching-on-the-cheap Azure DevOps ISE Git details details on how to use Git as part of a ISE project. GitHub - Removing sensitive data from a repository How Git Works Pluralsight course Mastering Git Pluralsight course","title":"Resources"},{"location":"source-control/component-versioning/","text":"Component Versioning Goal Larger applications consist of multiple components that reference each other and rely on compatibility of the interfaces/contracts of the components. To achieve the goal of loosely coupled applications, each component should be versioned independently hence allowing developers to detect breaking changes or seamless updates just by looking at the version number. Version Numbers and Versioning schemes For developers or other components to detect breaking changes the version number of a component is important. There is different versioning number schemes, e.g. major.minor[.build[.revision]] or major.minor[.maintenance[.build]] . Upon build / CI these version numbers are being generated. During CD / release components are pushed to a component repository such as Nuget, NPM, Docker Hub where a history of different versions is being kept. Each build the version number is incremented at the last digit. Updating the major / minor version indicates changes of the API / interfaces / contracts: Major Version: A breaking change Minor Version: A backwards-compatible minor change Build / Revision: No API change, just a different build. Semantic Versioning Semantic Versioning is a versioning scheme specifying how to interpret the different version numbers. The most common format is major.minor.patch . The version number is incremented based on the following rules: Major version when you make incompatible API changes, Minor version when you add functionality in a backwards-compatible manner, and Patch version when you make backwards-compatible bug fixes. Examples of semver version numbers: 1.0.0-alpha.1 : +1 commit after the alpha release of 1.0.0 2.1.0-beta : 2.1.0 in beta branch 2.4.2 : 2.4.2 release A common practice is to determine the version number during the build process. For this the source control repository is utilized to determine the version number automatically based the source code repository. The GitVersion tool uses the git history to generate repeatable and unique version number based on number of commits since last major or minor release commit messages tags branch names Version updates happen through: Commit messages or tags for Major / Minor / Revision updates. When using commit messages a convention such as Conventional Commits is recommended (see Git Guidance - Commit Message Structure ) Branch names (e.g. develop, release/..) for Alpha / Beta / RC Otherwise: Number of commits (+12, ...) Resources GitVersion Semantic Versioning Versioning in C#","title":"Component Versioning"},{"location":"source-control/component-versioning/#component-versioning","text":"","title":"Component Versioning"},{"location":"source-control/component-versioning/#goal","text":"Larger applications consist of multiple components that reference each other and rely on compatibility of the interfaces/contracts of the components. To achieve the goal of loosely coupled applications, each component should be versioned independently hence allowing developers to detect breaking changes or seamless updates just by looking at the version number.","title":"Goal"},{"location":"source-control/component-versioning/#version-numbers-and-versioning-schemes","text":"For developers or other components to detect breaking changes the version number of a component is important. There is different versioning number schemes, e.g. major.minor[.build[.revision]] or major.minor[.maintenance[.build]] . Upon build / CI these version numbers are being generated. During CD / release components are pushed to a component repository such as Nuget, NPM, Docker Hub where a history of different versions is being kept. Each build the version number is incremented at the last digit. Updating the major / minor version indicates changes of the API / interfaces / contracts: Major Version: A breaking change Minor Version: A backwards-compatible minor change Build / Revision: No API change, just a different build.","title":"Version Numbers and Versioning schemes"},{"location":"source-control/component-versioning/#semantic-versioning","text":"Semantic Versioning is a versioning scheme specifying how to interpret the different version numbers. The most common format is major.minor.patch . The version number is incremented based on the following rules: Major version when you make incompatible API changes, Minor version when you add functionality in a backwards-compatible manner, and Patch version when you make backwards-compatible bug fixes. Examples of semver version numbers: 1.0.0-alpha.1 : +1 commit after the alpha release of 1.0.0 2.1.0-beta : 2.1.0 in beta branch 2.4.2 : 2.4.2 release A common practice is to determine the version number during the build process. For this the source control repository is utilized to determine the version number automatically based the source code repository. The GitVersion tool uses the git history to generate repeatable and unique version number based on number of commits since last major or minor release commit messages tags branch names Version updates happen through: Commit messages or tags for Major / Minor / Revision updates. When using commit messages a convention such as Conventional Commits is recommended (see Git Guidance - Commit Message Structure ) Branch names (e.g. develop, release/..) for Alpha / Beta / RC Otherwise: Number of commits (+12, ...)","title":"Semantic Versioning"},{"location":"source-control/component-versioning/#resources","text":"GitVersion Semantic Versioning Versioning in C#","title":"Resources"},{"location":"source-control/merge-strategies/","text":"Merge strategies Agree if you want a linear or non-linear commit history. There are pros and cons to both approaches: Pro linear: Avoid messy git history, use linear history Con linear: Why you should stop using Git rebase Approach for non-linear commit history Merging topic into main A---B---C topic / \\ D---E---F---G---H main git fetch origin git checkout main git merge topic Two approaches to achieve a linear commit history Rebase topic branch before merging into main Before merging topic into main , we rebase topic with the main branch: A---B---C topic / \\ D---E---F-----------G---H main git checkout main git pull git checkout topic git rebase origin/main Create a PR topic --> main in Azure DevOps and approve using the squash merge option Rebase topic branch before squash merge into main Squash merging is a merge option that allows you to condense the Git history of topic branches when you complete a pull request. Instead of adding each commit on topic to the history of main , a squash merge takes all the file changes and adds them to a single new commit on main . A---B---C topic / D---E---F-----------G---H main Create a PR topic --> main in Azure DevOps and approve using the squash merge option","title":"Merge strategies"},{"location":"source-control/merge-strategies/#merge-strategies","text":"Agree if you want a linear or non-linear commit history. There are pros and cons to both approaches: Pro linear: Avoid messy git history, use linear history Con linear: Why you should stop using Git rebase","title":"Merge strategies"},{"location":"source-control/merge-strategies/#approach-for-non-linear-commit-history","text":"Merging topic into main A---B---C topic / \\ D---E---F---G---H main git fetch origin git checkout main git merge topic","title":"Approach for non-linear commit history"},{"location":"source-control/merge-strategies/#two-approaches-to-achieve-a-linear-commit-history","text":"","title":"Two approaches to achieve a linear commit history"},{"location":"source-control/merge-strategies/#rebase-topic-branch-before-merging-into-main","text":"Before merging topic into main , we rebase topic with the main branch: A---B---C topic / \\ D---E---F-----------G---H main git checkout main git pull git checkout topic git rebase origin/main Create a PR topic --> main in Azure DevOps and approve using the squash merge option","title":"Rebase topic branch before merging into main"},{"location":"source-control/merge-strategies/#rebase-topic-branch-before-squash-merge-into-main","text":"Squash merging is a merge option that allows you to condense the Git history of topic branches when you complete a pull request. Instead of adding each commit on topic to the history of main , a squash merge takes all the file changes and adds them to a single new commit on main . A---B---C topic / D---E---F-----------G---H main Create a PR topic --> main in Azure DevOps and approve using the squash merge option","title":"Rebase topic branch before squash merge into main"},{"location":"source-control/naming-branches/","text":"Naming branches When contributing to existing projects, look for and stick with the agreed branch naming convention. In open source projects this information is typically found in the contributing instructions, often in a file named CONTRIBUTING.md . In the beginning of a new project the team agrees on the project conventions including the branch naming strategy. Here's an example of a branch naming convention: <user alias>/[feature/bug/hotfix]/<work item ID>_<title> Which could translate to something as follows: dickinson/feature/271_add_more_cowbell The example above is just that - an example. The team can choose to omit or add parts. Choosing a branch convention can depend on the development model (e.g. trunk-based development ), versioning model, tools used in managing source control, matter of taste etc. Focus on simplicity and reducing ambiguity; a good branch naming strategy allows the team to understand the purpose and ownership of each branch in the repository.","title":"Naming branches"},{"location":"source-control/naming-branches/#naming-branches","text":"When contributing to existing projects, look for and stick with the agreed branch naming convention. In open source projects this information is typically found in the contributing instructions, often in a file named CONTRIBUTING.md . In the beginning of a new project the team agrees on the project conventions including the branch naming strategy. Here's an example of a branch naming convention: <user alias>/[feature/bug/hotfix]/<work item ID>_<title> Which could translate to something as follows: dickinson/feature/271_add_more_cowbell The example above is just that - an example. The team can choose to omit or add parts. Choosing a branch convention can depend on the development model (e.g. trunk-based development ), versioning model, tools used in managing source control, matter of taste etc. Focus on simplicity and reducing ambiguity; a good branch naming strategy allows the team to understand the purpose and ownership of each branch in the repository.","title":"Naming branches"},{"location":"source-control/secrets-management/","text":"Working with Secrets in Source Control The best way to avoid leaking secrets is to store them in local/private files and exclude these from git tracking with a .gitignore file. E.g. the following pattern will exclude all files with the extension .private.config : # remove private configuration *.private.config For more details on proper management of credentials and secrets in source control, and handling an accidental commit of secrets to source control, please refer to the Secrets Management document which has further information, split by language as well. As an extra security measure, apply credential scanning in your CI/CD pipeline.","title":"Working with Secrets in Source Control"},{"location":"source-control/secrets-management/#working-with-secrets-in-source-control","text":"The best way to avoid leaking secrets is to store them in local/private files and exclude these from git tracking with a .gitignore file. E.g. the following pattern will exclude all files with the extension .private.config : # remove private configuration *.private.config For more details on proper management of credentials and secrets in source control, and handling an accidental commit of secrets to source control, please refer to the Secrets Management document which has further information, split by language as well. As an extra security measure, apply credential scanning in your CI/CD pipeline.","title":"Working with Secrets in Source Control"},{"location":"source-control/git-guidance/","text":"Git Guidance What is Git? Git is a distributed version control system. This means that - unlike SVN or CVS - it doesn't use a central server to synchronize. Instead, every participant has a local copy of the source-code, and the attached history that is kept in sync by comparing commit hashes (SHA hashes of changes between each git commit command) making up the latest version (called HEAD ). For example: repo 1: A -> B -> C -> D -> HEAD repo 2: A -> B -> HEAD repo 3: X -> Y -> Z -> HEAD repo 4: A -> J -> HEAD Since they share a common history, repo 1 and repo 2 can be synchronized fairly easily, repo 4 may be able to synchronize as well, but it's going to have to add a commit (J, and maybe a merge commit) to repo 1. Repo 3 cannot be easily synchronized with the others. Everything related to these commits is stored in a local .git directory in the root of the repository. In other words, by using Git you are simply creating immutable file histories that uniquely identify the current state and therefore allow sharing whatever comes after. It's a Merkle tree . Be sure to run git help after Git installation to find really in-depth explanations of everything. Installation Git is a tool set that must be installed. Install Git and follow the First-Time Git Setup . A recommended installation is the Git Lens extension for Visual Studio Code . Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more. You can use these commands as well to configure your Git for Visual Studio Code as an editor for merge conflicts and diff tool. git config --global user.name [YOUR FIRST AND LAST NAME] git config --global user.email [YOUR E-MAIL ADDRESS] git config --global merge.tool vscode git config --global mergetool.vscode.cmd \"code --wait $MERGED\" git config --global diff.tool vscode git config --global difftool.vscode.cmd \"code --wait --diff $LOCAL $REMOTE\" Basic workflow A basic Git workflow is as follows; you can find more information on the specific steps below. # pull the latest changes git pull # start a new feature branch based on the develop branch git checkout -b feature/123-add-git-instructions develop # edit some files # add and commit the files git add <file> git commit -m \"add basic instructions\" # edit some files # add and commit the files git add <file> git commit -m \"add more advanced instructions\" # check your changes git status # push the branch to the remote repository git push --set-upstream origin feature/123-add-git-instructions Cloning Whenever you want to make a change to a repository, you need to first clone it. Cloning a repository pulls down a full copy of all the repository data, so that you can work on it locally. This copy includes all versions of every file and folder for the project. git clone https://github.com/username/repo-name You only need to clone the repository the first time. Before any subsequent branches you can sync any changes from the remote repository using git pull . Branching To avoid adding code that has not been peer reviewed to the main branch (ex. develop ) we typically work in feature branches, and merge these back to the main trunk with a Pull Request. It's even the case that often the main or develop branch of a repository are locked so that you can't make changes without a Pull Request. Therefore, it is useful to create a separate branch for your local/feature work, so that you can work and track your changes in this branch. Pull the latest changes and create a new branch for your work based on the trunk (in this case develop ). git pull git checkout -b feature/feature-name develop At any point, you can move between the branches with git checkout <branch> as long as you have committed or stashed your work. If you forget the name of your branch use git branch --all to list all branches. Committing To avoid losing work, it is good to commit often in small chunks. This allows you to revert only the last changes if you discover a problem and also neatly explains exactly what changes were made and why. Make changes to your branch Check what files were changed > git status On branch feature/271-basic-commit-info Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: source-control/git-guidance/README.md Track the files you wish to include in the commit. To track all modified files: git add --all Or to track only specific files: git add source-control/git-guidance/README.md Commit the changes to your local branch with a descriptive commit message git commit -m \"add basic git instructions\" Pushing When you are done working, push your changes to a branch in the remote repository using: git push The first time you push, you first need to set an upstream branch as follows. After the first push, the --set-upstream parameter and branch name are not needed anymore. git push --set-upstream origin feature/feature-name Once the feature branch is pushed to the remote repository, it is visible to anyone with access to the code. Merging We encourage the use of Pull Request to merge code to the main repository to make sure that all code in the final product is code reviewed The Pull Request (PR) process in Azure DevOps , GitHub and other similar tools make it easy both to start a PR, review a PR and merge a PR. Merge Conflicts If multiple people make changes to the same files, you may need to resolve any conflicts that have occurred before you can merge. # check out the develop branch and get the latest changes git checkout develop git pull # check out your branch git checkout <your branch> # merge the develop branch into your branch git merge develop # if merge conflicts occur, above command will fail with a message telling you that there are conflicts to be solved # find which files need to be resolved git status You can start an interactive process that will show which files have conflicts. Sometimes you removed a file, where it was changed in dev. Or you made changes to some lines in a file where another developer made changes as well. If you went through the installation steps mentioned before, Visual Studio Code is set up as merge tool. You can also use a merge tool like kdiff3 . When editing conflicts occur, the process will automatically open Visual Studio Code where the conflicting parts are highlighted in green and blue, and you have make a choice: Accept your changes (current) Accept the changes from dev branch (incoming) Accept them both and fix the code (probably needed) Here are lines that are either unchanged from the common ancestor, or cleanly resolved because only one side changed. <<<<<<< yours:sample.txt Conflict resolution is hard; let's go shopping. ======= Git makes conflict resolution easy. >>>>>>> theirs:sample.txt And here is another line that is cleanly resolved or unmodified When this process is completed, make sure you test the result by executing build, checks, test to validate this merged result. # conclude the merge git merge --continue # verify that everything went ok git log # push the changes to the remote branch git push If no other conflicts appear, the PR can now be merged, and your branch deleted. Use squash to reduce your changes into a single commit, so the commit history can be within an acceptable size. Stashing changes git stash is super handy if you have un-committed changes in your working directory, but you want to work on a different branch. You can run git stash , save the un-committed work, and revert to the HEAD commit. You can retrieve the saved changes by running git stash pop : git stash \u2026 git stash pop Or you can move the current state into a new branch: git stash branch <new_branch_to_save_changes> Recovering lost commits If you \"lost\" a commit that you want to return to, for example to revert a git rebase where your commits got squashed, you can use git reflog to find the commit: git reflog Then you can use the reflog reference ( HEAD@{} ) to reset to a specific commit before the rebase: git reset HEAD@{2} Commit Best Practices A commit combines changes into a logical unit. Adding a descriptive commit message can aid in comprehending the code changes and understanding the rationale behind the modifications. Consider the following when making your commits: Make small commits. This makes changes easier to review, and if we need to revert a commit, we lose less work. Consider splitting the commit into separate commits with git add -p if it includes more than one logical change or bug fix. Don't mix whitespace changes with functional code changes. It is hard to determine if the line has a functional change or only removes a whitespace, so functional changes may go unnoticed. Commit complete and well tested code. Never commit incomplete code, get in the habit of testing your code before committing. Write good commit messages. Why is it necessary? It may fix a bug, add a feature, improve performance, or just be a change for the sake of correctness What effects does this change have? In addition to the obvious ones, this may include benchmarks, side effects etc. You can specify the default git editor, which allows you to write your commit messages using your favorite editor. The following command makes Visual Studio Code your default git editor: git config --global core.editor \"code --wait\" Commit Message Structure The essential parts of a commit message are: * subject line: a short description of the commit, maximum 50 characters long * body (optional): a longer description of the commit, wrapped at 72 characters, separated from the subject line by a blank line You are free to structure commit messages; however, git commands like git log utilize above structure. Therefore, it can be helpful to follow a convention within your team and to utilize git best. For example, Conventional Commits is a lightweight convention that complements SemVer , by describing the features, fixes, and breaking changes made in commit messages. See Component Versioning for more information on versioning. For more information on commit message conventions, see: A Note About Git Commit Messages Conventional Commits Git commit best practices How to Write a Git Commit Message How to Write Better Git Commit Messages Information in commit messages On commit messages Managing remotes A local git repository can have one or more backing remote repositories. You can list the remote repositories using git remote - by default, the remote repository you cloned from will be called origin > git remote -v origin https://github.com/microsoft/code-with-engineering-playbook.git (fetch) origin https://github.com/microsoft/code-with-engineering-playbook.git (push) Working with forks You can set multiple remotes. This is useful for example if you want to work with a forked version of the repository. For more info on how to set upstream remotes and syncing repositories when working with forks see GitHub's Working with forks documentation . Updating the remote if a repository changes names If the repository is changed in some way, for example a name change, or if you want to switch between HTTPS and SSH you need to update the remote # list the existing remotes > git remote -v origin https://hostname/username/repository-name.git (fetch) origin https://hostname/username/repository-name.git (push) # change the remote url git remote set-url origin https://hostname/username/new-repository-name.git # verify that the remote URL has changed > git remote -v origin https://hostname/username/new-repository-name.git (fetch) origin https://hostname/username/new-repository-name.git (push) Rolling back changes Reverting and deleting commits To \"undo\" a commit, run the following two commands: git revert and git reset . git revert creates a new commit that undoes commits while git reset allows deleting commits entirely from the commit history. If you have committed secrets/keys, git reset will remove them from the commit history! To delete the latest commit use HEAD~ : git reset --hard HEAD~1 To delete commits back to a specific commit, use the respective commit id: git reset --hard <sha1-commit-id> after you deleted the unwanted commits, push using force : git push origin HEAD --force Interactive rebase for undoing commits: git rebase -i HEAD~N The above command will open an interactive session in an editor (for example vim) with the last N commits sorted from oldest to newest. To undo a commit, delete the corresponding line of the commit and save the file. Git will rewrite the commits in the order listed in the file and because one (or many) commits were deleted, the commit will no longer be part of the history. Running rebase will locally modify the history, after this one can use force to push the changes to remote without the deleted commit. Using submodules Submodules can be useful in more complex deployment and/or development scenarios Adding a submodule to your repo git submodule add -b master <your_submodule> Initialize and pull a repo with submodules: git submodule init git submodule update --init --remote git submodule foreach git checkout master git submodule foreach git pull origin Working with images, video and other binary content Avoid committing frequently changed binary files, such as large images, video or compiled code to your git repository. Binary content is not diffed like text content, so cloning or pulling from the repository may pull each revision of the binary file. One solution to this problem is Git LFS (Git Large File Storage) - an open source Git extension for versioning large files. You can find more information on Git LFS in the Git LFS and VFS document . Working with large repositories When working with a very large repository of which you don't require all the files, you can use VFS for Git - an open source Git extension that virtualize the file system beneath your Git repository, so that you seem to work in a regular working directory but while VFS for Git only downloads objects as they are needed. You can find more information on VFS for Git in the Git LFS and VFS document . Tools Visual Studio Code is a cross-platform powerful source code editor with built in git commands. Within Visual Studio Code editor you can review diffs, stage changes, make commits, pull and push to your git repositories. You can refer to Visual Studio Code Git Support for documentation. Use a shell/terminal to work with Git commands instead of relying on GUI clients . If you're working on Windows, posh-git is a great PowerShell environment for Git. Another option is to use Git bash for Windows . On Linux/Mac, install git and use your favorite shell/terminal.","title":"Git Guidance"},{"location":"source-control/git-guidance/#git-guidance","text":"","title":"Git Guidance"},{"location":"source-control/git-guidance/#what-is-git","text":"Git is a distributed version control system. This means that - unlike SVN or CVS - it doesn't use a central server to synchronize. Instead, every participant has a local copy of the source-code, and the attached history that is kept in sync by comparing commit hashes (SHA hashes of changes between each git commit command) making up the latest version (called HEAD ). For example: repo 1: A -> B -> C -> D -> HEAD repo 2: A -> B -> HEAD repo 3: X -> Y -> Z -> HEAD repo 4: A -> J -> HEAD Since they share a common history, repo 1 and repo 2 can be synchronized fairly easily, repo 4 may be able to synchronize as well, but it's going to have to add a commit (J, and maybe a merge commit) to repo 1. Repo 3 cannot be easily synchronized with the others. Everything related to these commits is stored in a local .git directory in the root of the repository. In other words, by using Git you are simply creating immutable file histories that uniquely identify the current state and therefore allow sharing whatever comes after. It's a Merkle tree . Be sure to run git help after Git installation to find really in-depth explanations of everything.","title":"What is Git?"},{"location":"source-control/git-guidance/#installation","text":"Git is a tool set that must be installed. Install Git and follow the First-Time Git Setup . A recommended installation is the Git Lens extension for Visual Studio Code . Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more. You can use these commands as well to configure your Git for Visual Studio Code as an editor for merge conflicts and diff tool. git config --global user.name [YOUR FIRST AND LAST NAME] git config --global user.email [YOUR E-MAIL ADDRESS] git config --global merge.tool vscode git config --global mergetool.vscode.cmd \"code --wait $MERGED\" git config --global diff.tool vscode git config --global difftool.vscode.cmd \"code --wait --diff $LOCAL $REMOTE\"","title":"Installation"},{"location":"source-control/git-guidance/#basic-workflow","text":"A basic Git workflow is as follows; you can find more information on the specific steps below. # pull the latest changes git pull # start a new feature branch based on the develop branch git checkout -b feature/123-add-git-instructions develop # edit some files # add and commit the files git add <file> git commit -m \"add basic instructions\" # edit some files # add and commit the files git add <file> git commit -m \"add more advanced instructions\" # check your changes git status # push the branch to the remote repository git push --set-upstream origin feature/123-add-git-instructions","title":"Basic workflow"},{"location":"source-control/git-guidance/#cloning","text":"Whenever you want to make a change to a repository, you need to first clone it. Cloning a repository pulls down a full copy of all the repository data, so that you can work on it locally. This copy includes all versions of every file and folder for the project. git clone https://github.com/username/repo-name You only need to clone the repository the first time. Before any subsequent branches you can sync any changes from the remote repository using git pull .","title":"Cloning"},{"location":"source-control/git-guidance/#branching","text":"To avoid adding code that has not been peer reviewed to the main branch (ex. develop ) we typically work in feature branches, and merge these back to the main trunk with a Pull Request. It's even the case that often the main or develop branch of a repository are locked so that you can't make changes without a Pull Request. Therefore, it is useful to create a separate branch for your local/feature work, so that you can work and track your changes in this branch. Pull the latest changes and create a new branch for your work based on the trunk (in this case develop ). git pull git checkout -b feature/feature-name develop At any point, you can move between the branches with git checkout <branch> as long as you have committed or stashed your work. If you forget the name of your branch use git branch --all to list all branches.","title":"Branching"},{"location":"source-control/git-guidance/#committing","text":"To avoid losing work, it is good to commit often in small chunks. This allows you to revert only the last changes if you discover a problem and also neatly explains exactly what changes were made and why. Make changes to your branch Check what files were changed > git status On branch feature/271-basic-commit-info Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: source-control/git-guidance/README.md Track the files you wish to include in the commit. To track all modified files: git add --all Or to track only specific files: git add source-control/git-guidance/README.md Commit the changes to your local branch with a descriptive commit message git commit -m \"add basic git instructions\"","title":"Committing"},{"location":"source-control/git-guidance/#pushing","text":"When you are done working, push your changes to a branch in the remote repository using: git push The first time you push, you first need to set an upstream branch as follows. After the first push, the --set-upstream parameter and branch name are not needed anymore. git push --set-upstream origin feature/feature-name Once the feature branch is pushed to the remote repository, it is visible to anyone with access to the code.","title":"Pushing"},{"location":"source-control/git-guidance/#merging","text":"We encourage the use of Pull Request to merge code to the main repository to make sure that all code in the final product is code reviewed The Pull Request (PR) process in Azure DevOps , GitHub and other similar tools make it easy both to start a PR, review a PR and merge a PR.","title":"Merging"},{"location":"source-control/git-guidance/#merge-conflicts","text":"If multiple people make changes to the same files, you may need to resolve any conflicts that have occurred before you can merge. # check out the develop branch and get the latest changes git checkout develop git pull # check out your branch git checkout <your branch> # merge the develop branch into your branch git merge develop # if merge conflicts occur, above command will fail with a message telling you that there are conflicts to be solved # find which files need to be resolved git status You can start an interactive process that will show which files have conflicts. Sometimes you removed a file, where it was changed in dev. Or you made changes to some lines in a file where another developer made changes as well. If you went through the installation steps mentioned before, Visual Studio Code is set up as merge tool. You can also use a merge tool like kdiff3 . When editing conflicts occur, the process will automatically open Visual Studio Code where the conflicting parts are highlighted in green and blue, and you have make a choice: Accept your changes (current) Accept the changes from dev branch (incoming) Accept them both and fix the code (probably needed) Here are lines that are either unchanged from the common ancestor, or cleanly resolved because only one side changed. <<<<<<< yours:sample.txt Conflict resolution is hard; let's go shopping. ======= Git makes conflict resolution easy. >>>>>>> theirs:sample.txt And here is another line that is cleanly resolved or unmodified When this process is completed, make sure you test the result by executing build, checks, test to validate this merged result. # conclude the merge git merge --continue # verify that everything went ok git log # push the changes to the remote branch git push If no other conflicts appear, the PR can now be merged, and your branch deleted. Use squash to reduce your changes into a single commit, so the commit history can be within an acceptable size.","title":"Merge Conflicts"},{"location":"source-control/git-guidance/#stashing-changes","text":"git stash is super handy if you have un-committed changes in your working directory, but you want to work on a different branch. You can run git stash , save the un-committed work, and revert to the HEAD commit. You can retrieve the saved changes by running git stash pop : git stash \u2026 git stash pop Or you can move the current state into a new branch: git stash branch <new_branch_to_save_changes>","title":"Stashing changes"},{"location":"source-control/git-guidance/#recovering-lost-commits","text":"If you \"lost\" a commit that you want to return to, for example to revert a git rebase where your commits got squashed, you can use git reflog to find the commit: git reflog Then you can use the reflog reference ( HEAD@{} ) to reset to a specific commit before the rebase: git reset HEAD@{2}","title":"Recovering lost commits"},{"location":"source-control/git-guidance/#commit-best-practices","text":"A commit combines changes into a logical unit. Adding a descriptive commit message can aid in comprehending the code changes and understanding the rationale behind the modifications. Consider the following when making your commits: Make small commits. This makes changes easier to review, and if we need to revert a commit, we lose less work. Consider splitting the commit into separate commits with git add -p if it includes more than one logical change or bug fix. Don't mix whitespace changes with functional code changes. It is hard to determine if the line has a functional change or only removes a whitespace, so functional changes may go unnoticed. Commit complete and well tested code. Never commit incomplete code, get in the habit of testing your code before committing. Write good commit messages. Why is it necessary? It may fix a bug, add a feature, improve performance, or just be a change for the sake of correctness What effects does this change have? In addition to the obvious ones, this may include benchmarks, side effects etc. You can specify the default git editor, which allows you to write your commit messages using your favorite editor. The following command makes Visual Studio Code your default git editor: git config --global core.editor \"code --wait\"","title":"Commit Best Practices"},{"location":"source-control/git-guidance/#commit-message-structure","text":"The essential parts of a commit message are: * subject line: a short description of the commit, maximum 50 characters long * body (optional): a longer description of the commit, wrapped at 72 characters, separated from the subject line by a blank line You are free to structure commit messages; however, git commands like git log utilize above structure. Therefore, it can be helpful to follow a convention within your team and to utilize git best. For example, Conventional Commits is a lightweight convention that complements SemVer , by describing the features, fixes, and breaking changes made in commit messages. See Component Versioning for more information on versioning. For more information on commit message conventions, see: A Note About Git Commit Messages Conventional Commits Git commit best practices How to Write a Git Commit Message How to Write Better Git Commit Messages Information in commit messages On commit messages","title":"Commit Message Structure"},{"location":"source-control/git-guidance/#managing-remotes","text":"A local git repository can have one or more backing remote repositories. You can list the remote repositories using git remote - by default, the remote repository you cloned from will be called origin > git remote -v origin https://github.com/microsoft/code-with-engineering-playbook.git (fetch) origin https://github.com/microsoft/code-with-engineering-playbook.git (push)","title":"Managing remotes"},{"location":"source-control/git-guidance/#working-with-forks","text":"You can set multiple remotes. This is useful for example if you want to work with a forked version of the repository. For more info on how to set upstream remotes and syncing repositories when working with forks see GitHub's Working with forks documentation .","title":"Working with forks"},{"location":"source-control/git-guidance/#updating-the-remote-if-a-repository-changes-names","text":"If the repository is changed in some way, for example a name change, or if you want to switch between HTTPS and SSH you need to update the remote # list the existing remotes > git remote -v origin https://hostname/username/repository-name.git (fetch) origin https://hostname/username/repository-name.git (push) # change the remote url git remote set-url origin https://hostname/username/new-repository-name.git # verify that the remote URL has changed > git remote -v origin https://hostname/username/new-repository-name.git (fetch) origin https://hostname/username/new-repository-name.git (push)","title":"Updating the remote if a repository changes names"},{"location":"source-control/git-guidance/#rolling-back-changes","text":"","title":"Rolling back changes"},{"location":"source-control/git-guidance/#reverting-and-deleting-commits","text":"To \"undo\" a commit, run the following two commands: git revert and git reset . git revert creates a new commit that undoes commits while git reset allows deleting commits entirely from the commit history. If you have committed secrets/keys, git reset will remove them from the commit history! To delete the latest commit use HEAD~ : git reset --hard HEAD~1 To delete commits back to a specific commit, use the respective commit id: git reset --hard <sha1-commit-id> after you deleted the unwanted commits, push using force : git push origin HEAD --force Interactive rebase for undoing commits: git rebase -i HEAD~N The above command will open an interactive session in an editor (for example vim) with the last N commits sorted from oldest to newest. To undo a commit, delete the corresponding line of the commit and save the file. Git will rewrite the commits in the order listed in the file and because one (or many) commits were deleted, the commit will no longer be part of the history. Running rebase will locally modify the history, after this one can use force to push the changes to remote without the deleted commit.","title":"Reverting and deleting commits"},{"location":"source-control/git-guidance/#using-submodules","text":"Submodules can be useful in more complex deployment and/or development scenarios Adding a submodule to your repo git submodule add -b master <your_submodule> Initialize and pull a repo with submodules: git submodule init git submodule update --init --remote git submodule foreach git checkout master git submodule foreach git pull origin","title":"Using submodules"},{"location":"source-control/git-guidance/#working-with-images-video-and-other-binary-content","text":"Avoid committing frequently changed binary files, such as large images, video or compiled code to your git repository. Binary content is not diffed like text content, so cloning or pulling from the repository may pull each revision of the binary file. One solution to this problem is Git LFS (Git Large File Storage) - an open source Git extension for versioning large files. You can find more information on Git LFS in the Git LFS and VFS document .","title":"Working with images, video and other binary content"},{"location":"source-control/git-guidance/#working-with-large-repositories","text":"When working with a very large repository of which you don't require all the files, you can use VFS for Git - an open source Git extension that virtualize the file system beneath your Git repository, so that you seem to work in a regular working directory but while VFS for Git only downloads objects as they are needed. You can find more information on VFS for Git in the Git LFS and VFS document .","title":"Working with large repositories"},{"location":"source-control/git-guidance/#tools","text":"Visual Studio Code is a cross-platform powerful source code editor with built in git commands. Within Visual Studio Code editor you can review diffs, stage changes, make commits, pull and push to your git repositories. You can refer to Visual Studio Code Git Support for documentation. Use a shell/terminal to work with Git commands instead of relying on GUI clients . If you're working on Windows, posh-git is a great PowerShell environment for Git. Another option is to use Git bash for Windows . On Linux/Mac, install git and use your favorite shell/terminal.","title":"Tools"},{"location":"source-control/git-guidance/git-lfs-and-vfs/","text":"Using Git LFS and VFS for Git introduction Git LFS and VFS for Git are solutions for using Git with (large) binary files and large source trees. Git LFS Git is very good and keeping track of changes in text-based files like code, but it is not that good at tracking binary files. For instance, if you store a Photoshop image file (PSD) in a repository, with every change, the complete file is stored again in the history. This can make the history of the Git repo very large, which makes a clone of the repository more and more time-consuming. A solution to work with binary files is using Git LFS (or Git Large File System). This is an extension to Git and must be installed separately, and it can only be used with a repository platform that supports LFS. GitHub.com and Azure DevOps for instance are platforms that have support for LFS. The way it works in short, is that a placeholder file is stored in the repo with information for the LFS system. It looks something like this: version https://git-lfs.github.com/spec/v1 oid a747cfbbef63fc0a3f5ffca332ae486ee7bf77c1d1b9b2de02e261ef97d085fe size 4923023 The actual file is stored in a separate storage. This way Git will track changes in this placeholder file, not the large file. The combination of using Git and Git LFS will hide this from the developer though. You will just work with the repository and files as before. When working with these large files yourself, you'll still see the Git history grown on your own machine, as Git will still start tracking these large files locally, but when you clone the repo, the history is actually pretty small. So it's beneficial for others not working directly on the large files. Pros of Git LFS Uses the end to end Git workflow for all files Git LFS supports file locking to avoid conflicts for undiffable assets Git LFS is fully supported in Azure DevOps Services Cons of Git LFS Everyone who contributes to the repository needs to install Git LFS If not set up properly: Binary files committed through Git LFS are not visible as Git will only download the data describing the large file Committing large binaries will push the full binary to the repository Git cannot merge the changes from two different versions of a binary file; file locking mitigates this Azure Repos do not support using SSH for repositories with Git LFS tracked files - for more information see the Git LFS authentication documentation Installation and use of Git LFS Go to https://git-lfs.github.com and download and install the setup from there. For every repository you want to use LFS, you have to go through these steps: Setup LFS for the repo: git lfs install Indicate which files have to be considered as large files (or binary files). As an example, to consider all Photoshop files to be large: git lfs track \"*.psd\" There are more fine-grained ways to indicate files in a folder and more. See the Git LFS Documentation . With these commands a .gitattribute file is created which contains these settings and must be part of the repository. From here on you just use the standard Git commands to work in the repository. The rest will be handled by Git and Git LFS. Common LFS commands Install Git LFS git lfs install # windows sudo apt-get git-lfs # linux See the Git LFS installation instructions for installation on other systems Track .mp4 files with Git LFS git lfs track '*.mp4' Update the .gitattributes file listing the files and patterns to track *.mp4 filter = lfs diff = lfs merge = lfs -text docs/images/* filter = lfs diff = lfs merge = lfs -text List all patterns tracked git lfs track List all files tracked git lfs ls-files Download files to your working directory git lfs pull git lfs pull --include = \"path/to/file\" VFS for Git Imagine a large repository containing multiple projects, ex. one per feature. As a developer you may only be working on some features, and thus you don't want to download all the projects in the repo. By default, with Git however, cloning the repository means you will download all files/projects. VFS for Git (or Virtual File System for Git) solves this problem, as it will only download what you need to your local machine, but if you look in the file system, e.g. with Windows Explorer, it will show all the folders and files including the correct file sizes. The Git platform must support GVFS to make this work. GitHub.com and Azure DevOps both support this out of the box. Installation and use of VFS for Git Microsoft create VFS for Git and made it open source. It can be found at https://github.com/microsoft/VFSForGit . It's only available for Windows. The necessary installers can be found at https://github.com/Microsoft/VFSForGit/releases On the releases page you'll find two important downloads: Git 2.28.0.0 installer, which is a requirement for running VFS for Git. This is not the same as the standard Git for Windows install! SetupGVFS installer. Download those files and install them on your machine. To be able to use VFS for Git for a repository, a .gitattributes file needs to be added to the repo with this line in it: * -text To clone a repository to your machine using VFS for Git you use gvfs instead of git like so: gvfs clone [ URL ] [ dir ] Once this is done, you have a folder which contains a src folder which contains the contents of the repository. This is done because of a practice to put all outputs of build systems outside this tree. This makes it easier to manage .gitignore files and to keep Git performant with lots of files. For working with the repository you just use Git commands as before. To remove a VFS for Git repository from your machine, make sure the VFS process is stopped and execute this command from the main folder: gvfs unmount This will stop the process and unregister it, after that you can safely remove the folder. References Git LFS getting started Git LFS manual Git LFS on Azure Repos","title":"Using Git LFS and VFS for Git introduction"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#using-git-lfs-and-vfs-for-git-introduction","text":"Git LFS and VFS for Git are solutions for using Git with (large) binary files and large source trees.","title":"Using Git LFS and VFS for Git introduction"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#git-lfs","text":"Git is very good and keeping track of changes in text-based files like code, but it is not that good at tracking binary files. For instance, if you store a Photoshop image file (PSD) in a repository, with every change, the complete file is stored again in the history. This can make the history of the Git repo very large, which makes a clone of the repository more and more time-consuming. A solution to work with binary files is using Git LFS (or Git Large File System). This is an extension to Git and must be installed separately, and it can only be used with a repository platform that supports LFS. GitHub.com and Azure DevOps for instance are platforms that have support for LFS. The way it works in short, is that a placeholder file is stored in the repo with information for the LFS system. It looks something like this: version https://git-lfs.github.com/spec/v1 oid a747cfbbef63fc0a3f5ffca332ae486ee7bf77c1d1b9b2de02e261ef97d085fe size 4923023 The actual file is stored in a separate storage. This way Git will track changes in this placeholder file, not the large file. The combination of using Git and Git LFS will hide this from the developer though. You will just work with the repository and files as before. When working with these large files yourself, you'll still see the Git history grown on your own machine, as Git will still start tracking these large files locally, but when you clone the repo, the history is actually pretty small. So it's beneficial for others not working directly on the large files.","title":"Git LFS"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#pros-of-git-lfs","text":"Uses the end to end Git workflow for all files Git LFS supports file locking to avoid conflicts for undiffable assets Git LFS is fully supported in Azure DevOps Services","title":"Pros of Git LFS"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#cons-of-git-lfs","text":"Everyone who contributes to the repository needs to install Git LFS If not set up properly: Binary files committed through Git LFS are not visible as Git will only download the data describing the large file Committing large binaries will push the full binary to the repository Git cannot merge the changes from two different versions of a binary file; file locking mitigates this Azure Repos do not support using SSH for repositories with Git LFS tracked files - for more information see the Git LFS authentication documentation","title":"Cons of Git LFS"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#installation-and-use-of-git-lfs","text":"Go to https://git-lfs.github.com and download and install the setup from there. For every repository you want to use LFS, you have to go through these steps: Setup LFS for the repo: git lfs install Indicate which files have to be considered as large files (or binary files). As an example, to consider all Photoshop files to be large: git lfs track \"*.psd\" There are more fine-grained ways to indicate files in a folder and more. See the Git LFS Documentation . With these commands a .gitattribute file is created which contains these settings and must be part of the repository. From here on you just use the standard Git commands to work in the repository. The rest will be handled by Git and Git LFS.","title":"Installation and use of Git LFS"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#common-lfs-commands","text":"Install Git LFS git lfs install # windows sudo apt-get git-lfs # linux See the Git LFS installation instructions for installation on other systems Track .mp4 files with Git LFS git lfs track '*.mp4' Update the .gitattributes file listing the files and patterns to track *.mp4 filter = lfs diff = lfs merge = lfs -text docs/images/* filter = lfs diff = lfs merge = lfs -text List all patterns tracked git lfs track List all files tracked git lfs ls-files Download files to your working directory git lfs pull git lfs pull --include = \"path/to/file\"","title":"Common LFS commands"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#vfs-for-git","text":"Imagine a large repository containing multiple projects, ex. one per feature. As a developer you may only be working on some features, and thus you don't want to download all the projects in the repo. By default, with Git however, cloning the repository means you will download all files/projects. VFS for Git (or Virtual File System for Git) solves this problem, as it will only download what you need to your local machine, but if you look in the file system, e.g. with Windows Explorer, it will show all the folders and files including the correct file sizes. The Git platform must support GVFS to make this work. GitHub.com and Azure DevOps both support this out of the box.","title":"VFS for Git"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#installation-and-use-of-vfs-for-git","text":"Microsoft create VFS for Git and made it open source. It can be found at https://github.com/microsoft/VFSForGit . It's only available for Windows. The necessary installers can be found at https://github.com/Microsoft/VFSForGit/releases On the releases page you'll find two important downloads: Git 2.28.0.0 installer, which is a requirement for running VFS for Git. This is not the same as the standard Git for Windows install! SetupGVFS installer. Download those files and install them on your machine. To be able to use VFS for Git for a repository, a .gitattributes file needs to be added to the repo with this line in it: * -text To clone a repository to your machine using VFS for Git you use gvfs instead of git like so: gvfs clone [ URL ] [ dir ] Once this is done, you have a folder which contains a src folder which contains the contents of the repository. This is done because of a practice to put all outputs of build systems outside this tree. This makes it easier to manage .gitignore files and to keep Git performant with lots of files. For working with the repository you just use Git commands as before. To remove a VFS for Git repository from your machine, make sure the VFS process is stopped and execute this command from the main folder: gvfs unmount This will stop the process and unregister it, after that you can safely remove the folder.","title":"Installation and use of VFS for Git"},{"location":"source-control/git-guidance/git-lfs-and-vfs/#references","text":"Git LFS getting started Git LFS manual Git LFS on Azure Repos","title":"References"},{"location":"user-interface-engineering/","text":"User Interface and User Experience Engineering Also known as UI/UX , Front End Development , or Web Development , user interface and user experience engineering is a broad topic and encompasses many different aspects of modern application development. When a user interface is required, ISE primarily develops a web application . Web apps can be built in a variety of ways with many different tools. Goal The goal of the User Interface section is to provide guidance on developing web applications. Everyone should begin by reading the General Guidance for a quick introduction to the four main aspects of every web application project. From there, readers are encouraged to dive deeper into each topic, or begin reviewing technical guidance that pertains to their engagement. All UI/UX projects should begin with a detailed design document. Review the Design Process section for more details, and a template to get started. Keep in mind that like all software, there is no \"right way\" to build a user interface application. Leverage and trust your team's or your customer's experience and expertise for the best development experience. General Guidance The state of web platform engineering is fast moving. There is no one-size-fits-all solution. For any team to be successful in building a UI, they need to have an understanding of the higher-level aspects of all UI project. Accessibility - ensuring your application is usable and enjoyed by as many people as possible is at the heart of accessibility and inclusive design. Usability - how effortless should it be for any given user to use the application? Do they need special training or a document to understand how to use it, or will it be intuitive? Maintainability - is the application just a proof of concept to showcase an idea for future work, or will it be an MVP and act as the starting point for a larger, production-ready application? Sometimes you don't need React or any other framework. Sometimes you need React, but not all the bells and whistles from create-react-app. Understanding project maintainability requirements can simplify an engagement\u2019s tooling needs significantly and let folks iterate without headaches. Stability - what is the cost of adding a dependency? Is it actively stable/updated/maintained? If not, can you afford the tech debt (sometimes the answer can be yes!)? Could you get 90% of the way there without adding another dependency? More information is available for each general guidance section in the corresponding pages. Design Process All user interface applications begin with the design process. The true definition for \"the design process\" is ever changing and highly opinion based as well. This sections aims to deliver a general overview of a design process any engineering team could conduct when starting an UI application engagement. When committing to a UI/UX project, be certain to not over-promise on the web application requirements. Delivering a production-ready application involves a large number of engineering complexities resulting in a very long timeline. Always start with a proof-of-concept or minimum-viable-product first. These projects can easily be achieved within a couple month timeline (and sometimes even less). The first step in the design process is to understand the problem at hand and outline what the solution should achieve. Commonly referred to as Desired Outcomes , the output of this first step should be a generalized list of outcomes that the solution will accomplish. Consider the following example: A public library has a set of data containing information about its collection. The data stores text, images, and the status of a book (borrowed, available, reserved). The library librarian wants to share this data with its users. As the librarian, I want to notify users before they receive late penalties for overdue books As the librarian, I want to notify users when a book they have reserved becomes available With the desired outcomes in mind, the next step in the design process is to define user personas. Regardless of the solution for a given problem, understanding the user needs leads to a better understanding of feature development and technological choices. Personas are written as prose-like paragraphs that describe different types of users. Considering the previous example, the various user personas could be: An individual with no disabilities, but is unfamiliar with using software interfaces An individual with no disabilities, and is familiar with using software interfaces An individual with disabilities, and is unfamiliar with using software interfaces (with or without the use of accessibility tooling) An individual with disabilities, but familiar with using software interfaces through the use of accessibility tooling After defining these personas it is clear that whatever the solution is, it requires a lot of accessibility and user experience design work. Sometimes personas can be simpler than this, but always include disabled users . Even when a user set is predefined as a group of individuals without disabilities, there is no guarantee that the user set will remain that way. After defining the desired outcomes as well as the personas , the next step in the design process is to begin conducting Trade Studies for potential solutions. The first trade study should be high-level and solution oriented. It will utilize the results of previous steps and propose multiple solutions for achieving the desired outcomes with the listed personas in mind. Continuing with the library example, this first trade study may compare various application solutions such as automated emails or text messages, an RSS feed, or an user interface application. There are pros and cons for each solution both from an user experience and a developer experience perspective, but at this stage it is important to focus on the users. After arriving on the best solution, the next trade study can dive into different implementation methods. It is in this subsequent trade studies that developer experience becomes more important. The benefit of building software applications is that there are truly infinite ways to build something. A team can use the latest shiny tools, or they can utilize the tried-and-tested ones. It is for this reason that focussing completely on the user until a solution is defined is better than obsessing over technology choices. Within ISE, we often reach for tools such as the React framework. React is a great tool when wielded by an experienced team. Otherwise, it can create more hurdles than it is worth. Keep in mind that even if you feel capable with React, the rest of your team and your customer's dev team needs to as well. Some other great options to consider when building a proof-of-concept or minimum-viable-product are: HTML/CSS/JavaScript Back to the basics! Start with a single index.html , include a popular CSS framework such as Bootstrap using their CDN link, and start prototyping! Rarely will you have to support legacy browsers; thus, you can rely on modern JavaScript language features! No need for build tools or even TypeScript (did you know you can type check JavaScript ). Web Component frameworks Web Components are now standardized in all modern browsers Microsoft has their own, stable & actively-maintained framework, Fast For more information of choosing the right implementation tool, read the Recommended Technologies document. Continue reading the Trade Study section of this site for more information on completing this step in the design process. After iterating through multiple trade study documents, this design process can be considered complete! With an agreed upon solution and implementation in mind, it is now time to begin development. A natural continuation of the design process is to get users (or stakeholders) involved as early as possible. Constantly look for design and usability feedback, and utilize this to improve the application as it is being developed. Example Coming soon!","title":"User Interface and User Experience Engineering"},{"location":"user-interface-engineering/#user-interface-and-user-experience-engineering","text":"Also known as UI/UX , Front End Development , or Web Development , user interface and user experience engineering is a broad topic and encompasses many different aspects of modern application development. When a user interface is required, ISE primarily develops a web application . Web apps can be built in a variety of ways with many different tools.","title":"User Interface and User Experience Engineering"},{"location":"user-interface-engineering/#goal","text":"The goal of the User Interface section is to provide guidance on developing web applications. Everyone should begin by reading the General Guidance for a quick introduction to the four main aspects of every web application project. From there, readers are encouraged to dive deeper into each topic, or begin reviewing technical guidance that pertains to their engagement. All UI/UX projects should begin with a detailed design document. Review the Design Process section for more details, and a template to get started. Keep in mind that like all software, there is no \"right way\" to build a user interface application. Leverage and trust your team's or your customer's experience and expertise for the best development experience.","title":"Goal"},{"location":"user-interface-engineering/#general-guidance","text":"The state of web platform engineering is fast moving. There is no one-size-fits-all solution. For any team to be successful in building a UI, they need to have an understanding of the higher-level aspects of all UI project. Accessibility - ensuring your application is usable and enjoyed by as many people as possible is at the heart of accessibility and inclusive design. Usability - how effortless should it be for any given user to use the application? Do they need special training or a document to understand how to use it, or will it be intuitive? Maintainability - is the application just a proof of concept to showcase an idea for future work, or will it be an MVP and act as the starting point for a larger, production-ready application? Sometimes you don't need React or any other framework. Sometimes you need React, but not all the bells and whistles from create-react-app. Understanding project maintainability requirements can simplify an engagement\u2019s tooling needs significantly and let folks iterate without headaches. Stability - what is the cost of adding a dependency? Is it actively stable/updated/maintained? If not, can you afford the tech debt (sometimes the answer can be yes!)? Could you get 90% of the way there without adding another dependency? More information is available for each general guidance section in the corresponding pages.","title":"General Guidance"},{"location":"user-interface-engineering/#design-process","text":"All user interface applications begin with the design process. The true definition for \"the design process\" is ever changing and highly opinion based as well. This sections aims to deliver a general overview of a design process any engineering team could conduct when starting an UI application engagement. When committing to a UI/UX project, be certain to not over-promise on the web application requirements. Delivering a production-ready application involves a large number of engineering complexities resulting in a very long timeline. Always start with a proof-of-concept or minimum-viable-product first. These projects can easily be achieved within a couple month timeline (and sometimes even less). The first step in the design process is to understand the problem at hand and outline what the solution should achieve. Commonly referred to as Desired Outcomes , the output of this first step should be a generalized list of outcomes that the solution will accomplish. Consider the following example: A public library has a set of data containing information about its collection. The data stores text, images, and the status of a book (borrowed, available, reserved). The library librarian wants to share this data with its users. As the librarian, I want to notify users before they receive late penalties for overdue books As the librarian, I want to notify users when a book they have reserved becomes available With the desired outcomes in mind, the next step in the design process is to define user personas. Regardless of the solution for a given problem, understanding the user needs leads to a better understanding of feature development and technological choices. Personas are written as prose-like paragraphs that describe different types of users. Considering the previous example, the various user personas could be: An individual with no disabilities, but is unfamiliar with using software interfaces An individual with no disabilities, and is familiar with using software interfaces An individual with disabilities, and is unfamiliar with using software interfaces (with or without the use of accessibility tooling) An individual with disabilities, but familiar with using software interfaces through the use of accessibility tooling After defining these personas it is clear that whatever the solution is, it requires a lot of accessibility and user experience design work. Sometimes personas can be simpler than this, but always include disabled users . Even when a user set is predefined as a group of individuals without disabilities, there is no guarantee that the user set will remain that way. After defining the desired outcomes as well as the personas , the next step in the design process is to begin conducting Trade Studies for potential solutions. The first trade study should be high-level and solution oriented. It will utilize the results of previous steps and propose multiple solutions for achieving the desired outcomes with the listed personas in mind. Continuing with the library example, this first trade study may compare various application solutions such as automated emails or text messages, an RSS feed, or an user interface application. There are pros and cons for each solution both from an user experience and a developer experience perspective, but at this stage it is important to focus on the users. After arriving on the best solution, the next trade study can dive into different implementation methods. It is in this subsequent trade studies that developer experience becomes more important. The benefit of building software applications is that there are truly infinite ways to build something. A team can use the latest shiny tools, or they can utilize the tried-and-tested ones. It is for this reason that focussing completely on the user until a solution is defined is better than obsessing over technology choices. Within ISE, we often reach for tools such as the React framework. React is a great tool when wielded by an experienced team. Otherwise, it can create more hurdles than it is worth. Keep in mind that even if you feel capable with React, the rest of your team and your customer's dev team needs to as well. Some other great options to consider when building a proof-of-concept or minimum-viable-product are: HTML/CSS/JavaScript Back to the basics! Start with a single index.html , include a popular CSS framework such as Bootstrap using their CDN link, and start prototyping! Rarely will you have to support legacy browsers; thus, you can rely on modern JavaScript language features! No need for build tools or even TypeScript (did you know you can type check JavaScript ). Web Component frameworks Web Components are now standardized in all modern browsers Microsoft has their own, stable & actively-maintained framework, Fast For more information of choosing the right implementation tool, read the Recommended Technologies document. Continue reading the Trade Study section of this site for more information on completing this step in the design process. After iterating through multiple trade study documents, this design process can be considered complete! With an agreed upon solution and implementation in mind, it is now time to begin development. A natural continuation of the design process is to get users (or stakeholders) involved as early as possible. Constantly look for design and usability feedback, and utilize this to improve the application as it is being developed.","title":"Design Process"},{"location":"user-interface-engineering/#example","text":"Coming soon!","title":"Example"},{"location":"user-interface-engineering/maintainability/","text":"Maintainability Coming soon!","title":"Maintainability"},{"location":"user-interface-engineering/maintainability/#maintainability","text":"Coming soon!","title":"Maintainability"},{"location":"user-interface-engineering/recommended-technologies/","text":"Recommended Technologies The purpose of this page is to review the commonly selected technology options when developing user interface applications. To reiterate from the general guidance section: Keep in mind that like all software, there is no \"right way\" to build a user interface application. Leverage and trust your team's or your customer's experience and expertise for the best development experience. Additionally, while some of these technologies are presented as alternate options, many can be combined together. For example, you can use React in a basic HTML/CSS/JS workflow by inline-importing React along with Babel. See the Add React to a Website for more details. Similarly, any Fast web component can be integrated into any existing React application . And of course, every JavaScript technology can also be used with TypeScript! TypeScript TypeScript is JavaScript with syntax for types. TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale. typescriptlang.org TypeScript is highly recommended for all new web application projects. The stability it provides for teams is unmatched, and can make it easier for folks with C# backgrounds to work with web technologies. There are many ways to integrate TypeScript into a web application. The easiest way to get started is by reviewing the TypeScript Tooling in 5 Minutes guide from the official TypeScript docs. The other sections on this page contain information regarding integration with TypeScript. React React is a framework developed and maintained by Facebook. React is used throughout Microsoft and has a vast open source community. Documentation & Recommended Resources One can expect to find a multitude of guides, answers, and posts on how to work with React; don't take everything at face value. The best place to review React concepts is the React documentation. From there, you can review articles from various sources such as React Community Articles , Kent C Dodd's Blog , CSS Tricks Articles , and Awesome React . The React API has changed dramatically over time. Older resources may contain solutions or patterns that have since been changed and improved upon. Modern React development uses the React Hooks pattern. Rarely will you have to implement something using React Class pattern. If you're reading an article/answer/docs that instruct you to use the class pattern you may be looking at an out-of-date resource. Bootstrapping There are many different ways to bootstrap a React application. Two great tool sets to use are create-react-app and vite . create-react-app From Adding TypeScript npx create-react-app my-app --template typescript Vite From Scaffolding your First Vite Project # npm 6.x npm init vite@latest my-app --template react-ts # npm 7.x npm init vite@latest my-app -- --template react-ts HTML/CSS/JS Coming soon! Web Components Coming soon!","title":"Recommended Technologies"},{"location":"user-interface-engineering/recommended-technologies/#recommended-technologies","text":"The purpose of this page is to review the commonly selected technology options when developing user interface applications. To reiterate from the general guidance section: Keep in mind that like all software, there is no \"right way\" to build a user interface application. Leverage and trust your team's or your customer's experience and expertise for the best development experience. Additionally, while some of these technologies are presented as alternate options, many can be combined together. For example, you can use React in a basic HTML/CSS/JS workflow by inline-importing React along with Babel. See the Add React to a Website for more details. Similarly, any Fast web component can be integrated into any existing React application . And of course, every JavaScript technology can also be used with TypeScript!","title":"Recommended Technologies"},{"location":"user-interface-engineering/recommended-technologies/#typescript","text":"TypeScript is JavaScript with syntax for types. TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale. typescriptlang.org TypeScript is highly recommended for all new web application projects. The stability it provides for teams is unmatched, and can make it easier for folks with C# backgrounds to work with web technologies. There are many ways to integrate TypeScript into a web application. The easiest way to get started is by reviewing the TypeScript Tooling in 5 Minutes guide from the official TypeScript docs. The other sections on this page contain information regarding integration with TypeScript.","title":"TypeScript"},{"location":"user-interface-engineering/recommended-technologies/#react","text":"React is a framework developed and maintained by Facebook. React is used throughout Microsoft and has a vast open source community.","title":"React"},{"location":"user-interface-engineering/recommended-technologies/#documentation-recommended-resources","text":"One can expect to find a multitude of guides, answers, and posts on how to work with React; don't take everything at face value. The best place to review React concepts is the React documentation. From there, you can review articles from various sources such as React Community Articles , Kent C Dodd's Blog , CSS Tricks Articles , and Awesome React . The React API has changed dramatically over time. Older resources may contain solutions or patterns that have since been changed and improved upon. Modern React development uses the React Hooks pattern. Rarely will you have to implement something using React Class pattern. If you're reading an article/answer/docs that instruct you to use the class pattern you may be looking at an out-of-date resource.","title":"Documentation &amp; Recommended Resources"},{"location":"user-interface-engineering/recommended-technologies/#bootstrapping","text":"There are many different ways to bootstrap a React application. Two great tool sets to use are create-react-app and vite .","title":"Bootstrapping"},{"location":"user-interface-engineering/recommended-technologies/#create-react-app","text":"From Adding TypeScript npx create-react-app my-app --template typescript","title":"create-react-app"},{"location":"user-interface-engineering/recommended-technologies/#vite","text":"From Scaffolding your First Vite Project # npm 6.x npm init vite@latest my-app --template react-ts # npm 7.x npm init vite@latest my-app -- --template react-ts","title":"Vite"},{"location":"user-interface-engineering/recommended-technologies/#htmlcssjs","text":"Coming soon!","title":"HTML/CSS/JS"},{"location":"user-interface-engineering/recommended-technologies/#web-components","text":"Coming soon!","title":"Web Components"},{"location":"user-interface-engineering/stability/","text":"Stability Coming soon!","title":"Stability"},{"location":"user-interface-engineering/stability/#stability","text":"Coming soon!","title":"Stability"},{"location":"user-interface-engineering/usability/","text":"Usability Coming soon!","title":"Usability"},{"location":"user-interface-engineering/usability/#usability","text":"Coming soon!","title":"Usability"}]}